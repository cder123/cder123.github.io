{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/ASP.NET — 入门笔记.md","hash":"f95aeb7053458d56d73794a8e92eb466359fdc1a","modified":1622542555605},{"_id":"source/_posts/C# 编写 WebService【WebAPI】的简单示例.md","hash":"eb4c98b288744256ab50ec72580b47189c82f1aa","modified":1622532969348},{"_id":"source/_posts/CCNA-笔记-01【非理论】.md","hash":"e3918372aa9d7faa2c20b5b26637cb70472c24ed","modified":1622532969349},{"_id":"source/_posts/CCNA-笔记-02【非理论】.md","hash":"874de005ad7d74c9c8c7e8a1a3a1e90322abffc1","modified":1622532969350},{"_id":"source/_posts/Flask-入门笔记.md","hash":"0e649d3ca3094fb73af406b4853b7d7bf75da74e","modified":1622532969351},{"_id":"source/_posts/Git入门-学习笔记.md","hash":"e7484bb00595bbeede5589bf4021cb0ce730efbc","modified":1622532969352},{"_id":"source/_posts/HTML-入门笔记.md","hash":"bf3920f736354bdf217e12d491c3b5635b1c090b","modified":1622532969353},{"_id":"source/_posts/JDBC-笔记.md","hash":"8033a0cfddb5bc951727bbbaf40beb48be8c8e04","modified":1622532969360},{"_id":"source/_posts/JavaScript-笔记.md","hash":"744e3993d17140939ca859bac7f1365444769530","modified":1622532969364},{"_id":"source/_posts/Markdown入门-笔记.md","hash":"ada8fd82979df0afdaf90a186b383343cff10fcc","modified":1622532969366},{"_id":"source/_posts/Kali-笔记.md","hash":"d296e90730bdade42a625dd3127cfdbd0b3c8605","modified":1622532969365},{"_id":"source/_posts/MySQL-入门笔记.md","hash":"ad2e01238abca6ba24879a3c8fb206229619c707","modified":1622532969370},{"_id":"source/_posts/MySQL 8.0版本-安装篇.md","hash":"c375b3538807c09e7d7c60a9329e9a80a11c9c6c","modified":1622532969368},{"_id":"source/_posts/Nginx-入门笔记.md","hash":"bf43090f1f10eff0acafd0d02bb03a2252cdf3d3","modified":1622532969371},{"_id":"source/_posts/Python3—笔记.md","hash":"52449ec2c17492bd9aa066ddab41975bd11fe240","modified":1622532969372},{"_id":"source/_posts/SQL Server-入门笔记.md","hash":"1912485ae67a25d9bd1e4262fbf9fd91c75feb2c","modified":1622532969373},{"_id":"source/_posts/Vue入门-01.md","hash":"90e2cc9aabbd617776b5c9a8b9f686d99464c028","modified":1622532969375},{"_id":"source/_posts/Vue入门-02.md","hash":"2f26b3674677a0928d75eeceb5093cc95d9fe059","modified":1622532969376},{"_id":"source/_posts/Vue入门-03-组件(部分)+vue路由.md","hash":"bf8bdcde287f6fd17cc559c614ab80c58d99b56b","modified":1622532969377},{"_id":"source/_posts/Vue入门-04.md","hash":"2b70f05ee490fb19f81bf8f19ce61b59c97f215b","modified":1622532969379},{"_id":"source/_posts/Windows批处理命令-入门.md","hash":"6d53eaa2498794c91acd9d08f693dd3ed1c32afb","modified":1622532969381},{"_id":"source/_posts/Windows操作系统使用-笔记.md","hash":"6fdc6bbadbbe3f8f3eda9b58d78b1ef2a3c53352","modified":1622532969382},{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1622596510925},{"_id":"source/_posts/劳动法.md","hash":"5e288e33c1ee87b245c7c1ee498fc81e4d90378a","modified":1622532969384},{"_id":"source/_posts/网络-实例【ARP】.md","hash":"e62787849bbd135f3111b0d9916ded6ace6968c2","modified":1622532969386},{"_id":"source/categories/index.md","hash":"94786eed862cc6f78f81ade9c5fc878aa74f0fb4","modified":1622603133503},{"_id":"source/tags/index.md","hash":"665b92f91641df528249251ca002e5c008c9edce","modified":1622603295824},{"_id":"source/_posts/Java SE.md","hash":"dfc527690e68791fdbb3b1049f711b875f48bf2d","modified":1622532969363},{"_id":"node_modules/hexo-theme-butterfly/README.md","hash":"0f0eaee9c30ef1e9aed588fbb3e8263401348b55","modified":1622602223261},{"_id":"node_modules/hexo-theme-butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1622602223261},{"_id":"node_modules/hexo-theme-butterfly/README_CN.md","hash":"70ec43a8aa0776b5a0a2a6b6009dd253fa3679eb","modified":1622602223261},{"_id":"node_modules/hexo-theme-butterfly/package.json","hash":"25493b3b45a3eb37157a44bcc4122b3c10e76718","modified":1622602223321},{"_id":"node_modules/hexo-theme-butterfly/_config.yml","hash":"af4db683ee10cb1f1983bf34d13eae60a9d55715","modified":1622602223261},{"_id":"node_modules/hexo-theme-butterfly/languages/default.yml","hash":"b9dbdb20bd1f1c7ca8a8f38635bdc4ed8bb1d44c","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/languages/en.yml","hash":"fd1c1211c8f166d089a7697872185a81182d92e1","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/.github/stale.yml","hash":"7a131b8aa4936fbcedea3517299e1cdc1bcbcaab","modified":1622602223261},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-CN.yml","hash":"46685048a05b419ed9c72cf31bd6e5efef7524f2","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-TW.yml","hash":"736bec8eeb3a29d0d43669d81f1fa686e02be18e","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/category.pug","hash":"5ac3cd8172088843cec03175c612a9c85f49cf2e","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/archive.pug","hash":"2d5bf4b1755f89898c579c18d601be83d2bc8ebd","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1622602223316},{"_id":"node_modules/hexo-theme-butterfly/layout/page.pug","hash":"cae76ce64c114fd192b5da5a7d14aa0240df2f06","modified":1622602223316},{"_id":"node_modules/hexo-theme-butterfly/layout/post.pug","hash":"8f2f13c9ae099dd83827ce3dbac5abc8d7d5bde3","modified":1622602223321},{"_id":"node_modules/hexo-theme-butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1622602223321},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/bug_report.md","hash":"0b7979a908ebe8c350d73b6731f0be3e29d401c2","modified":1622602223261},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/custom.md","hash":"b41123ce5f0ccfa9e06a68b9f3cb59ba040a049a","modified":1622602223261},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/feature_request.md","hash":"205a69ba038cf76affcdc1f39d88a8cb8079fc12","modified":1622602223261},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/404.pug","hash":"2cf69f5c908c74eace3c168b920de09dfadd6b85","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1622602223261},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/additional-js.pug","hash":"a1ca58fdff74b890cade94479f8f0eb9ce7e5e73","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head.pug","hash":"bff5ed7e56cce3cd540da40d971393fe7e93085c","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/layout.pug","hash":"f2e1d8a05d2e409c4804f67a98f5f59f527d6627","modified":1622602223281},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/pagination.pug","hash":"bb1847f45e713cc88b1c0a97035ec01f0209c995","modified":1622602223285},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/rightside.pug","hash":"66b14189a1913119ff5927c0b933b5c73fb37f48","modified":1622602223285},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/sidebar.pug","hash":"2d62f88f049c907ee2e63ba275b398e87bee98eb","modified":1622602223285},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","hash":"31198af95fecc6819d3b2cb7ef03988ef67257da","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/source/img/algolia.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","hash":"e16689382fc3b4ea20b13f0230a36e21bec63092","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","hash":"4db1170be7a9360e2c5399d281b979da730df2a3","modified":1622602223361},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","hash":"ba7e672a7bed2aefb9174e8122d92a643814272a","modified":1622602223361},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1622602223321},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/init.js","hash":"5803aa55d9c21e51ea64c1ae50c9b602979aaee2","modified":1622602223321},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/welcome.js","hash":"1e1da036fae593be7e2cc502f0a5cbeb2e7881d1","modified":1622602223321},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/post_lazyload.js","hash":"98ef86305b8d2ad9dbab969715e1ac93b407f036","modified":1622602223321},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/random_cover.js","hash":"bd29f20fad3d3fab600940e7a6dc9a803943cb33","modified":1622602223321},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/inject_head_js.js","hash":"87cefb7d6235744a2448e70df9061c1700169ad6","modified":1622602223326},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1622602223326},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/page.js","hash":"7dd77f751f5cc8c4fe30475a52df632dd85ce49a","modified":1622602223326},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1622602223321},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/related_post.js","hash":"51112d3db07f87034422ff4acc69ca2eb4215b4e","modified":1622602223326},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/button.js","hash":"8cb7ef368cc2ac7f4a13c2959908b1574e572acf","modified":1622602223326},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/gallery.js","hash":"7ffbe625f184116e442648c8416ea58614a1cef8","modified":1622602223326},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/hide.js","hash":"eb019da8c190923e759d2fd7cb846281eef8594e","modified":1622602223326},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1622602223326},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1622602223326},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/mermaid.js","hash":"829229b0074b332ba779e159219eb2466612ff6e","modified":1622602223326},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/note.js","hash":"420ba8b11e7316b4c09eb301d39814bc9bae9f90","modified":1622602223326},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/Open_Graph.pug","hash":"07380718ed3af19a7e64b30e8c13726fe5983947","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/analytics.pug","hash":"903d12250ce70713dd5b8ac7e1f7a20fe15eb815","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config_site.pug","hash":"73c04d62055840545112dd12d73807835ca62347","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config.pug","hash":"3ca9d9cdfd6e61df1d5b07de40f34349cda7a7c7","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/preconnect.pug","hash":"d6556d5396eb0e10ea0ec10158779c21dc78f738","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/index.pug","hash":"d5747ccfba4861567375d2c7aa0ec6a846a57594","modified":1622602223271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/menu_item.pug","hash":"4d52000cae1fce333329c382dac6c9a21ad0b195","modified":1622602223281},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/nav.pug","hash":"419807903e5586b8804b1f8f17cea97bd05f0b17","modified":1622602223281},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1622602223281},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/post-info.pug","hash":"7677911bd3f43edaf8230eea02f60a248eee9934","modified":1622602223281},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/loading-js.pug","hash":"2e1ab0c2ca59a1ff5a5ba9b6ef60f3e34af5430c","modified":1622602223281},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/loading.pug","hash":"dd8e6813976be64e80eba6562b54e74527ab306d","modified":1622602223285},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/categories.pug","hash":"95924d28d71b28769963529f82b376a9dc731fad","modified":1622602223285},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/default-page.pug","hash":"f5ea1e10a169aeb98e42b19ac084c4eb27693b46","modified":1622602223285},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/post-ui.pug","hash":"dcccb1425fabcf12a1bed955518b0e7b1054cab0","modified":1622602223285},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/article-sort.pug","hash":"971038debf539333b1687b4a1d87cf4fc965a846","modified":1622602223285},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/flink.pug","hash":"3e9c45aa4e97650bb8c19fe7c6c0e096a826f95d","modified":1622602223285},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/tags.pug","hash":"62dc2e683d56ddc9b588abc44dc1cfb778a2c68f","modified":1622602223285},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/reward.pug","hash":"c762732e200ff2627bc046af5f170b3269343341","modified":1622602223285},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1622602223312},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/post-copyright.pug","hash":"6ec54b77e3a90e148e66e317e5bb6c89624fddca","modified":1622602223285},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug","hash":"009bdbef23381f10664622fafdc602f2ff5bf1ec","modified":1622602223312},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_author.pug","hash":"67cad32f84414c7b10195d64376c140b878c4ebe","modified":1622602223316},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1622602223312},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1622602223316},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_newest_comment.pug","hash":"cabf9ee6a2886e6ede17f224dfbb161a9b1258e7","modified":1622602223316},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_toc.pug","hash":"0b5c165664f9f8691551fc5ff435b40e7f73c737","modified":1622602223316},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_self.pug","hash":"8318c7c9a6aef966afba44e283111e7ff0b2f04f","modified":1622602223316},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1622602223316},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_recent_post.pug","hash":"471b20e71a19db1f5115727082e5188200c49383","modified":1622602223316},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_webinfo.pug","hash":"62adef7998fb9bebc5891a49472cfea944a1bf7a","modified":1622602223316},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug","hash":"8c5b241773597a412dbf3ebaca1f0bf504934a33","modified":1622602223316},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/aplayer.pug","hash":"bee06b3f01fa1f0d8fa08c154234b452da425101","modified":1622602223285},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/effect.pug","hash":"4c3da5a89b4e6fd3ab527f5c6d27790359d57f71","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pangu.pug","hash":"d06dafe7faf3a2e328ef62f26166a51ffe7a5579","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pjax.pug","hash":"897fe61982d503f285028e52de51ab3af8eb9485","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/prismjs.pug","hash":"2448b243ded58aa1d5fc22fd115e6d06b636f9fd","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/subtitle.pug","hash":"4a2ea9fe59f1dc8cb4f4f6a28cf24a40fc300254","modified":1622602223312},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight.styl","hash":"a0e5790eb82b8f551f4161b72f1bec29a4e501be","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/theme.styl","hash":"3f0b8699f529f0842c3b101006f60cb7933c16ff","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/function.styl","hash":"f9de9db2a49ac4d5447660ab159171ac5c228e3c","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/index.styl","hash":"fe1942d3924d557497e37bcf2d1887483e98bedb","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/404.styl","hash":"7730741fa8beb29e3231d397171f312957563e7b","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/aside.styl","hash":"8627055bae0f877482dc53325152beb0a68d8e17","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/chat.styl","hash":"f27ad7b5d781c98bcac5c12c2d70b69b830e0374","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/comments.styl","hash":"8e6c9a2c1881985e4b2ae14ef1bdfdbb1bc83b37","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/footer.styl","hash":"bfc4b9d8df66593c11c9ae78899f54e69785ca90","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/head.styl","hash":"f584c96d911dc061ae9b83966c67b8cfb8065b5d","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/loading.styl","hash":"807f18717c29b5c41de6fc600a69a80ce8b7a19c","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/pagination.styl","hash":"db7fe645662d87be4f8dfc08e55bbe1a3734bf93","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/post.styl","hash":"814729d1d71f4326623a4f34b621bf0421503103","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/relatedposts.styl","hash":"8c4e08c8a63dacdfb2a733a0d0035fa97c7f5e9e","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/reward.styl","hash":"4ae98e703440b616d2a36da139bda844c94d425e","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/darkmode.styl","hash":"8489722684aa9b4baa38386f4d4b39f4dbd60113","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/sidebar.styl","hash":"78ef182c0f6711c8491a8ee421b708c8f2a63c30","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/rightside.styl","hash":"a00ad74074513a1c7f6e02977b8fa778beaa2108","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/third-party.styl","hash":"257f08063d056bcc9fe385d7913df19b6503d93d","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/readmode.styl","hash":"89a6cb63a97cc08675319c403e4a89391f6ab401","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/categories.styl","hash":"ca1d3a885a85a91fcd6f7b55fca96cafb6a1b0a3","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/flink.styl","hash":"05269a522a7248d9a77569331481cbe18033c774","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/archives.styl","hash":"190b85de3e686393e45869d12464995f23b304dc","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/common.styl","hash":"ab403bfb1abc12ea5015b123ce412d3177e638d9","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/homepage.styl","hash":"0da09b1811a776106ca66c56be6e2a396dca5680","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/tags.styl","hash":"26e26797b3175498e20b2a8bf1679d3ed9fac5a6","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/button.styl","hash":"c3369a14f4111c098d0177036ca57df6deb59d72","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/gallery.styl","hash":"6c12a03e26ca5d538537d472657d3d03a7fcbb87","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hexo.styl","hash":"aa0728c556af75f5d66ecd44fa207722d474c26d","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/index.styl","hash":"202b01db6ef3cca9e5a173e1a0dadfee8854a849","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/algolia.styl","hash":"a470029a157fbb8406ff72322a75ef63d6675431","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/local-search.styl","hash":"92aa84cdec97729c86ba4674a355496eb37c986a","modified":1622602223341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hide.styl","hash":"56691537c7f06c2cf1ffa1509a328f506d938ee8","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/note.styl","hash":"75a5c15c7029197ec5cffd27f7c5455891c946c9","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/tabs.styl","hash":"8520674768dd0b1837f947892e8402b192a4f9c1","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/label.styl","hash":"c91609b7f431cacecc3718ae2fb7403c55f8267a","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1622602223351},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","hash":"a19f12257b14f70806a0c3cb0e9df1090f36e919","modified":1622602223361},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","hash":"3234942decaa1fde5b872766d4943a2e8cb9ef72","modified":1622602223361},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4eebb2d94ca75809ef0cf32d70f13e9bf1e87091","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"a18415004d03c0a1783eccac522fbcb6ce0ea1f1","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"eb2d840fa42de3ec7a7fda0eaa30246d52f543e2","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"e8dec6fc24af46c4733681a3a25ad8eaad0e8e1a","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"896dc0b7480151562c5717771e3000c5a7fc1b16","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/index.pug","hash":"bb467bb22f3d0775b33f9eacbfc086ecb7831e78","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"50126b2e841b01584b8b65b2f834038e3997b694","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"03a8937c60403252d33bacea947e252e5007eac8","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqus.pug","hash":"d5f81fd5443a1b09efb165b5f4447a35949d14ad","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0254203aae73e70b90dfce6ec4f9c9d3be9ac9f8","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/index.pug","hash":"d97403cdd58c759cfd1752dd85aa4a0f9b73dc46","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"afffc4ac8ce93d39dcc892bd518805cf33531244","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/js.pug","hash":"e877c98949873a62659db7501d19eb3d66650b51","modified":1622602223291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/utterances.pug","hash":"1c7e9fe86b7d7ef18cc876dfce19263fd4e73066","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/valine.pug","hash":"8290994cf1ee2faff60214ff245cf513fbbe94aa","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/waline.pug","hash":"20c4c5f04d83db9f61c01928997195c1c58118b4","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mathjax.pug","hash":"6f92311afe60ca5f44055016db9cecce8fb2dc62","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/katex.pug","hash":"407d88e4af099d5f1a3f44623ec276c999219ec3","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mermaid.pug","hash":"faf1113de12d6db0486572d7e99b03cbd0c4a896","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"70125dc478ae20d5f6b4b908260fdc451d803c6c","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"35278cfc2dbd92457b1e558b20fcd994eb81259c","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"7935e92db64ca047d94404e5fc390a207e857a87","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"767c38e3dfa0097b0dc1fdfd0df292c16f757d05","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"a3d43cc360666b5b9730e8bb9e5c8fd940ae5b3d","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"e4f11ee6b2bce37f7a88b2642ff0079e7d98f26f","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1622602223312},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/addtoany.pug","hash":"fbac21a6c5924fb2f8d1190fd634105fdbc603d4","modified":1622602223312},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/share-js.pug","hash":"7e9a7347dd8ca4c33c564fb62512743b6012bb2d","modified":1622602223312},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1622602223312},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/algolia.pug","hash":"1c06e60b120c946c1856904848ceba6ab58d1f82","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/local-search.pug","hash":"fbcf94ecdca30bed7cfc4f4ec08b200579c2614e","modified":1622602223301},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/index.styl","hash":"4d71aab9082c67d3ee52ad58dfc3c1c9b41f2ab1","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/diff.styl","hash":"b0916c8c7d15b67b55cb1618be8370870fedbf42","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/index.styl","hash":"b74c61f6e15b422e9d2df23133552bbd1b5fe513","modified":1622602223331},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1622602223331},{"_id":"public/search.xml","hash":"47bec58df386adf71d56984074281f8a8a33cf2a","modified":1622605529383},{"_id":"public/404.html","hash":"00d463b3a76fd8ed558a8eef69917fa7bf8a2bb5","modified":1622605529383},{"_id":"public/tags/index.html","hash":"7b6b03e0d7b47907d41969b1df4f2526688841cf","modified":1622605529383},{"_id":"public/categories/index.html","hash":"3f8975c2cfded7b517437a7c22190fdfbe5e84fa","modified":1622605529383},{"_id":"public/2021/06/02/Flask-入门笔记/index.html","hash":"d2abd689c8099d16ce421a5a6e5daff3d7691774","modified":1622605529383},{"_id":"public/2021/06/02/Git入门-学习笔记/index.html","hash":"6a000e17b9ea9a13761a1a8ed7bd177c214793f8","modified":1622605529383},{"_id":"public/2021/06/02/CCNA-笔记-02【非理论】/index.html","hash":"d5464551dd0ceb3c14872b48d5bda81e5364ed75","modified":1622605529383},{"_id":"public/2021/06/02/CCNA-笔记-01【非理论】/index.html","hash":"6cdf7e573d3dd438b9397dc14cd9f03eb13111ea","modified":1622605529383},{"_id":"public/2021/06/02/ASP.NET — 入门笔记/index.html","hash":"ec6798db8271f5730a19c3d0e4e7131eb88f9fda","modified":1622605529383},{"_id":"public/2021/06/02/网络-实例【ARP】/index.html","hash":"d7dfafc27d5cc075f1c7df017d972d440566f357","modified":1622605529383},{"_id":"public/2021/06/02/C# 编写 WebService【WebAPI】的简单示例/index.html","hash":"3efad0364ecde2584583d1c5353ab1c30de29fcf","modified":1622605529383},{"_id":"public/2021/06/02/劳动法/index.html","hash":"c9936df78c381e6dc6d335bebd2db8193022e2d6","modified":1622605529383},{"_id":"public/2021/06/02/Windows批处理命令-入门/index.html","hash":"aba320b6749d1a9cd1361657e2b3f5262ba700f9","modified":1622605529383},{"_id":"public/2021/06/02/Windows操作系统使用-笔记/index.html","hash":"f54dbdec8240b3d6bbe9e72e2ba8cbadeb292fe1","modified":1622605529383},{"_id":"public/2021/06/02/Vue入门-04/index.html","hash":"02bc2bb9cad7470bef190c1d8a0ae77d4348439e","modified":1622605529383},{"_id":"public/2021/06/02/Vue入门-03-组件(部分)+vue路由/index.html","hash":"cf3ea400a2840458d6968e350fb9242f6e6b1691","modified":1622605529383},{"_id":"public/2021/06/02/Vue入门-02/index.html","hash":"1fd4307e60b8ac3e943565cbcc5a6c0ccb647341","modified":1622605529383},{"_id":"public/2021/06/02/Vue入门-01/index.html","hash":"7debcb9c27d8d77d83f175daa59c9981aba22e9e","modified":1622605529383},{"_id":"public/2021/06/02/SQL Server-入门笔记/index.html","hash":"eab951fcec9a2a24493b0a4248c9643b3e206eca","modified":1622605529383},{"_id":"public/2021/06/02/Python3—笔记/index.html","hash":"5ca802dfcc49c242fbc46079f634ee8f49f7a1ed","modified":1622605529383},{"_id":"public/2021/06/02/Nginx-入门笔记/index.html","hash":"22a192cdc1425a8dc310134fd466d9e4b2b1b0aa","modified":1622605529383},{"_id":"public/2021/06/02/MySQL-入门笔记/index.html","hash":"a4a27607d1b1a7af09dec50821fb01a3f6524df8","modified":1622605529383},{"_id":"public/2021/06/02/MySQL 8.0版本-安装篇/index.html","hash":"93baa1ca0930c989153efe59f1ba01bf2a0136e0","modified":1622605529383},{"_id":"public/2021/06/02/Markdown入门-笔记/index.html","hash":"1546e9b0c5ca22ff55e129c8702d5c0d7f086390","modified":1622605529383},{"_id":"public/2021/06/02/Kali-笔记/index.html","hash":"7dcbe41ba4e8f7258ef65e2d860722122acb218b","modified":1622605529383},{"_id":"public/2021/06/02/JDBC-笔记/index.html","hash":"4ee7ae0c006e02d7a112316e2ae96d75cf753618","modified":1622605529383},{"_id":"public/2021/06/02/JavaScript-笔记/index.html","hash":"62dfad5d63928455a359dace0eb8685d5ce88dbe","modified":1622605529383},{"_id":"public/2021/06/02/Java SE/index.html","hash":"921e246e85667b73ae508d5342a64055f95b279d","modified":1622605529383},{"_id":"public/2021/06/02/HTML-入门笔记/index.html","hash":"6439e8a6f78391cfb395e29572a2eabd3f0252bf","modified":1622605529383},{"_id":"public/2021/06/02/hello-world/index.html","hash":"3f94d938234d40080526e7f6359d73d2cbb3d23f","modified":1622605529383},{"_id":"public/archives/index.html","hash":"e278e490b6c8830bcde34184869375a74228903d","modified":1622605529383},{"_id":"public/archives/page/2/index.html","hash":"b6b6333204ae099a97d0a646b641e67f969c1cc1","modified":1622605529383},{"_id":"public/archives/page/3/index.html","hash":"422c77edd68335fa01e9b7935f6a03618f210a2c","modified":1622605529383},{"_id":"public/archives/2021/index.html","hash":"0e6933810b55f0ea98c0711baaa2cf12d4e5f0f9","modified":1622605529383},{"_id":"public/archives/2021/page/3/index.html","hash":"5724a402bbc10851cf689d956e06ba0852ecb755","modified":1622605529383},{"_id":"public/archives/2021/page/2/index.html","hash":"329fefdc04b8fa6ee82a2d6eddcd20080e594f80","modified":1622605529383},{"_id":"public/archives/2021/06/index.html","hash":"1d52b6027ab5d04a3060c3cb4635247b12822bba","modified":1622605529383},{"_id":"public/archives/2021/06/page/2/index.html","hash":"117a958b6bd20ce8c0db3f20fa77da835517dd26","modified":1622605529383},{"_id":"public/archives/2021/06/page/3/index.html","hash":"132217ef0272e9929657ccc75320868f09e61b9f","modified":1622605529383},{"_id":"public/categories/网络工程/index.html","hash":"cc5a2d93bf8a0753dad5b877914855a3deae995e","modified":1622605529383},{"_id":"public/categories/后端/index.html","hash":"66248e178de9c7c03fc200cc7c78c44e6f280e21","modified":1622605529383},{"_id":"public/categories/后端/Python3/index.html","hash":"e7977c6f8cddb5da1be15e105d2cc5c8f462c893","modified":1622605529383},{"_id":"public/categories/后端/C/index.html","hash":"3970f8900c2fd330507c120d1853e84faa3ffe0e","modified":1622605529383},{"_id":"public/categories/前端/index.html","hash":"ae7e327ea04b60bafe6d9e25ef5af713daef8186","modified":1622605529383},{"_id":"public/categories/编程工具/index.html","hash":"55eeb702f78eea0aef1896f08e42eea233d306ff","modified":1622605529383},{"_id":"public/categories/网络工程/CCNA/index.html","hash":"c395b5834d3da8a84f6019282555acd4c6562ef1","modified":1622605529383},{"_id":"public/categories/后端/操作系统/index.html","hash":"6be48929e14602b4c5243f3da3a5055320bf2205","modified":1622605529383},{"_id":"public/categories/SQL/index.html","hash":"1e2b4081861b100921970ca23da82b11251f76fd","modified":1622605529383},{"_id":"public/categories/前端/Vue/index.html","hash":"624658ef3ebb4ac60d55043a098a86ca256203f8","modified":1622605529383},{"_id":"public/categories/后端/服务器/index.html","hash":"be1b8880cedf94adb9240b8163140efe8adccc1d","modified":1622605529383},{"_id":"public/categories/前端/基础/index.html","hash":"09140e78c28c970870f329ec3a35f250e0015c86","modified":1622605529383},{"_id":"public/categories/日常/index.html","hash":"97b032520b8b4d205ebe94f81d1dee3879d4f691","modified":1622605529383},{"_id":"public/categories/编程工具/版本控制/index.html","hash":"aa469256f59b1a0c1800a943f57c54f5fc290a03","modified":1622605529383},{"_id":"public/categories/编程工具/文档编写工具/index.html","hash":"bfc00531031300a211df65304666f91e9c21beb7","modified":1622605529383},{"_id":"public/categories/后端/操作系统/Linux使用/index.html","hash":"fa4a66464c86789ba846c9803be42111a944d90d","modified":1622605529383},{"_id":"public/categories/SQL/MySQL/index.html","hash":"54f1d72056b89aa9965a59be5437fa15b13d0106","modified":1622605529383},{"_id":"public/categories/后端/服务器/Nginx/index.html","hash":"9edf35e74018518fdc285914e7c6241682575dbe","modified":1622605529383},{"_id":"public/categories/SQL/SQL-Server/index.html","hash":"69f7e62f421b4a5efde89f88e3b78276850ca0f7","modified":1622605529383},{"_id":"public/categories/前端/HTML/index.html","hash":"a45fcd7b2ec89ee816de79791fae63a3f486f6b9","modified":1622605529383},{"_id":"public/categories/后端/操作系统/Windows使用/index.html","hash":"b6d2b3ed91750e0097407965dbeeebd50c8b155a","modified":1622605529383},{"_id":"public/categories/编程工具/版本控制/Git/index.html","hash":"b0774830fcfcd76ccbbc003df1d4d61a00d1a95a","modified":1622605529383},{"_id":"public/categories/日常/法律/index.html","hash":"e9c0b779d02b2e53af4693a736cacd871714c324","modified":1622605529383},{"_id":"public/categories/信息安全/index.html","hash":"d5ac0607b7dd00f17cc494068dbac1e866ac8d17","modified":1622605529383},{"_id":"public/categories/前端/JavaScript/index.html","hash":"2b284473b365014e10eaefe19b964167f1ecdeb4","modified":1622605529383},{"_id":"public/categories/信息安全/系统安全/index.html","hash":"c1d9bbebf234c158fe08ee34be927b717b4b5782","modified":1622605529383},{"_id":"public/categories/后端/Java/index.html","hash":"e37f28acca65efb4509a7e565db73caefd9d4f75","modified":1622605529383},{"_id":"public/categories/后端/Java/JDBC/index.html","hash":"624fb7e15d3f655d4193b9e5213bce533fc16065","modified":1622605529383},{"_id":"public/index.html","hash":"4b7a97c39b3dd50e501e0997f7d2fcc45b937b49","modified":1622605529383},{"_id":"public/categories/后端/ASP-NET/index.html","hash":"c585fdd1aa9e5c1e1551653916457c94d9c76327","modified":1622605529383},{"_id":"public/categories/后端/Java/Java-SE/index.html","hash":"652d805c071704b78db448fe57ec34b3980c5b54","modified":1622605529383},{"_id":"public/page/2/index.html","hash":"8056fdfd6a3858f5fab0e01210f1690a420668b9","modified":1622605529383},{"_id":"public/page/3/index.html","hash":"ecd0fa072763e533b2fc4c0df497347e73c5e925","modified":1622605529383},{"_id":"public/tags/C/index.html","hash":"a309645f718bf878c55aca52d64d59ad14971ba2","modified":1622605529383},{"_id":"public/tags/CCNA/index.html","hash":"b255035a78d023225f94072bd7a56e33631b3cb8","modified":1622605529383},{"_id":"public/tags/Python3/index.html","hash":"c084149f00032762fd210a1fda72a8eece395308","modified":1622605529383},{"_id":"public/tags/HTML/index.html","hash":"62f2943a7ea30eb1c62dca0b6d2916833f53bf7d","modified":1622605529383},{"_id":"public/tags/Git/index.html","hash":"6fef93b1c6425c4e67f2087afbf19910fc065fc2","modified":1622605529383},{"_id":"public/tags/JavaScript/index.html","hash":"54ac8aeb97cc0ac76df099d08cd2f5265a9fd5b9","modified":1622605529383},{"_id":"public/tags/MarkDown/index.html","hash":"66d4e60ae11caa2a5507a7a34181f09a33297e53","modified":1622605529383},{"_id":"public/tags/Linux/index.html","hash":"83ab0de66b0b34e3cfc95a7a6768bdecd5c2a5e9","modified":1622605529383},{"_id":"public/tags/MySQL/index.html","hash":"288dfdf25f507d900238e90ee07e85a92c92c7b9","modified":1622605529383},{"_id":"public/tags/Nginx/index.html","hash":"a9a8ea98edb59133c0d80334e28684fc73e9c792","modified":1622605529383},{"_id":"public/tags/SQL-Server/index.html","hash":"ba6006cb76be622065656a570f7d33bca770a845","modified":1622605529383},{"_id":"public/tags/Vue/index.html","hash":"bc206bb06ded33ecc84c68d89b634b3bbb65e85b","modified":1622605529383},{"_id":"public/tags/Windows/index.html","hash":"5a566239c6f77b991a7ce8b24f52d2f070656aea","modified":1622605529383},{"_id":"public/tags/法律/index.html","hash":"37a167964a0abc3c356215c80b0e85a7cc0bb3f7","modified":1622605529383},{"_id":"public/tags/JDBC/index.html","hash":"2dd159e781954a5bf4274b22ba8c9551de3df637","modified":1622605529383},{"_id":"public/tags/Java/index.html","hash":"cad7f1f2e8b0a0486ce2c772252e089e282398cd","modified":1622605529383},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1622605529383},{"_id":"public/img/algolia.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1622605529383},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1622605529383},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1622605529383},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1622605529383},{"_id":"public/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1622605529383},{"_id":"public/js/utils.js","hash":"41481019ef510c74e744f4f7ec4d0a13b5ccc04c","modified":1622605529383},{"_id":"public/js/search/local-search.js","hash":"459e2541afda483916d16fce4aaa56b41bcd42ba","modified":1622605529383},{"_id":"public/css/index.css","hash":"b8202e0293c647593a17507868f0ca8790bba6e8","modified":1622605529383},{"_id":"public/js/main.js","hash":"229c8abda75ab80b47e234ab7b81dca7d655441f","modified":1622605529383},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1622605529383}],"Category":[{"name":"后端","_id":"ckpexfs110004lcvd77zn3xzf"},{"name":"网络工程","_id":"ckpexfs150009lcvddzyle65k"},{"name":"Python3","parent":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs1a000jlcvd7eao742l"},{"name":"C#","parent":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs1d000olcvdae2h8ph9"},{"name":"前端","_id":"ckpexfs1f000ulcvd8bcw2z0l"},{"name":"编程工具","_id":"ckpexfs1j0012lcvdbbxkc5vh"},{"name":"CCNA","parent":"ckpexfs150009lcvddzyle65k","_id":"ckpexfs1n0018lcvd1mhn4ozo"},{"name":"操作系统","parent":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs1s001rlcvdcmht0ze9"},{"name":"SQL","_id":"ckpexfs1t001vlcvdhe9qbo5e"},{"name":"服务器","parent":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs1u001zlcvd6m2o6gwx"},{"name":"Vue","parent":"ckpexfs1f000ulcvd8bcw2z0l","_id":"ckpexfs1w002blcvd1mks5jh7"},{"name":"基础","parent":"ckpexfs1f000ulcvd8bcw2z0l","_id":"ckpexfs1x002elcvd1zc36hsv"},{"name":"版本控制","parent":"ckpexfs1j0012lcvdbbxkc5vh","_id":"ckpexfs1z002klcvd0w989dt0"},{"name":"日常","_id":"ckpexfs1z002nlcvd8c924xt0"},{"name":"文档编写工具","parent":"ckpexfs1j0012lcvdbbxkc5vh","_id":"ckpexfs20002plcvdehugdf5f"},{"name":"Linux使用","parent":"ckpexfs1s001rlcvdcmht0ze9","_id":"ckpexfs20002qlcvdfjq80ddw"},{"name":"MySQL","parent":"ckpexfs1t001vlcvdhe9qbo5e","_id":"ckpexfs20002slcvd4jz53ehh"},{"name":"Nginx","parent":"ckpexfs1u001zlcvd6m2o6gwx","_id":"ckpexfs21002ulcvdexsv3l1b"},{"name":"SQL-Server","parent":"ckpexfs1t001vlcvdhe9qbo5e","_id":"ckpexfs21002wlcvdbn054wi7"},{"name":"HTML","parent":"ckpexfs1f000ulcvd8bcw2z0l","_id":"ckpexfs230035lcvdcep64zmh"},{"name":"Windows使用","parent":"ckpexfs1s001rlcvdcmht0ze9","_id":"ckpexfs230038lcvdgcq6hqfq"},{"name":"Git","parent":"ckpexfs1z002klcvd0w989dt0","_id":"ckpexfs24003blcvd1o05hoja"},{"name":"法律","parent":"ckpexfs1z002nlcvd8c924xt0","_id":"ckpexfs25003elcvdc9rrf5dq"},{"name":"JavaScript","parent":"ckpexfs1f000ulcvd8bcw2z0l","_id":"ckpexfs25003hlcvddt3412by"},{"name":"信息安全","_id":"ckpexfs26003llcvd1hgxcglx"},{"name":"系统安全","parent":"ckpexfs26003llcvd1hgxcglx","_id":"ckpexfs26003plcvd57wt56lt"},{"name":"Java","parent":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs2j0047lcvd4ahy5ghx"},{"name":"ASP.NET","parent":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs2k004clcvdgsnwegaa"},{"name":"JDBC","parent":"ckpexfs2j0047lcvd4ahy5ghx","_id":"ckpexfs2l004hlcvd8m9z63ab"},{"name":"Java SE","parent":"ckpexfs2j0047lcvd4ahy5ghx","_id":"ckpexftrq004xlcvdgwcxhw86"}],"Data":[],"Page":[{"title":"标签","date":"2021-06-02T04:00:00.000Z","type":"tags","_content":"\n","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2021-06-02 12:00:00\ntype: \"tags\"\n---\n\n","updated":"2021-06-02T03:08:15.824Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckpexfs0u0000lcvdcywnbqev","content":"","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":""},{"title":"分类","date":"2021-06-02T03:04:40.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-06-02 11:04:40\ntype: \"categories\"\n---\n","updated":"2021-06-02T03:05:33.503Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckpexfs0z0002lcvdhececkbm","content":"","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":""}],"Post":[{"title":"C# 编写 WebService的示例","_content":"\n# C# 编写 WebService的示例\n\n@[toc]\n### 1. 示例环境\n- windows server 2012\n- Visual Studio 2012\n- IIS 8\n### 2. 新建web服务\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130183303271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130183525310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130183751637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130184425990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n默认生成以下代码：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130184721801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n观察下图：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130185048741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n由图可知：webservice其实就是 “方法” 的集合【即：一堆的方法】\n1. [WebMethod]是必须的，不能删除，\n语法示例如下：\n```csharp\n [WebMethod(属性名=属性值)]\n```\n在一个**WebService类**中，一个 **Public的方法 只有拥有** ***WebMethod***   **才能被访问** 。\nWebMethod有6个属性：\n> - Description\n> - EnableSession\n> - MessageName\n> - TransactionOption\n> - CacheDuration\n> - BufferResponse\n\n示例：\n\n```csharp\n// 描述信息\n[WebMethod(Description=\"这是一个 add() 方法\")]\n\n\n// 允许该WebMethod方法访问session的值\n// 默认情况下WebMethod不能访问session中的值\n[WebMethod(EnableSession = true)]\n\n```\n\n2. [WebMethod] 的下面 紧跟  **“函数” 或 “方法”**\n示例：\n\n```csharp\n[WebMethod(Description=\"这是一个 add() 方法\")]\npublic string add_1(float a ,float b)\n{\n    double rst = a + b ;\n    return  a + \" + \" + b + \"= \" + rst ;\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130214448900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 3. 调试页展示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130192021518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130192112243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130192320308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130195332859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130192558797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n由上图的**地址栏** 可知：\n调用api的格式： `网址/方法名`\n### 4.  WebService的发布\n要想让这个 **api** 能够 **被** 其他应用或网站 **调用**,必须要将api **发布到服务器**上。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130195820565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130200138942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130200239892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130200345118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130200642890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130200912717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n发布后 在 VS中有成功的提示：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130201000528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 5.  在 IIS 中 部署 我们编写的 WebService\n打开 IIS，添加站点\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130201354329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n配置站点详情\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130203043434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n设置默认文档：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130202135280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130202415333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n浏览，以查看效果：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130203500101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 6.  新建项目 来 调用 API 以查看效果\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130203740919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130204721379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130204943734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n添加服务引用【 只有添加了“ web服务引用”才能使用api 】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130210234382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130215038728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n【如果没有在上1张图的步骤中修改默认的命名空间名称，且点击“高级”后没有出现“添加web引用” 按钮，则点击“取消”，再次出现点击 “高级”，点击“添加web引用”】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130210826610.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130211154633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130211417250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130213021827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130205628494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130213338422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 6. 测试效果\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130213627533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130213644969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n\n\n\n\n","source":"_posts/C# 编写 WebService【WebAPI】的简单示例.md","raw":"---\ntitle: C# 编写 WebService的示例\ntag: C#\ncategories:\n  - 后端\n  - C#  \n---\n\n# C# 编写 WebService的示例\n\n@[toc]\n### 1. 示例环境\n- windows server 2012\n- Visual Studio 2012\n- IIS 8\n### 2. 新建web服务\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130183303271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130183525310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130183751637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130184425990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n默认生成以下代码：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130184721801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n观察下图：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130185048741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n由图可知：webservice其实就是 “方法” 的集合【即：一堆的方法】\n1. [WebMethod]是必须的，不能删除，\n语法示例如下：\n```csharp\n [WebMethod(属性名=属性值)]\n```\n在一个**WebService类**中，一个 **Public的方法 只有拥有** ***WebMethod***   **才能被访问** 。\nWebMethod有6个属性：\n> - Description\n> - EnableSession\n> - MessageName\n> - TransactionOption\n> - CacheDuration\n> - BufferResponse\n\n示例：\n\n```csharp\n// 描述信息\n[WebMethod(Description=\"这是一个 add() 方法\")]\n\n\n// 允许该WebMethod方法访问session的值\n// 默认情况下WebMethod不能访问session中的值\n[WebMethod(EnableSession = true)]\n\n```\n\n2. [WebMethod] 的下面 紧跟  **“函数” 或 “方法”**\n示例：\n\n```csharp\n[WebMethod(Description=\"这是一个 add() 方法\")]\npublic string add_1(float a ,float b)\n{\n    double rst = a + b ;\n    return  a + \" + \" + b + \"= \" + rst ;\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130214448900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 3. 调试页展示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130192021518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130192112243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130192320308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130195332859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130192558797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n由上图的**地址栏** 可知：\n调用api的格式： `网址/方法名`\n### 4.  WebService的发布\n要想让这个 **api** 能够 **被** 其他应用或网站 **调用**,必须要将api **发布到服务器**上。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130195820565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130200138942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130200239892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130200345118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130200642890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130200912717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n发布后 在 VS中有成功的提示：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130201000528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 5.  在 IIS 中 部署 我们编写的 WebService\n打开 IIS，添加站点\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130201354329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n配置站点详情\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130203043434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n设置默认文档：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130202135280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130202415333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n浏览，以查看效果：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130203500101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 6.  新建项目 来 调用 API 以查看效果\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130203740919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130204721379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130204943734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n添加服务引用【 只有添加了“ web服务引用”才能使用api 】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130210234382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130215038728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n【如果没有在上1张图的步骤中修改默认的命名空间名称，且点击“高级”后没有出现“添加web引用” 按钮，则点击“取消”，再次出现点击 “高级”，点击“添加web引用”】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130210826610.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130211154633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130211417250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130213021827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130205628494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130213338422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 6. 测试效果\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130213627533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130213644969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n\n\n\n\n","slug":"C# 编写 WebService【WebAPI】的简单示例","published":1,"date":"2021-06-02T02:49:19.200Z","updated":"2021-06-01T07:36:09.348Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs0w0001lcvd46kh5neq","content":"<h1 id=\"C-编写-WebService的示例\"><a href=\"#C-编写-WebService的示例\" class=\"headerlink\" title=\"C# 编写 WebService的示例\"></a>C# 编写 WebService的示例</h1><p>@[toc]</p>\n<h3 id=\"1-示例环境\"><a href=\"#1-示例环境\" class=\"headerlink\" title=\"1. 示例环境\"></a>1. 示例环境</h3><ul>\n<li>windows server 2012</li>\n<li>Visual Studio 2012</li>\n<li>IIS 8<h3 id=\"2-新建web服务\"><a href=\"#2-新建web服务\" class=\"headerlink\" title=\"2. 新建web服务\"></a>2. 新建web服务</h3><img src=\"https://img-blog.csdnimg.cn/20201130183303271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130183525310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130183751637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130184425990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<p>默认生成以下代码：<br><img src=\"https://img-blog.csdnimg.cn/20201130184721801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>观察下图：<br><img src=\"https://img-blog.csdnimg.cn/20201130185048741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>由图可知：webservice其实就是 “方法” 的集合【即：一堆的方法】</p>\n<ol>\n<li>[WebMethod]是必须的，不能删除，<br>语法示例如下：<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">WebMethod(属性名=属性值)</span>]</span><br></pre></td></tr></table></figure>\n在一个<strong>WebService类</strong>中，一个 <strong>Public的方法 只有拥有</strong> <em><strong>WebMethod</strong></em>   <strong>才能被访问</strong> 。<br>WebMethod有6个属性：<blockquote>\n<ul>\n<li>Description</li>\n<li>EnableSession</li>\n<li>MessageName</li>\n<li>TransactionOption</li>\n<li>CacheDuration</li>\n<li>BufferResponse</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<p>示例：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 描述信息</span></span><br><span class=\"line\">[<span class=\"meta\">WebMethod(Description=<span class=\"meta-string\">&quot;这是一个 add() 方法&quot;</span>)</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 允许该WebMethod方法访问session的值</span></span><br><span class=\"line\"><span class=\"comment\">// 默认情况下WebMethod不能访问session中的值</span></span><br><span class=\"line\">[<span class=\"meta\">WebMethod(EnableSession = true)</span>]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>[WebMethod] 的下面 紧跟  <strong>“函数” 或 “方法”</strong><br>示例：</li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">WebMethod(Description=<span class=\"meta-string\">&quot;这是一个 add() 方法&quot;</span>)</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">add_1</span>(<span class=\"params\"><span class=\"built_in\">float</span> a ,<span class=\"built_in\">float</span> b</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">double</span> rst = a + b ;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  a + <span class=\"string\">&quot; + &quot;</span> + b + <span class=\"string\">&quot;= &quot;</span> + rst ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20201130214448900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-调试页展示\"><a href=\"#3-调试页展示\" class=\"headerlink\" title=\"3. 调试页展示\"></a>3. 调试页展示</h3><p><img src=\"https://img-blog.csdnimg.cn/20201130192021518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/20201130192112243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130192320308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130195332859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201130192558797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>由上图的<strong>地址栏</strong> 可知：<br>调用api的格式： <code>网址/方法名</code></p>\n<h3 id=\"4-WebService的发布\"><a href=\"#4-WebService的发布\" class=\"headerlink\" title=\"4.  WebService的发布\"></a>4.  WebService的发布</h3><p>要想让这个 <strong>api</strong> 能够 <strong>被</strong> 其他应用或网站 <strong>调用</strong>,必须要将api <strong>发布到服务器</strong>上。<br><img src=\"https://img-blog.csdnimg.cn/20201130195820565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130200138942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130200239892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130200345118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130200642890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130200912717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>发布后 在 VS中有成功的提示：<br><img src=\"https://img-blog.csdnimg.cn/20201130201000528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"5-在-IIS-中-部署-我们编写的-WebService\"><a href=\"#5-在-IIS-中-部署-我们编写的-WebService\" class=\"headerlink\" title=\"5.  在 IIS 中 部署 我们编写的 WebService\"></a>5.  在 IIS 中 部署 我们编写的 WebService</h3><p>打开 IIS，添加站点<br><img src=\"https://img-blog.csdnimg.cn/20201130201354329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>配置站点详情<br><img src=\"https://img-blog.csdnimg.cn/20201130203043434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>设置默认文档：<br><img src=\"https://img-blog.csdnimg.cn/20201130202135280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130202415333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>浏览，以查看效果：<br><img src=\"https://img-blog.csdnimg.cn/20201130203500101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"6-新建项目-来-调用-API-以查看效果\"><a href=\"#6-新建项目-来-调用-API-以查看效果\" class=\"headerlink\" title=\"6.  新建项目 来 调用 API 以查看效果\"></a>6.  新建项目 来 调用 API 以查看效果</h3><p><img src=\"https://img-blog.csdnimg.cn/20201130203740919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130204721379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130204943734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>添加服务引用【 只有添加了“ web服务引用”才能使用api 】<br><img src=\"https://img-blog.csdnimg.cn/20201130210234382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130215038728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>【如果没有在上1张图的步骤中修改默认的命名空间名称，且点击“高级”后没有出现“添加web引用” 按钮，则点击“取消”，再次出现点击 “高级”，点击“添加web引用”】<br><img src=\"https://img-blog.csdnimg.cn/20201130210826610.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130211154633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130211417250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130213021827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130205628494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130213338422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"6-测试效果\"><a href=\"#6-测试效果\" class=\"headerlink\" title=\"6. 测试效果\"></a>6. 测试效果</h3><p><img src=\"https://img-blog.csdnimg.cn/20201130213627533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130213644969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"C-编写-WebService的示例\"><a href=\"#C-编写-WebService的示例\" class=\"headerlink\" title=\"C# 编写 WebService的示例\"></a>C# 编写 WebService的示例</h1><p>@[toc]</p>\n<h3 id=\"1-示例环境\"><a href=\"#1-示例环境\" class=\"headerlink\" title=\"1. 示例环境\"></a>1. 示例环境</h3><ul>\n<li>windows server 2012</li>\n<li>Visual Studio 2012</li>\n<li>IIS 8<h3 id=\"2-新建web服务\"><a href=\"#2-新建web服务\" class=\"headerlink\" title=\"2. 新建web服务\"></a>2. 新建web服务</h3><img src=\"https://img-blog.csdnimg.cn/20201130183303271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130183525310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130183751637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130184425990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<p>默认生成以下代码：<br><img src=\"https://img-blog.csdnimg.cn/20201130184721801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>观察下图：<br><img src=\"https://img-blog.csdnimg.cn/20201130185048741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>由图可知：webservice其实就是 “方法” 的集合【即：一堆的方法】</p>\n<ol>\n<li>[WebMethod]是必须的，不能删除，<br>语法示例如下：<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">WebMethod(属性名=属性值)</span>]</span><br></pre></td></tr></table></figure>\n在一个<strong>WebService类</strong>中，一个 <strong>Public的方法 只有拥有</strong> <em><strong>WebMethod</strong></em>   <strong>才能被访问</strong> 。<br>WebMethod有6个属性：<blockquote>\n<ul>\n<li>Description</li>\n<li>EnableSession</li>\n<li>MessageName</li>\n<li>TransactionOption</li>\n<li>CacheDuration</li>\n<li>BufferResponse</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<p>示例：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 描述信息</span></span><br><span class=\"line\">[<span class=\"meta\">WebMethod(Description=<span class=\"meta-string\">&quot;这是一个 add() 方法&quot;</span>)</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 允许该WebMethod方法访问session的值</span></span><br><span class=\"line\"><span class=\"comment\">// 默认情况下WebMethod不能访问session中的值</span></span><br><span class=\"line\">[<span class=\"meta\">WebMethod(EnableSession = true)</span>]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>[WebMethod] 的下面 紧跟  <strong>“函数” 或 “方法”</strong><br>示例：</li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">WebMethod(Description=<span class=\"meta-string\">&quot;这是一个 add() 方法&quot;</span>)</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">add_1</span>(<span class=\"params\"><span class=\"built_in\">float</span> a ,<span class=\"built_in\">float</span> b</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">double</span> rst = a + b ;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  a + <span class=\"string\">&quot; + &quot;</span> + b + <span class=\"string\">&quot;= &quot;</span> + rst ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20201130214448900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-调试页展示\"><a href=\"#3-调试页展示\" class=\"headerlink\" title=\"3. 调试页展示\"></a>3. 调试页展示</h3><p><img src=\"https://img-blog.csdnimg.cn/20201130192021518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/20201130192112243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130192320308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130195332859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201130192558797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>由上图的<strong>地址栏</strong> 可知：<br>调用api的格式： <code>网址/方法名</code></p>\n<h3 id=\"4-WebService的发布\"><a href=\"#4-WebService的发布\" class=\"headerlink\" title=\"4.  WebService的发布\"></a>4.  WebService的发布</h3><p>要想让这个 <strong>api</strong> 能够 <strong>被</strong> 其他应用或网站 <strong>调用</strong>,必须要将api <strong>发布到服务器</strong>上。<br><img src=\"https://img-blog.csdnimg.cn/20201130195820565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130200138942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130200239892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130200345118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130200642890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130200912717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>发布后 在 VS中有成功的提示：<br><img src=\"https://img-blog.csdnimg.cn/20201130201000528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"5-在-IIS-中-部署-我们编写的-WebService\"><a href=\"#5-在-IIS-中-部署-我们编写的-WebService\" class=\"headerlink\" title=\"5.  在 IIS 中 部署 我们编写的 WebService\"></a>5.  在 IIS 中 部署 我们编写的 WebService</h3><p>打开 IIS，添加站点<br><img src=\"https://img-blog.csdnimg.cn/20201130201354329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>配置站点详情<br><img src=\"https://img-blog.csdnimg.cn/20201130203043434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>设置默认文档：<br><img src=\"https://img-blog.csdnimg.cn/20201130202135280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130202415333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>浏览，以查看效果：<br><img src=\"https://img-blog.csdnimg.cn/20201130203500101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"6-新建项目-来-调用-API-以查看效果\"><a href=\"#6-新建项目-来-调用-API-以查看效果\" class=\"headerlink\" title=\"6.  新建项目 来 调用 API 以查看效果\"></a>6.  新建项目 来 调用 API 以查看效果</h3><p><img src=\"https://img-blog.csdnimg.cn/20201130203740919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130204721379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130204943734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>添加服务引用【 只有添加了“ web服务引用”才能使用api 】<br><img src=\"https://img-blog.csdnimg.cn/20201130210234382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130215038728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>【如果没有在上1张图的步骤中修改默认的命名空间名称，且点击“高级”后没有出现“添加web引用” 按钮，则点击“取消”，再次出现点击 “高级”，点击“添加web引用”】<br><img src=\"https://img-blog.csdnimg.cn/20201130210826610.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130211154633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130211417250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130213021827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130205628494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130213338422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"6-测试效果\"><a href=\"#6-测试效果\" class=\"headerlink\" title=\"6. 测试效果\"></a>6. 测试效果</h3><p><img src=\"https://img-blog.csdnimg.cn/20201130213627533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201130213644969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"CCNA-笔记-01【非理论】","_content":"# CCNA-笔记【非理论】\n\n[toc]\n\n## 第一章 计算机网络\n### 1.1 Internet的组成\n- 实际上由 **ISP + 企业网 +网民**  组成。\n- 用户接入ISP,不同的ISP之间也有 线路相连【但跨运营商网速慢】\n- 服务器一般托管到运营商机房，为适应不同运营商之间的网速，一般服务器的机房有多个ISP 的接口。\n\n### 1.2 局域网与广域网\n#### 1.2.1 局域网与广域网\n- 局域网：自己花钱组网，带宽固定\n- 广域网：借助运营商【ISP】的线路组网 ，花钱租带宽。\n\n\n#### 1.2.2 局域网的三层：\n- 接入层交换机：接口多，但单个口的带宽小\n- 汇聚层交换机：\n- 核心层交换机【路由器】：服务器接入到核心层，接口少，但单个口的带宽大\n\n\n#### 1.2.3 C/S:【客户机/服务器】：\n- 一个设备是 C 还是 S 是根据角色划分的\n\n\n#### 1.2.4 数据传输-分层：\n- 为了便于传输，先拆分成小块并编号，到达 目的地 后重组\n- 每一层的变化都是独立的，底层为高层服务\n\n#### 1.2.5 OSI-7层：\n- 应用层：应用程序；\n- 表示层：表示、处理数据【数据是 二进制 还是 ASCII码】；压缩、解压、加密、解密\n- 会话层：维持不同应用程序的数据分割。\n- 传输层：可靠/不可靠；可靠时 =》检错、纠错、重传、流控\n- 网络层：根据逻辑地址选择最佳路径\n- 数据链路层：利用MAC地址提供对介质的访问，只检错、不纠错\n- 物理层：比特流，电压大小、线路速率、接口标准\n\n#### 1.2.6 查看会话【步骤】：\n- <kbd>Win + R</kbd>\n- 输入：`netstat -n`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209094109324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n#### 1.2.7 查看程序与会话的对应关系\n-  管理员身份运行 cmd，入`netstat -nb`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209094214378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 1.2.8 找到进程所在位置【两种方法】：\n- `Ctrl + Alt + Delete` => `任务管理器`  => `选中进程` => `右键-打开文件位置`\n- 在`任务管理器`表头`右键`=> 勾选命令行  \n\n#### 1.2.9 查看运行的服务【有多种】\n- `win + r` , 输入 `msconfig`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209095626352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n#### 1.2.10 服务与启动项的区别：\n- 服务：只要开启服务，不管 登不登陆 都运行【针对计算机】\n- 启动项：用户登录后才运行【针对用户】\n\n#### 1.2.11 UDP\n不建立会话，采用广播的形式，不可靠，节省资源\n\n#### 1.2.12 网络排错 和 OSI\n由底层向上层排错\n- 物理层问题：【替换法】\n\t 1. 网线是否连接正确；网线是否损坏\n\t 2. 查看网卡 接受/发送数据包是否有异常【如：1方为0】\n\t 3. 禁用、启用网卡，查看是否正常\n\t 4. 在 **设备管理器** 中  重新安装网卡的**驱动**【右键卸载(不勾选删除)、右键扫描】\n- 数据链路层问题：\n\t 1.  MAC地址冲突\n\t 2.  ADSL拨号\n- 网络层问题：\n\t1. 网关错误\n\t2. 路由表错误\n- 应用程序问题：\n\t1. IE 代理错误\n#### 1.2.13  网络安全和 OSI\n- 物理层：不要混用接口\n- 数据链路层：MAC地址认证，ADSL账号密码，划分Vlan\n- 物理层：路由器ACL\n- 传输层：端口安全\n- 应用层安全：网站安全、操作系统安全\n\n#### 1.2.14 网络设备\n网络设备：\n- 网线：双绞线=》 8根 =》 百米\n\t1. 10M\n\t2. 100M【4根线】\n\t3. 1000M【8根线】\n\t- 同种设备：交叉线\n\t- 不同设备：直通线\n-\t网卡：MAC地址=》物理地址、硬件地址=》 不可更改\n\n- 查看 IP地址和 MAC地址：`ipconfig /all`\n\n- 更改MAC地址：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209103436535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209103508130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209103832511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209103858212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n注意：下图3中的 mac 地址不要有 “--”\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209104044757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n- 集线器：不看源地址和目的地址，只广播发送，计算机收到数据后发现不是自己的才丢弃，共享带宽，不安全。\n- 网桥：根据数据包的源地址学习到设备的位置，只在第一次不知道目的地址时广播，在第二次发送数据时已经知道目的MAC地址就可以不用广播而直接发。独享带宽。\n\n\n-单工：电视台发信号\n- 半双工：对讲机，同一时间只能由一方通信\n- 全双工：同时收发\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209105451457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209105536874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n交换机：\n- 基于MAC地址转发数据，安全，带宽独享、全双工\n\n路由器：\n- 负责跨网段通信，一般有广域网口\n- 隔绝广播【二进制全1 的目标ip，全F的 mac 】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209110340850.png)\n计算机上设置多个IP地址：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209110836160.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209110915186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120911094499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)","source":"_posts/CCNA-笔记-01【非理论】.md","raw":"---\ntitle: CCNA-笔记-01【非理论】\ntag: CCNA\ncategories:\n  - 网络工程\n  - CCNA \n---\n# CCNA-笔记【非理论】\n\n[toc]\n\n## 第一章 计算机网络\n### 1.1 Internet的组成\n- 实际上由 **ISP + 企业网 +网民**  组成。\n- 用户接入ISP,不同的ISP之间也有 线路相连【但跨运营商网速慢】\n- 服务器一般托管到运营商机房，为适应不同运营商之间的网速，一般服务器的机房有多个ISP 的接口。\n\n### 1.2 局域网与广域网\n#### 1.2.1 局域网与广域网\n- 局域网：自己花钱组网，带宽固定\n- 广域网：借助运营商【ISP】的线路组网 ，花钱租带宽。\n\n\n#### 1.2.2 局域网的三层：\n- 接入层交换机：接口多，但单个口的带宽小\n- 汇聚层交换机：\n- 核心层交换机【路由器】：服务器接入到核心层，接口少，但单个口的带宽大\n\n\n#### 1.2.3 C/S:【客户机/服务器】：\n- 一个设备是 C 还是 S 是根据角色划分的\n\n\n#### 1.2.4 数据传输-分层：\n- 为了便于传输，先拆分成小块并编号，到达 目的地 后重组\n- 每一层的变化都是独立的，底层为高层服务\n\n#### 1.2.5 OSI-7层：\n- 应用层：应用程序；\n- 表示层：表示、处理数据【数据是 二进制 还是 ASCII码】；压缩、解压、加密、解密\n- 会话层：维持不同应用程序的数据分割。\n- 传输层：可靠/不可靠；可靠时 =》检错、纠错、重传、流控\n- 网络层：根据逻辑地址选择最佳路径\n- 数据链路层：利用MAC地址提供对介质的访问，只检错、不纠错\n- 物理层：比特流，电压大小、线路速率、接口标准\n\n#### 1.2.6 查看会话【步骤】：\n- <kbd>Win + R</kbd>\n- 输入：`netstat -n`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209094109324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n#### 1.2.7 查看程序与会话的对应关系\n-  管理员身份运行 cmd，入`netstat -nb`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209094214378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 1.2.8 找到进程所在位置【两种方法】：\n- `Ctrl + Alt + Delete` => `任务管理器`  => `选中进程` => `右键-打开文件位置`\n- 在`任务管理器`表头`右键`=> 勾选命令行  \n\n#### 1.2.9 查看运行的服务【有多种】\n- `win + r` , 输入 `msconfig`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209095626352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n#### 1.2.10 服务与启动项的区别：\n- 服务：只要开启服务，不管 登不登陆 都运行【针对计算机】\n- 启动项：用户登录后才运行【针对用户】\n\n#### 1.2.11 UDP\n不建立会话，采用广播的形式，不可靠，节省资源\n\n#### 1.2.12 网络排错 和 OSI\n由底层向上层排错\n- 物理层问题：【替换法】\n\t 1. 网线是否连接正确；网线是否损坏\n\t 2. 查看网卡 接受/发送数据包是否有异常【如：1方为0】\n\t 3. 禁用、启用网卡，查看是否正常\n\t 4. 在 **设备管理器** 中  重新安装网卡的**驱动**【右键卸载(不勾选删除)、右键扫描】\n- 数据链路层问题：\n\t 1.  MAC地址冲突\n\t 2.  ADSL拨号\n- 网络层问题：\n\t1. 网关错误\n\t2. 路由表错误\n- 应用程序问题：\n\t1. IE 代理错误\n#### 1.2.13  网络安全和 OSI\n- 物理层：不要混用接口\n- 数据链路层：MAC地址认证，ADSL账号密码，划分Vlan\n- 物理层：路由器ACL\n- 传输层：端口安全\n- 应用层安全：网站安全、操作系统安全\n\n#### 1.2.14 网络设备\n网络设备：\n- 网线：双绞线=》 8根 =》 百米\n\t1. 10M\n\t2. 100M【4根线】\n\t3. 1000M【8根线】\n\t- 同种设备：交叉线\n\t- 不同设备：直通线\n-\t网卡：MAC地址=》物理地址、硬件地址=》 不可更改\n\n- 查看 IP地址和 MAC地址：`ipconfig /all`\n\n- 更改MAC地址：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209103436535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209103508130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209103832511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209103858212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n注意：下图3中的 mac 地址不要有 “--”\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209104044757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n- 集线器：不看源地址和目的地址，只广播发送，计算机收到数据后发现不是自己的才丢弃，共享带宽，不安全。\n- 网桥：根据数据包的源地址学习到设备的位置，只在第一次不知道目的地址时广播，在第二次发送数据时已经知道目的MAC地址就可以不用广播而直接发。独享带宽。\n\n\n-单工：电视台发信号\n- 半双工：对讲机，同一时间只能由一方通信\n- 全双工：同时收发\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209105451457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209105536874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n交换机：\n- 基于MAC地址转发数据，安全，带宽独享、全双工\n\n路由器：\n- 负责跨网段通信，一般有广域网口\n- 隔绝广播【二进制全1 的目标ip，全F的 mac 】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209110340850.png)\n计算机上设置多个IP地址：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209110836160.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201209110915186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120911094499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)","slug":"CCNA-笔记-01【非理论】","published":1,"date":"2021-06-02T02:49:19.203Z","updated":"2021-06-01T07:36:09.349Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs100003lcvd16xr20bv","content":"<h1 id=\"CCNA-笔记【非理论】\"><a href=\"#CCNA-笔记【非理论】\" class=\"headerlink\" title=\"CCNA-笔记【非理论】\"></a>CCNA-笔记【非理论】</h1><p>[toc]</p>\n<h2 id=\"第一章-计算机网络\"><a href=\"#第一章-计算机网络\" class=\"headerlink\" title=\"第一章 计算机网络\"></a>第一章 计算机网络</h2><h3 id=\"1-1-Internet的组成\"><a href=\"#1-1-Internet的组成\" class=\"headerlink\" title=\"1.1 Internet的组成\"></a>1.1 Internet的组成</h3><ul>\n<li>实际上由 <strong>ISP + 企业网 +网民</strong>  组成。</li>\n<li>用户接入ISP,不同的ISP之间也有 线路相连【但跨运营商网速慢】</li>\n<li>服务器一般托管到运营商机房，为适应不同运营商之间的网速，一般服务器的机房有多个ISP 的接口。</li>\n</ul>\n<h3 id=\"1-2-局域网与广域网\"><a href=\"#1-2-局域网与广域网\" class=\"headerlink\" title=\"1.2 局域网与广域网\"></a>1.2 局域网与广域网</h3><h4 id=\"1-2-1-局域网与广域网\"><a href=\"#1-2-1-局域网与广域网\" class=\"headerlink\" title=\"1.2.1 局域网与广域网\"></a>1.2.1 局域网与广域网</h4><ul>\n<li>局域网：自己花钱组网，带宽固定</li>\n<li>广域网：借助运营商【ISP】的线路组网 ，花钱租带宽。</li>\n</ul>\n<h4 id=\"1-2-2-局域网的三层：\"><a href=\"#1-2-2-局域网的三层：\" class=\"headerlink\" title=\"1.2.2 局域网的三层：\"></a>1.2.2 局域网的三层：</h4><ul>\n<li>接入层交换机：接口多，但单个口的带宽小</li>\n<li>汇聚层交换机：</li>\n<li>核心层交换机【路由器】：服务器接入到核心层，接口少，但单个口的带宽大</li>\n</ul>\n<h4 id=\"1-2-3-C-S-【客户机-服务器】：\"><a href=\"#1-2-3-C-S-【客户机-服务器】：\" class=\"headerlink\" title=\"1.2.3 C/S:【客户机/服务器】：\"></a>1.2.3 C/S:【客户机/服务器】：</h4><ul>\n<li>一个设备是 C 还是 S 是根据角色划分的</li>\n</ul>\n<h4 id=\"1-2-4-数据传输-分层：\"><a href=\"#1-2-4-数据传输-分层：\" class=\"headerlink\" title=\"1.2.4 数据传输-分层：\"></a>1.2.4 数据传输-分层：</h4><ul>\n<li>为了便于传输，先拆分成小块并编号，到达 目的地 后重组</li>\n<li>每一层的变化都是独立的，底层为高层服务</li>\n</ul>\n<h4 id=\"1-2-5-OSI-7层：\"><a href=\"#1-2-5-OSI-7层：\" class=\"headerlink\" title=\"1.2.5 OSI-7层：\"></a>1.2.5 OSI-7层：</h4><ul>\n<li>应用层：应用程序；</li>\n<li>表示层：表示、处理数据【数据是 二进制 还是 ASCII码】；压缩、解压、加密、解密</li>\n<li>会话层：维持不同应用程序的数据分割。</li>\n<li>传输层：可靠/不可靠；可靠时 =》检错、纠错、重传、流控</li>\n<li>网络层：根据逻辑地址选择最佳路径</li>\n<li>数据链路层：利用MAC地址提供对介质的访问，只检错、不纠错</li>\n<li>物理层：比特流，电压大小、线路速率、接口标准</li>\n</ul>\n<h4 id=\"1-2-6-查看会话【步骤】：\"><a href=\"#1-2-6-查看会话【步骤】：\" class=\"headerlink\" title=\"1.2.6 查看会话【步骤】：\"></a>1.2.6 查看会话【步骤】：</h4><ul>\n<li><kbd>Win + R</kbd></li>\n<li>输入：<code>netstat -n</code><br><img src=\"https://img-blog.csdnimg.cn/20201209094109324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<h4 id=\"1-2-7-查看程序与会话的对应关系\"><a href=\"#1-2-7-查看程序与会话的对应关系\" class=\"headerlink\" title=\"1.2.7 查看程序与会话的对应关系\"></a>1.2.7 查看程序与会话的对应关系</h4><ul>\n<li> 管理员身份运行 cmd，入<code>netstat -nb</code><br><img src=\"https://img-blog.csdnimg.cn/20201209094214378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><h4 id=\"1-2-8-找到进程所在位置【两种方法】：\"><a href=\"#1-2-8-找到进程所在位置【两种方法】：\" class=\"headerlink\" title=\"1.2.8 找到进程所在位置【两种方法】：\"></a>1.2.8 找到进程所在位置【两种方法】：</h4></li>\n<li><code>Ctrl + Alt + Delete</code> =&gt; <code>任务管理器</code>  =&gt; <code>选中进程</code> =&gt; <code>右键-打开文件位置</code></li>\n<li>在<code>任务管理器</code>表头<code>右键</code>=&gt; 勾选命令行  </li>\n</ul>\n<h4 id=\"1-2-9-查看运行的服务【有多种】\"><a href=\"#1-2-9-查看运行的服务【有多种】\" class=\"headerlink\" title=\"1.2.9 查看运行的服务【有多种】\"></a>1.2.9 查看运行的服务【有多种】</h4><ul>\n<li><code>win + r</code> , 输入 <code>msconfig</code><br><img src=\"https://img-blog.csdnimg.cn/20201209095626352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<h4 id=\"1-2-10-服务与启动项的区别：\"><a href=\"#1-2-10-服务与启动项的区别：\" class=\"headerlink\" title=\"1.2.10 服务与启动项的区别：\"></a>1.2.10 服务与启动项的区别：</h4><ul>\n<li>服务：只要开启服务，不管 登不登陆 都运行【针对计算机】</li>\n<li>启动项：用户登录后才运行【针对用户】</li>\n</ul>\n<h4 id=\"1-2-11-UDP\"><a href=\"#1-2-11-UDP\" class=\"headerlink\" title=\"1.2.11 UDP\"></a>1.2.11 UDP</h4><p>不建立会话，采用广播的形式，不可靠，节省资源</p>\n<h4 id=\"1-2-12-网络排错-和-OSI\"><a href=\"#1-2-12-网络排错-和-OSI\" class=\"headerlink\" title=\"1.2.12 网络排错 和 OSI\"></a>1.2.12 网络排错 和 OSI</h4><p>由底层向上层排错</p>\n<ul>\n<li>物理层问题：【替换法】<ol>\n<li>网线是否连接正确；网线是否损坏</li>\n<li>查看网卡 接受/发送数据包是否有异常【如：1方为0】</li>\n<li>禁用、启用网卡，查看是否正常</li>\n<li>在 <strong>设备管理器</strong> 中  重新安装网卡的<strong>驱动</strong>【右键卸载(不勾选删除)、右键扫描】</li>\n</ol>\n</li>\n<li>数据链路层问题：<ol>\n<li> MAC地址冲突</li>\n<li> ADSL拨号</li>\n</ol>\n</li>\n<li>网络层问题：<ol>\n<li>网关错误</li>\n<li>路由表错误</li>\n</ol>\n</li>\n<li>应用程序问题：<ol>\n<li>IE 代理错误<h4 id=\"1-2-13-网络安全和-OSI\"><a href=\"#1-2-13-网络安全和-OSI\" class=\"headerlink\" title=\"1.2.13  网络安全和 OSI\"></a>1.2.13  网络安全和 OSI</h4></li>\n</ol>\n</li>\n<li>物理层：不要混用接口</li>\n<li>数据链路层：MAC地址认证，ADSL账号密码，划分Vlan</li>\n<li>物理层：路由器ACL</li>\n<li>传输层：端口安全</li>\n<li>应用层安全：网站安全、操作系统安全</li>\n</ul>\n<h4 id=\"1-2-14-网络设备\"><a href=\"#1-2-14-网络设备\" class=\"headerlink\" title=\"1.2.14 网络设备\"></a>1.2.14 网络设备</h4><p>网络设备：</p>\n<ul>\n<li><p>网线：双绞线=》 8根 =》 百米</p>\n<ol>\n<li>10M</li>\n<li>100M【4根线】</li>\n<li>1000M【8根线】</li>\n</ol>\n<ul>\n<li>同种设备：交叉线</li>\n<li>不同设备：直通线</li>\n</ul>\n</li>\n<li><p>   网卡：MAC地址=》物理地址、硬件地址=》 不可更改</p>\n</li>\n<li><p>查看 IP地址和 MAC地址：<code>ipconfig /all</code></p>\n</li>\n<li><p>更改MAC地址：<br><img src=\"https://img-blog.csdnimg.cn/20201209103436535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201209103508130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201209103832511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201209103858212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>注意：下图3中的 mac 地址不要有 “–”<br><img src=\"https://img-blog.csdnimg.cn/20201209104044757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>集线器：不看源地址和目的地址，只广播发送，计算机收到数据后发现不是自己的才丢弃，共享带宽，不安全。</p>\n</li>\n<li><p>网桥：根据数据包的源地址学习到设备的位置，只在第一次不知道目的地址时广播，在第二次发送数据时已经知道目的MAC地址就可以不用广播而直接发。独享带宽。</p>\n</li>\n</ul>\n<p>-单工：电视台发信号</p>\n<ul>\n<li>半双工：对讲机，同一时间只能由一方通信</li>\n<li>全双工：同时收发</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20201209105451457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201209105536874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>交换机：</p>\n<ul>\n<li>基于MAC地址转发数据，安全，带宽独享、全双工</li>\n</ul>\n<p>路由器：</p>\n<ul>\n<li>负责跨网段通信，一般有广域网口</li>\n<li>隔绝广播【二进制全1 的目标ip，全F的 mac 】<br><img src=\"https://img-blog.csdnimg.cn/20201209110340850.png\" alt=\"在这里插入图片描述\"><br>计算机上设置多个IP地址：<br><img src=\"https://img-blog.csdnimg.cn/20201209110836160.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201209110915186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020120911094499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"CCNA-笔记【非理论】\"><a href=\"#CCNA-笔记【非理论】\" class=\"headerlink\" title=\"CCNA-笔记【非理论】\"></a>CCNA-笔记【非理论】</h1><p>[toc]</p>\n<h2 id=\"第一章-计算机网络\"><a href=\"#第一章-计算机网络\" class=\"headerlink\" title=\"第一章 计算机网络\"></a>第一章 计算机网络</h2><h3 id=\"1-1-Internet的组成\"><a href=\"#1-1-Internet的组成\" class=\"headerlink\" title=\"1.1 Internet的组成\"></a>1.1 Internet的组成</h3><ul>\n<li>实际上由 <strong>ISP + 企业网 +网民</strong>  组成。</li>\n<li>用户接入ISP,不同的ISP之间也有 线路相连【但跨运营商网速慢】</li>\n<li>服务器一般托管到运营商机房，为适应不同运营商之间的网速，一般服务器的机房有多个ISP 的接口。</li>\n</ul>\n<h3 id=\"1-2-局域网与广域网\"><a href=\"#1-2-局域网与广域网\" class=\"headerlink\" title=\"1.2 局域网与广域网\"></a>1.2 局域网与广域网</h3><h4 id=\"1-2-1-局域网与广域网\"><a href=\"#1-2-1-局域网与广域网\" class=\"headerlink\" title=\"1.2.1 局域网与广域网\"></a>1.2.1 局域网与广域网</h4><ul>\n<li>局域网：自己花钱组网，带宽固定</li>\n<li>广域网：借助运营商【ISP】的线路组网 ，花钱租带宽。</li>\n</ul>\n<h4 id=\"1-2-2-局域网的三层：\"><a href=\"#1-2-2-局域网的三层：\" class=\"headerlink\" title=\"1.2.2 局域网的三层：\"></a>1.2.2 局域网的三层：</h4><ul>\n<li>接入层交换机：接口多，但单个口的带宽小</li>\n<li>汇聚层交换机：</li>\n<li>核心层交换机【路由器】：服务器接入到核心层，接口少，但单个口的带宽大</li>\n</ul>\n<h4 id=\"1-2-3-C-S-【客户机-服务器】：\"><a href=\"#1-2-3-C-S-【客户机-服务器】：\" class=\"headerlink\" title=\"1.2.3 C/S:【客户机/服务器】：\"></a>1.2.3 C/S:【客户机/服务器】：</h4><ul>\n<li>一个设备是 C 还是 S 是根据角色划分的</li>\n</ul>\n<h4 id=\"1-2-4-数据传输-分层：\"><a href=\"#1-2-4-数据传输-分层：\" class=\"headerlink\" title=\"1.2.4 数据传输-分层：\"></a>1.2.4 数据传输-分层：</h4><ul>\n<li>为了便于传输，先拆分成小块并编号，到达 目的地 后重组</li>\n<li>每一层的变化都是独立的，底层为高层服务</li>\n</ul>\n<h4 id=\"1-2-5-OSI-7层：\"><a href=\"#1-2-5-OSI-7层：\" class=\"headerlink\" title=\"1.2.5 OSI-7层：\"></a>1.2.5 OSI-7层：</h4><ul>\n<li>应用层：应用程序；</li>\n<li>表示层：表示、处理数据【数据是 二进制 还是 ASCII码】；压缩、解压、加密、解密</li>\n<li>会话层：维持不同应用程序的数据分割。</li>\n<li>传输层：可靠/不可靠；可靠时 =》检错、纠错、重传、流控</li>\n<li>网络层：根据逻辑地址选择最佳路径</li>\n<li>数据链路层：利用MAC地址提供对介质的访问，只检错、不纠错</li>\n<li>物理层：比特流，电压大小、线路速率、接口标准</li>\n</ul>\n<h4 id=\"1-2-6-查看会话【步骤】：\"><a href=\"#1-2-6-查看会话【步骤】：\" class=\"headerlink\" title=\"1.2.6 查看会话【步骤】：\"></a>1.2.6 查看会话【步骤】：</h4><ul>\n<li><kbd>Win + R</kbd></li>\n<li>输入：<code>netstat -n</code><br><img src=\"https://img-blog.csdnimg.cn/20201209094109324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<h4 id=\"1-2-7-查看程序与会话的对应关系\"><a href=\"#1-2-7-查看程序与会话的对应关系\" class=\"headerlink\" title=\"1.2.7 查看程序与会话的对应关系\"></a>1.2.7 查看程序与会话的对应关系</h4><ul>\n<li> 管理员身份运行 cmd，入<code>netstat -nb</code><br><img src=\"https://img-blog.csdnimg.cn/20201209094214378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><h4 id=\"1-2-8-找到进程所在位置【两种方法】：\"><a href=\"#1-2-8-找到进程所在位置【两种方法】：\" class=\"headerlink\" title=\"1.2.8 找到进程所在位置【两种方法】：\"></a>1.2.8 找到进程所在位置【两种方法】：</h4></li>\n<li><code>Ctrl + Alt + Delete</code> =&gt; <code>任务管理器</code>  =&gt; <code>选中进程</code> =&gt; <code>右键-打开文件位置</code></li>\n<li>在<code>任务管理器</code>表头<code>右键</code>=&gt; 勾选命令行  </li>\n</ul>\n<h4 id=\"1-2-9-查看运行的服务【有多种】\"><a href=\"#1-2-9-查看运行的服务【有多种】\" class=\"headerlink\" title=\"1.2.9 查看运行的服务【有多种】\"></a>1.2.9 查看运行的服务【有多种】</h4><ul>\n<li><code>win + r</code> , 输入 <code>msconfig</code><br><img src=\"https://img-blog.csdnimg.cn/20201209095626352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<h4 id=\"1-2-10-服务与启动项的区别：\"><a href=\"#1-2-10-服务与启动项的区别：\" class=\"headerlink\" title=\"1.2.10 服务与启动项的区别：\"></a>1.2.10 服务与启动项的区别：</h4><ul>\n<li>服务：只要开启服务，不管 登不登陆 都运行【针对计算机】</li>\n<li>启动项：用户登录后才运行【针对用户】</li>\n</ul>\n<h4 id=\"1-2-11-UDP\"><a href=\"#1-2-11-UDP\" class=\"headerlink\" title=\"1.2.11 UDP\"></a>1.2.11 UDP</h4><p>不建立会话，采用广播的形式，不可靠，节省资源</p>\n<h4 id=\"1-2-12-网络排错-和-OSI\"><a href=\"#1-2-12-网络排错-和-OSI\" class=\"headerlink\" title=\"1.2.12 网络排错 和 OSI\"></a>1.2.12 网络排错 和 OSI</h4><p>由底层向上层排错</p>\n<ul>\n<li>物理层问题：【替换法】<ol>\n<li>网线是否连接正确；网线是否损坏</li>\n<li>查看网卡 接受/发送数据包是否有异常【如：1方为0】</li>\n<li>禁用、启用网卡，查看是否正常</li>\n<li>在 <strong>设备管理器</strong> 中  重新安装网卡的<strong>驱动</strong>【右键卸载(不勾选删除)、右键扫描】</li>\n</ol>\n</li>\n<li>数据链路层问题：<ol>\n<li> MAC地址冲突</li>\n<li> ADSL拨号</li>\n</ol>\n</li>\n<li>网络层问题：<ol>\n<li>网关错误</li>\n<li>路由表错误</li>\n</ol>\n</li>\n<li>应用程序问题：<ol>\n<li>IE 代理错误<h4 id=\"1-2-13-网络安全和-OSI\"><a href=\"#1-2-13-网络安全和-OSI\" class=\"headerlink\" title=\"1.2.13  网络安全和 OSI\"></a>1.2.13  网络安全和 OSI</h4></li>\n</ol>\n</li>\n<li>物理层：不要混用接口</li>\n<li>数据链路层：MAC地址认证，ADSL账号密码，划分Vlan</li>\n<li>物理层：路由器ACL</li>\n<li>传输层：端口安全</li>\n<li>应用层安全：网站安全、操作系统安全</li>\n</ul>\n<h4 id=\"1-2-14-网络设备\"><a href=\"#1-2-14-网络设备\" class=\"headerlink\" title=\"1.2.14 网络设备\"></a>1.2.14 网络设备</h4><p>网络设备：</p>\n<ul>\n<li><p>网线：双绞线=》 8根 =》 百米</p>\n<ol>\n<li>10M</li>\n<li>100M【4根线】</li>\n<li>1000M【8根线】</li>\n</ol>\n<ul>\n<li>同种设备：交叉线</li>\n<li>不同设备：直通线</li>\n</ul>\n</li>\n<li><p>   网卡：MAC地址=》物理地址、硬件地址=》 不可更改</p>\n</li>\n<li><p>查看 IP地址和 MAC地址：<code>ipconfig /all</code></p>\n</li>\n<li><p>更改MAC地址：<br><img src=\"https://img-blog.csdnimg.cn/20201209103436535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201209103508130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201209103832511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201209103858212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>注意：下图3中的 mac 地址不要有 “–”<br><img src=\"https://img-blog.csdnimg.cn/20201209104044757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>集线器：不看源地址和目的地址，只广播发送，计算机收到数据后发现不是自己的才丢弃，共享带宽，不安全。</p>\n</li>\n<li><p>网桥：根据数据包的源地址学习到设备的位置，只在第一次不知道目的地址时广播，在第二次发送数据时已经知道目的MAC地址就可以不用广播而直接发。独享带宽。</p>\n</li>\n</ul>\n<p>-单工：电视台发信号</p>\n<ul>\n<li>半双工：对讲机，同一时间只能由一方通信</li>\n<li>全双工：同时收发</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20201209105451457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201209105536874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>交换机：</p>\n<ul>\n<li>基于MAC地址转发数据，安全，带宽独享、全双工</li>\n</ul>\n<p>路由器：</p>\n<ul>\n<li>负责跨网段通信，一般有广域网口</li>\n<li>隔绝广播【二进制全1 的目标ip，全F的 mac 】<br><img src=\"https://img-blog.csdnimg.cn/20201209110340850.png\" alt=\"在这里插入图片描述\"><br>计算机上设置多个IP地址：<br><img src=\"https://img-blog.csdnimg.cn/20201209110836160.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201209110915186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020120911094499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n"},{"title":"CCNA-笔记-02【非理论】","_content":"\n# CCNA-笔记-02【非理论】\n\n[toc]\n\n## 第二章 TCP / IP协议\n### 1. 协议分层\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211110629118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 1.1 传输层\n- TCP：可靠，建立会话【消耗资源】，差错校验，分段传输，适用于：1个数据包传不完，需要分段传输，需要重传的场合，如：浏览网页、发邮件\n`netstat -n`查看会话\n- UDP：不可靠，适用于：1个数据包就能传完。如：屏幕广播，QQ聊天，域名解析\n#### 1.2 应用层\n- HTTP    = tcp + 80\n- HTTPS = tcp +443\n- FTP      = tcp + 20 / 21  【20传数据(主动模式时20，被动模式由软件协商)，21做控制】\n- SMTP = tcp + 25\n- POP3 = tcp +110\n- RDP = tcp + 3389\n- DNS = TCP【同步数据】/ UDP【查dns，常用】 + 53\n- CIFS【使用IP地址访问】 = tcp + 445\n- CIFS【使用计算机名访问】 = tcp + 139 \n- SQL Server【远程访问时】 = tcp + 1433\n- Telnet  = tcp + 23\n- SSH = tcp + 22\n> `服务与端口的关系`：\n> 用 端口 来区分使用的 服务\n> - 【服务 侦听 端口】\n> - 【客户端请求服务】\n>  【客户端请求的服务使用目标端口区分】\n>   【服务停止，该侦听的端口就关闭】\n>   \n> 1个服务 占用 1个端口【不能重复】\n> `netstat -a` 查看服务和端口情况【外部地址以主机名的形式显示】\n> `netstat -an` 使用数字形式显示端口占用情况【外部地址以数字的形式显示】\n> `netstat -anb ` 查看进程与端口的对应关系\n> `netstat -an | find \"80\"`:查看80端口的使用情况\n\n不允许他人更改IP地址：\n- 禁用 Network Connections 服务。\n\n不允许共享资源：\n- 禁用 Workstation 服务。\n\n##### 1.2.1 实例：远程桌面：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211114532201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211114608755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211114641857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211114714737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n一路“确定”\n【使用RDP，注意`防火墙`是否允许】\n##### 1.2.2 实例： 安装服务\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211120937700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211120950740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211121049884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 1.3 端口安全\n测试端口 开没开【现在weindow默认关闭telnet】：`telnet   ip地址   端口`\n\n端口安全：\n- TCP/IP筛选：[百度经验-TCP/IP筛选](https://jingyan.baidu.com/article/90bc8fc84f568ff653640cca.html)\n服务器【win 2003 server】：右键网卡-》找到Tcp/IP筛选、防火墙\n\n##### 1.3.1 实例：打开防火墙\n**场景：**自己的计算机 只开启80端口，其他人只能访问我这台计算机的80端口，而我可以访问别人的其他端口\n【即：入站和出站是不同的规则，我出去用的是临时打开的随机端口，会话结束就关闭这个临时端口】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211124446917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020121112452153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\nPing 不通：可能是`防火墙`的问题\n排除木马【可疑程序】`msconfig`查看计算机中的已安装的未知程序\n\n#### 1.4 IPSec:防木马，严格控制出入流量\n防火墙和TCP/IP筛选：不控制出去的流量\n\nserver: 使用 IPSec + TCP/IP筛选\nClient:  使用防火墙【windows 防火墙依赖 `服务`】\n\n场景：web服务器：只允许80端口进出\n- 打开本地安全策略\n- 新建 策略\n- 拒绝 所有 - 应用 - 确定\n- 添加 - 从“80端口”\n- 应用-确定\n- 启用策略\n策略：采用`最佳匹配`原则\n#### 1.5 网络层协议\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211133044459.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211133104828.png)\n组播：[组播原理-链接](https://blog.csdn.net/cong_xue/article/details/78639611?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160766496919725211917529%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=160766496919725211917529&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-10-78639611.pc_search_result_cache&utm_term=%E7%BB%84%E6%92%AD&spm=1018.2118.3001.4449)\n组播就是计算机都配成同一个组播地址，就加入了同一个组。\nIGMP，就是在路由器上控制有没有必要将多播数据包传到绑定多播地址的计算机的一种协议。\n\n#### 1.6 ARP协议\nPC1  => PC2\n- PC1 将PC2的IP地址封装，广播询问  该IP  相对应的  MAC地址\n- PC2收到后，返回响应\n- 其他PC收到后，发现不是发给自己的，就丢弃\n查看IP 与 MAC 的对应关系：`arp -a `\n临时绑定MAC和IP地址：`arp -s  IP地址  MAC地址(带有-)`\n删除MAC与IP的对应关系：`arp -d `\n\n\n#### 1.7 跨网段通信：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211140109229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\nPC1 发送广播ARP广播，得到网关R1的MAC地址，不断变换MAC源地址、目标MAC，直到找到目标PC2.\n- MAC地址 决定了  **下一跳**给哪个设备。\n- IP地址 决定了 **最终**给 哪个 计算机\n- 该跨网段的过程运用了`代理ARP`的原理：\n\t-  跨网段时，PC1将ARP请求发给网关，由网关【以网关自己的名义】去请求目的设备的ARP地址。\n\t- 如果PC1的ARP不是配成网关，而是直接将目的MAC地址配成跨网段的设备的MAC地址，则在ARP请求时，网关收到ARP请求，发现不是发给自己的包，就丢弃，所以这时不能跨网段通信。\n\n","source":"_posts/CCNA-笔记-02【非理论】.md","raw":"---\ntitle: CCNA-笔记-02【非理论】\ntag: CCNA\ncategories:\n  - 网络工程\n  - CCNA \n---\n\n# CCNA-笔记-02【非理论】\n\n[toc]\n\n## 第二章 TCP / IP协议\n### 1. 协议分层\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211110629118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 1.1 传输层\n- TCP：可靠，建立会话【消耗资源】，差错校验，分段传输，适用于：1个数据包传不完，需要分段传输，需要重传的场合，如：浏览网页、发邮件\n`netstat -n`查看会话\n- UDP：不可靠，适用于：1个数据包就能传完。如：屏幕广播，QQ聊天，域名解析\n#### 1.2 应用层\n- HTTP    = tcp + 80\n- HTTPS = tcp +443\n- FTP      = tcp + 20 / 21  【20传数据(主动模式时20，被动模式由软件协商)，21做控制】\n- SMTP = tcp + 25\n- POP3 = tcp +110\n- RDP = tcp + 3389\n- DNS = TCP【同步数据】/ UDP【查dns，常用】 + 53\n- CIFS【使用IP地址访问】 = tcp + 445\n- CIFS【使用计算机名访问】 = tcp + 139 \n- SQL Server【远程访问时】 = tcp + 1433\n- Telnet  = tcp + 23\n- SSH = tcp + 22\n> `服务与端口的关系`：\n> 用 端口 来区分使用的 服务\n> - 【服务 侦听 端口】\n> - 【客户端请求服务】\n>  【客户端请求的服务使用目标端口区分】\n>   【服务停止，该侦听的端口就关闭】\n>   \n> 1个服务 占用 1个端口【不能重复】\n> `netstat -a` 查看服务和端口情况【外部地址以主机名的形式显示】\n> `netstat -an` 使用数字形式显示端口占用情况【外部地址以数字的形式显示】\n> `netstat -anb ` 查看进程与端口的对应关系\n> `netstat -an | find \"80\"`:查看80端口的使用情况\n\n不允许他人更改IP地址：\n- 禁用 Network Connections 服务。\n\n不允许共享资源：\n- 禁用 Workstation 服务。\n\n##### 1.2.1 实例：远程桌面：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211114532201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211114608755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211114641857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211114714737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n一路“确定”\n【使用RDP，注意`防火墙`是否允许】\n##### 1.2.2 实例： 安装服务\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211120937700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211120950740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211121049884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 1.3 端口安全\n测试端口 开没开【现在weindow默认关闭telnet】：`telnet   ip地址   端口`\n\n端口安全：\n- TCP/IP筛选：[百度经验-TCP/IP筛选](https://jingyan.baidu.com/article/90bc8fc84f568ff653640cca.html)\n服务器【win 2003 server】：右键网卡-》找到Tcp/IP筛选、防火墙\n\n##### 1.3.1 实例：打开防火墙\n**场景：**自己的计算机 只开启80端口，其他人只能访问我这台计算机的80端口，而我可以访问别人的其他端口\n【即：入站和出站是不同的规则，我出去用的是临时打开的随机端口，会话结束就关闭这个临时端口】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211124446917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020121112452153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\nPing 不通：可能是`防火墙`的问题\n排除木马【可疑程序】`msconfig`查看计算机中的已安装的未知程序\n\n#### 1.4 IPSec:防木马，严格控制出入流量\n防火墙和TCP/IP筛选：不控制出去的流量\n\nserver: 使用 IPSec + TCP/IP筛选\nClient:  使用防火墙【windows 防火墙依赖 `服务`】\n\n场景：web服务器：只允许80端口进出\n- 打开本地安全策略\n- 新建 策略\n- 拒绝 所有 - 应用 - 确定\n- 添加 - 从“80端口”\n- 应用-确定\n- 启用策略\n策略：采用`最佳匹配`原则\n#### 1.5 网络层协议\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211133044459.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211133104828.png)\n组播：[组播原理-链接](https://blog.csdn.net/cong_xue/article/details/78639611?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160766496919725211917529%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=160766496919725211917529&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-10-78639611.pc_search_result_cache&utm_term=%E7%BB%84%E6%92%AD&spm=1018.2118.3001.4449)\n组播就是计算机都配成同一个组播地址，就加入了同一个组。\nIGMP，就是在路由器上控制有没有必要将多播数据包传到绑定多播地址的计算机的一种协议。\n\n#### 1.6 ARP协议\nPC1  => PC2\n- PC1 将PC2的IP地址封装，广播询问  该IP  相对应的  MAC地址\n- PC2收到后，返回响应\n- 其他PC收到后，发现不是发给自己的，就丢弃\n查看IP 与 MAC 的对应关系：`arp -a `\n临时绑定MAC和IP地址：`arp -s  IP地址  MAC地址(带有-)`\n删除MAC与IP的对应关系：`arp -d `\n\n\n#### 1.7 跨网段通信：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201211140109229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\nPC1 发送广播ARP广播，得到网关R1的MAC地址，不断变换MAC源地址、目标MAC，直到找到目标PC2.\n- MAC地址 决定了  **下一跳**给哪个设备。\n- IP地址 决定了 **最终**给 哪个 计算机\n- 该跨网段的过程运用了`代理ARP`的原理：\n\t-  跨网段时，PC1将ARP请求发给网关，由网关【以网关自己的名义】去请求目的设备的ARP地址。\n\t- 如果PC1的ARP不是配成网关，而是直接将目的MAC地址配成跨网段的设备的MAC地址，则在ARP请求时，网关收到ARP请求，发现不是发给自己的包，就丢弃，所以这时不能跨网段通信。\n\n","slug":"CCNA-笔记-02【非理论】","published":1,"date":"2021-06-02T02:49:19.207Z","updated":"2021-06-01T07:36:09.350Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs120006lcvdhk6b5pz3","content":"<h1 id=\"CCNA-笔记-02【非理论】\"><a href=\"#CCNA-笔记-02【非理论】\" class=\"headerlink\" title=\"CCNA-笔记-02【非理论】\"></a>CCNA-笔记-02【非理论】</h1><p>[toc]</p>\n<h2 id=\"第二章-TCP-IP协议\"><a href=\"#第二章-TCP-IP协议\" class=\"headerlink\" title=\"第二章 TCP / IP协议\"></a>第二章 TCP / IP协议</h2><h3 id=\"1-协议分层\"><a href=\"#1-协议分层\" class=\"headerlink\" title=\"1. 协议分层\"></a>1. 协议分层</h3><p><img src=\"https://img-blog.csdnimg.cn/20201211110629118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"1-1-传输层\"><a href=\"#1-1-传输层\" class=\"headerlink\" title=\"1.1 传输层\"></a>1.1 传输层</h4><ul>\n<li>TCP：可靠，建立会话【消耗资源】，差错校验，分段传输，适用于：1个数据包传不完，需要分段传输，需要重传的场合，如：浏览网页、发邮件<br><code>netstat -n</code>查看会话</li>\n<li>UDP：不可靠，适用于：1个数据包就能传完。如：屏幕广播，QQ聊天，域名解析<h4 id=\"1-2-应用层\"><a href=\"#1-2-应用层\" class=\"headerlink\" title=\"1.2 应用层\"></a>1.2 应用层</h4></li>\n<li>HTTP    = tcp + 80</li>\n<li>HTTPS = tcp +443</li>\n<li>FTP      = tcp + 20 / 21  【20传数据(主动模式时20，被动模式由软件协商)，21做控制】</li>\n<li>SMTP = tcp + 25</li>\n<li>POP3 = tcp +110</li>\n<li>RDP = tcp + 3389</li>\n<li>DNS = TCP【同步数据】/ UDP【查dns，常用】 + 53</li>\n<li>CIFS【使用IP地址访问】 = tcp + 445</li>\n<li>CIFS【使用计算机名访问】 = tcp + 139 </li>\n<li>SQL Server【远程访问时】 = tcp + 1433</li>\n<li>Telnet  = tcp + 23</li>\n<li>SSH = tcp + 22<blockquote>\n<p><code>服务与端口的关系</code>：<br>用 端口 来区分使用的 服务</p>\n<ul>\n<li>【服务 侦听 端口】</li>\n<li>【客户端请求服务】<br>【客户端请求的服务使用目标端口区分】<br>【服务停止，该侦听的端口就关闭】</li>\n</ul>\n<p>1个服务 占用 1个端口【不能重复】<br><code>netstat -a</code> 查看服务和端口情况【外部地址以主机名的形式显示】<br><code>netstat -an</code> 使用数字形式显示端口占用情况【外部地址以数字的形式显示】<br><code>netstat -anb </code> 查看进程与端口的对应关系<br><code>netstat -an | find &quot;80&quot;</code>:查看80端口的使用情况</p>\n</blockquote>\n</li>\n</ul>\n<p>不允许他人更改IP地址：</p>\n<ul>\n<li>禁用 Network Connections 服务。</li>\n</ul>\n<p>不允许共享资源：</p>\n<ul>\n<li>禁用 Workstation 服务。</li>\n</ul>\n<h5 id=\"1-2-1-实例：远程桌面：\"><a href=\"#1-2-1-实例：远程桌面：\" class=\"headerlink\" title=\"1.2.1 实例：远程桌面：\"></a>1.2.1 实例：远程桌面：</h5><p><img src=\"https://img-blog.csdnimg.cn/20201211114532201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201211114608755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201211114641857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201211114714737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>一路“确定”<br>【使用RDP，注意<code>防火墙</code>是否允许】</p>\n<h5 id=\"1-2-2-实例：-安装服务\"><a href=\"#1-2-2-实例：-安装服务\" class=\"headerlink\" title=\"1.2.2 实例： 安装服务\"></a>1.2.2 实例： 安装服务</h5><p><img src=\"https://img-blog.csdnimg.cn/20201211120937700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201211120950740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201211121049884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"1-3-端口安全\"><a href=\"#1-3-端口安全\" class=\"headerlink\" title=\"1.3 端口安全\"></a>1.3 端口安全</h4><p>测试端口 开没开【现在weindow默认关闭telnet】：<code>telnet   ip地址   端口</code></p>\n<p>端口安全：</p>\n<ul>\n<li>TCP/IP筛选：<a href=\"https://jingyan.baidu.com/article/90bc8fc84f568ff653640cca.html\">百度经验-TCP/IP筛选</a><br>服务器【win 2003 server】：右键网卡-》找到Tcp/IP筛选、防火墙</li>\n</ul>\n<h5 id=\"1-3-1-实例：打开防火墙\"><a href=\"#1-3-1-实例：打开防火墙\" class=\"headerlink\" title=\"1.3.1 实例：打开防火墙\"></a>1.3.1 实例：打开防火墙</h5><p><strong>场景：</strong>自己的计算机 只开启80端口，其他人只能访问我这台计算机的80端口，而我可以访问别人的其他端口<br>【即：入站和出站是不同的规则，我出去用的是临时打开的随机端口，会话结束就关闭这个临时端口】<br><img src=\"https://img-blog.csdnimg.cn/20201211124446917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020121112452153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>Ping 不通：可能是<code>防火墙</code>的问题<br>排除木马【可疑程序】<code>msconfig</code>查看计算机中的已安装的未知程序</p>\n<h4 id=\"1-4-IPSec-防木马，严格控制出入流量\"><a href=\"#1-4-IPSec-防木马，严格控制出入流量\" class=\"headerlink\" title=\"1.4 IPSec:防木马，严格控制出入流量\"></a>1.4 IPSec:防木马，严格控制出入流量</h4><p>防火墙和TCP/IP筛选：不控制出去的流量</p>\n<p>server: 使用 IPSec + TCP/IP筛选<br>Client:  使用防火墙【windows 防火墙依赖 <code>服务</code>】</p>\n<p>场景：web服务器：只允许80端口进出</p>\n<ul>\n<li>打开本地安全策略</li>\n<li>新建 策略</li>\n<li>拒绝 所有 - 应用 - 确定</li>\n<li>添加 - 从“80端口”</li>\n<li>应用-确定</li>\n<li>启用策略<br>策略：采用<code>最佳匹配</code>原则<h4 id=\"1-5-网络层协议\"><a href=\"#1-5-网络层协议\" class=\"headerlink\" title=\"1.5 网络层协议\"></a>1.5 网络层协议</h4><img src=\"https://img-blog.csdnimg.cn/20201211133044459.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201211133104828.png\" alt=\"在这里插入图片描述\"><br>组播：<a href=\"https://blog.csdn.net/cong_xue/article/details/78639611?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160766496919725211917529%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=160766496919725211917529&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-10-78639611.pc_search_result_cache&utm_term=%E7%BB%84%E6%92%AD&spm=1018.2118.3001.4449\">组播原理-链接</a><br>组播就是计算机都配成同一个组播地址，就加入了同一个组。<br>IGMP，就是在路由器上控制有没有必要将多播数据包传到绑定多播地址的计算机的一种协议。</li>\n</ul>\n<h4 id=\"1-6-ARP协议\"><a href=\"#1-6-ARP协议\" class=\"headerlink\" title=\"1.6 ARP协议\"></a>1.6 ARP协议</h4><p>PC1  =&gt; PC2</p>\n<ul>\n<li>PC1 将PC2的IP地址封装，广播询问  该IP  相对应的  MAC地址</li>\n<li>PC2收到后，返回响应</li>\n<li>其他PC收到后，发现不是发给自己的，就丢弃<br>查看IP 与 MAC 的对应关系：<code>arp -a </code><br>临时绑定MAC和IP地址：<code>arp -s  IP地址  MAC地址(带有-)</code><br>删除MAC与IP的对应关系：<code>arp -d </code></li>\n</ul>\n<h4 id=\"1-7-跨网段通信：\"><a href=\"#1-7-跨网段通信：\" class=\"headerlink\" title=\"1.7 跨网段通信：\"></a>1.7 跨网段通信：</h4><p><img src=\"https://img-blog.csdnimg.cn/20201211140109229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>PC1 发送广播ARP广播，得到网关R1的MAC地址，不断变换MAC源地址、目标MAC，直到找到目标PC2.</p>\n<ul>\n<li>MAC地址 决定了  <strong>下一跳</strong>给哪个设备。</li>\n<li>IP地址 决定了 <strong>最终</strong>给 哪个 计算机</li>\n<li>该跨网段的过程运用了<code>代理ARP</code>的原理：<ul>\n<li> 跨网段时，PC1将ARP请求发给网关，由网关【以网关自己的名义】去请求目的设备的ARP地址。</li>\n<li>如果PC1的ARP不是配成网关，而是直接将目的MAC地址配成跨网段的设备的MAC地址，则在ARP请求时，网关收到ARP请求，发现不是发给自己的包，就丢弃，所以这时不能跨网段通信。</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"CCNA-笔记-02【非理论】\"><a href=\"#CCNA-笔记-02【非理论】\" class=\"headerlink\" title=\"CCNA-笔记-02【非理论】\"></a>CCNA-笔记-02【非理论】</h1><p>[toc]</p>\n<h2 id=\"第二章-TCP-IP协议\"><a href=\"#第二章-TCP-IP协议\" class=\"headerlink\" title=\"第二章 TCP / IP协议\"></a>第二章 TCP / IP协议</h2><h3 id=\"1-协议分层\"><a href=\"#1-协议分层\" class=\"headerlink\" title=\"1. 协议分层\"></a>1. 协议分层</h3><p><img src=\"https://img-blog.csdnimg.cn/20201211110629118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"1-1-传输层\"><a href=\"#1-1-传输层\" class=\"headerlink\" title=\"1.1 传输层\"></a>1.1 传输层</h4><ul>\n<li>TCP：可靠，建立会话【消耗资源】，差错校验，分段传输，适用于：1个数据包传不完，需要分段传输，需要重传的场合，如：浏览网页、发邮件<br><code>netstat -n</code>查看会话</li>\n<li>UDP：不可靠，适用于：1个数据包就能传完。如：屏幕广播，QQ聊天，域名解析<h4 id=\"1-2-应用层\"><a href=\"#1-2-应用层\" class=\"headerlink\" title=\"1.2 应用层\"></a>1.2 应用层</h4></li>\n<li>HTTP    = tcp + 80</li>\n<li>HTTPS = tcp +443</li>\n<li>FTP      = tcp + 20 / 21  【20传数据(主动模式时20，被动模式由软件协商)，21做控制】</li>\n<li>SMTP = tcp + 25</li>\n<li>POP3 = tcp +110</li>\n<li>RDP = tcp + 3389</li>\n<li>DNS = TCP【同步数据】/ UDP【查dns，常用】 + 53</li>\n<li>CIFS【使用IP地址访问】 = tcp + 445</li>\n<li>CIFS【使用计算机名访问】 = tcp + 139 </li>\n<li>SQL Server【远程访问时】 = tcp + 1433</li>\n<li>Telnet  = tcp + 23</li>\n<li>SSH = tcp + 22<blockquote>\n<p><code>服务与端口的关系</code>：<br>用 端口 来区分使用的 服务</p>\n<ul>\n<li>【服务 侦听 端口】</li>\n<li>【客户端请求服务】<br>【客户端请求的服务使用目标端口区分】<br>【服务停止，该侦听的端口就关闭】</li>\n</ul>\n<p>1个服务 占用 1个端口【不能重复】<br><code>netstat -a</code> 查看服务和端口情况【外部地址以主机名的形式显示】<br><code>netstat -an</code> 使用数字形式显示端口占用情况【外部地址以数字的形式显示】<br><code>netstat -anb </code> 查看进程与端口的对应关系<br><code>netstat -an | find &quot;80&quot;</code>:查看80端口的使用情况</p>\n</blockquote>\n</li>\n</ul>\n<p>不允许他人更改IP地址：</p>\n<ul>\n<li>禁用 Network Connections 服务。</li>\n</ul>\n<p>不允许共享资源：</p>\n<ul>\n<li>禁用 Workstation 服务。</li>\n</ul>\n<h5 id=\"1-2-1-实例：远程桌面：\"><a href=\"#1-2-1-实例：远程桌面：\" class=\"headerlink\" title=\"1.2.1 实例：远程桌面：\"></a>1.2.1 实例：远程桌面：</h5><p><img src=\"https://img-blog.csdnimg.cn/20201211114532201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201211114608755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201211114641857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201211114714737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>一路“确定”<br>【使用RDP，注意<code>防火墙</code>是否允许】</p>\n<h5 id=\"1-2-2-实例：-安装服务\"><a href=\"#1-2-2-实例：-安装服务\" class=\"headerlink\" title=\"1.2.2 实例： 安装服务\"></a>1.2.2 实例： 安装服务</h5><p><img src=\"https://img-blog.csdnimg.cn/20201211120937700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201211120950740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201211121049884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"1-3-端口安全\"><a href=\"#1-3-端口安全\" class=\"headerlink\" title=\"1.3 端口安全\"></a>1.3 端口安全</h4><p>测试端口 开没开【现在weindow默认关闭telnet】：<code>telnet   ip地址   端口</code></p>\n<p>端口安全：</p>\n<ul>\n<li>TCP/IP筛选：<a href=\"https://jingyan.baidu.com/article/90bc8fc84f568ff653640cca.html\">百度经验-TCP/IP筛选</a><br>服务器【win 2003 server】：右键网卡-》找到Tcp/IP筛选、防火墙</li>\n</ul>\n<h5 id=\"1-3-1-实例：打开防火墙\"><a href=\"#1-3-1-实例：打开防火墙\" class=\"headerlink\" title=\"1.3.1 实例：打开防火墙\"></a>1.3.1 实例：打开防火墙</h5><p><strong>场景：</strong>自己的计算机 只开启80端口，其他人只能访问我这台计算机的80端口，而我可以访问别人的其他端口<br>【即：入站和出站是不同的规则，我出去用的是临时打开的随机端口，会话结束就关闭这个临时端口】<br><img src=\"https://img-blog.csdnimg.cn/20201211124446917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020121112452153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>Ping 不通：可能是<code>防火墙</code>的问题<br>排除木马【可疑程序】<code>msconfig</code>查看计算机中的已安装的未知程序</p>\n<h4 id=\"1-4-IPSec-防木马，严格控制出入流量\"><a href=\"#1-4-IPSec-防木马，严格控制出入流量\" class=\"headerlink\" title=\"1.4 IPSec:防木马，严格控制出入流量\"></a>1.4 IPSec:防木马，严格控制出入流量</h4><p>防火墙和TCP/IP筛选：不控制出去的流量</p>\n<p>server: 使用 IPSec + TCP/IP筛选<br>Client:  使用防火墙【windows 防火墙依赖 <code>服务</code>】</p>\n<p>场景：web服务器：只允许80端口进出</p>\n<ul>\n<li>打开本地安全策略</li>\n<li>新建 策略</li>\n<li>拒绝 所有 - 应用 - 确定</li>\n<li>添加 - 从“80端口”</li>\n<li>应用-确定</li>\n<li>启用策略<br>策略：采用<code>最佳匹配</code>原则<h4 id=\"1-5-网络层协议\"><a href=\"#1-5-网络层协议\" class=\"headerlink\" title=\"1.5 网络层协议\"></a>1.5 网络层协议</h4><img src=\"https://img-blog.csdnimg.cn/20201211133044459.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201211133104828.png\" alt=\"在这里插入图片描述\"><br>组播：<a href=\"https://blog.csdn.net/cong_xue/article/details/78639611?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160766496919725211917529%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=160766496919725211917529&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-10-78639611.pc_search_result_cache&utm_term=%E7%BB%84%E6%92%AD&spm=1018.2118.3001.4449\">组播原理-链接</a><br>组播就是计算机都配成同一个组播地址，就加入了同一个组。<br>IGMP，就是在路由器上控制有没有必要将多播数据包传到绑定多播地址的计算机的一种协议。</li>\n</ul>\n<h4 id=\"1-6-ARP协议\"><a href=\"#1-6-ARP协议\" class=\"headerlink\" title=\"1.6 ARP协议\"></a>1.6 ARP协议</h4><p>PC1  =&gt; PC2</p>\n<ul>\n<li>PC1 将PC2的IP地址封装，广播询问  该IP  相对应的  MAC地址</li>\n<li>PC2收到后，返回响应</li>\n<li>其他PC收到后，发现不是发给自己的，就丢弃<br>查看IP 与 MAC 的对应关系：<code>arp -a </code><br>临时绑定MAC和IP地址：<code>arp -s  IP地址  MAC地址(带有-)</code><br>删除MAC与IP的对应关系：<code>arp -d </code></li>\n</ul>\n<h4 id=\"1-7-跨网段通信：\"><a href=\"#1-7-跨网段通信：\" class=\"headerlink\" title=\"1.7 跨网段通信：\"></a>1.7 跨网段通信：</h4><p><img src=\"https://img-blog.csdnimg.cn/20201211140109229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>PC1 发送广播ARP广播，得到网关R1的MAC地址，不断变换MAC源地址、目标MAC，直到找到目标PC2.</p>\n<ul>\n<li>MAC地址 决定了  <strong>下一跳</strong>给哪个设备。</li>\n<li>IP地址 决定了 <strong>最终</strong>给 哪个 计算机</li>\n<li>该跨网段的过程运用了<code>代理ARP</code>的原理：<ul>\n<li> 跨网段时，PC1将ARP请求发给网关，由网关【以网关自己的名义】去请求目的设备的ARP地址。</li>\n<li>如果PC1的ARP不是配成网关，而是直接将目的MAC地址配成跨网段的设备的MAC地址，则在ARP请求时，网关收到ARP请求，发现不是发给自己的包，就丢弃，所以这时不能跨网段通信。</li>\n</ul>\n</li>\n</ul>\n"},{"title":"Flask-入门笔记","_content":"\n# Flask-入门笔记\n\n[toc]\n\n## 1. 案例1：创建1个flask应用程序\n\n目录结构：\n\n-   main.py\n\n-   templates 目录\n\n    -   index.html\n\n    \n\n**注意：** flask中的**模板**就是**html页面**\n\n>   return  字符串\n\n```python\nfrom flask import Flask\n\napp = Flask(__name__)\n\n\n# 当浏览器的地址栏后为“ / ”时，调用相应处理的函数index()，\n# 页面内容为return关键字后的内容\n# 【这启示我们，只要将1个html页面放在return关键字后，就能实现页面的动态切换】\n\n@app.route('/')\ndef index():\n    return '你好，我是首页'\n\n# 当浏览器的地址栏后为“ /pic ”时，调用相应处理的函数pic()\n# 【即：页面显示return关键字后的内容】\n@app.route('/pic')\ndef pic():\n    return '你好，我是pic'\n\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n\n```\n\n>   return 页面\n\n```python\nfrom flask import Flask, render_template\n\n\napp = Flask(__name__)\n\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n\n@app.route('/pic')\ndef pic():\n    return 'pic'\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n\n```\n\nhtml页面：\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n    用户名：<input id=\"uname\" type=\"text\" > <br>\n    密码：<input id=\"upsw\" type=\"\" ><br>\n    <input id=\"btn\" type=\"button\" value=\"提交\"><br>\n\n</body>\n</html>\n```\n\n>   后端 =传数据到=》前端\n\npython:\n\n```python\nfrom flask import Flask, render_template\n\napp = Flask(__name__)\n\n\n@app.route('/')\ndef index():\n    arr = ['小a', '小b', '小c']\n    \n    # 页面放在templates目录下【该文件夹与当前python文件平级】\n    return render_template('index.html',arr1=arr) # arr1传到html中\n\n\n@app.route('/pic')\ndef pic():\n    return '页面显示pic'\n\n\nif __name__ == '__main__':\n    app.run(debug=True) # 以调试模式,运行 网站app\n\n```\n\nhtml：\n\n-   `{% python语句 %}` \n-   `{{ python的变量 }}`\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n    \n      {% for it in arr1 %}\n          {{ it }} <br>\n      {% endfor %}\n\n\n</body>\n</html>\n```\n\n\n\n>   前端表单 =》 后端\n\npy:\n\n```python\nfrom flask import Flask, render_template, request\n\napp = Flask(__name__)\n\n\n@app.route('/')\ndef index():   \n\n    return render_template('index.html')\n\n\n@app.route('/login', methods=['POST']) # 注意：将方法改为post\ndef login():\n    username = request.form.get('uname')  # 获取表单的 固定写法\n    psw = request.form.get('upsw')\n    if username == 'abc' and psw == '123':\n        return '登录成功'\n    else:\n        #登录失败，则重新加载页面，并返回一句话，这句话在前端用{{ 变量名}} 来显示\n        return render_template('index.html', msg='登录失败') \n\n\n@app.route('/pic')\ndef pic():\n    return 'pic'\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n\n```\n\nhtml：\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n    \n    <form action=\"/login\" method=\"post\">\n        用户名：<input id=\"uname\" name=\"uname\" type=\"text\"> <br><br>\n        密码：<input id=\"upsw\" name=\"upsw\" type=\"text\"><br><br>\n        <input id=\"btn\" type=\"submit\" value=\"提交\"><br><br>\n        \n        {{msg}}\n\n    </form>\n\n</body>\n</html>\n```\n\n","source":"_posts/Flask-入门笔记.md","raw":"---\ntitle: Flask-入门笔记\ntag: Python3\ncategories:\n  - 后端\n  - Python3\n---\n\n# Flask-入门笔记\n\n[toc]\n\n## 1. 案例1：创建1个flask应用程序\n\n目录结构：\n\n-   main.py\n\n-   templates 目录\n\n    -   index.html\n\n    \n\n**注意：** flask中的**模板**就是**html页面**\n\n>   return  字符串\n\n```python\nfrom flask import Flask\n\napp = Flask(__name__)\n\n\n# 当浏览器的地址栏后为“ / ”时，调用相应处理的函数index()，\n# 页面内容为return关键字后的内容\n# 【这启示我们，只要将1个html页面放在return关键字后，就能实现页面的动态切换】\n\n@app.route('/')\ndef index():\n    return '你好，我是首页'\n\n# 当浏览器的地址栏后为“ /pic ”时，调用相应处理的函数pic()\n# 【即：页面显示return关键字后的内容】\n@app.route('/pic')\ndef pic():\n    return '你好，我是pic'\n\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n\n```\n\n>   return 页面\n\n```python\nfrom flask import Flask, render_template\n\n\napp = Flask(__name__)\n\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n\n@app.route('/pic')\ndef pic():\n    return 'pic'\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n\n```\n\nhtml页面：\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n    用户名：<input id=\"uname\" type=\"text\" > <br>\n    密码：<input id=\"upsw\" type=\"\" ><br>\n    <input id=\"btn\" type=\"button\" value=\"提交\"><br>\n\n</body>\n</html>\n```\n\n>   后端 =传数据到=》前端\n\npython:\n\n```python\nfrom flask import Flask, render_template\n\napp = Flask(__name__)\n\n\n@app.route('/')\ndef index():\n    arr = ['小a', '小b', '小c']\n    \n    # 页面放在templates目录下【该文件夹与当前python文件平级】\n    return render_template('index.html',arr1=arr) # arr1传到html中\n\n\n@app.route('/pic')\ndef pic():\n    return '页面显示pic'\n\n\nif __name__ == '__main__':\n    app.run(debug=True) # 以调试模式,运行 网站app\n\n```\n\nhtml：\n\n-   `{% python语句 %}` \n-   `{{ python的变量 }}`\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n    \n      {% for it in arr1 %}\n          {{ it }} <br>\n      {% endfor %}\n\n\n</body>\n</html>\n```\n\n\n\n>   前端表单 =》 后端\n\npy:\n\n```python\nfrom flask import Flask, render_template, request\n\napp = Flask(__name__)\n\n\n@app.route('/')\ndef index():   \n\n    return render_template('index.html')\n\n\n@app.route('/login', methods=['POST']) # 注意：将方法改为post\ndef login():\n    username = request.form.get('uname')  # 获取表单的 固定写法\n    psw = request.form.get('upsw')\n    if username == 'abc' and psw == '123':\n        return '登录成功'\n    else:\n        #登录失败，则重新加载页面，并返回一句话，这句话在前端用{{ 变量名}} 来显示\n        return render_template('index.html', msg='登录失败') \n\n\n@app.route('/pic')\ndef pic():\n    return 'pic'\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n\n```\n\nhtml：\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n    \n    <form action=\"/login\" method=\"post\">\n        用户名：<input id=\"uname\" name=\"uname\" type=\"text\"> <br><br>\n        密码：<input id=\"upsw\" name=\"upsw\" type=\"text\"><br><br>\n        <input id=\"btn\" type=\"submit\" value=\"提交\"><br><br>\n        \n        {{msg}}\n\n    </form>\n\n</body>\n</html>\n```\n\n","slug":"Flask-入门笔记","published":1,"date":"2021-06-02T02:49:19.210Z","updated":"2021-06-01T07:36:09.351Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs130007lcvd4m95fpzb","content":"<h1 id=\"Flask-入门笔记\"><a href=\"#Flask-入门笔记\" class=\"headerlink\" title=\"Flask-入门笔记\"></a>Flask-入门笔记</h1><p>[toc]</p>\n<h2 id=\"1-案例1：创建1个flask应用程序\"><a href=\"#1-案例1：创建1个flask应用程序\" class=\"headerlink\" title=\"1. 案例1：创建1个flask应用程序\"></a>1. 案例1：创建1个flask应用程序</h2><p>目录结构：</p>\n<ul>\n<li><p>  main.py</p>\n</li>\n<li><p>templates 目录</p>\n<ul>\n<li>index.html</li>\n</ul>\n</li>\n</ul>\n<p><strong>注意：</strong> flask中的<strong>模板</strong>就是<strong>html页面</strong></p>\n<blockquote>\n<p>  return  字符串</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 当浏览器的地址栏后为“ / ”时，调用相应处理的函数index()，</span></span><br><span class=\"line\"><span class=\"comment\"># 页面内容为return关键字后的内容</span></span><br><span class=\"line\"><span class=\"comment\"># 【这启示我们，只要将1个html页面放在return关键字后，就能实现页面的动态切换】</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;你好，我是首页&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 当浏览器的地址栏后为“ /pic ”时，调用相应处理的函数pic()</span></span><br><span class=\"line\"><span class=\"comment\"># 【即：页面显示return关键字后的内容】</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/pic&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pic</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;你好，我是pic&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>  return 页面</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, render_template</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/pic&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pic</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;pic&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>html页面：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;zh&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    用户名：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;uname&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> &gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    密码：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;upsw&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;&quot;</span> &gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>  后端 =传数据到=》前端</p>\n</blockquote>\n<p>python:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, render_template</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span>():</span></span><br><span class=\"line\">    arr = [<span class=\"string\">&#x27;小a&#x27;</span>, <span class=\"string\">&#x27;小b&#x27;</span>, <span class=\"string\">&#x27;小c&#x27;</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 页面放在templates目录下【该文件夹与当前python文件平级】</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>,arr1=arr) <span class=\"comment\"># arr1传到html中</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/pic&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pic</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;页面显示pic&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>) <span class=\"comment\"># 以调试模式,运行 网站app</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>html：</p>\n<ul>\n<li>  <code>&#123;% python语句 %&#125;</code> </li>\n<li>  <code>&#123;&#123; python的变量 &#125;&#125;</code></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;zh&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">      &#123;% for it in arr1 %&#125;</span><br><span class=\"line\">          &#123;&#123; it &#125;&#125; <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">      &#123;% endfor %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<blockquote>\n<p>  前端表单 =》 后端</p>\n</blockquote>\n<p>py:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, render_template, request</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span>():</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span>, methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>) </span><span class=\"comment\"># 注意：将方法改为post</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span>():</span></span><br><span class=\"line\">    username = request.form.get(<span class=\"string\">&#x27;uname&#x27;</span>)  <span class=\"comment\"># 获取表单的 固定写法</span></span><br><span class=\"line\">    psw = request.form.get(<span class=\"string\">&#x27;upsw&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> username == <span class=\"string\">&#x27;abc&#x27;</span> <span class=\"keyword\">and</span> psw == <span class=\"string\">&#x27;123&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;登录成功&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"comment\">#登录失败，则重新加载页面，并返回一句话，这句话在前端用&#123;&#123; 变量名&#125;&#125; 来显示</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>, msg=<span class=\"string\">&#x27;登录失败&#x27;</span>) </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/pic&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pic</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;pic&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>html：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;zh&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;/login&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">        用户名：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;uname&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;uname&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        密码：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;upsw&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;upsw&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        &#123;&#123;msg&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"Flask-入门笔记\"><a href=\"#Flask-入门笔记\" class=\"headerlink\" title=\"Flask-入门笔记\"></a>Flask-入门笔记</h1><p>[toc]</p>\n<h2 id=\"1-案例1：创建1个flask应用程序\"><a href=\"#1-案例1：创建1个flask应用程序\" class=\"headerlink\" title=\"1. 案例1：创建1个flask应用程序\"></a>1. 案例1：创建1个flask应用程序</h2><p>目录结构：</p>\n<ul>\n<li><p>  main.py</p>\n</li>\n<li><p>templates 目录</p>\n<ul>\n<li>index.html</li>\n</ul>\n</li>\n</ul>\n<p><strong>注意：</strong> flask中的<strong>模板</strong>就是<strong>html页面</strong></p>\n<blockquote>\n<p>  return  字符串</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 当浏览器的地址栏后为“ / ”时，调用相应处理的函数index()，</span></span><br><span class=\"line\"><span class=\"comment\"># 页面内容为return关键字后的内容</span></span><br><span class=\"line\"><span class=\"comment\"># 【这启示我们，只要将1个html页面放在return关键字后，就能实现页面的动态切换】</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;你好，我是首页&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 当浏览器的地址栏后为“ /pic ”时，调用相应处理的函数pic()</span></span><br><span class=\"line\"><span class=\"comment\"># 【即：页面显示return关键字后的内容】</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/pic&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pic</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;你好，我是pic&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>  return 页面</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, render_template</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/pic&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pic</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;pic&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>html页面：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;zh&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    用户名：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;uname&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> &gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    密码：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;upsw&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;&quot;</span> &gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>  后端 =传数据到=》前端</p>\n</blockquote>\n<p>python:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, render_template</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span>():</span></span><br><span class=\"line\">    arr = [<span class=\"string\">&#x27;小a&#x27;</span>, <span class=\"string\">&#x27;小b&#x27;</span>, <span class=\"string\">&#x27;小c&#x27;</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 页面放在templates目录下【该文件夹与当前python文件平级】</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>,arr1=arr) <span class=\"comment\"># arr1传到html中</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/pic&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pic</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;页面显示pic&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>) <span class=\"comment\"># 以调试模式,运行 网站app</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>html：</p>\n<ul>\n<li>  <code>&#123;% python语句 %&#125;</code> </li>\n<li>  <code>&#123;&#123; python的变量 &#125;&#125;</code></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;zh&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">      &#123;% for it in arr1 %&#125;</span><br><span class=\"line\">          &#123;&#123; it &#125;&#125; <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">      &#123;% endfor %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<blockquote>\n<p>  前端表单 =》 后端</p>\n</blockquote>\n<p>py:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, render_template, request</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span>():</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span>, methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>) </span><span class=\"comment\"># 注意：将方法改为post</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span>():</span></span><br><span class=\"line\">    username = request.form.get(<span class=\"string\">&#x27;uname&#x27;</span>)  <span class=\"comment\"># 获取表单的 固定写法</span></span><br><span class=\"line\">    psw = request.form.get(<span class=\"string\">&#x27;upsw&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> username == <span class=\"string\">&#x27;abc&#x27;</span> <span class=\"keyword\">and</span> psw == <span class=\"string\">&#x27;123&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;登录成功&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"comment\">#登录失败，则重新加载页面，并返回一句话，这句话在前端用&#123;&#123; 变量名&#125;&#125; 来显示</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>, msg=<span class=\"string\">&#x27;登录失败&#x27;</span>) </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/pic&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pic</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;pic&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>html：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;zh&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;/login&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">        用户名：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;uname&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;uname&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        密码：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;upsw&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;upsw&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        &#123;&#123;msg&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"HTML-笔记","_content":"\n# HTML—入门笔记\n[toc]\n\n## 1. html 的基本结构\n### 1.1 整体结构【骨架】\n```markup\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Document</title>\n</head>\n<body>\n        <!--正文-->\n</body>\n</html>\n```\n### 1.2 head 标签\n通常只在 head标签中放 以下 几种 标签\n\n+  title\n+  meta\n+  link\n+  style\n+  script\n+  base\n\n### 1.3 页面中文编码的设置\n\n```markup\n<meta charset=\"UTF-8\">\n```\n### 1.4 meta 标签\n> meta 标签一般用于存放提供给 搜索引擎爬虫 看的信息，如：页面关键字，页面描述\n\n#### 1.4.1 meta 标签的重要属性 — name属性（页面关键字 + 页面描述）\n\n```markup\n<head>    \n    <!--网页关键字-->\n    \t<meta  name=\"keywords\" content=\"绿叶学习网\"/>\n    \n    <!--网页描述-->\n    \t<meta  name=\"description\" content=\"绿叶学习网是一个富有活力的技术学习网站\"/>\n    \n    <!--本页作者-->\n    \t<meta  name=\"author\" content=\"helicopter\">\n    \n    <!--版权声明-->\n    \t<meta  name=\"copyright\" content=\"本站所有教程均为原创，版权所有，禁止转载。否则将追究法律责任。\"/>\n</head>\n```\n#### 1.4.2 meta 标签的重要属性—— http-equiv属性（ 页面编码 +  刷新跳转）\n\n```markup\n<head>\n\t<!-- 定义页面页面编码 -->\n\t\t<meta  http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"/>\n\t\t\n\t\t\n\t<!-- 定义页面刷新跳转( 6 秒后跳转到百度) -->\t\n    \t<meta  http-equiv=\"refresh\" content=\"6;url=https:/www.baidu.com\"/>\n</head>\n```\n### 1.5 style 标签 —— 用于设置样式\n**样式优先级：** [从   高  => 低]\n- ! import\n- 行内样式\n-  style标签内的样式 \n- link外联的样式\n\n```markup\n<head>        \n     <style>\n\t\t\t/* 样式 */\n     </style>\n</head>\n```\n### 1.6 script 标签 \n用于写 JavaScript 代码（或导入外部 JS文件），为提高页面加载速度，一般放在页面末尾\n\n### 1.7 link 标签—— 用于导入外部的 css 文件\n\n```markup\n<head>        \n     <!-- 导入 CSS 文件 -->\n       <link rel=\"stylesheet\" href=\"./abc.css\">    \t\n</head>\n```\n### 1.8 body标签 \n用于存放正文\n\n## 2. 文本标签 （常用）\n### 2.1 标题标签（h1~ h6）\n\n```markup\n<body>\n        <h1>hello</h1>\n        <h2>hello</h2>\n        <h3>hello</h3>\n        <h4>hello</h4>\n        <h5>hello</h5>\n        <h6>hello</h6>\n</body>\n```\n### 2.2  段落（ p ）\n\n```markup\n<body>\n        <p>这是一个段落，是一个块级元素 </p>      \n</body>\n```\n### 2.3 换行（ br)\n\n```markup\n<body>\n\t <!-- 换行 -->\n       \t\t<span>这是一个行内元素 </span><br/><span>这是一个行内元素 </span>         \n        \n    <!-- 注意：如果换行写 br标签，则需要将 p 的font-size改为0，否则除了产生换行效果外，还会产生多余的空格 --> \n            <p>\n                <span>这是一个段落，是一个行内元素 </span>\n                <br/>\n                <span>这是一个段落，是一个行内元素 </span>\n            </p>        \n</body>\n```\n### 2.4 水平线（hr）\n\n```markup\n<body>\n\t <!-- 在两个段落间会产生1条水平线 -->\n        <p>这是一个段落，是一个块级元素 </p>        \n        <hr/>        \n        <p>这是一个段落，是一个块级元素 </p>\n</body>\n```\n### 2.5 转义字符（常用部分）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208134802853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 2.6 div (块标签)和 span （行内标签）\n主要存放 元素，只是容器，没有什么效果\n\n### 2.7 文本修饰样式（常用）\n+ font-family    ：  字体   【如：Arial, Helvetica, sans-serif  】\n+ font-size        ： 字号     【 如： 30px ，1em(1个中文字符大小)  ,1en(1个英文字符大小)  】\n+ font-weight  ：  字重（加粗程度）【 100-300 细 ；400-600 中等 ；700-900 粗】\n+ font-style:     ：  倾斜程度   【italic  或 oblique】\n+ text-indent: ;      缩进           【如： 30px】\n+ text-align       :     对齐方式     【 left  ,  right ,center 】\n+ text-decoration : 下划线，删除线，上划线  【 underline  ，line-through  ，overline】\n+ text-transform: 英文大小写转换          【capitalize，uppercase，lowercase】\n\n```markup\n <span \n \tstyle=\"font-size: 30px;\n \t\t   font-weight: 900;\n \t\t   font-family: Arial, Helvetica, sans-serif;\n \t\t   font-style: italic;\n \t\t   text-decoration: overline;\"\n \t\t   >这是一个和span\n </span>\n```\n## 3. 图片、音频、视频\n### 3.1 图片（img）\n属性：\n\n+ src  : 图片路径\n+ alt   : 图片无法显示时的代替文字\n+ title : 鼠标悬浮在图片上时跳出的文字\n+ width ：宽度（px）\n+ height：高度（px）\n\n```markup\n<img src=\"images/car1.jpg\" alt=\"小车图片无法显示\" title=\"小车图片\" width=\"100px\" height=\"100px\" />\n```\n\n### 3.2 音频+视频（ embed ，html5新增）\n\n```markup\n<!-- 插入音频 -->\n\t<embed src=\"./media/西班牙舞曲.mp3\" width=\"400px\" height=\"80px\"/>\n\n<!-- 插入视频 -->\n\t<embed src=\"./media/小苹果.mp4\" width=\"400px\" height=\"80px\"/>\n```\n### 3.3 视频（video）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208135318724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n```markup\n<video width=\"320\" height=\"240\" controls>\n    <source src=\"movie.mp4\" type=\"video/mp4\">\n    <source src=\"movie.ogg\" type=\"video/ogg\">\n    您的浏览器不支持 video 标签。\n</video>\n```\n## 4. 盒子模型\n### 4.1 margin-border-padding-content\n前三个都支持 **上下左右**  4个方向 单独设置\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208135504124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 4.2 box-sizing(盒模型的大小设置)：\n#### 4.2.1 box-sizing  :border-box   \n > IE盒模型，设置padding时，padding 往里面挤，不会撑大盒子\n\n\n#### 4.2.2 box-sizing  :content-box    \n> 默认的盒模型，设置padding时，padding 往外面撑，会撑大盒子\n\n## 5. 标题的图标\n### 5.1  在网页标题左侧显示\n\n```markup\n<link rel=\"icon\" href=\"图标地址\" type=\"image/x-icon\">\n```\n\n### 5.2  在收藏夹显示图标\n\n```markup\n <link rel=\"shortcut icon\" href=\"图标地址\" type=\"image/x-icon\"> \n```\n## 6. 表格\n- tr : 行;\n- td: 单元格 ； \n- th: 表头单元格;\n\ntable的常用属性： \n-  cellpadding：单元格内边距   ；\n-  cellspacing：单元格间距\n### 6.1 表格-实例1\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208140427220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n```markup\n<table border=\"1\">\n\t\t<caption>表格标题</caption>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>（表头）表格每一列的标题</th>\n\t\t\t\t<th>（表头）表格每一列的标题</th>\n\t\t\t\t<th>（表头）表格每一列的标题</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td>data</td>\n\t\t\t\t<td>data</td>\n\t\t\t\t<td>data</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t\t<tfoot>\n\t\t\t<tr>\n\t\t\t\t<td>表尾</td>\n\t\t\t\t<td>表尾</td>\n\t\t\t\t<td>表尾</td>\n\t\t\t</tr>\n\t\t</tfoot>\n</table>\n```\n**单元格合并（colspan ，x轴单元格减少）**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120814051417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n```markup\n<table border=\"1\">\n\t\t<tr>\n\t\t\t<td  colspan=\"2\">这是colspan</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>data</td>\n\t\t\t<td>data</td>\n\t\t</tr>\n</table>\n```\n\n**单元格合并（rowspan ，y轴单元格减少）**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208140550543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n```markup\n<table border=\"1\">\n\t\t<tr>\n\t\t\t<td  rowspan=\"2\" >这是rowspan</td>\n\t\t\t<td>data</td>\n\t\t</tr>\n\t\t<tr>\t\t\t\n\t\t\t<td>data</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>data</td>\n\t\t\t<td>data</td>\n\t\t</tr>\n</table>\n```\n## 7. 有序列表（ol + li）\n无论是 ul 还是 ol  内部第一层必须是 li\n\n- 实例1：默认ol ， 默认type:1\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208140933384.png)\n实例2\n修改type属性值：\n- 1\n- a\n- A\n- i\n- I\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208141037242.png)\n\n```markup\n    <ol type=\"A\">\n         <li>first</li>\n         <li>second</li>\n         <li>third</li>\n    </ol>\n```\n## 8. 无序列表\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208141407277.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n```markup\n//默认，实心圆\n<ul type=\"disc\">\n\t<li>Coffee</li>\n\t<li>Milk</li>\n</ul>\n\n\n//空心圆\n<ul type=\"circle\">\n\t<li>Coffee</li>\n\t<li>Milk</li>\n</ul>\n\n//正方形\n<ul type=\"square\">\n\t<li>Coffee</li>\n\t<li>Milk</li>\n</ul>\n```\n## 9. 定义列表（dl+dt/dd  ,层级列表，会缩进）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208141455567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n```markup\n<dl>\n\t\t<dt>动物</dt>\n\t\t<dd>猴子</dd>\n\t\t<dd>狗</dd>\n</dl>\n```\n## 10. datalist\n常与其他表单控件连用\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208141630583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n```markup\n\t<input type=\"search\" list=\"id1\">\n\t<datalist id=\"id1\">\n\t\t<option value=\"hello\"></option>\n\t\t<option value=\"world\"></option>\n\t</datalist>\n```\n## 11. 常用 表单标签\n- 所有表单标签都要写在`<form> </form>`内\n\n```markup\n<form >\n 单行文本框：<input type=\"text\" name=\"firstname\"> <br>\n \n 多行文本框：<textarea rows=\"10\" cols=\"30\">123</textarea> <br>\n \n 密码框：<input type=\"password\" name=\"pwd\"> <br>\n \n 普通按钮: <input type=\"button\" name=\"btn\" onclick=\"click_me()\"> <br>\n \n 单选按钮: <input type=\"radio\" name=\"sex\" value=\"male\">Male <br>\n\t\t  <input type=\"radio\" name=\"sex\" value=\"female\">Female <br>\n\t\t  \n 复选框：   <input type=\"checkbox\" checked name=\"vehicle\" value=\"Bike\">bike <br>\n\t\t   <input type=\"checkbox\" name=\"vehicle\" value=\"Car\">car <br>\n\t\t   \n 提交按钮：  <input type=\"submit\" value=\"Submit\">\n\n 下拉列表：\n \t\t\t<select>\n    \t\t\t<option value=\"volvo\">小浩</option>\n    \t\t\t<option value=\"saab\">小白</option>\n    \t\t\t<option value=\"mercedes\">小李</option>\n    \t\t\t<option value=\"audi\">小张</option>\n\t\t\t</select>\n\t\t\t\n 重置：<input type=\"reset\" name=\"button\" id=\"button\" value=\"重置\">\n</form>\n```\n\n## 12. 时间（input类型）：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208141715713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n```markup\n\t月份：<input type=\"month\" name=\"\" id=\"\"><br>\n\t\n\t星期：<input type=\"week\" name=\"\" id=\"\"><br>\n\t\n\t日期：<input type=\"date\" name=\"\" id=\"\"><br>\n\t\n\t时间：<input type=\"time\" name=\"\" id=\"\"><br>\n```\n## 13. 范围\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208141927516.png)\n\n```markup\n<input type=\"range\">\n```\n## 14. 进度条\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208142022113.png)\n```markup\n<progress value=\"80\" max=\"100\" min=\"0\"></progress>\n```\n\n","source":"_posts/HTML-入门笔记.md","raw":"---\ntitle: HTML-笔记\ntag: HTML\ncategories:\n  - [前端,基础]\n  - [前端,HTML]\n---\n\n# HTML—入门笔记\n[toc]\n\n## 1. html 的基本结构\n### 1.1 整体结构【骨架】\n```markup\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Document</title>\n</head>\n<body>\n        <!--正文-->\n</body>\n</html>\n```\n### 1.2 head 标签\n通常只在 head标签中放 以下 几种 标签\n\n+  title\n+  meta\n+  link\n+  style\n+  script\n+  base\n\n### 1.3 页面中文编码的设置\n\n```markup\n<meta charset=\"UTF-8\">\n```\n### 1.4 meta 标签\n> meta 标签一般用于存放提供给 搜索引擎爬虫 看的信息，如：页面关键字，页面描述\n\n#### 1.4.1 meta 标签的重要属性 — name属性（页面关键字 + 页面描述）\n\n```markup\n<head>    \n    <!--网页关键字-->\n    \t<meta  name=\"keywords\" content=\"绿叶学习网\"/>\n    \n    <!--网页描述-->\n    \t<meta  name=\"description\" content=\"绿叶学习网是一个富有活力的技术学习网站\"/>\n    \n    <!--本页作者-->\n    \t<meta  name=\"author\" content=\"helicopter\">\n    \n    <!--版权声明-->\n    \t<meta  name=\"copyright\" content=\"本站所有教程均为原创，版权所有，禁止转载。否则将追究法律责任。\"/>\n</head>\n```\n#### 1.4.2 meta 标签的重要属性—— http-equiv属性（ 页面编码 +  刷新跳转）\n\n```markup\n<head>\n\t<!-- 定义页面页面编码 -->\n\t\t<meta  http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"/>\n\t\t\n\t\t\n\t<!-- 定义页面刷新跳转( 6 秒后跳转到百度) -->\t\n    \t<meta  http-equiv=\"refresh\" content=\"6;url=https:/www.baidu.com\"/>\n</head>\n```\n### 1.5 style 标签 —— 用于设置样式\n**样式优先级：** [从   高  => 低]\n- ! import\n- 行内样式\n-  style标签内的样式 \n- link外联的样式\n\n```markup\n<head>        \n     <style>\n\t\t\t/* 样式 */\n     </style>\n</head>\n```\n### 1.6 script 标签 \n用于写 JavaScript 代码（或导入外部 JS文件），为提高页面加载速度，一般放在页面末尾\n\n### 1.7 link 标签—— 用于导入外部的 css 文件\n\n```markup\n<head>        \n     <!-- 导入 CSS 文件 -->\n       <link rel=\"stylesheet\" href=\"./abc.css\">    \t\n</head>\n```\n### 1.8 body标签 \n用于存放正文\n\n## 2. 文本标签 （常用）\n### 2.1 标题标签（h1~ h6）\n\n```markup\n<body>\n        <h1>hello</h1>\n        <h2>hello</h2>\n        <h3>hello</h3>\n        <h4>hello</h4>\n        <h5>hello</h5>\n        <h6>hello</h6>\n</body>\n```\n### 2.2  段落（ p ）\n\n```markup\n<body>\n        <p>这是一个段落，是一个块级元素 </p>      \n</body>\n```\n### 2.3 换行（ br)\n\n```markup\n<body>\n\t <!-- 换行 -->\n       \t\t<span>这是一个行内元素 </span><br/><span>这是一个行内元素 </span>         \n        \n    <!-- 注意：如果换行写 br标签，则需要将 p 的font-size改为0，否则除了产生换行效果外，还会产生多余的空格 --> \n            <p>\n                <span>这是一个段落，是一个行内元素 </span>\n                <br/>\n                <span>这是一个段落，是一个行内元素 </span>\n            </p>        \n</body>\n```\n### 2.4 水平线（hr）\n\n```markup\n<body>\n\t <!-- 在两个段落间会产生1条水平线 -->\n        <p>这是一个段落，是一个块级元素 </p>        \n        <hr/>        \n        <p>这是一个段落，是一个块级元素 </p>\n</body>\n```\n### 2.5 转义字符（常用部分）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208134802853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 2.6 div (块标签)和 span （行内标签）\n主要存放 元素，只是容器，没有什么效果\n\n### 2.7 文本修饰样式（常用）\n+ font-family    ：  字体   【如：Arial, Helvetica, sans-serif  】\n+ font-size        ： 字号     【 如： 30px ，1em(1个中文字符大小)  ,1en(1个英文字符大小)  】\n+ font-weight  ：  字重（加粗程度）【 100-300 细 ；400-600 中等 ；700-900 粗】\n+ font-style:     ：  倾斜程度   【italic  或 oblique】\n+ text-indent: ;      缩进           【如： 30px】\n+ text-align       :     对齐方式     【 left  ,  right ,center 】\n+ text-decoration : 下划线，删除线，上划线  【 underline  ，line-through  ，overline】\n+ text-transform: 英文大小写转换          【capitalize，uppercase，lowercase】\n\n```markup\n <span \n \tstyle=\"font-size: 30px;\n \t\t   font-weight: 900;\n \t\t   font-family: Arial, Helvetica, sans-serif;\n \t\t   font-style: italic;\n \t\t   text-decoration: overline;\"\n \t\t   >这是一个和span\n </span>\n```\n## 3. 图片、音频、视频\n### 3.1 图片（img）\n属性：\n\n+ src  : 图片路径\n+ alt   : 图片无法显示时的代替文字\n+ title : 鼠标悬浮在图片上时跳出的文字\n+ width ：宽度（px）\n+ height：高度（px）\n\n```markup\n<img src=\"images/car1.jpg\" alt=\"小车图片无法显示\" title=\"小车图片\" width=\"100px\" height=\"100px\" />\n```\n\n### 3.2 音频+视频（ embed ，html5新增）\n\n```markup\n<!-- 插入音频 -->\n\t<embed src=\"./media/西班牙舞曲.mp3\" width=\"400px\" height=\"80px\"/>\n\n<!-- 插入视频 -->\n\t<embed src=\"./media/小苹果.mp4\" width=\"400px\" height=\"80px\"/>\n```\n### 3.3 视频（video）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208135318724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n```markup\n<video width=\"320\" height=\"240\" controls>\n    <source src=\"movie.mp4\" type=\"video/mp4\">\n    <source src=\"movie.ogg\" type=\"video/ogg\">\n    您的浏览器不支持 video 标签。\n</video>\n```\n## 4. 盒子模型\n### 4.1 margin-border-padding-content\n前三个都支持 **上下左右**  4个方向 单独设置\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208135504124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 4.2 box-sizing(盒模型的大小设置)：\n#### 4.2.1 box-sizing  :border-box   \n > IE盒模型，设置padding时，padding 往里面挤，不会撑大盒子\n\n\n#### 4.2.2 box-sizing  :content-box    \n> 默认的盒模型，设置padding时，padding 往外面撑，会撑大盒子\n\n## 5. 标题的图标\n### 5.1  在网页标题左侧显示\n\n```markup\n<link rel=\"icon\" href=\"图标地址\" type=\"image/x-icon\">\n```\n\n### 5.2  在收藏夹显示图标\n\n```markup\n <link rel=\"shortcut icon\" href=\"图标地址\" type=\"image/x-icon\"> \n```\n## 6. 表格\n- tr : 行;\n- td: 单元格 ； \n- th: 表头单元格;\n\ntable的常用属性： \n-  cellpadding：单元格内边距   ；\n-  cellspacing：单元格间距\n### 6.1 表格-实例1\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208140427220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n```markup\n<table border=\"1\">\n\t\t<caption>表格标题</caption>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>（表头）表格每一列的标题</th>\n\t\t\t\t<th>（表头）表格每一列的标题</th>\n\t\t\t\t<th>（表头）表格每一列的标题</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td>data</td>\n\t\t\t\t<td>data</td>\n\t\t\t\t<td>data</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t\t<tfoot>\n\t\t\t<tr>\n\t\t\t\t<td>表尾</td>\n\t\t\t\t<td>表尾</td>\n\t\t\t\t<td>表尾</td>\n\t\t\t</tr>\n\t\t</tfoot>\n</table>\n```\n**单元格合并（colspan ，x轴单元格减少）**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120814051417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n```markup\n<table border=\"1\">\n\t\t<tr>\n\t\t\t<td  colspan=\"2\">这是colspan</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>data</td>\n\t\t\t<td>data</td>\n\t\t</tr>\n</table>\n```\n\n**单元格合并（rowspan ，y轴单元格减少）**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208140550543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n```markup\n<table border=\"1\">\n\t\t<tr>\n\t\t\t<td  rowspan=\"2\" >这是rowspan</td>\n\t\t\t<td>data</td>\n\t\t</tr>\n\t\t<tr>\t\t\t\n\t\t\t<td>data</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>data</td>\n\t\t\t<td>data</td>\n\t\t</tr>\n</table>\n```\n## 7. 有序列表（ol + li）\n无论是 ul 还是 ol  内部第一层必须是 li\n\n- 实例1：默认ol ， 默认type:1\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208140933384.png)\n实例2\n修改type属性值：\n- 1\n- a\n- A\n- i\n- I\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208141037242.png)\n\n```markup\n    <ol type=\"A\">\n         <li>first</li>\n         <li>second</li>\n         <li>third</li>\n    </ol>\n```\n## 8. 无序列表\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208141407277.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n```markup\n//默认，实心圆\n<ul type=\"disc\">\n\t<li>Coffee</li>\n\t<li>Milk</li>\n</ul>\n\n\n//空心圆\n<ul type=\"circle\">\n\t<li>Coffee</li>\n\t<li>Milk</li>\n</ul>\n\n//正方形\n<ul type=\"square\">\n\t<li>Coffee</li>\n\t<li>Milk</li>\n</ul>\n```\n## 9. 定义列表（dl+dt/dd  ,层级列表，会缩进）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208141455567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n```markup\n<dl>\n\t\t<dt>动物</dt>\n\t\t<dd>猴子</dd>\n\t\t<dd>狗</dd>\n</dl>\n```\n## 10. datalist\n常与其他表单控件连用\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208141630583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n```markup\n\t<input type=\"search\" list=\"id1\">\n\t<datalist id=\"id1\">\n\t\t<option value=\"hello\"></option>\n\t\t<option value=\"world\"></option>\n\t</datalist>\n```\n## 11. 常用 表单标签\n- 所有表单标签都要写在`<form> </form>`内\n\n```markup\n<form >\n 单行文本框：<input type=\"text\" name=\"firstname\"> <br>\n \n 多行文本框：<textarea rows=\"10\" cols=\"30\">123</textarea> <br>\n \n 密码框：<input type=\"password\" name=\"pwd\"> <br>\n \n 普通按钮: <input type=\"button\" name=\"btn\" onclick=\"click_me()\"> <br>\n \n 单选按钮: <input type=\"radio\" name=\"sex\" value=\"male\">Male <br>\n\t\t  <input type=\"radio\" name=\"sex\" value=\"female\">Female <br>\n\t\t  \n 复选框：   <input type=\"checkbox\" checked name=\"vehicle\" value=\"Bike\">bike <br>\n\t\t   <input type=\"checkbox\" name=\"vehicle\" value=\"Car\">car <br>\n\t\t   \n 提交按钮：  <input type=\"submit\" value=\"Submit\">\n\n 下拉列表：\n \t\t\t<select>\n    \t\t\t<option value=\"volvo\">小浩</option>\n    \t\t\t<option value=\"saab\">小白</option>\n    \t\t\t<option value=\"mercedes\">小李</option>\n    \t\t\t<option value=\"audi\">小张</option>\n\t\t\t</select>\n\t\t\t\n 重置：<input type=\"reset\" name=\"button\" id=\"button\" value=\"重置\">\n</form>\n```\n\n## 12. 时间（input类型）：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208141715713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n```markup\n\t月份：<input type=\"month\" name=\"\" id=\"\"><br>\n\t\n\t星期：<input type=\"week\" name=\"\" id=\"\"><br>\n\t\n\t日期：<input type=\"date\" name=\"\" id=\"\"><br>\n\t\n\t时间：<input type=\"time\" name=\"\" id=\"\"><br>\n```\n## 13. 范围\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208141927516.png)\n\n```markup\n<input type=\"range\">\n```\n## 14. 进度条\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208142022113.png)\n```markup\n<progress value=\"80\" max=\"100\" min=\"0\"></progress>\n```\n\n","slug":"HTML-入门笔记","published":1,"date":"2021-06-02T02:49:19.120Z","updated":"2021-06-01T07:36:09.353Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs140008lcvdh72odth8","content":"<h1 id=\"HTML—入门笔记\"><a href=\"#HTML—入门笔记\" class=\"headerlink\" title=\"HTML—入门笔记\"></a>HTML—入门笔记</h1><p>[toc]</p>\n<h2 id=\"1-html-的基本结构\"><a href=\"#1-html-的基本结构\" class=\"headerlink\" title=\"1. html 的基本结构\"></a>1. html 的基本结构</h2><h3 id=\"1-1-整体结构【骨架】\"><a href=\"#1-1-整体结构【骨架】\" class=\"headerlink\" title=\"1.1 整体结构【骨架】\"></a>1.1 整体结构【骨架】</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">        &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">        &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">        &lt;!--正文--&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-head-标签\"><a href=\"#1-2-head-标签\" class=\"headerlink\" title=\"1.2 head 标签\"></a>1.2 head 标签</h3><p>通常只在 head标签中放 以下 几种 标签</p>\n<ul>\n<li> title</li>\n<li> meta</li>\n<li> link</li>\n<li> style</li>\n<li> script</li>\n<li> base</li>\n</ul>\n<h3 id=\"1-3-页面中文编码的设置\"><a href=\"#1-3-页面中文编码的设置\" class=\"headerlink\" title=\"1.3 页面中文编码的设置\"></a>1.3 页面中文编码的设置</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-4-meta-标签\"><a href=\"#1-4-meta-标签\" class=\"headerlink\" title=\"1.4 meta 标签\"></a>1.4 meta 标签</h3><blockquote>\n<p>meta 标签一般用于存放提供给 搜索引擎爬虫 看的信息，如：页面关键字，页面描述</p>\n</blockquote>\n<h4 id=\"1-4-1-meta-标签的重要属性-—-name属性（页面关键字-页面描述）\"><a href=\"#1-4-1-meta-标签的重要属性-—-name属性（页面关键字-页面描述）\" class=\"headerlink\" title=\"1.4.1 meta 标签的重要属性 — name属性（页面关键字 + 页面描述）\"></a>1.4.1 meta 标签的重要属性 — name属性（页面关键字 + 页面描述）</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;    </span><br><span class=\"line\">    &lt;!--网页关键字--&gt;</span><br><span class=\"line\">    \t&lt;meta  name=&quot;keywords&quot; content=&quot;绿叶学习网&quot;/&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;!--网页描述--&gt;</span><br><span class=\"line\">    \t&lt;meta  name=&quot;description&quot; content=&quot;绿叶学习网是一个富有活力的技术学习网站&quot;/&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;!--本页作者--&gt;</span><br><span class=\"line\">    \t&lt;meta  name=&quot;author&quot; content=&quot;helicopter&quot;&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;!--版权声明--&gt;</span><br><span class=\"line\">    \t&lt;meta  name=&quot;copyright&quot; content=&quot;本站所有教程均为原创，版权所有，禁止转载。否则将追究法律责任。&quot;/&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-4-2-meta-标签的重要属性——-http-equiv属性（-页面编码-刷新跳转）\"><a href=\"#1-4-2-meta-标签的重要属性——-http-equiv属性（-页面编码-刷新跳转）\" class=\"headerlink\" title=\"1.4.2 meta 标签的重要属性—— http-equiv属性（ 页面编码 +  刷新跳转）\"></a>1.4.2 meta 标签的重要属性—— http-equiv属性（ 页面编码 +  刷新跳转）</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;!-- 定义页面页面编码 --&gt;</span><br><span class=\"line\">\t\t&lt;meta  http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot;/&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;!-- 定义页面刷新跳转( 6 秒后跳转到百度) --&gt;\t</span><br><span class=\"line\">    \t&lt;meta  http-equiv=&quot;refresh&quot; content=&quot;6;url=https:/www.baidu.com&quot;/&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-5-style-标签-——-用于设置样式\"><a href=\"#1-5-style-标签-——-用于设置样式\" class=\"headerlink\" title=\"1.5 style 标签 —— 用于设置样式\"></a>1.5 style 标签 —— 用于设置样式</h3><p><strong>样式优先级：</strong> [从   高  =&gt; 低]</p>\n<ul>\n<li>! import</li>\n<li>行内样式</li>\n<li> style标签内的样式 </li>\n<li>link外联的样式</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;        </span><br><span class=\"line\">     &lt;style&gt;</span><br><span class=\"line\">\t\t\t/* 样式 */</span><br><span class=\"line\">     &lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-6-script-标签\"><a href=\"#1-6-script-标签\" class=\"headerlink\" title=\"1.6 script 标签\"></a>1.6 script 标签</h3><p>用于写 JavaScript 代码（或导入外部 JS文件），为提高页面加载速度，一般放在页面末尾</p>\n<h3 id=\"1-7-link-标签——-用于导入外部的-css-文件\"><a href=\"#1-7-link-标签——-用于导入外部的-css-文件\" class=\"headerlink\" title=\"1.7 link 标签—— 用于导入外部的 css 文件\"></a>1.7 link 标签—— 用于导入外部的 css 文件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;        </span><br><span class=\"line\">     &lt;!-- 导入 CSS 文件 --&gt;</span><br><span class=\"line\">       &lt;link rel=&quot;stylesheet&quot; href=&quot;./abc.css&quot;&gt;    \t</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-8-body标签\"><a href=\"#1-8-body标签\" class=\"headerlink\" title=\"1.8 body标签\"></a>1.8 body标签</h3><p>用于存放正文</p>\n<h2 id=\"2-文本标签-（常用）\"><a href=\"#2-文本标签-（常用）\" class=\"headerlink\" title=\"2. 文本标签 （常用）\"></a>2. 文本标签 （常用）</h2><h3 id=\"2-1-标题标签（h1-h6）\"><a href=\"#2-1-标题标签（h1-h6）\" class=\"headerlink\" title=\"2.1 标题标签（h1~ h6）\"></a>2.1 标题标签（h1~ h6）</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">        &lt;h1&gt;hello&lt;/h1&gt;</span><br><span class=\"line\">        &lt;h2&gt;hello&lt;/h2&gt;</span><br><span class=\"line\">        &lt;h3&gt;hello&lt;/h3&gt;</span><br><span class=\"line\">        &lt;h4&gt;hello&lt;/h4&gt;</span><br><span class=\"line\">        &lt;h5&gt;hello&lt;/h5&gt;</span><br><span class=\"line\">        &lt;h6&gt;hello&lt;/h6&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-段落（-p-）\"><a href=\"#2-2-段落（-p-）\" class=\"headerlink\" title=\"2.2  段落（ p ）\"></a>2.2  段落（ p ）</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">        &lt;p&gt;这是一个段落，是一个块级元素 &lt;/p&gt;      </span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-换行（-br\"><a href=\"#2-3-换行（-br\" class=\"headerlink\" title=\"2.3 换行（ br)\"></a>2.3 换行（ br)</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t &lt;!-- 换行 --&gt;</span><br><span class=\"line\">       \t\t&lt;span&gt;这是一个行内元素 &lt;/span&gt;&lt;br/&gt;&lt;span&gt;这是一个行内元素 &lt;/span&gt;         </span><br><span class=\"line\">        </span><br><span class=\"line\">    &lt;!-- 注意：如果换行写 br标签，则需要将 p 的font-size改为0，否则除了产生换行效果外，还会产生多余的空格 --&gt; </span><br><span class=\"line\">            &lt;p&gt;</span><br><span class=\"line\">                &lt;span&gt;这是一个段落，是一个行内元素 &lt;/span&gt;</span><br><span class=\"line\">                &lt;br/&gt;</span><br><span class=\"line\">                &lt;span&gt;这是一个段落，是一个行内元素 &lt;/span&gt;</span><br><span class=\"line\">            &lt;/p&gt;        </span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-4-水平线（hr）\"><a href=\"#2-4-水平线（hr）\" class=\"headerlink\" title=\"2.4 水平线（hr）\"></a>2.4 水平线（hr）</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t &lt;!-- 在两个段落间会产生1条水平线 --&gt;</span><br><span class=\"line\">        &lt;p&gt;这是一个段落，是一个块级元素 &lt;/p&gt;        </span><br><span class=\"line\">        &lt;hr/&gt;        </span><br><span class=\"line\">        &lt;p&gt;这是一个段落，是一个块级元素 &lt;/p&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-5-转义字符（常用部分）\"><a href=\"#2-5-转义字符（常用部分）\" class=\"headerlink\" title=\"2.5 转义字符（常用部分）\"></a>2.5 转义字符（常用部分）</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208134802853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-6-div-块标签-和-span-（行内标签）\"><a href=\"#2-6-div-块标签-和-span-（行内标签）\" class=\"headerlink\" title=\"2.6 div (块标签)和 span （行内标签）\"></a>2.6 div (块标签)和 span （行内标签）</h3><p>主要存放 元素，只是容器，没有什么效果</p>\n<h3 id=\"2-7-文本修饰样式（常用）\"><a href=\"#2-7-文本修饰样式（常用）\" class=\"headerlink\" title=\"2.7 文本修饰样式（常用）\"></a>2.7 文本修饰样式（常用）</h3><ul>\n<li>font-family    ：  字体   【如：Arial, Helvetica, sans-serif  】</li>\n<li>font-size        ： 字号     【 如： 30px ，1em(1个中文字符大小)  ,1en(1个英文字符大小)  】</li>\n<li>font-weight  ：  字重（加粗程度）【 100-300 细 ；400-600 中等 ；700-900 粗】</li>\n<li>font-style:     ：  倾斜程度   【italic  或 oblique】</li>\n<li>text-indent: ;      缩进           【如： 30px】</li>\n<li>text-align       :     对齐方式     【 left  ,  right ,center 】</li>\n<li>text-decoration : 下划线，删除线，上划线  【 underline  ，line-through  ，overline】</li>\n<li>text-transform: 英文大小写转换          【capitalize，uppercase，lowercase】</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;span </span><br><span class=\"line\">\tstyle=&quot;font-size: 30px;</span><br><span class=\"line\">\t\t   font-weight: 900;</span><br><span class=\"line\">\t\t   font-family: Arial, Helvetica, sans-serif;</span><br><span class=\"line\">\t\t   font-style: italic;</span><br><span class=\"line\">\t\t   text-decoration: overline;&quot;</span><br><span class=\"line\">\t\t   &gt;这是一个和span</span><br><span class=\"line\">&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-图片、音频、视频\"><a href=\"#3-图片、音频、视频\" class=\"headerlink\" title=\"3. 图片、音频、视频\"></a>3. 图片、音频、视频</h2><h3 id=\"3-1-图片（img）\"><a href=\"#3-1-图片（img）\" class=\"headerlink\" title=\"3.1 图片（img）\"></a>3.1 图片（img）</h3><p>属性：</p>\n<ul>\n<li>src  : 图片路径</li>\n<li>alt   : 图片无法显示时的代替文字</li>\n<li>title : 鼠标悬浮在图片上时跳出的文字</li>\n<li>width ：宽度（px）</li>\n<li>height：高度（px）</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;images/car1.jpg&quot; alt=&quot;小车图片无法显示&quot; title=&quot;小车图片&quot; width=&quot;100px&quot; height=&quot;100px&quot; /&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-音频-视频（-embed-，html5新增）\"><a href=\"#3-2-音频-视频（-embed-，html5新增）\" class=\"headerlink\" title=\"3.2 音频+视频（ embed ，html5新增）\"></a>3.2 音频+视频（ embed ，html5新增）</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 插入音频 --&gt;</span><br><span class=\"line\">\t&lt;embed src=&quot;./media/西班牙舞曲.mp3&quot; width=&quot;400px&quot; height=&quot;80px&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 插入视频 --&gt;</span><br><span class=\"line\">\t&lt;embed src=&quot;./media/小苹果.mp4&quot; width=&quot;400px&quot; height=&quot;80px&quot;/&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-视频（video）\"><a href=\"#3-3-视频（video）\" class=\"headerlink\" title=\"3.3 视频（video）\"></a>3.3 视频（video）</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208135318724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;video width=&quot;320&quot; height=&quot;240&quot; controls&gt;</span><br><span class=\"line\">    &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;</span><br><span class=\"line\">    &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;</span><br><span class=\"line\">    您的浏览器不支持 video 标签。</span><br><span class=\"line\">&lt;/video&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-盒子模型\"><a href=\"#4-盒子模型\" class=\"headerlink\" title=\"4. 盒子模型\"></a>4. 盒子模型</h2><h3 id=\"4-1-margin-border-padding-content\"><a href=\"#4-1-margin-border-padding-content\" class=\"headerlink\" title=\"4.1 margin-border-padding-content\"></a>4.1 margin-border-padding-content</h3><p>前三个都支持 <strong>上下左右</strong>  4个方向 单独设置<br><img src=\"https://img-blog.csdnimg.cn/20201208135504124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-2-box-sizing-盒模型的大小设置-：\"><a href=\"#4-2-box-sizing-盒模型的大小设置-：\" class=\"headerlink\" title=\"4.2 box-sizing(盒模型的大小设置)：\"></a>4.2 box-sizing(盒模型的大小设置)：</h3><h4 id=\"4-2-1-box-sizing-border-box\"><a href=\"#4-2-1-box-sizing-border-box\" class=\"headerlink\" title=\"4.2.1 box-sizing  :border-box\"></a>4.2.1 box-sizing  :border-box</h4><blockquote>\n<p>IE盒模型，设置padding时，padding 往里面挤，不会撑大盒子</p>\n</blockquote>\n<h4 id=\"4-2-2-box-sizing-content-box\"><a href=\"#4-2-2-box-sizing-content-box\" class=\"headerlink\" title=\"4.2.2 box-sizing  :content-box\"></a>4.2.2 box-sizing  :content-box</h4><blockquote>\n<p>默认的盒模型，设置padding时，padding 往外面撑，会撑大盒子</p>\n</blockquote>\n<h2 id=\"5-标题的图标\"><a href=\"#5-标题的图标\" class=\"headerlink\" title=\"5. 标题的图标\"></a>5. 标题的图标</h2><h3 id=\"5-1-在网页标题左侧显示\"><a href=\"#5-1-在网页标题左侧显示\" class=\"headerlink\" title=\"5.1  在网页标题左侧显示\"></a>5.1  在网页标题左侧显示</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;icon&quot; href=&quot;图标地址&quot; type=&quot;image/x-icon&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-在收藏夹显示图标\"><a href=\"#5-2-在收藏夹显示图标\" class=\"headerlink\" title=\"5.2  在收藏夹显示图标\"></a>5.2  在收藏夹显示图标</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;shortcut icon&quot; href=&quot;图标地址&quot; type=&quot;image/x-icon&quot;&gt; </span><br></pre></td></tr></table></figure>\n<h2 id=\"6-表格\"><a href=\"#6-表格\" class=\"headerlink\" title=\"6. 表格\"></a>6. 表格</h2><ul>\n<li>tr : 行;</li>\n<li>td: 单元格 ； </li>\n<li>th: 表头单元格;</li>\n</ul>\n<p>table的常用属性： </p>\n<ul>\n<li> cellpadding：单元格内边距   ；</li>\n<li> cellspacing：单元格间距<h3 id=\"6-1-表格-实例1\"><a href=\"#6-1-表格-实例1\" class=\"headerlink\" title=\"6.1 表格-实例1\"></a>6.1 表格-实例1</h3><img src=\"https://img-blog.csdnimg.cn/20201208140427220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;table border=&quot;1&quot;&gt;</span><br><span class=\"line\">\t\t&lt;caption&gt;表格标题&lt;/caption&gt;</span><br><span class=\"line\">\t\t&lt;thead&gt;</span><br><span class=\"line\">\t\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;（表头）表格每一列的标题&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;（表头）表格每一列的标题&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;（表头）表格每一列的标题&lt;/th&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;/thead&gt;</span><br><span class=\"line\">\t\t&lt;tbody&gt;</span><br><span class=\"line\">\t\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;/tbody&gt;</span><br><span class=\"line\">\t\t&lt;tfoot&gt;</span><br><span class=\"line\">\t\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t\t&lt;td&gt;表尾&lt;/td&gt;</span><br><span class=\"line\">\t\t\t\t&lt;td&gt;表尾&lt;/td&gt;</span><br><span class=\"line\">\t\t\t\t&lt;td&gt;表尾&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;/tfoot&gt;</span><br><span class=\"line\">&lt;/table&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>单元格合并（colspan ，x轴单元格减少）</strong><br><img src=\"https://img-blog.csdnimg.cn/2020120814051417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;table border=&quot;1&quot;&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td  colspan=&quot;2&quot;&gt;这是colspan&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">&lt;/table&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>单元格合并（rowspan ，y轴单元格减少）</strong><br><img src=\"https://img-blog.csdnimg.cn/20201208140550543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;table border=&quot;1&quot;&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td  rowspan=&quot;2&quot; &gt;这是rowspan&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;\t\t\t</span><br><span class=\"line\">\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">&lt;/table&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-有序列表（ol-li）\"><a href=\"#7-有序列表（ol-li）\" class=\"headerlink\" title=\"7. 有序列表（ol + li）\"></a>7. 有序列表（ol + li）</h2><p>无论是 ul 还是 ol  内部第一层必须是 li</p>\n<ul>\n<li>实例1：默认ol ， 默认type:1<br><img src=\"https://img-blog.csdnimg.cn/20201208140933384.png\" alt=\"在这里插入图片描述\"><br>实例2<br>修改type属性值：</li>\n<li>1</li>\n<li>a</li>\n<li>A</li>\n<li>i</li>\n<li>I<br><img src=\"https://img-blog.csdnimg.cn/20201208141037242.png\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ol type=&quot;A&quot;&gt;</span><br><span class=\"line\">     &lt;li&gt;first&lt;/li&gt;</span><br><span class=\"line\">     &lt;li&gt;second&lt;/li&gt;</span><br><span class=\"line\">     &lt;li&gt;third&lt;/li&gt;</span><br><span class=\"line\">&lt;/ol&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-无序列表\"><a href=\"#8-无序列表\" class=\"headerlink\" title=\"8. 无序列表\"></a>8. 无序列表</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208141407277.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//默认，实心圆</span><br><span class=\"line\">&lt;ul type=&quot;disc&quot;&gt;</span><br><span class=\"line\">\t&lt;li&gt;Coffee&lt;/li&gt;</span><br><span class=\"line\">\t&lt;li&gt;Milk&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//空心圆</span><br><span class=\"line\">&lt;ul type=&quot;circle&quot;&gt;</span><br><span class=\"line\">\t&lt;li&gt;Coffee&lt;/li&gt;</span><br><span class=\"line\">\t&lt;li&gt;Milk&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">//正方形</span><br><span class=\"line\">&lt;ul type=&quot;square&quot;&gt;</span><br><span class=\"line\">\t&lt;li&gt;Coffee&lt;/li&gt;</span><br><span class=\"line\">\t&lt;li&gt;Milk&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"9-定义列表（dl-dt-dd-层级列表，会缩进）\"><a href=\"#9-定义列表（dl-dt-dd-层级列表，会缩进）\" class=\"headerlink\" title=\"9. 定义列表（dl+dt/dd  ,层级列表，会缩进）\"></a>9. 定义列表（dl+dt/dd  ,层级列表，会缩进）</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208141455567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dl&gt;</span><br><span class=\"line\">\t\t&lt;dt&gt;动物&lt;/dt&gt;</span><br><span class=\"line\">\t\t&lt;dd&gt;猴子&lt;/dd&gt;</span><br><span class=\"line\">\t\t&lt;dd&gt;狗&lt;/dd&gt;</span><br><span class=\"line\">&lt;/dl&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-datalist\"><a href=\"#10-datalist\" class=\"headerlink\" title=\"10. datalist\"></a>10. datalist</h2><p>常与其他表单控件连用<br><img src=\"https://img-blog.csdnimg.cn/20201208141630583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=&quot;search&quot; list=&quot;id1&quot;&gt;</span><br><span class=\"line\">&lt;datalist id=&quot;id1&quot;&gt;</span><br><span class=\"line\">\t&lt;option value=&quot;hello&quot;&gt;&lt;/option&gt;</span><br><span class=\"line\">\t&lt;option value=&quot;world&quot;&gt;&lt;/option&gt;</span><br><span class=\"line\">&lt;/datalist&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"11-常用-表单标签\"><a href=\"#11-常用-表单标签\" class=\"headerlink\" title=\"11. 常用 表单标签\"></a>11. 常用 表单标签</h2><ul>\n<li>所有表单标签都要写在<code>&lt;form&gt; &lt;/form&gt;</code>内</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;form &gt;</span><br><span class=\"line\"> 单行文本框：&lt;input type=&quot;text&quot; name=&quot;firstname&quot;&gt; &lt;br&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\"> 多行文本框：&lt;textarea rows=&quot;10&quot; cols=&quot;30&quot;&gt;123&lt;/textarea&gt; &lt;br&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\"> 密码框：&lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;br&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\"> 普通按钮: &lt;input type=&quot;button&quot; name=&quot;btn&quot; onclick=&quot;click_me()&quot;&gt; &lt;br&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\"> 单选按钮: &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot;&gt;Male &lt;br&gt;</span><br><span class=\"line\">\t\t  &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot;&gt;Female &lt;br&gt;</span><br><span class=\"line\">\t\t  </span><br><span class=\"line\"> 复选框：   &lt;input type=&quot;checkbox&quot; checked name=&quot;vehicle&quot; value=&quot;Bike&quot;&gt;bike &lt;br&gt;</span><br><span class=\"line\">\t\t   &lt;input type=&quot;checkbox&quot; name=&quot;vehicle&quot; value=&quot;Car&quot;&gt;car &lt;br&gt;</span><br><span class=\"line\">\t\t   </span><br><span class=\"line\"> 提交按钮：  &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> 下拉列表：</span><br><span class=\"line\"> \t\t\t&lt;select&gt;</span><br><span class=\"line\">    \t\t\t&lt;option value=&quot;volvo&quot;&gt;小浩&lt;/option&gt;</span><br><span class=\"line\">    \t\t\t&lt;option value=&quot;saab&quot;&gt;小白&lt;/option&gt;</span><br><span class=\"line\">    \t\t\t&lt;option value=&quot;mercedes&quot;&gt;小李&lt;/option&gt;</span><br><span class=\"line\">    \t\t\t&lt;option value=&quot;audi&quot;&gt;小张&lt;/option&gt;</span><br><span class=\"line\">\t\t\t&lt;/select&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\"> 重置：&lt;input type=&quot;reset&quot; name=&quot;button&quot; id=&quot;button&quot; value=&quot;重置&quot;&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12-时间（input类型）：\"><a href=\"#12-时间（input类型）：\" class=\"headerlink\" title=\"12. 时间（input类型）：\"></a>12. 时间（input类型）：</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208141715713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">月份：&lt;input type=&quot;month&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;br&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">星期：&lt;input type=&quot;week&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;br&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">日期：&lt;input type=&quot;date&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;br&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">时间：&lt;input type=&quot;time&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"13-范围\"><a href=\"#13-范围\" class=\"headerlink\" title=\"13. 范围\"></a>13. 范围</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208141927516.png\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=&quot;range&quot;&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"14-进度条\"><a href=\"#14-进度条\" class=\"headerlink\" title=\"14. 进度条\"></a>14. 进度条</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208142022113.png\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;progress value=&quot;80&quot; max=&quot;100&quot; min=&quot;0&quot;&gt;&lt;/progress&gt;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"HTML—入门笔记\"><a href=\"#HTML—入门笔记\" class=\"headerlink\" title=\"HTML—入门笔记\"></a>HTML—入门笔记</h1><p>[toc]</p>\n<h2 id=\"1-html-的基本结构\"><a href=\"#1-html-的基本结构\" class=\"headerlink\" title=\"1. html 的基本结构\"></a>1. html 的基本结构</h2><h3 id=\"1-1-整体结构【骨架】\"><a href=\"#1-1-整体结构【骨架】\" class=\"headerlink\" title=\"1.1 整体结构【骨架】\"></a>1.1 整体结构【骨架】</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">        &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">        &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">        &lt;!--正文--&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-head-标签\"><a href=\"#1-2-head-标签\" class=\"headerlink\" title=\"1.2 head 标签\"></a>1.2 head 标签</h3><p>通常只在 head标签中放 以下 几种 标签</p>\n<ul>\n<li> title</li>\n<li> meta</li>\n<li> link</li>\n<li> style</li>\n<li> script</li>\n<li> base</li>\n</ul>\n<h3 id=\"1-3-页面中文编码的设置\"><a href=\"#1-3-页面中文编码的设置\" class=\"headerlink\" title=\"1.3 页面中文编码的设置\"></a>1.3 页面中文编码的设置</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-4-meta-标签\"><a href=\"#1-4-meta-标签\" class=\"headerlink\" title=\"1.4 meta 标签\"></a>1.4 meta 标签</h3><blockquote>\n<p>meta 标签一般用于存放提供给 搜索引擎爬虫 看的信息，如：页面关键字，页面描述</p>\n</blockquote>\n<h4 id=\"1-4-1-meta-标签的重要属性-—-name属性（页面关键字-页面描述）\"><a href=\"#1-4-1-meta-标签的重要属性-—-name属性（页面关键字-页面描述）\" class=\"headerlink\" title=\"1.4.1 meta 标签的重要属性 — name属性（页面关键字 + 页面描述）\"></a>1.4.1 meta 标签的重要属性 — name属性（页面关键字 + 页面描述）</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;    </span><br><span class=\"line\">    &lt;!--网页关键字--&gt;</span><br><span class=\"line\">    \t&lt;meta  name=&quot;keywords&quot; content=&quot;绿叶学习网&quot;/&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;!--网页描述--&gt;</span><br><span class=\"line\">    \t&lt;meta  name=&quot;description&quot; content=&quot;绿叶学习网是一个富有活力的技术学习网站&quot;/&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;!--本页作者--&gt;</span><br><span class=\"line\">    \t&lt;meta  name=&quot;author&quot; content=&quot;helicopter&quot;&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;!--版权声明--&gt;</span><br><span class=\"line\">    \t&lt;meta  name=&quot;copyright&quot; content=&quot;本站所有教程均为原创，版权所有，禁止转载。否则将追究法律责任。&quot;/&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-4-2-meta-标签的重要属性——-http-equiv属性（-页面编码-刷新跳转）\"><a href=\"#1-4-2-meta-标签的重要属性——-http-equiv属性（-页面编码-刷新跳转）\" class=\"headerlink\" title=\"1.4.2 meta 标签的重要属性—— http-equiv属性（ 页面编码 +  刷新跳转）\"></a>1.4.2 meta 标签的重要属性—— http-equiv属性（ 页面编码 +  刷新跳转）</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;!-- 定义页面页面编码 --&gt;</span><br><span class=\"line\">\t\t&lt;meta  http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot;/&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;!-- 定义页面刷新跳转( 6 秒后跳转到百度) --&gt;\t</span><br><span class=\"line\">    \t&lt;meta  http-equiv=&quot;refresh&quot; content=&quot;6;url=https:/www.baidu.com&quot;/&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-5-style-标签-——-用于设置样式\"><a href=\"#1-5-style-标签-——-用于设置样式\" class=\"headerlink\" title=\"1.5 style 标签 —— 用于设置样式\"></a>1.5 style 标签 —— 用于设置样式</h3><p><strong>样式优先级：</strong> [从   高  =&gt; 低]</p>\n<ul>\n<li>! import</li>\n<li>行内样式</li>\n<li> style标签内的样式 </li>\n<li>link外联的样式</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;        </span><br><span class=\"line\">     &lt;style&gt;</span><br><span class=\"line\">\t\t\t/* 样式 */</span><br><span class=\"line\">     &lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-6-script-标签\"><a href=\"#1-6-script-标签\" class=\"headerlink\" title=\"1.6 script 标签\"></a>1.6 script 标签</h3><p>用于写 JavaScript 代码（或导入外部 JS文件），为提高页面加载速度，一般放在页面末尾</p>\n<h3 id=\"1-7-link-标签——-用于导入外部的-css-文件\"><a href=\"#1-7-link-标签——-用于导入外部的-css-文件\" class=\"headerlink\" title=\"1.7 link 标签—— 用于导入外部的 css 文件\"></a>1.7 link 标签—— 用于导入外部的 css 文件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;        </span><br><span class=\"line\">     &lt;!-- 导入 CSS 文件 --&gt;</span><br><span class=\"line\">       &lt;link rel=&quot;stylesheet&quot; href=&quot;./abc.css&quot;&gt;    \t</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-8-body标签\"><a href=\"#1-8-body标签\" class=\"headerlink\" title=\"1.8 body标签\"></a>1.8 body标签</h3><p>用于存放正文</p>\n<h2 id=\"2-文本标签-（常用）\"><a href=\"#2-文本标签-（常用）\" class=\"headerlink\" title=\"2. 文本标签 （常用）\"></a>2. 文本标签 （常用）</h2><h3 id=\"2-1-标题标签（h1-h6）\"><a href=\"#2-1-标题标签（h1-h6）\" class=\"headerlink\" title=\"2.1 标题标签（h1~ h6）\"></a>2.1 标题标签（h1~ h6）</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">        &lt;h1&gt;hello&lt;/h1&gt;</span><br><span class=\"line\">        &lt;h2&gt;hello&lt;/h2&gt;</span><br><span class=\"line\">        &lt;h3&gt;hello&lt;/h3&gt;</span><br><span class=\"line\">        &lt;h4&gt;hello&lt;/h4&gt;</span><br><span class=\"line\">        &lt;h5&gt;hello&lt;/h5&gt;</span><br><span class=\"line\">        &lt;h6&gt;hello&lt;/h6&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-段落（-p-）\"><a href=\"#2-2-段落（-p-）\" class=\"headerlink\" title=\"2.2  段落（ p ）\"></a>2.2  段落（ p ）</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">        &lt;p&gt;这是一个段落，是一个块级元素 &lt;/p&gt;      </span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-换行（-br\"><a href=\"#2-3-换行（-br\" class=\"headerlink\" title=\"2.3 换行（ br)\"></a>2.3 换行（ br)</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t &lt;!-- 换行 --&gt;</span><br><span class=\"line\">       \t\t&lt;span&gt;这是一个行内元素 &lt;/span&gt;&lt;br/&gt;&lt;span&gt;这是一个行内元素 &lt;/span&gt;         </span><br><span class=\"line\">        </span><br><span class=\"line\">    &lt;!-- 注意：如果换行写 br标签，则需要将 p 的font-size改为0，否则除了产生换行效果外，还会产生多余的空格 --&gt; </span><br><span class=\"line\">            &lt;p&gt;</span><br><span class=\"line\">                &lt;span&gt;这是一个段落，是一个行内元素 &lt;/span&gt;</span><br><span class=\"line\">                &lt;br/&gt;</span><br><span class=\"line\">                &lt;span&gt;这是一个段落，是一个行内元素 &lt;/span&gt;</span><br><span class=\"line\">            &lt;/p&gt;        </span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-4-水平线（hr）\"><a href=\"#2-4-水平线（hr）\" class=\"headerlink\" title=\"2.4 水平线（hr）\"></a>2.4 水平线（hr）</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t &lt;!-- 在两个段落间会产生1条水平线 --&gt;</span><br><span class=\"line\">        &lt;p&gt;这是一个段落，是一个块级元素 &lt;/p&gt;        </span><br><span class=\"line\">        &lt;hr/&gt;        </span><br><span class=\"line\">        &lt;p&gt;这是一个段落，是一个块级元素 &lt;/p&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-5-转义字符（常用部分）\"><a href=\"#2-5-转义字符（常用部分）\" class=\"headerlink\" title=\"2.5 转义字符（常用部分）\"></a>2.5 转义字符（常用部分）</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208134802853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-6-div-块标签-和-span-（行内标签）\"><a href=\"#2-6-div-块标签-和-span-（行内标签）\" class=\"headerlink\" title=\"2.6 div (块标签)和 span （行内标签）\"></a>2.6 div (块标签)和 span （行内标签）</h3><p>主要存放 元素，只是容器，没有什么效果</p>\n<h3 id=\"2-7-文本修饰样式（常用）\"><a href=\"#2-7-文本修饰样式（常用）\" class=\"headerlink\" title=\"2.7 文本修饰样式（常用）\"></a>2.7 文本修饰样式（常用）</h3><ul>\n<li>font-family    ：  字体   【如：Arial, Helvetica, sans-serif  】</li>\n<li>font-size        ： 字号     【 如： 30px ，1em(1个中文字符大小)  ,1en(1个英文字符大小)  】</li>\n<li>font-weight  ：  字重（加粗程度）【 100-300 细 ；400-600 中等 ；700-900 粗】</li>\n<li>font-style:     ：  倾斜程度   【italic  或 oblique】</li>\n<li>text-indent: ;      缩进           【如： 30px】</li>\n<li>text-align       :     对齐方式     【 left  ,  right ,center 】</li>\n<li>text-decoration : 下划线，删除线，上划线  【 underline  ，line-through  ，overline】</li>\n<li>text-transform: 英文大小写转换          【capitalize，uppercase，lowercase】</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;span </span><br><span class=\"line\">\tstyle=&quot;font-size: 30px;</span><br><span class=\"line\">\t\t   font-weight: 900;</span><br><span class=\"line\">\t\t   font-family: Arial, Helvetica, sans-serif;</span><br><span class=\"line\">\t\t   font-style: italic;</span><br><span class=\"line\">\t\t   text-decoration: overline;&quot;</span><br><span class=\"line\">\t\t   &gt;这是一个和span</span><br><span class=\"line\">&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-图片、音频、视频\"><a href=\"#3-图片、音频、视频\" class=\"headerlink\" title=\"3. 图片、音频、视频\"></a>3. 图片、音频、视频</h2><h3 id=\"3-1-图片（img）\"><a href=\"#3-1-图片（img）\" class=\"headerlink\" title=\"3.1 图片（img）\"></a>3.1 图片（img）</h3><p>属性：</p>\n<ul>\n<li>src  : 图片路径</li>\n<li>alt   : 图片无法显示时的代替文字</li>\n<li>title : 鼠标悬浮在图片上时跳出的文字</li>\n<li>width ：宽度（px）</li>\n<li>height：高度（px）</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;images/car1.jpg&quot; alt=&quot;小车图片无法显示&quot; title=&quot;小车图片&quot; width=&quot;100px&quot; height=&quot;100px&quot; /&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-音频-视频（-embed-，html5新增）\"><a href=\"#3-2-音频-视频（-embed-，html5新增）\" class=\"headerlink\" title=\"3.2 音频+视频（ embed ，html5新增）\"></a>3.2 音频+视频（ embed ，html5新增）</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 插入音频 --&gt;</span><br><span class=\"line\">\t&lt;embed src=&quot;./media/西班牙舞曲.mp3&quot; width=&quot;400px&quot; height=&quot;80px&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 插入视频 --&gt;</span><br><span class=\"line\">\t&lt;embed src=&quot;./media/小苹果.mp4&quot; width=&quot;400px&quot; height=&quot;80px&quot;/&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-视频（video）\"><a href=\"#3-3-视频（video）\" class=\"headerlink\" title=\"3.3 视频（video）\"></a>3.3 视频（video）</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208135318724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;video width=&quot;320&quot; height=&quot;240&quot; controls&gt;</span><br><span class=\"line\">    &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;</span><br><span class=\"line\">    &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;</span><br><span class=\"line\">    您的浏览器不支持 video 标签。</span><br><span class=\"line\">&lt;/video&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-盒子模型\"><a href=\"#4-盒子模型\" class=\"headerlink\" title=\"4. 盒子模型\"></a>4. 盒子模型</h2><h3 id=\"4-1-margin-border-padding-content\"><a href=\"#4-1-margin-border-padding-content\" class=\"headerlink\" title=\"4.1 margin-border-padding-content\"></a>4.1 margin-border-padding-content</h3><p>前三个都支持 <strong>上下左右</strong>  4个方向 单独设置<br><img src=\"https://img-blog.csdnimg.cn/20201208135504124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-2-box-sizing-盒模型的大小设置-：\"><a href=\"#4-2-box-sizing-盒模型的大小设置-：\" class=\"headerlink\" title=\"4.2 box-sizing(盒模型的大小设置)：\"></a>4.2 box-sizing(盒模型的大小设置)：</h3><h4 id=\"4-2-1-box-sizing-border-box\"><a href=\"#4-2-1-box-sizing-border-box\" class=\"headerlink\" title=\"4.2.1 box-sizing  :border-box\"></a>4.2.1 box-sizing  :border-box</h4><blockquote>\n<p>IE盒模型，设置padding时，padding 往里面挤，不会撑大盒子</p>\n</blockquote>\n<h4 id=\"4-2-2-box-sizing-content-box\"><a href=\"#4-2-2-box-sizing-content-box\" class=\"headerlink\" title=\"4.2.2 box-sizing  :content-box\"></a>4.2.2 box-sizing  :content-box</h4><blockquote>\n<p>默认的盒模型，设置padding时，padding 往外面撑，会撑大盒子</p>\n</blockquote>\n<h2 id=\"5-标题的图标\"><a href=\"#5-标题的图标\" class=\"headerlink\" title=\"5. 标题的图标\"></a>5. 标题的图标</h2><h3 id=\"5-1-在网页标题左侧显示\"><a href=\"#5-1-在网页标题左侧显示\" class=\"headerlink\" title=\"5.1  在网页标题左侧显示\"></a>5.1  在网页标题左侧显示</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;icon&quot; href=&quot;图标地址&quot; type=&quot;image/x-icon&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-在收藏夹显示图标\"><a href=\"#5-2-在收藏夹显示图标\" class=\"headerlink\" title=\"5.2  在收藏夹显示图标\"></a>5.2  在收藏夹显示图标</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;shortcut icon&quot; href=&quot;图标地址&quot; type=&quot;image/x-icon&quot;&gt; </span><br></pre></td></tr></table></figure>\n<h2 id=\"6-表格\"><a href=\"#6-表格\" class=\"headerlink\" title=\"6. 表格\"></a>6. 表格</h2><ul>\n<li>tr : 行;</li>\n<li>td: 单元格 ； </li>\n<li>th: 表头单元格;</li>\n</ul>\n<p>table的常用属性： </p>\n<ul>\n<li> cellpadding：单元格内边距   ；</li>\n<li> cellspacing：单元格间距<h3 id=\"6-1-表格-实例1\"><a href=\"#6-1-表格-实例1\" class=\"headerlink\" title=\"6.1 表格-实例1\"></a>6.1 表格-实例1</h3><img src=\"https://img-blog.csdnimg.cn/20201208140427220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;table border=&quot;1&quot;&gt;</span><br><span class=\"line\">\t\t&lt;caption&gt;表格标题&lt;/caption&gt;</span><br><span class=\"line\">\t\t&lt;thead&gt;</span><br><span class=\"line\">\t\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;（表头）表格每一列的标题&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;（表头）表格每一列的标题&lt;/th&gt;</span><br><span class=\"line\">\t\t\t\t&lt;th&gt;（表头）表格每一列的标题&lt;/th&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;/thead&gt;</span><br><span class=\"line\">\t\t&lt;tbody&gt;</span><br><span class=\"line\">\t\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;/tbody&gt;</span><br><span class=\"line\">\t\t&lt;tfoot&gt;</span><br><span class=\"line\">\t\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t\t&lt;td&gt;表尾&lt;/td&gt;</span><br><span class=\"line\">\t\t\t\t&lt;td&gt;表尾&lt;/td&gt;</span><br><span class=\"line\">\t\t\t\t&lt;td&gt;表尾&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;/tfoot&gt;</span><br><span class=\"line\">&lt;/table&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>单元格合并（colspan ，x轴单元格减少）</strong><br><img src=\"https://img-blog.csdnimg.cn/2020120814051417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;table border=&quot;1&quot;&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td  colspan=&quot;2&quot;&gt;这是colspan&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">&lt;/table&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>单元格合并（rowspan ，y轴单元格减少）</strong><br><img src=\"https://img-blog.csdnimg.cn/20201208140550543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;table border=&quot;1&quot;&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td  rowspan=&quot;2&quot; &gt;这是rowspan&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;\t\t\t</span><br><span class=\"line\">\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">\t\t&lt;tr&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t\t&lt;td&gt;data&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;/tr&gt;</span><br><span class=\"line\">&lt;/table&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-有序列表（ol-li）\"><a href=\"#7-有序列表（ol-li）\" class=\"headerlink\" title=\"7. 有序列表（ol + li）\"></a>7. 有序列表（ol + li）</h2><p>无论是 ul 还是 ol  内部第一层必须是 li</p>\n<ul>\n<li>实例1：默认ol ， 默认type:1<br><img src=\"https://img-blog.csdnimg.cn/20201208140933384.png\" alt=\"在这里插入图片描述\"><br>实例2<br>修改type属性值：</li>\n<li>1</li>\n<li>a</li>\n<li>A</li>\n<li>i</li>\n<li>I<br><img src=\"https://img-blog.csdnimg.cn/20201208141037242.png\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ol type=&quot;A&quot;&gt;</span><br><span class=\"line\">     &lt;li&gt;first&lt;/li&gt;</span><br><span class=\"line\">     &lt;li&gt;second&lt;/li&gt;</span><br><span class=\"line\">     &lt;li&gt;third&lt;/li&gt;</span><br><span class=\"line\">&lt;/ol&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-无序列表\"><a href=\"#8-无序列表\" class=\"headerlink\" title=\"8. 无序列表\"></a>8. 无序列表</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208141407277.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//默认，实心圆</span><br><span class=\"line\">&lt;ul type=&quot;disc&quot;&gt;</span><br><span class=\"line\">\t&lt;li&gt;Coffee&lt;/li&gt;</span><br><span class=\"line\">\t&lt;li&gt;Milk&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//空心圆</span><br><span class=\"line\">&lt;ul type=&quot;circle&quot;&gt;</span><br><span class=\"line\">\t&lt;li&gt;Coffee&lt;/li&gt;</span><br><span class=\"line\">\t&lt;li&gt;Milk&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">//正方形</span><br><span class=\"line\">&lt;ul type=&quot;square&quot;&gt;</span><br><span class=\"line\">\t&lt;li&gt;Coffee&lt;/li&gt;</span><br><span class=\"line\">\t&lt;li&gt;Milk&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"9-定义列表（dl-dt-dd-层级列表，会缩进）\"><a href=\"#9-定义列表（dl-dt-dd-层级列表，会缩进）\" class=\"headerlink\" title=\"9. 定义列表（dl+dt/dd  ,层级列表，会缩进）\"></a>9. 定义列表（dl+dt/dd  ,层级列表，会缩进）</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208141455567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dl&gt;</span><br><span class=\"line\">\t\t&lt;dt&gt;动物&lt;/dt&gt;</span><br><span class=\"line\">\t\t&lt;dd&gt;猴子&lt;/dd&gt;</span><br><span class=\"line\">\t\t&lt;dd&gt;狗&lt;/dd&gt;</span><br><span class=\"line\">&lt;/dl&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-datalist\"><a href=\"#10-datalist\" class=\"headerlink\" title=\"10. datalist\"></a>10. datalist</h2><p>常与其他表单控件连用<br><img src=\"https://img-blog.csdnimg.cn/20201208141630583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=&quot;search&quot; list=&quot;id1&quot;&gt;</span><br><span class=\"line\">&lt;datalist id=&quot;id1&quot;&gt;</span><br><span class=\"line\">\t&lt;option value=&quot;hello&quot;&gt;&lt;/option&gt;</span><br><span class=\"line\">\t&lt;option value=&quot;world&quot;&gt;&lt;/option&gt;</span><br><span class=\"line\">&lt;/datalist&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"11-常用-表单标签\"><a href=\"#11-常用-表单标签\" class=\"headerlink\" title=\"11. 常用 表单标签\"></a>11. 常用 表单标签</h2><ul>\n<li>所有表单标签都要写在<code>&lt;form&gt; &lt;/form&gt;</code>内</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;form &gt;</span><br><span class=\"line\"> 单行文本框：&lt;input type=&quot;text&quot; name=&quot;firstname&quot;&gt; &lt;br&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\"> 多行文本框：&lt;textarea rows=&quot;10&quot; cols=&quot;30&quot;&gt;123&lt;/textarea&gt; &lt;br&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\"> 密码框：&lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;br&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\"> 普通按钮: &lt;input type=&quot;button&quot; name=&quot;btn&quot; onclick=&quot;click_me()&quot;&gt; &lt;br&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\"> 单选按钮: &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot;&gt;Male &lt;br&gt;</span><br><span class=\"line\">\t\t  &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot;&gt;Female &lt;br&gt;</span><br><span class=\"line\">\t\t  </span><br><span class=\"line\"> 复选框：   &lt;input type=&quot;checkbox&quot; checked name=&quot;vehicle&quot; value=&quot;Bike&quot;&gt;bike &lt;br&gt;</span><br><span class=\"line\">\t\t   &lt;input type=&quot;checkbox&quot; name=&quot;vehicle&quot; value=&quot;Car&quot;&gt;car &lt;br&gt;</span><br><span class=\"line\">\t\t   </span><br><span class=\"line\"> 提交按钮：  &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> 下拉列表：</span><br><span class=\"line\"> \t\t\t&lt;select&gt;</span><br><span class=\"line\">    \t\t\t&lt;option value=&quot;volvo&quot;&gt;小浩&lt;/option&gt;</span><br><span class=\"line\">    \t\t\t&lt;option value=&quot;saab&quot;&gt;小白&lt;/option&gt;</span><br><span class=\"line\">    \t\t\t&lt;option value=&quot;mercedes&quot;&gt;小李&lt;/option&gt;</span><br><span class=\"line\">    \t\t\t&lt;option value=&quot;audi&quot;&gt;小张&lt;/option&gt;</span><br><span class=\"line\">\t\t\t&lt;/select&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\"> 重置：&lt;input type=&quot;reset&quot; name=&quot;button&quot; id=&quot;button&quot; value=&quot;重置&quot;&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12-时间（input类型）：\"><a href=\"#12-时间（input类型）：\" class=\"headerlink\" title=\"12. 时间（input类型）：\"></a>12. 时间（input类型）：</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208141715713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">月份：&lt;input type=&quot;month&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;br&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">星期：&lt;input type=&quot;week&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;br&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">日期：&lt;input type=&quot;date&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;br&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">时间：&lt;input type=&quot;time&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"13-范围\"><a href=\"#13-范围\" class=\"headerlink\" title=\"13. 范围\"></a>13. 范围</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208141927516.png\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=&quot;range&quot;&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"14-进度条\"><a href=\"#14-进度条\" class=\"headerlink\" title=\"14. 进度条\"></a>14. 进度条</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208142022113.png\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;progress value=&quot;80&quot; max=&quot;100&quot; min=&quot;0&quot;&gt;&lt;/progress&gt;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Git-学习笔记","_content":"\n# Git-学习笔记\n\n[toc]\n\n\n\n## 1. Git 安装及全局配置\n\n> **以Windows为例：**\n> 1. 从 **Git官网** 直接下载安装程序，然后按 **默认** 选项安装\n> 2. 若 在点击左下角的windows图标后 能够找到 **“Git”-“Git Bash”**，并且打开后出现类似 cmd 的窗口，则**安装成功。**\n> 3. 打开 Git Bash【git bash中可以输入  Linux命令，相当于 linux中的终端】\n> 4. 输入`git config --global user.name \"用户名\"`\n> 5. 输入 `git config --global user.email \"邮箱地址\"\t`\n## 2. Git 的工作原理\n\n\n\n\n\n### 2.1 git 与 svn 的差别\n\n>   -   git 是 **分布式**的版本控制系统，在**本地和远程** 各有1个版本库,工作时可以**不用联网**\n>   -   svn 是**集中式**的版本控制系统，是多个人**共用1个**版本库，工作时需要**联网**\n\n\n\n\n\n### 2.2 几个重要的概念\n\n+ **工作区**【workspace】：文件夹\n+ **暂存区**【stage】：git add 时，从 workspace  添加到  stage\n+ **本地仓库**【Repository】：git commit 时，将stage中的文件 提交到本地版本库\n+ **远程仓库**【Remote】：git push 时，将 Repository 中的文件推送到远程仓库，如：github，gitee等网站。\n+ **注意事项：** git**只能追踪文本文件的内容修改**，不能追踪二进制文件【如：图片】。对于二进制文件，git只能知道它有修改，但不知道修改的内容。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112516134783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70#pic_center)\n## 3. 新建仓库\n\n\n### 3.1 创建版本库\n\n【创建之后的大部分命令都在版本库文件夹下输入】\n1.  **版本库** 就是一个能够**被 git 管理** (增、删、改、恢复) 的**目录**\n2. **创建步骤**：\n> 1. 创建的文件夹，用于充当版本库【1个名为 testRepo 的版本库】,\n\n```bash\ncd e:\nmkdir testRepo\n```\n\n\n> 2. 初始化版本库\n> 【初始化后生成 .git 隐藏文件，该文件不能动，否则会破坏版本库】\n\n```bash\ncd testRepo\ngit init\n```\n\n\n\n### 3.2 添加文件到暂存区\n\n 【以在 testRepo 文件夹中 创建1个名为 readme.txt 的文件为例】\n```bash\n//创建1个名为 readme.txt 的文件，并输入内容，保存\ngit add ./readme.txt\n```\n\n\n\n### 3.3  提交文件到 本地仓库\n\n```bash\ngit commit -m \"描述信息，一般描述修改的内容\"\n```\n\n\n\n### 3.4 查看 版本库状态\n\ngit状态:指 是否提交，是否推送 等状态\n\n```bash\ngit status\n```\n\n\n\n### 3.5 查看 更改的内容\n\n【查看 当前工作区的文件（此时还没有 git add）与原来相比有不同】\n查看所做的更改\n```bash\ngit diff readme.txt\n```\n\n确认无误后，git add,和git commit \n\n\n## 4. 版本回退\n\n\n### 4.1 查看历史版本记录\n\n即：查看历史 commit 记录。越上面，记录越新\n```bash\n//详细显示\ngit log\n\n//简要显示\ngit log --pretty=oneline\n```\n\n\n\n### 4.2 版本回退\n\n```bash\n//回退到上一个版本\ngit reset --hard HEAD^\n\n//回退到上两个版本\ngit reset --hard HEAD^^\n\n//回退上100个版本\ngit reset --hard HEAD~100\n```\n\n\n\n### 4.3 回退后又想恢复到回退前的版本\n\ngit reset --hard 版本号\n如：`git reset --hard 6dsd2152`\n```bash\n//查看版本号\ngit reflog\n\n//根据版本号以回退版本\ngit reset --hard 版本号\n```\n\n\n\n### 4.4 撤销修改\n\n+ **撤销修改：** 撤销 提交到**本地版本库**的修改\n\t+ **知道哪里错了**：直接手动在文件里改，然后git add、commit等操作\n\t+ **不知道哪里错了**：【2种方法】\n\t\t+ 根据 本地版本库 回退：`git reset --hard HEAD^`\n\t\t+ 直接使用 撤销命令：【2种情况】\n\t\t\t+ **还没有 git add**，撤销后的形成的版本就是本地版本库中的版本\n\t\t\t+ **已经 git add 后**又做了修改，撤销后形成的版本是暂存区中的版本\n```bash\n//直接使用撤销命令\n// 注意：命令中的 -- 很重要，有--是撤销，没有--是切换分支\n\ngit checkout -- readme.txt\n```\n\n\n\n### 4.5 删除文件\n\n直接删除，然后 commit\n\n```bash\n//删除\nrm ./abc.txt\ngit commit -m \"删除了当前目录下的abc.txt文件\"\n\n\n//撤销删除\ngit checkout -- abc.txt\n```\n\n\n## 5. 远程仓库\n\n\n\n### 5.1 生成SSH\n\n使用远程仓库需要先在 github、gitee 等 代码托管网站先注册账户\n> **以 gitee 为例**\n> 1. 进入用户的主目录 `C:\\Users\\admin`\n> 2. 查看 是否有 .ssh文件夹 及 .ssh文件夹内 是否 有 `id-rsa` 和 `id_rsa.pub` 2个文件。如果没有，则 进行第三步\t\n> 3. 打开 git-bash,输入`ssh-keygen -t rsa –C “邮箱”`，生成上述的 **2个文件**\n> 4. 用记事本打开 `id_rsa.pub`\t文件，全选后复制\n> 5. 浏览器打开 gitee 并登录\n> 6. 进入 gitee, 设置 =》\t安全设置 =》SSH公钥\n> 7. 输入标题【标题随便写】\n> 8. 公钥就是刚才从`id_rsa.pub`中复制的内容\n> 9. 点击 确定\n\n\n\n\n\n### 5.2 新建远程库\n\n> 1. 点击gitee 右上角的<kbd>+</kbd>  =》 新建仓库\n> 2. 输入仓库名称【需要和本地版本库的名称一致(文件夹名)】\n> 3. 其他项可以默认\n> 4. 点击 创建\n> 5. 根据提示输入命令\n\n\n\n\n\n### 5.3 与 远程库 建立关联\n\n```bash\n// 以下仅为示例\n\n\n// origin为本地仓库与远程仓库的链接的名字，代表了1个仓库，\n// 因此，账户中有多个不同项目的仓库时，把origin换成不同的名字。\n// 添加remote时的仓库名格式(ssh): \n//      git@托管网站的域名:用户名/仓库名.git\n\n// 在 本地建立 与 远程仓库 的链接。\ngit remote add origin git@gitee.com:admin/testRepo.git\n\n// 第一次推送需要 -u,之后可以不用\ngit push -u origin master\n\n// 第2次及以后的推送\ngit push origin master\n\n\n\n\n// 如果推送时发生冲突，可能是因为远程和本地的内容有部分不一致.\n\n// 解决办法1：先pill，再合并，再解决冲突，再推送\ngit pull origin master\n\n// 解决办法2【pull也失败时】：先建立分支与远程库之间的关联\ngit branch --set-upstream dev origin/dev\ngit pull\n//解决冲突后,再add、commit、push\n\n```\n\n\n\n\n\n### 5.4 查看远程库的信息\n\n远程库的信息都是成对出现的，包括：\n\n - fetch： 抓取\n - push： 推送\n\n```bash\n//查看远程库的信息\ngit remote\n\n//查看远程库的详细信息\ngit remote -v\n```\n\n\n\n\n\n\n\n### 5.5 将 远程库 克隆 到本地\n\n```bash\ncd 进入要存放代码库的文件夹\ngit clone git@gitee.com:admin/testRepo.git\n```\n\n\n\n\n### 5.6 删除 关联 本地与远程库 的链接\n\n\n```bash\ngit remote rm origin\n```\n\n\n\n\n\n\n\n## 6. 分支\n\nGit 将 每次的提交串成1条时间线，master就是这条 主时间线的名字，HEAD 指向 master，master指向提交。创建并合并分支类似于将master复制 1份，在分支上修改后，再用分支的内容覆盖掉原来的master。\n**master分支**：一般存放稳定的版本，开发和修复bug一般创建新的分支，在分支上操作。\n\n\n\n\n\n### 6.1 创建、切换分支\n\n```bash\n//创建并切换到分支\ngit checkout -b 分支名\n\n//上面1句命令 等价于\ngit branch 分支名\ngit checkout 分支名\n```\n\n\n\n\n\n### 6.2 查看分支\n\n```bash\n//查看分支，其中，分支名前带*，表示当前为该分支\ngit branch\n```\n\n\n\n\n\n### 6.3 合并到主分支\n\n默认情况下，git 使用 Fast-forward（快进模式）来合并分支\n+ Fast-forward（快进模式）：直接将master指向分支的提交，删除分支后，会丢掉分支信息\n+ 关闭快进模式： `git merge –no-ff -m “注释” 分支名`\n\n```bash\n// 1. 先切换到 master分支\ngit checkout master\n\n// 2. 再合并[【其中，dev为我们自建创建的分支的名字】\ngit merge dev\n```\n\n\n\n\n\n### 6.4 删除分支\n\n```bash\n// 删除分支\ngit branch -d 分支名\n```\n\n\n\n\n\n### 6.5 解决分支之间的冲突\n\n**情景：**   创建1个名为dev的分支，在dev分支上修改并提交，然后切换回master分支，如果在master上再进行与dev分支不同的修改并提交,则合并 master与dev 时,会出现冲突。  \n\n**解决步骤：** \n - cat 查看一下产生冲突的文件的内容【git 会用<<<，===，>>>标识产生冲突的部分】\n - 将2个分支的内容改成一致即可\n - 合并、添加、提交\n - `git log ` 查看合并情况\n\n```bash\n\n// 创建分支\ngit checkout -b dev\ngit add readme.txt\ngit commit -m \"add merge\"\n\n// 关闭快进模式，并合并\ngit checkout master\ngit merge --no-ff -m \"关闭快进模式\" dev\n\n// 删除分支\ngit branch -d dev\n\n// 查看分支\ngit branch\n\n// 查看删除分支后 是否仍然保留分支号\ngit log --graph --pretty=oneline --abbrev-commit\n```\n\n\n\n\n\n### 6.6 隐藏现场\n\n需要临时做其他分支的工作但又因为手中的事情还没做完不能提交时，可以使用隐藏现场功能，隐藏现场后，查看状态时，可以发现状态是干净的。\n\n```bash\n//隐藏现场\ngit stash\n\n//查看状态\ngit status\n\n//查看隐藏的现场\ngit stash list\n```\n\n\n\n\n\n### 6.7 还原现场\n\n1.git stash apply恢复，恢复后，stash内容并不删除，你需要使用命令git stash drop来删除。\n2.另一种方式是使用git stash pop,恢复的同时把stash内容也删除了。\n```bash\n//方法1\n// 还原现场，然后删除最新的一条现场记录\ngit stash apply\ngit stash drop\n\n//方法2\n// 还原现场并删除记录\ngit stash pop\n\n```\n\n","source":"_posts/Git入门-学习笔记.md","raw":"---\ntitle: Git-学习笔记\ntag: Git\ncategories:\n  - 编程工具\n  - 版本控制\n  - Git\n---\n\n# Git-学习笔记\n\n[toc]\n\n\n\n## 1. Git 安装及全局配置\n\n> **以Windows为例：**\n> 1. 从 **Git官网** 直接下载安装程序，然后按 **默认** 选项安装\n> 2. 若 在点击左下角的windows图标后 能够找到 **“Git”-“Git Bash”**，并且打开后出现类似 cmd 的窗口，则**安装成功。**\n> 3. 打开 Git Bash【git bash中可以输入  Linux命令，相当于 linux中的终端】\n> 4. 输入`git config --global user.name \"用户名\"`\n> 5. 输入 `git config --global user.email \"邮箱地址\"\t`\n## 2. Git 的工作原理\n\n\n\n\n\n### 2.1 git 与 svn 的差别\n\n>   -   git 是 **分布式**的版本控制系统，在**本地和远程** 各有1个版本库,工作时可以**不用联网**\n>   -   svn 是**集中式**的版本控制系统，是多个人**共用1个**版本库，工作时需要**联网**\n\n\n\n\n\n### 2.2 几个重要的概念\n\n+ **工作区**【workspace】：文件夹\n+ **暂存区**【stage】：git add 时，从 workspace  添加到  stage\n+ **本地仓库**【Repository】：git commit 时，将stage中的文件 提交到本地版本库\n+ **远程仓库**【Remote】：git push 时，将 Repository 中的文件推送到远程仓库，如：github，gitee等网站。\n+ **注意事项：** git**只能追踪文本文件的内容修改**，不能追踪二进制文件【如：图片】。对于二进制文件，git只能知道它有修改，但不知道修改的内容。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112516134783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70#pic_center)\n## 3. 新建仓库\n\n\n### 3.1 创建版本库\n\n【创建之后的大部分命令都在版本库文件夹下输入】\n1.  **版本库** 就是一个能够**被 git 管理** (增、删、改、恢复) 的**目录**\n2. **创建步骤**：\n> 1. 创建的文件夹，用于充当版本库【1个名为 testRepo 的版本库】,\n\n```bash\ncd e:\nmkdir testRepo\n```\n\n\n> 2. 初始化版本库\n> 【初始化后生成 .git 隐藏文件，该文件不能动，否则会破坏版本库】\n\n```bash\ncd testRepo\ngit init\n```\n\n\n\n### 3.2 添加文件到暂存区\n\n 【以在 testRepo 文件夹中 创建1个名为 readme.txt 的文件为例】\n```bash\n//创建1个名为 readme.txt 的文件，并输入内容，保存\ngit add ./readme.txt\n```\n\n\n\n### 3.3  提交文件到 本地仓库\n\n```bash\ngit commit -m \"描述信息，一般描述修改的内容\"\n```\n\n\n\n### 3.4 查看 版本库状态\n\ngit状态:指 是否提交，是否推送 等状态\n\n```bash\ngit status\n```\n\n\n\n### 3.5 查看 更改的内容\n\n【查看 当前工作区的文件（此时还没有 git add）与原来相比有不同】\n查看所做的更改\n```bash\ngit diff readme.txt\n```\n\n确认无误后，git add,和git commit \n\n\n## 4. 版本回退\n\n\n### 4.1 查看历史版本记录\n\n即：查看历史 commit 记录。越上面，记录越新\n```bash\n//详细显示\ngit log\n\n//简要显示\ngit log --pretty=oneline\n```\n\n\n\n### 4.2 版本回退\n\n```bash\n//回退到上一个版本\ngit reset --hard HEAD^\n\n//回退到上两个版本\ngit reset --hard HEAD^^\n\n//回退上100个版本\ngit reset --hard HEAD~100\n```\n\n\n\n### 4.3 回退后又想恢复到回退前的版本\n\ngit reset --hard 版本号\n如：`git reset --hard 6dsd2152`\n```bash\n//查看版本号\ngit reflog\n\n//根据版本号以回退版本\ngit reset --hard 版本号\n```\n\n\n\n### 4.4 撤销修改\n\n+ **撤销修改：** 撤销 提交到**本地版本库**的修改\n\t+ **知道哪里错了**：直接手动在文件里改，然后git add、commit等操作\n\t+ **不知道哪里错了**：【2种方法】\n\t\t+ 根据 本地版本库 回退：`git reset --hard HEAD^`\n\t\t+ 直接使用 撤销命令：【2种情况】\n\t\t\t+ **还没有 git add**，撤销后的形成的版本就是本地版本库中的版本\n\t\t\t+ **已经 git add 后**又做了修改，撤销后形成的版本是暂存区中的版本\n```bash\n//直接使用撤销命令\n// 注意：命令中的 -- 很重要，有--是撤销，没有--是切换分支\n\ngit checkout -- readme.txt\n```\n\n\n\n### 4.5 删除文件\n\n直接删除，然后 commit\n\n```bash\n//删除\nrm ./abc.txt\ngit commit -m \"删除了当前目录下的abc.txt文件\"\n\n\n//撤销删除\ngit checkout -- abc.txt\n```\n\n\n## 5. 远程仓库\n\n\n\n### 5.1 生成SSH\n\n使用远程仓库需要先在 github、gitee 等 代码托管网站先注册账户\n> **以 gitee 为例**\n> 1. 进入用户的主目录 `C:\\Users\\admin`\n> 2. 查看 是否有 .ssh文件夹 及 .ssh文件夹内 是否 有 `id-rsa` 和 `id_rsa.pub` 2个文件。如果没有，则 进行第三步\t\n> 3. 打开 git-bash,输入`ssh-keygen -t rsa –C “邮箱”`，生成上述的 **2个文件**\n> 4. 用记事本打开 `id_rsa.pub`\t文件，全选后复制\n> 5. 浏览器打开 gitee 并登录\n> 6. 进入 gitee, 设置 =》\t安全设置 =》SSH公钥\n> 7. 输入标题【标题随便写】\n> 8. 公钥就是刚才从`id_rsa.pub`中复制的内容\n> 9. 点击 确定\n\n\n\n\n\n### 5.2 新建远程库\n\n> 1. 点击gitee 右上角的<kbd>+</kbd>  =》 新建仓库\n> 2. 输入仓库名称【需要和本地版本库的名称一致(文件夹名)】\n> 3. 其他项可以默认\n> 4. 点击 创建\n> 5. 根据提示输入命令\n\n\n\n\n\n### 5.3 与 远程库 建立关联\n\n```bash\n// 以下仅为示例\n\n\n// origin为本地仓库与远程仓库的链接的名字，代表了1个仓库，\n// 因此，账户中有多个不同项目的仓库时，把origin换成不同的名字。\n// 添加remote时的仓库名格式(ssh): \n//      git@托管网站的域名:用户名/仓库名.git\n\n// 在 本地建立 与 远程仓库 的链接。\ngit remote add origin git@gitee.com:admin/testRepo.git\n\n// 第一次推送需要 -u,之后可以不用\ngit push -u origin master\n\n// 第2次及以后的推送\ngit push origin master\n\n\n\n\n// 如果推送时发生冲突，可能是因为远程和本地的内容有部分不一致.\n\n// 解决办法1：先pill，再合并，再解决冲突，再推送\ngit pull origin master\n\n// 解决办法2【pull也失败时】：先建立分支与远程库之间的关联\ngit branch --set-upstream dev origin/dev\ngit pull\n//解决冲突后,再add、commit、push\n\n```\n\n\n\n\n\n### 5.4 查看远程库的信息\n\n远程库的信息都是成对出现的，包括：\n\n - fetch： 抓取\n - push： 推送\n\n```bash\n//查看远程库的信息\ngit remote\n\n//查看远程库的详细信息\ngit remote -v\n```\n\n\n\n\n\n\n\n### 5.5 将 远程库 克隆 到本地\n\n```bash\ncd 进入要存放代码库的文件夹\ngit clone git@gitee.com:admin/testRepo.git\n```\n\n\n\n\n### 5.6 删除 关联 本地与远程库 的链接\n\n\n```bash\ngit remote rm origin\n```\n\n\n\n\n\n\n\n## 6. 分支\n\nGit 将 每次的提交串成1条时间线，master就是这条 主时间线的名字，HEAD 指向 master，master指向提交。创建并合并分支类似于将master复制 1份，在分支上修改后，再用分支的内容覆盖掉原来的master。\n**master分支**：一般存放稳定的版本，开发和修复bug一般创建新的分支，在分支上操作。\n\n\n\n\n\n### 6.1 创建、切换分支\n\n```bash\n//创建并切换到分支\ngit checkout -b 分支名\n\n//上面1句命令 等价于\ngit branch 分支名\ngit checkout 分支名\n```\n\n\n\n\n\n### 6.2 查看分支\n\n```bash\n//查看分支，其中，分支名前带*，表示当前为该分支\ngit branch\n```\n\n\n\n\n\n### 6.3 合并到主分支\n\n默认情况下，git 使用 Fast-forward（快进模式）来合并分支\n+ Fast-forward（快进模式）：直接将master指向分支的提交，删除分支后，会丢掉分支信息\n+ 关闭快进模式： `git merge –no-ff -m “注释” 分支名`\n\n```bash\n// 1. 先切换到 master分支\ngit checkout master\n\n// 2. 再合并[【其中，dev为我们自建创建的分支的名字】\ngit merge dev\n```\n\n\n\n\n\n### 6.4 删除分支\n\n```bash\n// 删除分支\ngit branch -d 分支名\n```\n\n\n\n\n\n### 6.5 解决分支之间的冲突\n\n**情景：**   创建1个名为dev的分支，在dev分支上修改并提交，然后切换回master分支，如果在master上再进行与dev分支不同的修改并提交,则合并 master与dev 时,会出现冲突。  \n\n**解决步骤：** \n - cat 查看一下产生冲突的文件的内容【git 会用<<<，===，>>>标识产生冲突的部分】\n - 将2个分支的内容改成一致即可\n - 合并、添加、提交\n - `git log ` 查看合并情况\n\n```bash\n\n// 创建分支\ngit checkout -b dev\ngit add readme.txt\ngit commit -m \"add merge\"\n\n// 关闭快进模式，并合并\ngit checkout master\ngit merge --no-ff -m \"关闭快进模式\" dev\n\n// 删除分支\ngit branch -d dev\n\n// 查看分支\ngit branch\n\n// 查看删除分支后 是否仍然保留分支号\ngit log --graph --pretty=oneline --abbrev-commit\n```\n\n\n\n\n\n### 6.6 隐藏现场\n\n需要临时做其他分支的工作但又因为手中的事情还没做完不能提交时，可以使用隐藏现场功能，隐藏现场后，查看状态时，可以发现状态是干净的。\n\n```bash\n//隐藏现场\ngit stash\n\n//查看状态\ngit status\n\n//查看隐藏的现场\ngit stash list\n```\n\n\n\n\n\n### 6.7 还原现场\n\n1.git stash apply恢复，恢复后，stash内容并不删除，你需要使用命令git stash drop来删除。\n2.另一种方式是使用git stash pop,恢复的同时把stash内容也删除了。\n```bash\n//方法1\n// 还原现场，然后删除最新的一条现场记录\ngit stash apply\ngit stash drop\n\n//方法2\n// 还原现场并删除记录\ngit stash pop\n\n```\n\n","slug":"Git入门-学习笔记","published":1,"date":"2021-06-02T02:49:19.212Z","updated":"2021-06-01T07:36:09.352Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs15000clcvdbketdfcy","content":"<h1 id=\"Git-学习笔记\"><a href=\"#Git-学习笔记\" class=\"headerlink\" title=\"Git-学习笔记\"></a>Git-学习笔记</h1><p>[toc]</p>\n<h2 id=\"1-Git-安装及全局配置\"><a href=\"#1-Git-安装及全局配置\" class=\"headerlink\" title=\"1. Git 安装及全局配置\"></a>1. Git 安装及全局配置</h2><blockquote>\n<p><strong>以Windows为例：</strong></p>\n<ol>\n<li>从 <strong>Git官网</strong> 直接下载安装程序，然后按 <strong>默认</strong> 选项安装</li>\n<li>若 在点击左下角的windows图标后 能够找到 <strong>“Git”-“Git Bash”</strong>，并且打开后出现类似 cmd 的窗口，则<strong>安装成功。</strong></li>\n<li>打开 Git Bash【git bash中可以输入  Linux命令，相当于 linux中的终端】</li>\n<li>输入<code>git config --global user.name &quot;用户名&quot;</code></li>\n<li>输入 <code>git config --global user.email &quot;邮箱地址&quot;    </code></li>\n</ol>\n</blockquote>\n<h2 id=\"2-Git-的工作原理\"><a href=\"#2-Git-的工作原理\" class=\"headerlink\" title=\"2. Git 的工作原理\"></a>2. Git 的工作原理</h2><h3 id=\"2-1-git-与-svn-的差别\"><a href=\"#2-1-git-与-svn-的差别\" class=\"headerlink\" title=\"2.1 git 与 svn 的差别\"></a>2.1 git 与 svn 的差别</h3><blockquote>\n<ul>\n<li>  git 是 <strong>分布式</strong>的版本控制系统，在<strong>本地和远程</strong> 各有1个版本库,工作时可以<strong>不用联网</strong></li>\n<li>  svn 是<strong>集中式</strong>的版本控制系统，是多个人<strong>共用1个</strong>版本库，工作时需要<strong>联网</strong></li>\n</ul>\n</blockquote>\n<h3 id=\"2-2-几个重要的概念\"><a href=\"#2-2-几个重要的概念\" class=\"headerlink\" title=\"2.2 几个重要的概念\"></a>2.2 几个重要的概念</h3><ul>\n<li><strong>工作区</strong>【workspace】：文件夹</li>\n<li><strong>暂存区</strong>【stage】：git add 时，从 workspace  添加到  stage</li>\n<li><strong>本地仓库</strong>【Repository】：git commit 时，将stage中的文件 提交到本地版本库</li>\n<li><strong>远程仓库</strong>【Remote】：git push 时，将 Repository 中的文件推送到远程仓库，如：github，gitee等网站。</li>\n<li><strong>注意事项：</strong> git<strong>只能追踪文本文件的内容修改</strong>，不能追踪二进制文件【如：图片】。对于二进制文件，git只能知道它有修改，但不知道修改的内容。<br><img src=\"https://img-blog.csdnimg.cn/2020112516134783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><h2 id=\"3-新建仓库\"><a href=\"#3-新建仓库\" class=\"headerlink\" title=\"3. 新建仓库\"></a>3. 新建仓库</h2></li>\n</ul>\n<h3 id=\"3-1-创建版本库\"><a href=\"#3-1-创建版本库\" class=\"headerlink\" title=\"3.1 创建版本库\"></a>3.1 创建版本库</h3><p>【创建之后的大部分命令都在版本库文件夹下输入】</p>\n<ol>\n<li> <strong>版本库</strong> 就是一个能够<strong>被 git 管理</strong> (增、删、改、恢复) 的<strong>目录</strong></li>\n<li><strong>创建步骤</strong>：<blockquote>\n<ol>\n<li>创建的文件夹，用于充当版本库【1个名为 testRepo 的版本库】,</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> e:</span><br><span class=\"line\">mkdir testRepo</span><br></pre></td></tr></table></figure>\n\n\n<blockquote>\n<ol start=\"2\">\n<li>初始化版本库<br>【初始化后生成 .git 隐藏文件，该文件不能动，否则会破坏版本库】</li>\n</ol>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> testRepo</span><br><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-2-添加文件到暂存区\"><a href=\"#3-2-添加文件到暂存区\" class=\"headerlink\" title=\"3.2 添加文件到暂存区\"></a>3.2 添加文件到暂存区</h3><p> 【以在 testRepo 文件夹中 创建1个名为 readme.txt 的文件为例】</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//创建1个名为 readme.txt 的文件，并输入内容，保存</span><br><span class=\"line\">git add ./readme.txt</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-3-提交文件到-本地仓库\"><a href=\"#3-3-提交文件到-本地仓库\" class=\"headerlink\" title=\"3.3  提交文件到 本地仓库\"></a>3.3  提交文件到 本地仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">&quot;描述信息，一般描述修改的内容&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-4-查看-版本库状态\"><a href=\"#3-4-查看-版本库状态\" class=\"headerlink\" title=\"3.4 查看 版本库状态\"></a>3.4 查看 版本库状态</h3><p>git状态:指 是否提交，是否推送 等状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-5-查看-更改的内容\"><a href=\"#3-5-查看-更改的内容\" class=\"headerlink\" title=\"3.5 查看 更改的内容\"></a>3.5 查看 更改的内容</h3><p>【查看 当前工作区的文件（此时还没有 git add）与原来相比有不同】<br>查看所做的更改</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff readme.txt</span><br></pre></td></tr></table></figure>\n\n<p>确认无误后，git add,和git commit </p>\n<h2 id=\"4-版本回退\"><a href=\"#4-版本回退\" class=\"headerlink\" title=\"4. 版本回退\"></a>4. 版本回退</h2><h3 id=\"4-1-查看历史版本记录\"><a href=\"#4-1-查看历史版本记录\" class=\"headerlink\" title=\"4.1 查看历史版本记录\"></a>4.1 查看历史版本记录</h3><p>即：查看历史 commit 记录。越上面，记录越新</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//详细显示</span><br><span class=\"line\">git <span class=\"built_in\">log</span></span><br><span class=\"line\"></span><br><span class=\"line\">//简要显示</span><br><span class=\"line\">git <span class=\"built_in\">log</span> --pretty=oneline</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-2-版本回退\"><a href=\"#4-2-版本回退\" class=\"headerlink\" title=\"4.2 版本回退\"></a>4.2 版本回退</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//回退到上一个版本</span><br><span class=\"line\">git reset --hard HEAD^</span><br><span class=\"line\"></span><br><span class=\"line\">//回退到上两个版本</span><br><span class=\"line\">git reset --hard HEAD^^</span><br><span class=\"line\"></span><br><span class=\"line\">//回退上100个版本</span><br><span class=\"line\">git reset --hard HEAD~100</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-3-回退后又想恢复到回退前的版本\"><a href=\"#4-3-回退后又想恢复到回退前的版本\" class=\"headerlink\" title=\"4.3 回退后又想恢复到回退前的版本\"></a>4.3 回退后又想恢复到回退前的版本</h3><p>git reset –hard 版本号<br>如：<code>git reset --hard 6dsd2152</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查看版本号</span><br><span class=\"line\">git reflog</span><br><span class=\"line\"></span><br><span class=\"line\">//根据版本号以回退版本</span><br><span class=\"line\">git reset --hard 版本号</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-4-撤销修改\"><a href=\"#4-4-撤销修改\" class=\"headerlink\" title=\"4.4 撤销修改\"></a>4.4 撤销修改</h3><ul>\n<li><strong>撤销修改：</strong> 撤销 提交到<strong>本地版本库</strong>的修改<ul>\n<li><strong>知道哪里错了</strong>：直接手动在文件里改，然后git add、commit等操作</li>\n<li><strong>不知道哪里错了</strong>：【2种方法】<ul>\n<li>根据 本地版本库 回退：<code>git reset --hard HEAD^</code></li>\n<li>直接使用 撤销命令：【2种情况】<ul>\n<li><strong>还没有 git add</strong>，撤销后的形成的版本就是本地版本库中的版本</li>\n<li><strong>已经 git add 后</strong>又做了修改，撤销后形成的版本是暂存区中的版本<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//直接使用撤销命令</span><br><span class=\"line\">// 注意：命令中的 -- 很重要，有--是撤销，没有--是切换分支</span><br><span class=\"line\"></span><br><span class=\"line\">git checkout -- readme.txt</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-5-删除文件\"><a href=\"#4-5-删除文件\" class=\"headerlink\" title=\"4.5 删除文件\"></a>4.5 删除文件</h3><p>直接删除，然后 commit</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//删除</span><br><span class=\"line\">rm ./abc.txt</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;删除了当前目录下的abc.txt文件&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//撤销删除</span><br><span class=\"line\">git checkout -- abc.txt</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"5-远程仓库\"><a href=\"#5-远程仓库\" class=\"headerlink\" title=\"5. 远程仓库\"></a>5. 远程仓库</h2><h3 id=\"5-1-生成SSH\"><a href=\"#5-1-生成SSH\" class=\"headerlink\" title=\"5.1 生成SSH\"></a>5.1 生成SSH</h3><p>使用远程仓库需要先在 github、gitee 等 代码托管网站先注册账户</p>\n<blockquote>\n<p><strong>以 gitee 为例</strong></p>\n<ol>\n<li>进入用户的主目录 <code>C:\\Users\\admin</code></li>\n<li>查看 是否有 .ssh文件夹 及 .ssh文件夹内 是否 有 <code>id-rsa</code> 和 <code>id_rsa.pub</code> 2个文件。如果没有，则 进行第三步    </li>\n<li>打开 git-bash,输入<code>ssh-keygen -t rsa –C “邮箱”</code>，生成上述的 <strong>2个文件</strong></li>\n<li>用记事本打开 <code>id_rsa.pub</code>    文件，全选后复制</li>\n<li>浏览器打开 gitee 并登录</li>\n<li>进入 gitee, 设置 =》    安全设置 =》SSH公钥</li>\n<li>输入标题【标题随便写】</li>\n<li>公钥就是刚才从<code>id_rsa.pub</code>中复制的内容</li>\n<li>点击 确定</li>\n</ol>\n</blockquote>\n<h3 id=\"5-2-新建远程库\"><a href=\"#5-2-新建远程库\" class=\"headerlink\" title=\"5.2 新建远程库\"></a>5.2 新建远程库</h3><blockquote>\n<ol>\n<li>点击gitee 右上角的<kbd>+</kbd>  =》 新建仓库</li>\n<li>输入仓库名称【需要和本地版本库的名称一致(文件夹名)】</li>\n<li>其他项可以默认</li>\n<li>点击 创建</li>\n<li>根据提示输入命令</li>\n</ol>\n</blockquote>\n<h3 id=\"5-3-与-远程库-建立关联\"><a href=\"#5-3-与-远程库-建立关联\" class=\"headerlink\" title=\"5.3 与 远程库 建立关联\"></a>5.3 与 远程库 建立关联</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 以下仅为示例</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// origin为本地仓库与远程仓库的链接的名字，代表了1个仓库，</span><br><span class=\"line\">// 因此，账户中有多个不同项目的仓库时，把origin换成不同的名字。</span><br><span class=\"line\">// 添加remote时的仓库名格式(ssh): </span><br><span class=\"line\">//      git@托管网站的域名:用户名/仓库名.git</span><br><span class=\"line\"></span><br><span class=\"line\">// 在 本地建立 与 远程仓库 的链接。</span><br><span class=\"line\">git remote add origin git@gitee.com:admin/testRepo.git</span><br><span class=\"line\"></span><br><span class=\"line\">// 第一次推送需要 -u,之后可以不用</span><br><span class=\"line\">git push -u origin master</span><br><span class=\"line\"></span><br><span class=\"line\">// 第2次及以后的推送</span><br><span class=\"line\">git push origin master</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// 如果推送时发生冲突，可能是因为远程和本地的内容有部分不一致.</span><br><span class=\"line\"></span><br><span class=\"line\">// 解决办法1：先pill，再合并，再解决冲突，再推送</span><br><span class=\"line\">git pull origin master</span><br><span class=\"line\"></span><br><span class=\"line\">// 解决办法2【pull也失败时】：先建立分支与远程库之间的关联</span><br><span class=\"line\">git branch --set-upstream dev origin/dev</span><br><span class=\"line\">git pull</span><br><span class=\"line\">//解决冲突后,再add、commit、push</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"5-4-查看远程库的信息\"><a href=\"#5-4-查看远程库的信息\" class=\"headerlink\" title=\"5.4 查看远程库的信息\"></a>5.4 查看远程库的信息</h3><p>远程库的信息都是成对出现的，包括：</p>\n<ul>\n<li>fetch： 抓取</li>\n<li>push： 推送</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查看远程库的信息</span><br><span class=\"line\">git remote</span><br><span class=\"line\"></span><br><span class=\"line\">//查看远程库的详细信息</span><br><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"5-5-将-远程库-克隆-到本地\"><a href=\"#5-5-将-远程库-克隆-到本地\" class=\"headerlink\" title=\"5.5 将 远程库 克隆 到本地\"></a>5.5 将 远程库 克隆 到本地</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> 进入要存放代码库的文件夹</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> git@gitee.com:admin/testRepo.git</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h3 id=\"5-6-删除-关联-本地与远程库-的链接\"><a href=\"#5-6-删除-关联-本地与远程库-的链接\" class=\"headerlink\" title=\"5.6 删除 关联 本地与远程库 的链接\"></a>5.6 删除 关联 本地与远程库 的链接</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote rm origin</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"6-分支\"><a href=\"#6-分支\" class=\"headerlink\" title=\"6. 分支\"></a>6. 分支</h2><p>Git 将 每次的提交串成1条时间线，master就是这条 主时间线的名字，HEAD 指向 master，master指向提交。创建并合并分支类似于将master复制 1份，在分支上修改后，再用分支的内容覆盖掉原来的master。<br><strong>master分支</strong>：一般存放稳定的版本，开发和修复bug一般创建新的分支，在分支上操作。</p>\n<h3 id=\"6-1-创建、切换分支\"><a href=\"#6-1-创建、切换分支\" class=\"headerlink\" title=\"6.1 创建、切换分支\"></a>6.1 创建、切换分支</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//创建并切换到分支</span><br><span class=\"line\">git checkout -b 分支名</span><br><span class=\"line\"></span><br><span class=\"line\">//上面1句命令 等价于</span><br><span class=\"line\">git branch 分支名</span><br><span class=\"line\">git checkout 分支名</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"6-2-查看分支\"><a href=\"#6-2-查看分支\" class=\"headerlink\" title=\"6.2 查看分支\"></a>6.2 查看分支</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查看分支，其中，分支名前带*，表示当前为该分支</span><br><span class=\"line\">git branch</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"6-3-合并到主分支\"><a href=\"#6-3-合并到主分支\" class=\"headerlink\" title=\"6.3 合并到主分支\"></a>6.3 合并到主分支</h3><p>默认情况下，git 使用 Fast-forward（快进模式）来合并分支</p>\n<ul>\n<li>Fast-forward（快进模式）：直接将master指向分支的提交，删除分支后，会丢掉分支信息</li>\n<li>关闭快进模式： <code>git merge –no-ff -m “注释” 分支名</code></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 1. 先切换到 master分支</span><br><span class=\"line\">git checkout master</span><br><span class=\"line\"></span><br><span class=\"line\">// 2. 再合并[【其中，dev为我们自建创建的分支的名字】</span><br><span class=\"line\">git merge dev</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"6-4-删除分支\"><a href=\"#6-4-删除分支\" class=\"headerlink\" title=\"6.4 删除分支\"></a>6.4 删除分支</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 删除分支</span><br><span class=\"line\">git branch -d 分支名</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"6-5-解决分支之间的冲突\"><a href=\"#6-5-解决分支之间的冲突\" class=\"headerlink\" title=\"6.5 解决分支之间的冲突\"></a>6.5 解决分支之间的冲突</h3><p><strong>情景：</strong>   创建1个名为dev的分支，在dev分支上修改并提交，然后切换回master分支，如果在master上再进行与dev分支不同的修改并提交,则合并 master与dev 时,会出现冲突。  </p>\n<p><strong>解决步骤：</strong> </p>\n<ul>\n<li>cat 查看一下产生冲突的文件的内容【git 会用&lt;&lt;&lt;，===，&gt;&gt;&gt;标识产生冲突的部分】</li>\n<li>将2个分支的内容改成一致即可</li>\n<li>合并、添加、提交</li>\n<li><code>git log </code> 查看合并情况</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">// 创建分支</span><br><span class=\"line\">git checkout -b dev</span><br><span class=\"line\">git add readme.txt</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;add merge&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">// 关闭快进模式，并合并</span><br><span class=\"line\">git checkout master</span><br><span class=\"line\">git merge --no-ff -m <span class=\"string\">&quot;关闭快进模式&quot;</span> dev</span><br><span class=\"line\"></span><br><span class=\"line\">// 删除分支</span><br><span class=\"line\">git branch -d dev</span><br><span class=\"line\"></span><br><span class=\"line\">// 查看分支</span><br><span class=\"line\">git branch</span><br><span class=\"line\"></span><br><span class=\"line\">// 查看删除分支后 是否仍然保留分支号</span><br><span class=\"line\">git <span class=\"built_in\">log</span> --graph --pretty=oneline --abbrev-commit</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"6-6-隐藏现场\"><a href=\"#6-6-隐藏现场\" class=\"headerlink\" title=\"6.6 隐藏现场\"></a>6.6 隐藏现场</h3><p>需要临时做其他分支的工作但又因为手中的事情还没做完不能提交时，可以使用隐藏现场功能，隐藏现场后，查看状态时，可以发现状态是干净的。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//隐藏现场</span><br><span class=\"line\">git stash</span><br><span class=\"line\"></span><br><span class=\"line\">//查看状态</span><br><span class=\"line\">git status</span><br><span class=\"line\"></span><br><span class=\"line\">//查看隐藏的现场</span><br><span class=\"line\">git stash list</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"6-7-还原现场\"><a href=\"#6-7-还原现场\" class=\"headerlink\" title=\"6.7 还原现场\"></a>6.7 还原现场</h3><p>1.git stash apply恢复，恢复后，stash内容并不删除，你需要使用命令git stash drop来删除。<br>2.另一种方式是使用git stash pop,恢复的同时把stash内容也删除了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//方法1</span><br><span class=\"line\">// 还原现场，然后删除最新的一条现场记录</span><br><span class=\"line\">git stash apply</span><br><span class=\"line\">git stash drop</span><br><span class=\"line\"></span><br><span class=\"line\">//方法2</span><br><span class=\"line\">// 还原现场并删除记录</span><br><span class=\"line\">git stash pop</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"Git-学习笔记\"><a href=\"#Git-学习笔记\" class=\"headerlink\" title=\"Git-学习笔记\"></a>Git-学习笔记</h1><p>[toc]</p>\n<h2 id=\"1-Git-安装及全局配置\"><a href=\"#1-Git-安装及全局配置\" class=\"headerlink\" title=\"1. Git 安装及全局配置\"></a>1. Git 安装及全局配置</h2><blockquote>\n<p><strong>以Windows为例：</strong></p>\n<ol>\n<li>从 <strong>Git官网</strong> 直接下载安装程序，然后按 <strong>默认</strong> 选项安装</li>\n<li>若 在点击左下角的windows图标后 能够找到 <strong>“Git”-“Git Bash”</strong>，并且打开后出现类似 cmd 的窗口，则<strong>安装成功。</strong></li>\n<li>打开 Git Bash【git bash中可以输入  Linux命令，相当于 linux中的终端】</li>\n<li>输入<code>git config --global user.name &quot;用户名&quot;</code></li>\n<li>输入 <code>git config --global user.email &quot;邮箱地址&quot;    </code></li>\n</ol>\n</blockquote>\n<h2 id=\"2-Git-的工作原理\"><a href=\"#2-Git-的工作原理\" class=\"headerlink\" title=\"2. Git 的工作原理\"></a>2. Git 的工作原理</h2><h3 id=\"2-1-git-与-svn-的差别\"><a href=\"#2-1-git-与-svn-的差别\" class=\"headerlink\" title=\"2.1 git 与 svn 的差别\"></a>2.1 git 与 svn 的差别</h3><blockquote>\n<ul>\n<li>  git 是 <strong>分布式</strong>的版本控制系统，在<strong>本地和远程</strong> 各有1个版本库,工作时可以<strong>不用联网</strong></li>\n<li>  svn 是<strong>集中式</strong>的版本控制系统，是多个人<strong>共用1个</strong>版本库，工作时需要<strong>联网</strong></li>\n</ul>\n</blockquote>\n<h3 id=\"2-2-几个重要的概念\"><a href=\"#2-2-几个重要的概念\" class=\"headerlink\" title=\"2.2 几个重要的概念\"></a>2.2 几个重要的概念</h3><ul>\n<li><strong>工作区</strong>【workspace】：文件夹</li>\n<li><strong>暂存区</strong>【stage】：git add 时，从 workspace  添加到  stage</li>\n<li><strong>本地仓库</strong>【Repository】：git commit 时，将stage中的文件 提交到本地版本库</li>\n<li><strong>远程仓库</strong>【Remote】：git push 时，将 Repository 中的文件推送到远程仓库，如：github，gitee等网站。</li>\n<li><strong>注意事项：</strong> git<strong>只能追踪文本文件的内容修改</strong>，不能追踪二进制文件【如：图片】。对于二进制文件，git只能知道它有修改，但不知道修改的内容。<br><img src=\"https://img-blog.csdnimg.cn/2020112516134783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><h2 id=\"3-新建仓库\"><a href=\"#3-新建仓库\" class=\"headerlink\" title=\"3. 新建仓库\"></a>3. 新建仓库</h2></li>\n</ul>\n<h3 id=\"3-1-创建版本库\"><a href=\"#3-1-创建版本库\" class=\"headerlink\" title=\"3.1 创建版本库\"></a>3.1 创建版本库</h3><p>【创建之后的大部分命令都在版本库文件夹下输入】</p>\n<ol>\n<li> <strong>版本库</strong> 就是一个能够<strong>被 git 管理</strong> (增、删、改、恢复) 的<strong>目录</strong></li>\n<li><strong>创建步骤</strong>：<blockquote>\n<ol>\n<li>创建的文件夹，用于充当版本库【1个名为 testRepo 的版本库】,</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> e:</span><br><span class=\"line\">mkdir testRepo</span><br></pre></td></tr></table></figure>\n\n\n<blockquote>\n<ol start=\"2\">\n<li>初始化版本库<br>【初始化后生成 .git 隐藏文件，该文件不能动，否则会破坏版本库】</li>\n</ol>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> testRepo</span><br><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-2-添加文件到暂存区\"><a href=\"#3-2-添加文件到暂存区\" class=\"headerlink\" title=\"3.2 添加文件到暂存区\"></a>3.2 添加文件到暂存区</h3><p> 【以在 testRepo 文件夹中 创建1个名为 readme.txt 的文件为例】</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//创建1个名为 readme.txt 的文件，并输入内容，保存</span><br><span class=\"line\">git add ./readme.txt</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-3-提交文件到-本地仓库\"><a href=\"#3-3-提交文件到-本地仓库\" class=\"headerlink\" title=\"3.3  提交文件到 本地仓库\"></a>3.3  提交文件到 本地仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">&quot;描述信息，一般描述修改的内容&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-4-查看-版本库状态\"><a href=\"#3-4-查看-版本库状态\" class=\"headerlink\" title=\"3.4 查看 版本库状态\"></a>3.4 查看 版本库状态</h3><p>git状态:指 是否提交，是否推送 等状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-5-查看-更改的内容\"><a href=\"#3-5-查看-更改的内容\" class=\"headerlink\" title=\"3.5 查看 更改的内容\"></a>3.5 查看 更改的内容</h3><p>【查看 当前工作区的文件（此时还没有 git add）与原来相比有不同】<br>查看所做的更改</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff readme.txt</span><br></pre></td></tr></table></figure>\n\n<p>确认无误后，git add,和git commit </p>\n<h2 id=\"4-版本回退\"><a href=\"#4-版本回退\" class=\"headerlink\" title=\"4. 版本回退\"></a>4. 版本回退</h2><h3 id=\"4-1-查看历史版本记录\"><a href=\"#4-1-查看历史版本记录\" class=\"headerlink\" title=\"4.1 查看历史版本记录\"></a>4.1 查看历史版本记录</h3><p>即：查看历史 commit 记录。越上面，记录越新</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//详细显示</span><br><span class=\"line\">git <span class=\"built_in\">log</span></span><br><span class=\"line\"></span><br><span class=\"line\">//简要显示</span><br><span class=\"line\">git <span class=\"built_in\">log</span> --pretty=oneline</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-2-版本回退\"><a href=\"#4-2-版本回退\" class=\"headerlink\" title=\"4.2 版本回退\"></a>4.2 版本回退</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//回退到上一个版本</span><br><span class=\"line\">git reset --hard HEAD^</span><br><span class=\"line\"></span><br><span class=\"line\">//回退到上两个版本</span><br><span class=\"line\">git reset --hard HEAD^^</span><br><span class=\"line\"></span><br><span class=\"line\">//回退上100个版本</span><br><span class=\"line\">git reset --hard HEAD~100</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-3-回退后又想恢复到回退前的版本\"><a href=\"#4-3-回退后又想恢复到回退前的版本\" class=\"headerlink\" title=\"4.3 回退后又想恢复到回退前的版本\"></a>4.3 回退后又想恢复到回退前的版本</h3><p>git reset –hard 版本号<br>如：<code>git reset --hard 6dsd2152</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查看版本号</span><br><span class=\"line\">git reflog</span><br><span class=\"line\"></span><br><span class=\"line\">//根据版本号以回退版本</span><br><span class=\"line\">git reset --hard 版本号</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-4-撤销修改\"><a href=\"#4-4-撤销修改\" class=\"headerlink\" title=\"4.4 撤销修改\"></a>4.4 撤销修改</h3><ul>\n<li><strong>撤销修改：</strong> 撤销 提交到<strong>本地版本库</strong>的修改<ul>\n<li><strong>知道哪里错了</strong>：直接手动在文件里改，然后git add、commit等操作</li>\n<li><strong>不知道哪里错了</strong>：【2种方法】<ul>\n<li>根据 本地版本库 回退：<code>git reset --hard HEAD^</code></li>\n<li>直接使用 撤销命令：【2种情况】<ul>\n<li><strong>还没有 git add</strong>，撤销后的形成的版本就是本地版本库中的版本</li>\n<li><strong>已经 git add 后</strong>又做了修改，撤销后形成的版本是暂存区中的版本<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//直接使用撤销命令</span><br><span class=\"line\">// 注意：命令中的 -- 很重要，有--是撤销，没有--是切换分支</span><br><span class=\"line\"></span><br><span class=\"line\">git checkout -- readme.txt</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-5-删除文件\"><a href=\"#4-5-删除文件\" class=\"headerlink\" title=\"4.5 删除文件\"></a>4.5 删除文件</h3><p>直接删除，然后 commit</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//删除</span><br><span class=\"line\">rm ./abc.txt</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;删除了当前目录下的abc.txt文件&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//撤销删除</span><br><span class=\"line\">git checkout -- abc.txt</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"5-远程仓库\"><a href=\"#5-远程仓库\" class=\"headerlink\" title=\"5. 远程仓库\"></a>5. 远程仓库</h2><h3 id=\"5-1-生成SSH\"><a href=\"#5-1-生成SSH\" class=\"headerlink\" title=\"5.1 生成SSH\"></a>5.1 生成SSH</h3><p>使用远程仓库需要先在 github、gitee 等 代码托管网站先注册账户</p>\n<blockquote>\n<p><strong>以 gitee 为例</strong></p>\n<ol>\n<li>进入用户的主目录 <code>C:\\Users\\admin</code></li>\n<li>查看 是否有 .ssh文件夹 及 .ssh文件夹内 是否 有 <code>id-rsa</code> 和 <code>id_rsa.pub</code> 2个文件。如果没有，则 进行第三步    </li>\n<li>打开 git-bash,输入<code>ssh-keygen -t rsa –C “邮箱”</code>，生成上述的 <strong>2个文件</strong></li>\n<li>用记事本打开 <code>id_rsa.pub</code>    文件，全选后复制</li>\n<li>浏览器打开 gitee 并登录</li>\n<li>进入 gitee, 设置 =》    安全设置 =》SSH公钥</li>\n<li>输入标题【标题随便写】</li>\n<li>公钥就是刚才从<code>id_rsa.pub</code>中复制的内容</li>\n<li>点击 确定</li>\n</ol>\n</blockquote>\n<h3 id=\"5-2-新建远程库\"><a href=\"#5-2-新建远程库\" class=\"headerlink\" title=\"5.2 新建远程库\"></a>5.2 新建远程库</h3><blockquote>\n<ol>\n<li>点击gitee 右上角的<kbd>+</kbd>  =》 新建仓库</li>\n<li>输入仓库名称【需要和本地版本库的名称一致(文件夹名)】</li>\n<li>其他项可以默认</li>\n<li>点击 创建</li>\n<li>根据提示输入命令</li>\n</ol>\n</blockquote>\n<h3 id=\"5-3-与-远程库-建立关联\"><a href=\"#5-3-与-远程库-建立关联\" class=\"headerlink\" title=\"5.3 与 远程库 建立关联\"></a>5.3 与 远程库 建立关联</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 以下仅为示例</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// origin为本地仓库与远程仓库的链接的名字，代表了1个仓库，</span><br><span class=\"line\">// 因此，账户中有多个不同项目的仓库时，把origin换成不同的名字。</span><br><span class=\"line\">// 添加remote时的仓库名格式(ssh): </span><br><span class=\"line\">//      git@托管网站的域名:用户名/仓库名.git</span><br><span class=\"line\"></span><br><span class=\"line\">// 在 本地建立 与 远程仓库 的链接。</span><br><span class=\"line\">git remote add origin git@gitee.com:admin/testRepo.git</span><br><span class=\"line\"></span><br><span class=\"line\">// 第一次推送需要 -u,之后可以不用</span><br><span class=\"line\">git push -u origin master</span><br><span class=\"line\"></span><br><span class=\"line\">// 第2次及以后的推送</span><br><span class=\"line\">git push origin master</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// 如果推送时发生冲突，可能是因为远程和本地的内容有部分不一致.</span><br><span class=\"line\"></span><br><span class=\"line\">// 解决办法1：先pill，再合并，再解决冲突，再推送</span><br><span class=\"line\">git pull origin master</span><br><span class=\"line\"></span><br><span class=\"line\">// 解决办法2【pull也失败时】：先建立分支与远程库之间的关联</span><br><span class=\"line\">git branch --set-upstream dev origin/dev</span><br><span class=\"line\">git pull</span><br><span class=\"line\">//解决冲突后,再add、commit、push</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"5-4-查看远程库的信息\"><a href=\"#5-4-查看远程库的信息\" class=\"headerlink\" title=\"5.4 查看远程库的信息\"></a>5.4 查看远程库的信息</h3><p>远程库的信息都是成对出现的，包括：</p>\n<ul>\n<li>fetch： 抓取</li>\n<li>push： 推送</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查看远程库的信息</span><br><span class=\"line\">git remote</span><br><span class=\"line\"></span><br><span class=\"line\">//查看远程库的详细信息</span><br><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"5-5-将-远程库-克隆-到本地\"><a href=\"#5-5-将-远程库-克隆-到本地\" class=\"headerlink\" title=\"5.5 将 远程库 克隆 到本地\"></a>5.5 将 远程库 克隆 到本地</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> 进入要存放代码库的文件夹</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> git@gitee.com:admin/testRepo.git</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h3 id=\"5-6-删除-关联-本地与远程库-的链接\"><a href=\"#5-6-删除-关联-本地与远程库-的链接\" class=\"headerlink\" title=\"5.6 删除 关联 本地与远程库 的链接\"></a>5.6 删除 关联 本地与远程库 的链接</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote rm origin</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"6-分支\"><a href=\"#6-分支\" class=\"headerlink\" title=\"6. 分支\"></a>6. 分支</h2><p>Git 将 每次的提交串成1条时间线，master就是这条 主时间线的名字，HEAD 指向 master，master指向提交。创建并合并分支类似于将master复制 1份，在分支上修改后，再用分支的内容覆盖掉原来的master。<br><strong>master分支</strong>：一般存放稳定的版本，开发和修复bug一般创建新的分支，在分支上操作。</p>\n<h3 id=\"6-1-创建、切换分支\"><a href=\"#6-1-创建、切换分支\" class=\"headerlink\" title=\"6.1 创建、切换分支\"></a>6.1 创建、切换分支</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//创建并切换到分支</span><br><span class=\"line\">git checkout -b 分支名</span><br><span class=\"line\"></span><br><span class=\"line\">//上面1句命令 等价于</span><br><span class=\"line\">git branch 分支名</span><br><span class=\"line\">git checkout 分支名</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"6-2-查看分支\"><a href=\"#6-2-查看分支\" class=\"headerlink\" title=\"6.2 查看分支\"></a>6.2 查看分支</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查看分支，其中，分支名前带*，表示当前为该分支</span><br><span class=\"line\">git branch</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"6-3-合并到主分支\"><a href=\"#6-3-合并到主分支\" class=\"headerlink\" title=\"6.3 合并到主分支\"></a>6.3 合并到主分支</h3><p>默认情况下，git 使用 Fast-forward（快进模式）来合并分支</p>\n<ul>\n<li>Fast-forward（快进模式）：直接将master指向分支的提交，删除分支后，会丢掉分支信息</li>\n<li>关闭快进模式： <code>git merge –no-ff -m “注释” 分支名</code></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 1. 先切换到 master分支</span><br><span class=\"line\">git checkout master</span><br><span class=\"line\"></span><br><span class=\"line\">// 2. 再合并[【其中，dev为我们自建创建的分支的名字】</span><br><span class=\"line\">git merge dev</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"6-4-删除分支\"><a href=\"#6-4-删除分支\" class=\"headerlink\" title=\"6.4 删除分支\"></a>6.4 删除分支</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 删除分支</span><br><span class=\"line\">git branch -d 分支名</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"6-5-解决分支之间的冲突\"><a href=\"#6-5-解决分支之间的冲突\" class=\"headerlink\" title=\"6.5 解决分支之间的冲突\"></a>6.5 解决分支之间的冲突</h3><p><strong>情景：</strong>   创建1个名为dev的分支，在dev分支上修改并提交，然后切换回master分支，如果在master上再进行与dev分支不同的修改并提交,则合并 master与dev 时,会出现冲突。  </p>\n<p><strong>解决步骤：</strong> </p>\n<ul>\n<li>cat 查看一下产生冲突的文件的内容【git 会用&lt;&lt;&lt;，===，&gt;&gt;&gt;标识产生冲突的部分】</li>\n<li>将2个分支的内容改成一致即可</li>\n<li>合并、添加、提交</li>\n<li><code>git log </code> 查看合并情况</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">// 创建分支</span><br><span class=\"line\">git checkout -b dev</span><br><span class=\"line\">git add readme.txt</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;add merge&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">// 关闭快进模式，并合并</span><br><span class=\"line\">git checkout master</span><br><span class=\"line\">git merge --no-ff -m <span class=\"string\">&quot;关闭快进模式&quot;</span> dev</span><br><span class=\"line\"></span><br><span class=\"line\">// 删除分支</span><br><span class=\"line\">git branch -d dev</span><br><span class=\"line\"></span><br><span class=\"line\">// 查看分支</span><br><span class=\"line\">git branch</span><br><span class=\"line\"></span><br><span class=\"line\">// 查看删除分支后 是否仍然保留分支号</span><br><span class=\"line\">git <span class=\"built_in\">log</span> --graph --pretty=oneline --abbrev-commit</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"6-6-隐藏现场\"><a href=\"#6-6-隐藏现场\" class=\"headerlink\" title=\"6.6 隐藏现场\"></a>6.6 隐藏现场</h3><p>需要临时做其他分支的工作但又因为手中的事情还没做完不能提交时，可以使用隐藏现场功能，隐藏现场后，查看状态时，可以发现状态是干净的。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//隐藏现场</span><br><span class=\"line\">git stash</span><br><span class=\"line\"></span><br><span class=\"line\">//查看状态</span><br><span class=\"line\">git status</span><br><span class=\"line\"></span><br><span class=\"line\">//查看隐藏的现场</span><br><span class=\"line\">git stash list</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"6-7-还原现场\"><a href=\"#6-7-还原现场\" class=\"headerlink\" title=\"6.7 还原现场\"></a>6.7 还原现场</h3><p>1.git stash apply恢复，恢复后，stash内容并不删除，你需要使用命令git stash drop来删除。<br>2.另一种方式是使用git stash pop,恢复的同时把stash内容也删除了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//方法1</span><br><span class=\"line\">// 还原现场，然后删除最新的一条现场记录</span><br><span class=\"line\">git stash apply</span><br><span class=\"line\">git stash drop</span><br><span class=\"line\"></span><br><span class=\"line\">//方法2</span><br><span class=\"line\">// 还原现场并删除记录</span><br><span class=\"line\">git stash pop</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"JavaScript-笔记","_content":"\n# JavaScript-笔记\n\n[toc]\n\n## 1. 数据类型 + 类型转化\n\n-   string\n-   boolean\n-   number\n-   object\n-   null\n-   undefined\n\n\n\n### 1.1 String  => Number\n\n【直接查看字符串的首字符 是否 为数字=》不是 =》NaN】\n\n-   parseInt( )\n\n```js\nparseInt(\"123abc\")   // 123\n\nparseInt(\"22.5\") \t // 22\n\nparseInt(\"abc\")\t\t // NaN\n```\n\n\n\n-   parseFloat( )\n\n```js\nparseFloat(\"123abc\")\t// 123.0\n\nparseFloat(\"123.23.4\")\t// 123.23\n\nparseFloat(\"abc\")\t\t// NaN\n```\n\n### 1.2  Number => String  \n\n-   toString( )：转化为字符串\n-   toFix( 保留的小数位数 )：四舍五入后，转化为字符串\n\n## 2. 数组\n\n### 2.1 定义：\n\n```js\nvar arr = [1,2,3,4]\n\nvar arr1 = new Array(1,2,3,4)\n\nvar arr2 = new Array(size)\n\n\nconsole.log(arr)\t//打印整个数组\nconsole.log(arr[0]) //打印数组第一个元素\n```\n\n\n\n### 2.2 数组长度：\n\narr.length ，长度可被修改\n\n```js\nvar arr = [1,2,3,4]\n\nconsole.log(arr.length)\t//4\n\narr.length = 10\n```\n\n\n\n### 2.3 数组元素 + 数组属性 的修改\n\n【下标：若不是数字，则当作属性】\n\n```js\nvar arr = [1,2,3,4]\n\narr[4] = 5\n\nconsole.log(arr)\t//打印整个数组\n\n\narr['uname']='张三'\t// 向数组中添加一个属性uname ,uname的属性值为张三\n```\n\n\n\n### 2.4 数组的 遍历\n\n```js\nvar arr = [1,2,3,4]\n\n// for()：不遍历属性\n\n\tfor(let i=0;i<arr.length;i++){\n        console.log(arr[i])        \n    }\n\n\n\n\n\n\n\n// for... in：不遍历 索引和属性的undefined\n\n\tfor(let index in arr){\n        console.log(index)  \n        console.log(arr[index])  \n    }\n\n\n\n\n\n\n// forEach()：不遍历 索引的undefined\n\t\n\tar.forEach(function(element,index){\n         console.log(index)  \n        console.log(element)\n    })\n\n\t\n```\n\n### 2.5 数组的 常用方法\n\n```js\n/*\n * arr.push(元素)：末尾插入\n * arr.pop()：末尾删除\n * arr.unshift(元素)：首部插入\n * arr.shift(元素)：首部删除\n * arr.indexOf(字符)：查找字符的索引\n * arr.reverse()：反转，改变原数组\n * arr.concat(数组2)：数组合并,不改变原数组\n * arr.join(字符串连接符)：将 数组元素 按照连接符  合并为 字符串\n * arr.slice(startIndex,endIndex):切片，不改变原数组=> [start,end)\n * arr/splice(startIndex,count,插入元素1，插入元素2)：替换/删除，改变原数组\n * \t\t\n*/\n```\n\n## 3. 函数\n\n定义：\n\n```js\n// 1. \n\t\tfunction add(a,b){\n            return a+b;\n        }\n\n\t\tadd(1,2);\n\n\n// 2. \n\t\tlet add = function(a,b){\n            return a+b;\n        }\n        \n        add(1,2);\n\n\n// 3. \n\t\tlet add = new Function('a','b','return a+b')\n        \n        add(1,2);\n\n\n```\n\n## 4.  内置对象 +对象\n\n### 4.1 内置对象\n\n-   string\n-   date\n-   math\n-   array\n-   arguments\n\n\n\n\n\n### 4.2 对象\n\n#### 4.2.1. 定义：\n\n```js\nlet obj = {\n    name:'张三'，\n    age: 20    \n}\n\nobj.age = 15;\n\nconsole.log(obj.name)\n```\n\n\n\n#### 4.2.2. 序列化 + 反序列化\n\n-   序列化 ：对象  =转化为= 》 字符串\n\n-   反序列化： 字符串  =转化为= 》对象\n\n```js\nJSON.stringify(obj)\n\nJSON.parse(str)\n```\n\n#### 4.2.3. this\n\n默认指向window对象。谁调用，this就指向谁\n\n```js\nlet print = function(){\n    this.name = 15\n    console.log(this.name)\n}\n```\n\n## 5. 事件\n\n**注意**：\n\n1.  js最好写html后面，防止加载js时还没有html标签，造成程序报错\n2.  若一定想要写在html前面，则需要在 js 外面套函数：window.onload = function( ){… }\n\n\n\n### 5.1 事件定义：\n\n**事件** = 事件源 + 监听器+ 事件名 + 处理\n\n【3种事件】\n\n```js\n// 1. html事件\n//\t\t\t 事件源:input\n//\t\t\t 监听器:onclick\n//\t\t\t 事件名 + 处理: alert('hello world')\n\t<input type=\"button\" value=\"点击\" id='btn1' onclick=\"alert('hello world')\">\n        \n    \n        \n        \n// 2. dom0级事件 【多次给某个事件添加函数时，只有最后一次添加的函数生效】\n        <input type=\"button\" value=\"点击\" id='btn1'>\n        \n        let Obtn1 = document.getElementById('btn1');\n\n\t\tObtn1.onclick = function(){\n            alert('hello world')\n        }\n\n\n\n// 3. dom2级事件【其中事件:冒泡/捕获的bool值可以 省略,默认：事件冒泡 】\n//\t\t\t\tObtn1.addEventListener(事件名，处理函数，是否使用事件捕获=false)\n//\t\t\t\tObtn1.removeEventListener(事件名，处理函数，是否使用事件捕获=false)\n\n\t\t<input type=\"button\" value=\"点击\" id='btn1'>\n            \n        let Obtn1 = document.getElementById('btn1');\n\n\t\tObtn1.addEventListener('click'，function(){alert('hello')}，false)\n        Obtn1.removeEventListener('click'，function(){alert('hello')}，false)\n\n\t\t\n        \n```\n\n### 5.2 常用事件：\n\n>-   window.onload\n>\n>\n>\n>鼠标：\n>\n>-   on click\n>-   on doublec lick\n>-   on mouse over\n>-   on mouse out\n>\n>\n>\n>键盘：\n>\n>-   on key down\n>-   on key up\n>\n>\n>\n>文本框\n>\n>-   on focus\n>-   on blur\n>\n>\n>\n>select+option标签\n>\n>-   on change\n\n\n\n\n\n事件流：【事件的触发顺序】\n\n-   事件冒泡【默认的事件流】：内层标签  =传递到=》外层标签\n-   事件捕获：外层标签  =传递到=》内层标签\n\n\n\n## 6. BOM对象\n\n### 6.1 弹窗：\n\n-   alert( ‘警告信息’)\n-   prompt( ‘ 提示’)：输入弹窗，获取字符串\n-   confirm( ‘ 提示’)：确认框，返回 bool值\n\n\n\n\n\n### 6.2 页面【打开、关闭】：\n\n-   window.open(网址str)\n-   window.close( )：只适用于 关闭window.open( )打开的页面\n\n```js\nwindow.open()\t// 打开空白页面\n\nwindow.open('./abc.html')\t// 打开本地页面\n\nwindow.open('www.baidu.com')\t// 打开网络页面\n\nwindow.open('www.baidu.com'，‘_blank’)\t// 以新页面方式，打开网络页面\n\nwindow.close( )\t//关闭当前打开的页面\n```\n\n\n\n\n\n\n\n### 6.3 时间日期：\n\n```js\nlet d = new Date()\nd.toLocaleDateString()  \t// \"2021/5/6\"\n```\n\n\n\n\n\n\n\n### 6.4 history对象：\n\n-   window.history.length ： 历史记录数\n\n-   window.history.back( )：后退按钮\n-   window.history.forward( )：前进按钮\n-   window.history.go( num | url )：跳转\n\n```js\nhistory.go(-1)\t\t// 上一个页面，-1为 当前页面 与 目标url 的相对位置\n```\n\n\n\n\n\n\n\n### 6.5 location对象：\n\n-   window.location.href：网址\n-   window.location.reload( )：刷新页面\n-   window.location.replace( )：替换url\n\n```js\nwindow.location.href = 'http://www/baidu.com'\n\nwindow.location.reload( )\n\nlocation.replace('http://qq.com')\n```\n\n\n\n\n\n## 7. DOM对象\n\n### 7.1 直接 获取 dom节点：\n\n-   document. getEmenentBy Id ( 标签 id )：`ID`\n-   document. getEmenentsBy ClassName ( 标签class ) [下标]:`类名`\n-   document. getElementsBy TagName ( 标签名 ) [下标]：`标签`\n-   document. getElementsBy Name ( 表单元素的name属性值 ) [下标]：`表单名`\n\n\n\n\n\n### 7.2 间接 获取 dom节点：\n\n-   parentNode\n\n\n\n-   previousSibling\n-   nextSibling\n\n\n\n-   childNodes\n-   firstChild\n-   lastChild\n\n```JS\n\nlet ul = document. getEmenentById('uls')\n\nconsole.log(ul.ChildNodes)\n```\n\n\n\n\n\n\n\n### 7.3 创建节点\n\n-   document.createElement(标签str )\n-   document.createTextNode(文本str )\n-   标签1.innerHTML = html字符串\n\n\n\n### 7.4 添加节点：\n\n-   标签1.appendChild( 标签2)\n-   标签1.innerHTML = html字符串\n-   标签1.insertBefore(标签2)：`先找父节点，再调用insertBefore(标签类型，在哪个节点前)`\n\n```js\n//方式1:  appendChild\n\tlet div1 = document.getElementById('div1');\n\n\tlet p =  document.createElement('p');\n\n\tlet txt = document.createTextNode('你好');\n\n\tp.appendChild(txt);\n\t\n\tdiv1.appendChild(p);\n\t\n\n\n\n//方式2:  innerHTML\n\n\tlet div1 =  document.createElement('div');\n    \n\tdiv1.innerHTML = `<p>你好</p>`;\n    \n    \n    \n    \n    \n//方式3:  insertBefore\n    // div1前 插入节点 div0\n   let parent =document.getElementById('div1').parent;   \n    \n    let div0 =  document.createElement('div');    \n    div0.innerHTML = \"123\";\n\n    parent.insertBefore('div',document.getElementById('div1'))\n```\n\n### 7.5 删除结点\n\n-   removeChild( )\n\n```js\nlet div1 = document.getElementById('div1')\n\ndiv1.parentNode.removeChild( div1 )\t\t// 删除div1\n```\n\n\n\n\n\n\n\n### 7.6 修改结点的属性\n\n-   直接访问属性后修改\n-   利用 标签1.setAttribute(属性名，属性值)\n-   利用  innerHTML 的字符串拼接\n\n```js\n//方式1\n\n\t\tlet div1 = document.getElementById('div1')\n\t\tlet img1 = document.createElement('img')\n        \n        img1.width = 200\n\t\timg1.height = 200\n\t\timg1.src = './img/pic.jpg'\n\n\t\tdiv1.appendChild(img1)\n\n\t\n\n\n//方式2\n\n\t\tlet div1 = document.getElementById('div1')\n        \n\t\tlet img1 = document.createElement('img')\n        \n        img1.setAttribute('src','./img/pic.jpg')\n\n\t\tdiv1.appendChild(img1)\n\n\n//方式3\n\t\t\n\t  let div1 = document.getElementById('div1')\n        \n      div1.innerHTML +=`<img width=\"200px\" height=\"200px\" src=\"./img/pic.jpg\" />`\n\t\t\n```\n\n","source":"_posts/JavaScript-笔记.md","raw":"---\ntitle: JavaScript-笔记\ntag: JavaScript\ncategories:\n  - [前端,基础]\n  - [前端,JavaScript]\n---\n\n# JavaScript-笔记\n\n[toc]\n\n## 1. 数据类型 + 类型转化\n\n-   string\n-   boolean\n-   number\n-   object\n-   null\n-   undefined\n\n\n\n### 1.1 String  => Number\n\n【直接查看字符串的首字符 是否 为数字=》不是 =》NaN】\n\n-   parseInt( )\n\n```js\nparseInt(\"123abc\")   // 123\n\nparseInt(\"22.5\") \t // 22\n\nparseInt(\"abc\")\t\t // NaN\n```\n\n\n\n-   parseFloat( )\n\n```js\nparseFloat(\"123abc\")\t// 123.0\n\nparseFloat(\"123.23.4\")\t// 123.23\n\nparseFloat(\"abc\")\t\t// NaN\n```\n\n### 1.2  Number => String  \n\n-   toString( )：转化为字符串\n-   toFix( 保留的小数位数 )：四舍五入后，转化为字符串\n\n## 2. 数组\n\n### 2.1 定义：\n\n```js\nvar arr = [1,2,3,4]\n\nvar arr1 = new Array(1,2,3,4)\n\nvar arr2 = new Array(size)\n\n\nconsole.log(arr)\t//打印整个数组\nconsole.log(arr[0]) //打印数组第一个元素\n```\n\n\n\n### 2.2 数组长度：\n\narr.length ，长度可被修改\n\n```js\nvar arr = [1,2,3,4]\n\nconsole.log(arr.length)\t//4\n\narr.length = 10\n```\n\n\n\n### 2.3 数组元素 + 数组属性 的修改\n\n【下标：若不是数字，则当作属性】\n\n```js\nvar arr = [1,2,3,4]\n\narr[4] = 5\n\nconsole.log(arr)\t//打印整个数组\n\n\narr['uname']='张三'\t// 向数组中添加一个属性uname ,uname的属性值为张三\n```\n\n\n\n### 2.4 数组的 遍历\n\n```js\nvar arr = [1,2,3,4]\n\n// for()：不遍历属性\n\n\tfor(let i=0;i<arr.length;i++){\n        console.log(arr[i])        \n    }\n\n\n\n\n\n\n\n// for... in：不遍历 索引和属性的undefined\n\n\tfor(let index in arr){\n        console.log(index)  \n        console.log(arr[index])  \n    }\n\n\n\n\n\n\n// forEach()：不遍历 索引的undefined\n\t\n\tar.forEach(function(element,index){\n         console.log(index)  \n        console.log(element)\n    })\n\n\t\n```\n\n### 2.5 数组的 常用方法\n\n```js\n/*\n * arr.push(元素)：末尾插入\n * arr.pop()：末尾删除\n * arr.unshift(元素)：首部插入\n * arr.shift(元素)：首部删除\n * arr.indexOf(字符)：查找字符的索引\n * arr.reverse()：反转，改变原数组\n * arr.concat(数组2)：数组合并,不改变原数组\n * arr.join(字符串连接符)：将 数组元素 按照连接符  合并为 字符串\n * arr.slice(startIndex,endIndex):切片，不改变原数组=> [start,end)\n * arr/splice(startIndex,count,插入元素1，插入元素2)：替换/删除，改变原数组\n * \t\t\n*/\n```\n\n## 3. 函数\n\n定义：\n\n```js\n// 1. \n\t\tfunction add(a,b){\n            return a+b;\n        }\n\n\t\tadd(1,2);\n\n\n// 2. \n\t\tlet add = function(a,b){\n            return a+b;\n        }\n        \n        add(1,2);\n\n\n// 3. \n\t\tlet add = new Function('a','b','return a+b')\n        \n        add(1,2);\n\n\n```\n\n## 4.  内置对象 +对象\n\n### 4.1 内置对象\n\n-   string\n-   date\n-   math\n-   array\n-   arguments\n\n\n\n\n\n### 4.2 对象\n\n#### 4.2.1. 定义：\n\n```js\nlet obj = {\n    name:'张三'，\n    age: 20    \n}\n\nobj.age = 15;\n\nconsole.log(obj.name)\n```\n\n\n\n#### 4.2.2. 序列化 + 反序列化\n\n-   序列化 ：对象  =转化为= 》 字符串\n\n-   反序列化： 字符串  =转化为= 》对象\n\n```js\nJSON.stringify(obj)\n\nJSON.parse(str)\n```\n\n#### 4.2.3. this\n\n默认指向window对象。谁调用，this就指向谁\n\n```js\nlet print = function(){\n    this.name = 15\n    console.log(this.name)\n}\n```\n\n## 5. 事件\n\n**注意**：\n\n1.  js最好写html后面，防止加载js时还没有html标签，造成程序报错\n2.  若一定想要写在html前面，则需要在 js 外面套函数：window.onload = function( ){… }\n\n\n\n### 5.1 事件定义：\n\n**事件** = 事件源 + 监听器+ 事件名 + 处理\n\n【3种事件】\n\n```js\n// 1. html事件\n//\t\t\t 事件源:input\n//\t\t\t 监听器:onclick\n//\t\t\t 事件名 + 处理: alert('hello world')\n\t<input type=\"button\" value=\"点击\" id='btn1' onclick=\"alert('hello world')\">\n        \n    \n        \n        \n// 2. dom0级事件 【多次给某个事件添加函数时，只有最后一次添加的函数生效】\n        <input type=\"button\" value=\"点击\" id='btn1'>\n        \n        let Obtn1 = document.getElementById('btn1');\n\n\t\tObtn1.onclick = function(){\n            alert('hello world')\n        }\n\n\n\n// 3. dom2级事件【其中事件:冒泡/捕获的bool值可以 省略,默认：事件冒泡 】\n//\t\t\t\tObtn1.addEventListener(事件名，处理函数，是否使用事件捕获=false)\n//\t\t\t\tObtn1.removeEventListener(事件名，处理函数，是否使用事件捕获=false)\n\n\t\t<input type=\"button\" value=\"点击\" id='btn1'>\n            \n        let Obtn1 = document.getElementById('btn1');\n\n\t\tObtn1.addEventListener('click'，function(){alert('hello')}，false)\n        Obtn1.removeEventListener('click'，function(){alert('hello')}，false)\n\n\t\t\n        \n```\n\n### 5.2 常用事件：\n\n>-   window.onload\n>\n>\n>\n>鼠标：\n>\n>-   on click\n>-   on doublec lick\n>-   on mouse over\n>-   on mouse out\n>\n>\n>\n>键盘：\n>\n>-   on key down\n>-   on key up\n>\n>\n>\n>文本框\n>\n>-   on focus\n>-   on blur\n>\n>\n>\n>select+option标签\n>\n>-   on change\n\n\n\n\n\n事件流：【事件的触发顺序】\n\n-   事件冒泡【默认的事件流】：内层标签  =传递到=》外层标签\n-   事件捕获：外层标签  =传递到=》内层标签\n\n\n\n## 6. BOM对象\n\n### 6.1 弹窗：\n\n-   alert( ‘警告信息’)\n-   prompt( ‘ 提示’)：输入弹窗，获取字符串\n-   confirm( ‘ 提示’)：确认框，返回 bool值\n\n\n\n\n\n### 6.2 页面【打开、关闭】：\n\n-   window.open(网址str)\n-   window.close( )：只适用于 关闭window.open( )打开的页面\n\n```js\nwindow.open()\t// 打开空白页面\n\nwindow.open('./abc.html')\t// 打开本地页面\n\nwindow.open('www.baidu.com')\t// 打开网络页面\n\nwindow.open('www.baidu.com'，‘_blank’)\t// 以新页面方式，打开网络页面\n\nwindow.close( )\t//关闭当前打开的页面\n```\n\n\n\n\n\n\n\n### 6.3 时间日期：\n\n```js\nlet d = new Date()\nd.toLocaleDateString()  \t// \"2021/5/6\"\n```\n\n\n\n\n\n\n\n### 6.4 history对象：\n\n-   window.history.length ： 历史记录数\n\n-   window.history.back( )：后退按钮\n-   window.history.forward( )：前进按钮\n-   window.history.go( num | url )：跳转\n\n```js\nhistory.go(-1)\t\t// 上一个页面，-1为 当前页面 与 目标url 的相对位置\n```\n\n\n\n\n\n\n\n### 6.5 location对象：\n\n-   window.location.href：网址\n-   window.location.reload( )：刷新页面\n-   window.location.replace( )：替换url\n\n```js\nwindow.location.href = 'http://www/baidu.com'\n\nwindow.location.reload( )\n\nlocation.replace('http://qq.com')\n```\n\n\n\n\n\n## 7. DOM对象\n\n### 7.1 直接 获取 dom节点：\n\n-   document. getEmenentBy Id ( 标签 id )：`ID`\n-   document. getEmenentsBy ClassName ( 标签class ) [下标]:`类名`\n-   document. getElementsBy TagName ( 标签名 ) [下标]：`标签`\n-   document. getElementsBy Name ( 表单元素的name属性值 ) [下标]：`表单名`\n\n\n\n\n\n### 7.2 间接 获取 dom节点：\n\n-   parentNode\n\n\n\n-   previousSibling\n-   nextSibling\n\n\n\n-   childNodes\n-   firstChild\n-   lastChild\n\n```JS\n\nlet ul = document. getEmenentById('uls')\n\nconsole.log(ul.ChildNodes)\n```\n\n\n\n\n\n\n\n### 7.3 创建节点\n\n-   document.createElement(标签str )\n-   document.createTextNode(文本str )\n-   标签1.innerHTML = html字符串\n\n\n\n### 7.4 添加节点：\n\n-   标签1.appendChild( 标签2)\n-   标签1.innerHTML = html字符串\n-   标签1.insertBefore(标签2)：`先找父节点，再调用insertBefore(标签类型，在哪个节点前)`\n\n```js\n//方式1:  appendChild\n\tlet div1 = document.getElementById('div1');\n\n\tlet p =  document.createElement('p');\n\n\tlet txt = document.createTextNode('你好');\n\n\tp.appendChild(txt);\n\t\n\tdiv1.appendChild(p);\n\t\n\n\n\n//方式2:  innerHTML\n\n\tlet div1 =  document.createElement('div');\n    \n\tdiv1.innerHTML = `<p>你好</p>`;\n    \n    \n    \n    \n    \n//方式3:  insertBefore\n    // div1前 插入节点 div0\n   let parent =document.getElementById('div1').parent;   \n    \n    let div0 =  document.createElement('div');    \n    div0.innerHTML = \"123\";\n\n    parent.insertBefore('div',document.getElementById('div1'))\n```\n\n### 7.5 删除结点\n\n-   removeChild( )\n\n```js\nlet div1 = document.getElementById('div1')\n\ndiv1.parentNode.removeChild( div1 )\t\t// 删除div1\n```\n\n\n\n\n\n\n\n### 7.6 修改结点的属性\n\n-   直接访问属性后修改\n-   利用 标签1.setAttribute(属性名，属性值)\n-   利用  innerHTML 的字符串拼接\n\n```js\n//方式1\n\n\t\tlet div1 = document.getElementById('div1')\n\t\tlet img1 = document.createElement('img')\n        \n        img1.width = 200\n\t\timg1.height = 200\n\t\timg1.src = './img/pic.jpg'\n\n\t\tdiv1.appendChild(img1)\n\n\t\n\n\n//方式2\n\n\t\tlet div1 = document.getElementById('div1')\n        \n\t\tlet img1 = document.createElement('img')\n        \n        img1.setAttribute('src','./img/pic.jpg')\n\n\t\tdiv1.appendChild(img1)\n\n\n//方式3\n\t\t\n\t  let div1 = document.getElementById('div1')\n        \n      div1.innerHTML +=`<img width=\"200px\" height=\"200px\" src=\"./img/pic.jpg\" />`\n\t\t\n```\n\n","slug":"JavaScript-笔记","published":1,"date":"2021-06-02T02:49:19.125Z","updated":"2021-06-01T07:36:09.364Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs16000dlcvdaus02njb","content":"<h1 id=\"JavaScript-笔记\"><a href=\"#JavaScript-笔记\" class=\"headerlink\" title=\"JavaScript-笔记\"></a>JavaScript-笔记</h1><p>[toc]</p>\n<h2 id=\"1-数据类型-类型转化\"><a href=\"#1-数据类型-类型转化\" class=\"headerlink\" title=\"1. 数据类型 + 类型转化\"></a>1. 数据类型 + 类型转化</h2><ul>\n<li>  string</li>\n<li>  boolean</li>\n<li>  number</li>\n<li>  object</li>\n<li>  null</li>\n<li>  undefined</li>\n</ul>\n<h3 id=\"1-1-String-gt-Number\"><a href=\"#1-1-String-gt-Number\" class=\"headerlink\" title=\"1.1 String  =&gt; Number\"></a>1.1 String  =&gt; Number</h3><p>【直接查看字符串的首字符 是否 为数字=》不是 =》NaN】</p>\n<ul>\n<li>  parseInt( )</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&quot;123abc&quot;</span>)   <span class=\"comment\">// 123</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&quot;22.5&quot;</span>) \t <span class=\"comment\">// 22</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&quot;abc&quot;</span>)\t\t <span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>  parseFloat( )</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseFloat</span>(<span class=\"string\">&quot;123abc&quot;</span>)\t<span class=\"comment\">// 123.0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">parseFloat</span>(<span class=\"string\">&quot;123.23.4&quot;</span>)\t<span class=\"comment\">// 123.23</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">parseFloat</span>(<span class=\"string\">&quot;abc&quot;</span>)\t\t<span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-Number-gt-String\"><a href=\"#1-2-Number-gt-String\" class=\"headerlink\" title=\"1.2  Number =&gt; String\"></a>1.2  Number =&gt; String</h3><ul>\n<li>  toString( )：转化为字符串</li>\n<li>  toFix( 保留的小数位数 )：四舍五入后，转化为字符串</li>\n</ul>\n<h2 id=\"2-数组\"><a href=\"#2-数组\" class=\"headerlink\" title=\"2. 数组\"></a>2. 数组</h2><h3 id=\"2-1-定义：\"><a href=\"#2-1-定义：\" class=\"headerlink\" title=\"2.1 定义：\"></a>2.1 定义：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(size)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr)\t<span class=\"comment\">//打印整个数组</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">0</span>]) <span class=\"comment\">//打印数组第一个元素</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-2-数组长度：\"><a href=\"#2-2-数组长度：\" class=\"headerlink\" title=\"2.2 数组长度：\"></a>2.2 数组长度：</h3><p>arr.length ，长度可被修改</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.length)\t<span class=\"comment\">//4</span></span><br><span class=\"line\"></span><br><span class=\"line\">arr.length = <span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-3-数组元素-数组属性-的修改\"><a href=\"#2-3-数组元素-数组属性-的修改\" class=\"headerlink\" title=\"2.3 数组元素 + 数组属性 的修改\"></a>2.3 数组元素 + 数组属性 的修改</h3><p>【下标：若不是数字，则当作属性】</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">arr[<span class=\"number\">4</span>] = <span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr)\t<span class=\"comment\">//打印整个数组</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">arr[<span class=\"string\">&#x27;uname&#x27;</span>]=<span class=\"string\">&#x27;张三&#x27;</span>\t<span class=\"comment\">// 向数组中添加一个属性uname ,uname的属性值为张三</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-4-数组的-遍历\"><a href=\"#2-4-数组的-遍历\" class=\"headerlink\" title=\"2.4 数组的 遍历\"></a>2.4 数组的 遍历</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// for()：不遍历属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(arr[i])        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// for... in：不遍历 索引和属性的undefined</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> index <span class=\"keyword\">in</span> arr)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(index)  </span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(arr[index])  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// forEach()：不遍历 索引的undefined</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tar.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">element,index</span>)</span>&#123;</span><br><span class=\"line\">         <span class=\"built_in\">console</span>.log(index)  </span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(element)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-5-数组的-常用方法\"><a href=\"#2-5-数组的-常用方法\" class=\"headerlink\" title=\"2.5 数组的 常用方法\"></a>2.5 数组的 常用方法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.push(元素)：末尾插入</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.pop()：末尾删除</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.unshift(元素)：首部插入</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.shift(元素)：首部删除</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.indexOf(字符)：查找字符的索引</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.reverse()：反转，改变原数组</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.concat(数组2)：数组合并,不改变原数组</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.join(字符串连接符)：将 数组元素 按照连接符  合并为 字符串</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.slice(startIndex,endIndex):切片，不改变原数组=&gt; [start,end)</span></span><br><span class=\"line\"><span class=\"comment\"> * arr/splice(startIndex,count,插入元素1，插入元素2)：替换/删除，改变原数组</span></span><br><span class=\"line\"><span class=\"comment\"> * \t\t</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-函数\"><a href=\"#3-函数\" class=\"headerlink\" title=\"3. 函数\"></a>3. 函数</h2><p>定义：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. </span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">a,b</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tadd(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> add = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        add(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3. </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> add = <span class=\"keyword\">new</span> <span class=\"built_in\">Function</span>(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;return a+b&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        add(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-内置对象-对象\"><a href=\"#4-内置对象-对象\" class=\"headerlink\" title=\"4.  内置对象 +对象\"></a>4.  内置对象 +对象</h2><h3 id=\"4-1-内置对象\"><a href=\"#4-1-内置对象\" class=\"headerlink\" title=\"4.1 内置对象\"></a>4.1 内置对象</h3><ul>\n<li>  string</li>\n<li>  date</li>\n<li>  math</li>\n<li>  array</li>\n<li>  arguments</li>\n</ul>\n<h3 id=\"4-2-对象\"><a href=\"#4-2-对象\" class=\"headerlink\" title=\"4.2 对象\"></a>4.2 对象</h3><h4 id=\"4-2-1-定义：\"><a href=\"#4-2-1-定义：\" class=\"headerlink\" title=\"4.2.1. 定义：\"></a>4.2.1. 定义：</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;张三&#x27;</span>，</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">20</span>    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">obj.age = <span class=\"number\">15</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.name)</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-2-2-序列化-反序列化\"><a href=\"#4-2-2-序列化-反序列化\" class=\"headerlink\" title=\"4.2.2. 序列化 + 反序列化\"></a>4.2.2. 序列化 + 反序列化</h4><ul>\n<li><p>  序列化 ：对象  =转化为= 》 字符串</p>\n</li>\n<li><p>  反序列化： 字符串  =转化为= 》对象</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">JSON</span>.stringify(obj)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">JSON</span>.parse(str)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-3-this\"><a href=\"#4-2-3-this\" class=\"headerlink\" title=\"4.2.3. this\"></a>4.2.3. this</h4><p>默认指向window对象。谁调用，this就指向谁</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> print = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = <span class=\"number\">15</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-事件\"><a href=\"#5-事件\" class=\"headerlink\" title=\"5. 事件\"></a>5. 事件</h2><p><strong>注意</strong>：</p>\n<ol>\n<li> js最好写html后面，防止加载js时还没有html标签，造成程序报错</li>\n<li> 若一定想要写在html前面，则需要在 js 外面套函数：window.onload = function( ){… }</li>\n</ol>\n<h3 id=\"5-1-事件定义：\"><a href=\"#5-1-事件定义：\" class=\"headerlink\" title=\"5.1 事件定义：\"></a>5.1 事件定义：</h3><p><strong>事件</strong> = 事件源 + 监听器+ 事件名 + 处理</p>\n<p>【3种事件】</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. html事件</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t 事件源:input</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t 监听器:onclick</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t 事件名 + 处理: alert(&#x27;hello world&#x27;)</span></span><br><span class=\"line\">\t&lt;input type=<span class=\"string\">&quot;button&quot;</span> value=<span class=\"string\">&quot;点击&quot;</span> id=<span class=\"string\">&#x27;btn1&#x27;</span> onclick=<span class=\"string\">&quot;alert(&#x27;hello world&#x27;)&quot;</span>&gt;</span><br><span class=\"line\">        </span><br><span class=\"line\">    </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 2. dom0级事件 【多次给某个事件添加函数时，只有最后一次添加的函数生效】</span></span><br><span class=\"line\">        &lt;input type=&quot;button&quot; value=&quot;点击&quot; id=&#x27;btn1&#x27;&gt;</span><br><span class=\"line\">        </span><br><span class=\"line\">        let Obtn1 = document.getElementById(&#x27;btn1&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tObtn1.onclick = function()&#123;</span><br><span class=\"line\">            alert(&#x27;hello world&#x27;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// 3. dom2级事件【其中事件:冒泡/捕获的bool值可以 省略,默认：事件冒泡 】</span><br><span class=\"line\">//\t\t\t\tObtn1.addEventListener(事件名，处理函数，是否使用事件捕获=false)</span><br><span class=\"line\">//\t\t\t\tObtn1.removeEventListener(事件名，处理函数，是否使用事件捕获=false)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&lt;input type=&quot;button&quot; value=&quot;点击&quot; id=&#x27;btn1&#x27;&gt;</span><br><span class=\"line\">            </span><br><span class=\"line\">        let Obtn1 = document.getElementById(&#x27;btn1&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tObtn1.addEventListener(&#x27;click&#x27;，function()&#123;alert(&#x27;hello&#x27;)&#125;，false)</span><br><span class=\"line\">        Obtn1.removeEventListener(&#x27;click&#x27;，function()&#123;alert(&#x27;hello&#x27;)&#125;，false)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">        </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-常用事件：\"><a href=\"#5-2-常用事件：\" class=\"headerlink\" title=\"5.2 常用事件：\"></a>5.2 常用事件：</h3><blockquote>\n<ul>\n<li>  window.onload</li>\n</ul>\n<p>鼠标：</p>\n<ul>\n<li>  on click</li>\n<li>  on doublec lick</li>\n<li>  on mouse over</li>\n<li>  on mouse out</li>\n</ul>\n<p>键盘：</p>\n<ul>\n<li>  on key down</li>\n<li>  on key up</li>\n</ul>\n<p>文本框</p>\n<ul>\n<li>  on focus</li>\n<li>  on blur</li>\n</ul>\n<p>select+option标签</p>\n<ul>\n<li>  on change</li>\n</ul>\n</blockquote>\n<p>事件流：【事件的触发顺序】</p>\n<ul>\n<li>  事件冒泡【默认的事件流】：内层标签  =传递到=》外层标签</li>\n<li>  事件捕获：外层标签  =传递到=》内层标签</li>\n</ul>\n<h2 id=\"6-BOM对象\"><a href=\"#6-BOM对象\" class=\"headerlink\" title=\"6. BOM对象\"></a>6. BOM对象</h2><h3 id=\"6-1-弹窗：\"><a href=\"#6-1-弹窗：\" class=\"headerlink\" title=\"6.1 弹窗：\"></a>6.1 弹窗：</h3><ul>\n<li>  alert( ‘警告信息’)</li>\n<li>  prompt( ‘ 提示’)：输入弹窗，获取字符串</li>\n<li>  confirm( ‘ 提示’)：确认框，返回 bool值</li>\n</ul>\n<h3 id=\"6-2-页面【打开、关闭】：\"><a href=\"#6-2-页面【打开、关闭】：\" class=\"headerlink\" title=\"6.2 页面【打开、关闭】：\"></a>6.2 页面【打开、关闭】：</h3><ul>\n<li>  window.open(网址str)</li>\n<li>  window.close( )：只适用于 关闭window.open( )打开的页面</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.open()\t<span class=\"comment\">// 打开空白页面</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.open(<span class=\"string\">&#x27;./abc.html&#x27;</span>)\t<span class=\"comment\">// 打开本地页面</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.open(<span class=\"string\">&#x27;www.baidu.com&#x27;</span>)\t<span class=\"comment\">// 打开网络页面</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.open(<span class=\"string\">&#x27;www.baidu.com&#x27;</span>，‘_blank’)\t<span class=\"comment\">// 以新页面方式，打开网络页面</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.close( )\t<span class=\"comment\">//关闭当前打开的页面</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"6-3-时间日期：\"><a href=\"#6-3-时间日期：\" class=\"headerlink\" title=\"6.3 时间日期：\"></a>6.3 时间日期：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> d = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">d.toLocaleDateString()  \t<span class=\"comment\">// &quot;2021/5/6&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"6-4-history对象：\"><a href=\"#6-4-history对象：\" class=\"headerlink\" title=\"6.4 history对象：\"></a>6.4 history对象：</h3><ul>\n<li><p>  window.history.length ： 历史记录数</p>\n</li>\n<li><p>  window.history.back( )：后退按钮</p>\n</li>\n<li><p>  window.history.forward( )：前进按钮</p>\n</li>\n<li><p>  window.history.go( num | url )：跳转</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">history.go(-<span class=\"number\">1</span>)\t\t<span class=\"comment\">// 上一个页面，-1为 当前页面 与 目标url 的相对位置</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"6-5-location对象：\"><a href=\"#6-5-location对象：\" class=\"headerlink\" title=\"6.5 location对象：\"></a>6.5 location对象：</h3><ul>\n<li>  window.location.href：网址</li>\n<li>  window.location.reload( )：刷新页面</li>\n<li>  window.location.replace( )：替换url</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.location.href = <span class=\"string\">&#x27;http://www/baidu.com&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.location.reload( )</span><br><span class=\"line\"></span><br><span class=\"line\">location.replace(<span class=\"string\">&#x27;http://qq.com&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"7-DOM对象\"><a href=\"#7-DOM对象\" class=\"headerlink\" title=\"7. DOM对象\"></a>7. DOM对象</h2><h3 id=\"7-1-直接-获取-dom节点：\"><a href=\"#7-1-直接-获取-dom节点：\" class=\"headerlink\" title=\"7.1 直接 获取 dom节点：\"></a>7.1 直接 获取 dom节点：</h3><ul>\n<li>  document. getEmenentBy Id ( 标签 id )：<code>ID</code></li>\n<li>  document. getEmenentsBy ClassName ( 标签class ) [下标]:<code>类名</code></li>\n<li>  document. getElementsBy TagName ( 标签名 ) [下标]：<code>标签</code></li>\n<li>  document. getElementsBy Name ( 表单元素的name属性值 ) [下标]：<code>表单名</code></li>\n</ul>\n<h3 id=\"7-2-间接-获取-dom节点：\"><a href=\"#7-2-间接-获取-dom节点：\" class=\"headerlink\" title=\"7.2 间接 获取 dom节点：\"></a>7.2 间接 获取 dom节点：</h3><ul>\n<li>  parentNode</li>\n</ul>\n<ul>\n<li>  previousSibling</li>\n<li>  nextSibling</li>\n</ul>\n<ul>\n<li>  childNodes</li>\n<li>  firstChild</li>\n<li>  lastChild</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> ul = <span class=\"built_in\">document</span>. getEmenentById(<span class=\"string\">&#x27;uls&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(ul.ChildNodes)</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"7-3-创建节点\"><a href=\"#7-3-创建节点\" class=\"headerlink\" title=\"7.3 创建节点\"></a>7.3 创建节点</h3><ul>\n<li>  document.createElement(标签str )</li>\n<li>  document.createTextNode(文本str )</li>\n<li>  标签1.innerHTML = html字符串</li>\n</ul>\n<h3 id=\"7-4-添加节点：\"><a href=\"#7-4-添加节点：\" class=\"headerlink\" title=\"7.4 添加节点：\"></a>7.4 添加节点：</h3><ul>\n<li>  标签1.appendChild( 标签2)</li>\n<li>  标签1.innerHTML = html字符串</li>\n<li>  标签1.insertBefore(标签2)：<code>先找父节点，再调用insertBefore(标签类型，在哪个节点前)</code></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方式1:  appendChild</span></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> p =  <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;p&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> txt = <span class=\"built_in\">document</span>.createTextNode(<span class=\"string\">&#x27;你好&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tp.appendChild(txt);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tdiv1.appendChild(p);</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//方式2:  innerHTML</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> div1 =  <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">\tdiv1.innerHTML = <span class=\"string\">`&lt;p&gt;你好&lt;/p&gt;`</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">//方式3:  insertBefore</span></span><br><span class=\"line\">    <span class=\"comment\">// div1前 插入节点 div0</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> parent =<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>).parent;   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> div0 =  <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;div&#x27;</span>);    </span><br><span class=\"line\">    div0.innerHTML = <span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    parent.insertBefore(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-5-删除结点\"><a href=\"#7-5-删除结点\" class=\"headerlink\" title=\"7.5 删除结点\"></a>7.5 删除结点</h3><ul>\n<li>  removeChild( )</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">div1.parentNode.removeChild( div1 )\t\t<span class=\"comment\">// 删除div1</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"7-6-修改结点的属性\"><a href=\"#7-6-修改结点的属性\" class=\"headerlink\" title=\"7.6 修改结点的属性\"></a>7.6 修改结点的属性</h3><ul>\n<li>  直接访问属性后修改</li>\n<li>  利用 标签1.setAttribute(属性名，属性值)</li>\n<li>  利用  innerHTML 的字符串拼接</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方式1</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> img1 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;img&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        img1.width = <span class=\"number\">200</span></span><br><span class=\"line\">\t\timg1.height = <span class=\"number\">200</span></span><br><span class=\"line\">\t\timg1.src = <span class=\"string\">&#x27;./img/pic.jpg&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdiv1.appendChild(img1)</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//方式2</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> img1 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;img&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        img1.setAttribute(<span class=\"string\">&#x27;src&#x27;</span>,<span class=\"string\">&#x27;./img/pic.jpg&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdiv1.appendChild(img1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//方式3</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t  <span class=\"keyword\">let</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">      div1.innerHTML +=<span class=\"string\">`&lt;img width=&quot;200px&quot; height=&quot;200px&quot; src=&quot;./img/pic.jpg&quot; /&gt;`</span></span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"JavaScript-笔记\"><a href=\"#JavaScript-笔记\" class=\"headerlink\" title=\"JavaScript-笔记\"></a>JavaScript-笔记</h1><p>[toc]</p>\n<h2 id=\"1-数据类型-类型转化\"><a href=\"#1-数据类型-类型转化\" class=\"headerlink\" title=\"1. 数据类型 + 类型转化\"></a>1. 数据类型 + 类型转化</h2><ul>\n<li>  string</li>\n<li>  boolean</li>\n<li>  number</li>\n<li>  object</li>\n<li>  null</li>\n<li>  undefined</li>\n</ul>\n<h3 id=\"1-1-String-gt-Number\"><a href=\"#1-1-String-gt-Number\" class=\"headerlink\" title=\"1.1 String  =&gt; Number\"></a>1.1 String  =&gt; Number</h3><p>【直接查看字符串的首字符 是否 为数字=》不是 =》NaN】</p>\n<ul>\n<li>  parseInt( )</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&quot;123abc&quot;</span>)   <span class=\"comment\">// 123</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&quot;22.5&quot;</span>) \t <span class=\"comment\">// 22</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&quot;abc&quot;</span>)\t\t <span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>  parseFloat( )</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseFloat</span>(<span class=\"string\">&quot;123abc&quot;</span>)\t<span class=\"comment\">// 123.0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">parseFloat</span>(<span class=\"string\">&quot;123.23.4&quot;</span>)\t<span class=\"comment\">// 123.23</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">parseFloat</span>(<span class=\"string\">&quot;abc&quot;</span>)\t\t<span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-Number-gt-String\"><a href=\"#1-2-Number-gt-String\" class=\"headerlink\" title=\"1.2  Number =&gt; String\"></a>1.2  Number =&gt; String</h3><ul>\n<li>  toString( )：转化为字符串</li>\n<li>  toFix( 保留的小数位数 )：四舍五入后，转化为字符串</li>\n</ul>\n<h2 id=\"2-数组\"><a href=\"#2-数组\" class=\"headerlink\" title=\"2. 数组\"></a>2. 数组</h2><h3 id=\"2-1-定义：\"><a href=\"#2-1-定义：\" class=\"headerlink\" title=\"2.1 定义：\"></a>2.1 定义：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(size)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr)\t<span class=\"comment\">//打印整个数组</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">0</span>]) <span class=\"comment\">//打印数组第一个元素</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-2-数组长度：\"><a href=\"#2-2-数组长度：\" class=\"headerlink\" title=\"2.2 数组长度：\"></a>2.2 数组长度：</h3><p>arr.length ，长度可被修改</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.length)\t<span class=\"comment\">//4</span></span><br><span class=\"line\"></span><br><span class=\"line\">arr.length = <span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-3-数组元素-数组属性-的修改\"><a href=\"#2-3-数组元素-数组属性-的修改\" class=\"headerlink\" title=\"2.3 数组元素 + 数组属性 的修改\"></a>2.3 数组元素 + 数组属性 的修改</h3><p>【下标：若不是数字，则当作属性】</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">arr[<span class=\"number\">4</span>] = <span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr)\t<span class=\"comment\">//打印整个数组</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">arr[<span class=\"string\">&#x27;uname&#x27;</span>]=<span class=\"string\">&#x27;张三&#x27;</span>\t<span class=\"comment\">// 向数组中添加一个属性uname ,uname的属性值为张三</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-4-数组的-遍历\"><a href=\"#2-4-数组的-遍历\" class=\"headerlink\" title=\"2.4 数组的 遍历\"></a>2.4 数组的 遍历</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// for()：不遍历属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(arr[i])        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// for... in：不遍历 索引和属性的undefined</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> index <span class=\"keyword\">in</span> arr)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(index)  </span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(arr[index])  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// forEach()：不遍历 索引的undefined</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tar.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">element,index</span>)</span>&#123;</span><br><span class=\"line\">         <span class=\"built_in\">console</span>.log(index)  </span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(element)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-5-数组的-常用方法\"><a href=\"#2-5-数组的-常用方法\" class=\"headerlink\" title=\"2.5 数组的 常用方法\"></a>2.5 数组的 常用方法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.push(元素)：末尾插入</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.pop()：末尾删除</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.unshift(元素)：首部插入</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.shift(元素)：首部删除</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.indexOf(字符)：查找字符的索引</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.reverse()：反转，改变原数组</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.concat(数组2)：数组合并,不改变原数组</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.join(字符串连接符)：将 数组元素 按照连接符  合并为 字符串</span></span><br><span class=\"line\"><span class=\"comment\"> * arr.slice(startIndex,endIndex):切片，不改变原数组=&gt; [start,end)</span></span><br><span class=\"line\"><span class=\"comment\"> * arr/splice(startIndex,count,插入元素1，插入元素2)：替换/删除，改变原数组</span></span><br><span class=\"line\"><span class=\"comment\"> * \t\t</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-函数\"><a href=\"#3-函数\" class=\"headerlink\" title=\"3. 函数\"></a>3. 函数</h2><p>定义：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. </span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">a,b</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tadd(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> add = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        add(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3. </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> add = <span class=\"keyword\">new</span> <span class=\"built_in\">Function</span>(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;return a+b&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        add(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-内置对象-对象\"><a href=\"#4-内置对象-对象\" class=\"headerlink\" title=\"4.  内置对象 +对象\"></a>4.  内置对象 +对象</h2><h3 id=\"4-1-内置对象\"><a href=\"#4-1-内置对象\" class=\"headerlink\" title=\"4.1 内置对象\"></a>4.1 内置对象</h3><ul>\n<li>  string</li>\n<li>  date</li>\n<li>  math</li>\n<li>  array</li>\n<li>  arguments</li>\n</ul>\n<h3 id=\"4-2-对象\"><a href=\"#4-2-对象\" class=\"headerlink\" title=\"4.2 对象\"></a>4.2 对象</h3><h4 id=\"4-2-1-定义：\"><a href=\"#4-2-1-定义：\" class=\"headerlink\" title=\"4.2.1. 定义：\"></a>4.2.1. 定义：</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;张三&#x27;</span>，</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">20</span>    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">obj.age = <span class=\"number\">15</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.name)</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-2-2-序列化-反序列化\"><a href=\"#4-2-2-序列化-反序列化\" class=\"headerlink\" title=\"4.2.2. 序列化 + 反序列化\"></a>4.2.2. 序列化 + 反序列化</h4><ul>\n<li><p>  序列化 ：对象  =转化为= 》 字符串</p>\n</li>\n<li><p>  反序列化： 字符串  =转化为= 》对象</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">JSON</span>.stringify(obj)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">JSON</span>.parse(str)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-3-this\"><a href=\"#4-2-3-this\" class=\"headerlink\" title=\"4.2.3. this\"></a>4.2.3. this</h4><p>默认指向window对象。谁调用，this就指向谁</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> print = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = <span class=\"number\">15</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-事件\"><a href=\"#5-事件\" class=\"headerlink\" title=\"5. 事件\"></a>5. 事件</h2><p><strong>注意</strong>：</p>\n<ol>\n<li> js最好写html后面，防止加载js时还没有html标签，造成程序报错</li>\n<li> 若一定想要写在html前面，则需要在 js 外面套函数：window.onload = function( ){… }</li>\n</ol>\n<h3 id=\"5-1-事件定义：\"><a href=\"#5-1-事件定义：\" class=\"headerlink\" title=\"5.1 事件定义：\"></a>5.1 事件定义：</h3><p><strong>事件</strong> = 事件源 + 监听器+ 事件名 + 处理</p>\n<p>【3种事件】</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. html事件</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t 事件源:input</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t 监听器:onclick</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t 事件名 + 处理: alert(&#x27;hello world&#x27;)</span></span><br><span class=\"line\">\t&lt;input type=<span class=\"string\">&quot;button&quot;</span> value=<span class=\"string\">&quot;点击&quot;</span> id=<span class=\"string\">&#x27;btn1&#x27;</span> onclick=<span class=\"string\">&quot;alert(&#x27;hello world&#x27;)&quot;</span>&gt;</span><br><span class=\"line\">        </span><br><span class=\"line\">    </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 2. dom0级事件 【多次给某个事件添加函数时，只有最后一次添加的函数生效】</span></span><br><span class=\"line\">        &lt;input type=&quot;button&quot; value=&quot;点击&quot; id=&#x27;btn1&#x27;&gt;</span><br><span class=\"line\">        </span><br><span class=\"line\">        let Obtn1 = document.getElementById(&#x27;btn1&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tObtn1.onclick = function()&#123;</span><br><span class=\"line\">            alert(&#x27;hello world&#x27;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// 3. dom2级事件【其中事件:冒泡/捕获的bool值可以 省略,默认：事件冒泡 】</span><br><span class=\"line\">//\t\t\t\tObtn1.addEventListener(事件名，处理函数，是否使用事件捕获=false)</span><br><span class=\"line\">//\t\t\t\tObtn1.removeEventListener(事件名，处理函数，是否使用事件捕获=false)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&lt;input type=&quot;button&quot; value=&quot;点击&quot; id=&#x27;btn1&#x27;&gt;</span><br><span class=\"line\">            </span><br><span class=\"line\">        let Obtn1 = document.getElementById(&#x27;btn1&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tObtn1.addEventListener(&#x27;click&#x27;，function()&#123;alert(&#x27;hello&#x27;)&#125;，false)</span><br><span class=\"line\">        Obtn1.removeEventListener(&#x27;click&#x27;，function()&#123;alert(&#x27;hello&#x27;)&#125;，false)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">        </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-常用事件：\"><a href=\"#5-2-常用事件：\" class=\"headerlink\" title=\"5.2 常用事件：\"></a>5.2 常用事件：</h3><blockquote>\n<ul>\n<li>  window.onload</li>\n</ul>\n<p>鼠标：</p>\n<ul>\n<li>  on click</li>\n<li>  on doublec lick</li>\n<li>  on mouse over</li>\n<li>  on mouse out</li>\n</ul>\n<p>键盘：</p>\n<ul>\n<li>  on key down</li>\n<li>  on key up</li>\n</ul>\n<p>文本框</p>\n<ul>\n<li>  on focus</li>\n<li>  on blur</li>\n</ul>\n<p>select+option标签</p>\n<ul>\n<li>  on change</li>\n</ul>\n</blockquote>\n<p>事件流：【事件的触发顺序】</p>\n<ul>\n<li>  事件冒泡【默认的事件流】：内层标签  =传递到=》外层标签</li>\n<li>  事件捕获：外层标签  =传递到=》内层标签</li>\n</ul>\n<h2 id=\"6-BOM对象\"><a href=\"#6-BOM对象\" class=\"headerlink\" title=\"6. BOM对象\"></a>6. BOM对象</h2><h3 id=\"6-1-弹窗：\"><a href=\"#6-1-弹窗：\" class=\"headerlink\" title=\"6.1 弹窗：\"></a>6.1 弹窗：</h3><ul>\n<li>  alert( ‘警告信息’)</li>\n<li>  prompt( ‘ 提示’)：输入弹窗，获取字符串</li>\n<li>  confirm( ‘ 提示’)：确认框，返回 bool值</li>\n</ul>\n<h3 id=\"6-2-页面【打开、关闭】：\"><a href=\"#6-2-页面【打开、关闭】：\" class=\"headerlink\" title=\"6.2 页面【打开、关闭】：\"></a>6.2 页面【打开、关闭】：</h3><ul>\n<li>  window.open(网址str)</li>\n<li>  window.close( )：只适用于 关闭window.open( )打开的页面</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.open()\t<span class=\"comment\">// 打开空白页面</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.open(<span class=\"string\">&#x27;./abc.html&#x27;</span>)\t<span class=\"comment\">// 打开本地页面</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.open(<span class=\"string\">&#x27;www.baidu.com&#x27;</span>)\t<span class=\"comment\">// 打开网络页面</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.open(<span class=\"string\">&#x27;www.baidu.com&#x27;</span>，‘_blank’)\t<span class=\"comment\">// 以新页面方式，打开网络页面</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.close( )\t<span class=\"comment\">//关闭当前打开的页面</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"6-3-时间日期：\"><a href=\"#6-3-时间日期：\" class=\"headerlink\" title=\"6.3 时间日期：\"></a>6.3 时间日期：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> d = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">d.toLocaleDateString()  \t<span class=\"comment\">// &quot;2021/5/6&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"6-4-history对象：\"><a href=\"#6-4-history对象：\" class=\"headerlink\" title=\"6.4 history对象：\"></a>6.4 history对象：</h3><ul>\n<li><p>  window.history.length ： 历史记录数</p>\n</li>\n<li><p>  window.history.back( )：后退按钮</p>\n</li>\n<li><p>  window.history.forward( )：前进按钮</p>\n</li>\n<li><p>  window.history.go( num | url )：跳转</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">history.go(-<span class=\"number\">1</span>)\t\t<span class=\"comment\">// 上一个页面，-1为 当前页面 与 目标url 的相对位置</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"6-5-location对象：\"><a href=\"#6-5-location对象：\" class=\"headerlink\" title=\"6.5 location对象：\"></a>6.5 location对象：</h3><ul>\n<li>  window.location.href：网址</li>\n<li>  window.location.reload( )：刷新页面</li>\n<li>  window.location.replace( )：替换url</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.location.href = <span class=\"string\">&#x27;http://www/baidu.com&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.location.reload( )</span><br><span class=\"line\"></span><br><span class=\"line\">location.replace(<span class=\"string\">&#x27;http://qq.com&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"7-DOM对象\"><a href=\"#7-DOM对象\" class=\"headerlink\" title=\"7. DOM对象\"></a>7. DOM对象</h2><h3 id=\"7-1-直接-获取-dom节点：\"><a href=\"#7-1-直接-获取-dom节点：\" class=\"headerlink\" title=\"7.1 直接 获取 dom节点：\"></a>7.1 直接 获取 dom节点：</h3><ul>\n<li>  document. getEmenentBy Id ( 标签 id )：<code>ID</code></li>\n<li>  document. getEmenentsBy ClassName ( 标签class ) [下标]:<code>类名</code></li>\n<li>  document. getElementsBy TagName ( 标签名 ) [下标]：<code>标签</code></li>\n<li>  document. getElementsBy Name ( 表单元素的name属性值 ) [下标]：<code>表单名</code></li>\n</ul>\n<h3 id=\"7-2-间接-获取-dom节点：\"><a href=\"#7-2-间接-获取-dom节点：\" class=\"headerlink\" title=\"7.2 间接 获取 dom节点：\"></a>7.2 间接 获取 dom节点：</h3><ul>\n<li>  parentNode</li>\n</ul>\n<ul>\n<li>  previousSibling</li>\n<li>  nextSibling</li>\n</ul>\n<ul>\n<li>  childNodes</li>\n<li>  firstChild</li>\n<li>  lastChild</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> ul = <span class=\"built_in\">document</span>. getEmenentById(<span class=\"string\">&#x27;uls&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(ul.ChildNodes)</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"7-3-创建节点\"><a href=\"#7-3-创建节点\" class=\"headerlink\" title=\"7.3 创建节点\"></a>7.3 创建节点</h3><ul>\n<li>  document.createElement(标签str )</li>\n<li>  document.createTextNode(文本str )</li>\n<li>  标签1.innerHTML = html字符串</li>\n</ul>\n<h3 id=\"7-4-添加节点：\"><a href=\"#7-4-添加节点：\" class=\"headerlink\" title=\"7.4 添加节点：\"></a>7.4 添加节点：</h3><ul>\n<li>  标签1.appendChild( 标签2)</li>\n<li>  标签1.innerHTML = html字符串</li>\n<li>  标签1.insertBefore(标签2)：<code>先找父节点，再调用insertBefore(标签类型，在哪个节点前)</code></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方式1:  appendChild</span></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> p =  <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;p&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> txt = <span class=\"built_in\">document</span>.createTextNode(<span class=\"string\">&#x27;你好&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tp.appendChild(txt);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tdiv1.appendChild(p);</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//方式2:  innerHTML</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> div1 =  <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">\tdiv1.innerHTML = <span class=\"string\">`&lt;p&gt;你好&lt;/p&gt;`</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">//方式3:  insertBefore</span></span><br><span class=\"line\">    <span class=\"comment\">// div1前 插入节点 div0</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> parent =<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>).parent;   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> div0 =  <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;div&#x27;</span>);    </span><br><span class=\"line\">    div0.innerHTML = <span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    parent.insertBefore(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-5-删除结点\"><a href=\"#7-5-删除结点\" class=\"headerlink\" title=\"7.5 删除结点\"></a>7.5 删除结点</h3><ul>\n<li>  removeChild( )</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">div1.parentNode.removeChild( div1 )\t\t<span class=\"comment\">// 删除div1</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"7-6-修改结点的属性\"><a href=\"#7-6-修改结点的属性\" class=\"headerlink\" title=\"7.6 修改结点的属性\"></a>7.6 修改结点的属性</h3><ul>\n<li>  直接访问属性后修改</li>\n<li>  利用 标签1.setAttribute(属性名，属性值)</li>\n<li>  利用  innerHTML 的字符串拼接</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方式1</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> img1 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;img&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        img1.width = <span class=\"number\">200</span></span><br><span class=\"line\">\t\timg1.height = <span class=\"number\">200</span></span><br><span class=\"line\">\t\timg1.src = <span class=\"string\">&#x27;./img/pic.jpg&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdiv1.appendChild(img1)</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//方式2</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> img1 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;img&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        img1.setAttribute(<span class=\"string\">&#x27;src&#x27;</span>,<span class=\"string\">&#x27;./img/pic.jpg&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdiv1.appendChild(img1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//方式3</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t  <span class=\"keyword\">let</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;div1&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">      div1.innerHTML +=<span class=\"string\">`&lt;img width=&quot;200px&quot; height=&quot;200px&quot; src=&quot;./img/pic.jpg&quot; /&gt;`</span></span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure>\n\n"},{"title":"MarkDown 入门篇","_content":"\n# Markdown 入门语法-笔记\n\n[toc]\n\n### 1. 编写工具：\n\ntypora、vscode+插件、sublime+插件\n\n### 2. 标题： \n\n 使用 \"#\"\n\n> `# 一级标题` \n> `## 二级标题`  \n> `### 三级标题`  \n> `#### 四级标题`  \n> `##### 五级标题`  \n> `###### 六级标题`  \n>\n> ### 3. 换行：<kbd>空格</kbd> + <kbd>空格</kbd> + <kbd>Enter</kbd>  \n### 4. 斜体：\n\n`*你好*` => *你好*\n\n### 5. 粗体：\n\n`**世界**`=> **世界**\n\n### 6. 粗斜体：\n\n `***你好，世界***`=>***你好，世界***\n\n### 7. 分割线：\n\n`************`\n\n### 8.  删除线：\n\n\n\n`~~这是删除线~~`=> ~~这是删除线~~\n\n### 9.  代码块：\n\n\n\n使用 \\`abc\\` 或者 \\```abc\\```\n\n### 10. 无序列表：\n* 第一级   \n* 第二级\n\n### 11. 有序列表：\n1. abc\n2. def\n3. ghi \n\t\t\t\t\t\t\n\n### 12. 区块：\n\n【 <kbd>></kbd> + <kbd>空格</kbd> 】\n\n\t\t\t\t\t\t>   第一级区块\n\t\t\t\t\t\t>>  第二级区块\n\t\t\t\t\t\t>>> 第三级区块\n\n###  13. 链接 ：\n\t\t\t\t`[百度](http://www.baidu.com) ` :  \n[百度](https://www.baidu.com)\t\t\t\t  \t\t\t\t\n\n###  14. 图片 : \n\n`![提示信息](地址)` ：\n\n\n### 15. 表格 :\n```\n//   -:   表示右对齐\n//  :-:   表示左对齐\n//   -： 表示居中对齐\n\t\t\t\t\t\t|表头|表头|表头  |\n\t\t\t\t\t\t| -: | :-: | :- |\n\t\t\t\t\t\t| a  |  b  |  c  |\n\n```\n\n|姓名|年龄|性别|\n|:-:|:-:|:-:|\n|张三|15| 男|\n|李四|42|女|\n|王五|64|男|\n|马六|54|女|\n### 16. 目录:\n\n```\n  在开头目录位置处插入：\t\t\t\t\n\t\t[TOC]\n```\n\n","source":"_posts/Markdown入门-笔记.md","raw":"---\ntitle: MarkDown 入门篇\ntag: MarkDown\ncategories:\n  - 编程工具\n  - 文档编写工具\n---\n\n# Markdown 入门语法-笔记\n\n[toc]\n\n### 1. 编写工具：\n\ntypora、vscode+插件、sublime+插件\n\n### 2. 标题： \n\n 使用 \"#\"\n\n> `# 一级标题` \n> `## 二级标题`  \n> `### 三级标题`  \n> `#### 四级标题`  \n> `##### 五级标题`  \n> `###### 六级标题`  \n>\n> ### 3. 换行：<kbd>空格</kbd> + <kbd>空格</kbd> + <kbd>Enter</kbd>  \n### 4. 斜体：\n\n`*你好*` => *你好*\n\n### 5. 粗体：\n\n`**世界**`=> **世界**\n\n### 6. 粗斜体：\n\n `***你好，世界***`=>***你好，世界***\n\n### 7. 分割线：\n\n`************`\n\n### 8.  删除线：\n\n\n\n`~~这是删除线~~`=> ~~这是删除线~~\n\n### 9.  代码块：\n\n\n\n使用 \\`abc\\` 或者 \\```abc\\```\n\n### 10. 无序列表：\n* 第一级   \n* 第二级\n\n### 11. 有序列表：\n1. abc\n2. def\n3. ghi \n\t\t\t\t\t\t\n\n### 12. 区块：\n\n【 <kbd>></kbd> + <kbd>空格</kbd> 】\n\n\t\t\t\t\t\t>   第一级区块\n\t\t\t\t\t\t>>  第二级区块\n\t\t\t\t\t\t>>> 第三级区块\n\n###  13. 链接 ：\n\t\t\t\t`[百度](http://www.baidu.com) ` :  \n[百度](https://www.baidu.com)\t\t\t\t  \t\t\t\t\n\n###  14. 图片 : \n\n`![提示信息](地址)` ：\n\n\n### 15. 表格 :\n```\n//   -:   表示右对齐\n//  :-:   表示左对齐\n//   -： 表示居中对齐\n\t\t\t\t\t\t|表头|表头|表头  |\n\t\t\t\t\t\t| -: | :-: | :- |\n\t\t\t\t\t\t| a  |  b  |  c  |\n\n```\n\n|姓名|年龄|性别|\n|:-:|:-:|:-:|\n|张三|15| 男|\n|李四|42|女|\n|王五|64|男|\n|马六|54|女|\n### 16. 目录:\n\n```\n  在开头目录位置处插入：\t\t\t\t\n\t\t[TOC]\n```\n\n","slug":"Markdown入门-笔记","published":1,"date":"2021-06-02T02:49:19.134Z","updated":"2021-06-01T07:36:09.366Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs19000glcvdai4t3lnp","content":"<h1 id=\"Markdown-入门语法-笔记\"><a href=\"#Markdown-入门语法-笔记\" class=\"headerlink\" title=\"Markdown 入门语法-笔记\"></a>Markdown 入门语法-笔记</h1><p>[toc]</p>\n<h3 id=\"1-编写工具：\"><a href=\"#1-编写工具：\" class=\"headerlink\" title=\"1. 编写工具：\"></a>1. 编写工具：</h3><p>typora、vscode+插件、sublime+插件</p>\n<h3 id=\"2-标题：\"><a href=\"#2-标题：\" class=\"headerlink\" title=\"2. 标题：\"></a>2. 标题：</h3><p> 使用 “#”</p>\n<blockquote>\n<p><code># 一级标题</code><br><code>## 二级标题</code><br><code>### 三级标题</code><br><code>#### 四级标题</code><br><code>##### 五级标题</code><br><code>###### 六级标题</code>  </p>\n<h3 id=\"3-换行：空格-空格-Enter\"><a href=\"#3-换行：空格-空格-Enter\" class=\"headerlink\" title=\"3. 换行：空格 + 空格 + Enter\"></a>3. 换行：<kbd>空格</kbd> + <kbd>空格</kbd> + <kbd>Enter</kbd></h3></blockquote>\n<h3 id=\"4-斜体：\"><a href=\"#4-斜体：\" class=\"headerlink\" title=\"4. 斜体：\"></a>4. 斜体：</h3><p><code>*你好*</code> =&gt; <em>你好</em></p>\n<h3 id=\"5-粗体：\"><a href=\"#5-粗体：\" class=\"headerlink\" title=\"5. 粗体：\"></a>5. 粗体：</h3><p><code>**世界**</code>=&gt; <strong>世界</strong></p>\n<h3 id=\"6-粗斜体：\"><a href=\"#6-粗斜体：\" class=\"headerlink\" title=\"6. 粗斜体：\"></a>6. 粗斜体：</h3><p> <code>***你好，世界***</code>=&gt;<em><strong>你好，世界</strong></em></p>\n<h3 id=\"7-分割线：\"><a href=\"#7-分割线：\" class=\"headerlink\" title=\"7. 分割线：\"></a>7. 分割线：</h3><p><code>************</code></p>\n<h3 id=\"8-删除线：\"><a href=\"#8-删除线：\" class=\"headerlink\" title=\"8.  删除线：\"></a>8.  删除线：</h3><p><code>~~这是删除线~~</code>=&gt; <del>这是删除线</del></p>\n<h3 id=\"9-代码块：\"><a href=\"#9-代码块：\" class=\"headerlink\" title=\"9.  代码块：\"></a>9.  代码块：</h3><p>使用 `abc` 或者 ```abc```</p>\n<h3 id=\"10-无序列表：\"><a href=\"#10-无序列表：\" class=\"headerlink\" title=\"10. 无序列表：\"></a>10. 无序列表：</h3><ul>\n<li>第一级   </li>\n<li>第二级</li>\n</ul>\n<h3 id=\"11-有序列表：\"><a href=\"#11-有序列表：\" class=\"headerlink\" title=\"11. 有序列表：\"></a>11. 有序列表：</h3><ol>\n<li>abc</li>\n<li>def</li>\n<li>ghi </li>\n</ol>\n<h3 id=\"12-区块：\"><a href=\"#12-区块：\" class=\"headerlink\" title=\"12. 区块：\"></a>12. 区块：</h3><p>【 <kbd>></kbd> + <kbd>空格</kbd> 】</p>\n<pre><code>                    &gt;   第一级区块\n                    &gt;&gt;  第二级区块\n                    &gt;&gt;&gt; 第三级区块\n</code></pre>\n<h3 id=\"13-链接-：\"><a href=\"#13-链接-：\" class=\"headerlink\" title=\"13. 链接 ：\"></a>13. 链接 ：</h3><pre><code>            `[百度](http://www.baidu.com) ` :  \n</code></pre>\n<p><a href=\"https://www.baidu.com/\">百度</a>                                  </p>\n<h3 id=\"14-图片\"><a href=\"#14-图片\" class=\"headerlink\" title=\"14. 图片 :\"></a>14. 图片 :</h3><p><code>![提示信息](地址)</code> ：</p>\n<h3 id=\"15-表格\"><a href=\"#15-表格\" class=\"headerlink\" title=\"15. 表格 :\"></a>15. 表格 :</h3><figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//   -:   表示右对齐</span><br><span class=\"line\">//  :-:   表示左对齐</span><br><span class=\"line\">//   -： 表示居中对齐</span><br><span class=\"line\">\t\t\t\t\t\t|<span class=\"string\">表头</span>|<span class=\"string\">表头</span>|<span class=\"string\">表头  </span>|</span><br><span class=\"line\">\t\t\t\t\t\t|<span class=\"string\"> -: </span>|<span class=\"string\"> :-: </span>|<span class=\"string\"> :- </span>|</span><br><span class=\"line\">\t\t\t\t\t\t|<span class=\"string\"> a  </span>|<span class=\"string\">  b  </span>|<span class=\"string\">  c  </span>|</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">姓名</th>\n<th align=\"center\">年龄</th>\n<th align=\"center\">性别</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">张三</td>\n<td align=\"center\">15</td>\n<td align=\"center\">男</td>\n</tr>\n<tr>\n<td align=\"center\">李四</td>\n<td align=\"center\">42</td>\n<td align=\"center\">女</td>\n</tr>\n<tr>\n<td align=\"center\">王五</td>\n<td align=\"center\">64</td>\n<td align=\"center\">男</td>\n</tr>\n<tr>\n<td align=\"center\">马六</td>\n<td align=\"center\">54</td>\n<td align=\"center\">女</td>\n</tr>\n</tbody></table>\n<h3 id=\"16-目录\"><a href=\"#16-目录\" class=\"headerlink\" title=\"16. 目录:\"></a>16. 目录:</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在开头目录位置处插入：\t\t\t\t</span><br><span class=\"line\"><span class=\"string\">[TOC]</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"Markdown-入门语法-笔记\"><a href=\"#Markdown-入门语法-笔记\" class=\"headerlink\" title=\"Markdown 入门语法-笔记\"></a>Markdown 入门语法-笔记</h1><p>[toc]</p>\n<h3 id=\"1-编写工具：\"><a href=\"#1-编写工具：\" class=\"headerlink\" title=\"1. 编写工具：\"></a>1. 编写工具：</h3><p>typora、vscode+插件、sublime+插件</p>\n<h3 id=\"2-标题：\"><a href=\"#2-标题：\" class=\"headerlink\" title=\"2. 标题：\"></a>2. 标题：</h3><p> 使用 “#”</p>\n<blockquote>\n<p><code># 一级标题</code><br><code>## 二级标题</code><br><code>### 三级标题</code><br><code>#### 四级标题</code><br><code>##### 五级标题</code><br><code>###### 六级标题</code>  </p>\n<h3 id=\"3-换行：空格-空格-Enter\"><a href=\"#3-换行：空格-空格-Enter\" class=\"headerlink\" title=\"3. 换行：空格 + 空格 + Enter\"></a>3. 换行：<kbd>空格</kbd> + <kbd>空格</kbd> + <kbd>Enter</kbd></h3></blockquote>\n<h3 id=\"4-斜体：\"><a href=\"#4-斜体：\" class=\"headerlink\" title=\"4. 斜体：\"></a>4. 斜体：</h3><p><code>*你好*</code> =&gt; <em>你好</em></p>\n<h3 id=\"5-粗体：\"><a href=\"#5-粗体：\" class=\"headerlink\" title=\"5. 粗体：\"></a>5. 粗体：</h3><p><code>**世界**</code>=&gt; <strong>世界</strong></p>\n<h3 id=\"6-粗斜体：\"><a href=\"#6-粗斜体：\" class=\"headerlink\" title=\"6. 粗斜体：\"></a>6. 粗斜体：</h3><p> <code>***你好，世界***</code>=&gt;<em><strong>你好，世界</strong></em></p>\n<h3 id=\"7-分割线：\"><a href=\"#7-分割线：\" class=\"headerlink\" title=\"7. 分割线：\"></a>7. 分割线：</h3><p><code>************</code></p>\n<h3 id=\"8-删除线：\"><a href=\"#8-删除线：\" class=\"headerlink\" title=\"8.  删除线：\"></a>8.  删除线：</h3><p><code>~~这是删除线~~</code>=&gt; <del>这是删除线</del></p>\n<h3 id=\"9-代码块：\"><a href=\"#9-代码块：\" class=\"headerlink\" title=\"9.  代码块：\"></a>9.  代码块：</h3><p>使用 `abc` 或者 ```abc```</p>\n<h3 id=\"10-无序列表：\"><a href=\"#10-无序列表：\" class=\"headerlink\" title=\"10. 无序列表：\"></a>10. 无序列表：</h3><ul>\n<li>第一级   </li>\n<li>第二级</li>\n</ul>\n<h3 id=\"11-有序列表：\"><a href=\"#11-有序列表：\" class=\"headerlink\" title=\"11. 有序列表：\"></a>11. 有序列表：</h3><ol>\n<li>abc</li>\n<li>def</li>\n<li>ghi </li>\n</ol>\n<h3 id=\"12-区块：\"><a href=\"#12-区块：\" class=\"headerlink\" title=\"12. 区块：\"></a>12. 区块：</h3><p>【 <kbd>></kbd> + <kbd>空格</kbd> 】</p>\n<pre><code>                    &gt;   第一级区块\n                    &gt;&gt;  第二级区块\n                    &gt;&gt;&gt; 第三级区块\n</code></pre>\n<h3 id=\"13-链接-：\"><a href=\"#13-链接-：\" class=\"headerlink\" title=\"13. 链接 ：\"></a>13. 链接 ：</h3><pre><code>            `[百度](http://www.baidu.com) ` :  \n</code></pre>\n<p><a href=\"https://www.baidu.com/\">百度</a>                                  </p>\n<h3 id=\"14-图片\"><a href=\"#14-图片\" class=\"headerlink\" title=\"14. 图片 :\"></a>14. 图片 :</h3><p><code>![提示信息](地址)</code> ：</p>\n<h3 id=\"15-表格\"><a href=\"#15-表格\" class=\"headerlink\" title=\"15. 表格 :\"></a>15. 表格 :</h3><figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//   -:   表示右对齐</span><br><span class=\"line\">//  :-:   表示左对齐</span><br><span class=\"line\">//   -： 表示居中对齐</span><br><span class=\"line\">\t\t\t\t\t\t|<span class=\"string\">表头</span>|<span class=\"string\">表头</span>|<span class=\"string\">表头  </span>|</span><br><span class=\"line\">\t\t\t\t\t\t|<span class=\"string\"> -: </span>|<span class=\"string\"> :-: </span>|<span class=\"string\"> :- </span>|</span><br><span class=\"line\">\t\t\t\t\t\t|<span class=\"string\"> a  </span>|<span class=\"string\">  b  </span>|<span class=\"string\">  c  </span>|</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">姓名</th>\n<th align=\"center\">年龄</th>\n<th align=\"center\">性别</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">张三</td>\n<td align=\"center\">15</td>\n<td align=\"center\">男</td>\n</tr>\n<tr>\n<td align=\"center\">李四</td>\n<td align=\"center\">42</td>\n<td align=\"center\">女</td>\n</tr>\n<tr>\n<td align=\"center\">王五</td>\n<td align=\"center\">64</td>\n<td align=\"center\">男</td>\n</tr>\n<tr>\n<td align=\"center\">马六</td>\n<td align=\"center\">54</td>\n<td align=\"center\">女</td>\n</tr>\n</tbody></table>\n<h3 id=\"16-目录\"><a href=\"#16-目录\" class=\"headerlink\" title=\"16. 目录:\"></a>16. 目录:</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在开头目录位置处插入：\t\t\t\t</span><br><span class=\"line\"><span class=\"string\">[TOC]</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Kali-安装笔记","_content":"\n# KaLi—— 笔记\n[toc]\n下载地址：【国内镜像】\n\n```bash\n搜狐：http://mirrors.sohu.com/\n网易：http://mirrors.163.com/\n阿里云：http://mirrors.aliyun.com/\n腾讯：http://android-mirror.bugly.qq.com:8080/（仅针对APP开发的软件，限流，不推荐）\n淘宝：http://npm.taobao.org/\n\n上海交通大学：http://ftp.sjtu.edu.cn/html/resources.xml（部分移动运营商出口状况不佳，无法访问）\n华中科技大学：http://mirror.hust.edu.cn/（当前已用容量估计：4.83T）\n清华大学：http://mirrors.tuna.tsinghua.edu.cn/（当前已用容量估计：9.8T）\n北京理工大学：http://mirror.bit.edu.cn/web/\n兰州大学：http://mirror.lzu.edu.cn/\n中国科技大学：http://mirrors.ustc.edu.cn/（当前已用容量估计：21.32T）\n大连东软信息学院：http://mirrors.neusoft.edu.cn/（当前已用容量估计：2.5T）\n东北大学：http://mirror.neu.edu.cn/\n大连理工大学：http://mirror.dlut.edu.cn/\n哈尔滨工业大学：http://run.hit.edu.cn/html/（部分联通运营商出口状况不佳，无法访问）\n北京交通大学：http://mirror.bjtu.edu.cn/cn/\n天津大学：http://mirror.tju.edu.cn（无法访问，ping超时）\n中国地质大学：http://mirrors.cug.edu.cn/（当前已用容量估计：2.3T）\n浙江大学：http://mirrors.zju.edu.cn/\n厦门大学：http://mirrors.xmu.edu.cn/\n中山大学：http://mirror.sysu.edu.cn/\n重庆大学：http://mirrors.cqu.edu.cn/（当前已用容量估计：3.93T）\n北京化工大学：http://ubuntu.buct.edu.cn/（Android SDK镜像仅供校内使用，当前已用容量估计：1.72T）\n南阳理工学院：http://mirror.nyist.edu.cn/\n中国科学院：http://www.opencas.org/mirrors/\n电子科技大学：http://ubuntu.uestc.edu.cn/（无法访问，ping超时）\n电子科技大学星辰工作室：http://mirrors.stuhome.net/（当前已用容量估计：1.08T）\n西北农林科技大学：http://mirrors.nwsuaf.edu.cn/（只做CentOS镜像，当前已用容量估计：140GB） \n浙江大学：http://mirrors.zju.edu.cn/\n台湾淡江大学: http://ftp.tku.edu.tw/Linux/\n\n首都在线科技股份有限公司（英文名Capital Online Data Service）：http://mirrors.yun-idc.com/\n中国电信天翼云：http://mirrors.ctyun.cn/\nnoc.im：http://mirrors.noc.im/（当前已用容量估计：3.74T）\n常州贝特康姆软件技术有限公司：http://centos.bitcomm.cn/（只做CentOS镜像，当前已用容量估计：140GB）\n公云PubYun（母公司为贝特康姆）：http://mirrors.pubyun.com/\nLinux运维派：http://mirrors.skyshe.cn/（使用阿里云服务器，界面使用浙江大学的模板，首页维护，内容可访问）\n中国互联网络信息中心：http://mirrors.cnnic.cn/（只做Apache镜像，当前已用容量估计：120GB）\nFayea工作室：http://apache.fayea.com/（只做Apache镜像，当前已用容量估计：120GB）\n开源中国社区 http://mirrors.oss.org.cn/\n```\n\n## 1. 安装\n参考【部分不一致】：\n`https://zhuanlan.zhihu.com/p/107667275?from_voters_page=true`\n文件= 》 新建虚拟机 =》 经典 = 》稍后安装 =》 Linux =》 \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128190857420.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191053589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191208991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191337918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191517333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191551465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191640963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n选择第一项：图形化安装【由于我们刚才分配给虚拟机的内存太小（只有 512 MB），所以，只出现这种难看的界面】\n然后：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191829246.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191915611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191949932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202011281927033.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128192721872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112819281250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128192916509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128192950314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193153727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193207605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193225924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112819325350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193316391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193529659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n在这里选择【图形界面的种类】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193622921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193744420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128194928831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128194957601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128195238913.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 2. 初始设置\n### 2.1 设置分辨率【以下为：2020.4版】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128153043764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### 2.2 设置网络\n使用VM中的 NAT 模式\n要注意：\n- 物理机是否启用 vm 的 nat 服务\n- 是否将 网卡设为可共享- \n- **锐捷校园网的客户端每隔一段时间就会关掉vm的nat服务**\n- 进入`/etc/network/interfaces`文件，仿照 lo0添加网卡，保存；重启服务 `/etc/init.d/networking restart`\n\n\n使用VM中的 NAT 模式的**步骤**： \n\n- `win + R`，输入`services.msc` , 找到`VM NAT Server`服务，启动\n- 设置vmnet8 网卡的 ip 与 网关【两个要在同一网段】\n- 在vm 中打开虚拟网络编辑器，选择 vmnet8\n- 在下方填写 **子网网段 和 掩码** ，\n- 点击 NAT 设置，输入**网关IP**【该IP不能和物理机中vmnet8的IP相同，但要与物理机中vmnet8 的网关相同】\n\n\n### 2.3 更改鼠标大小\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130141604663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 2.4 调整 终端 字体\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130142910861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 2.4 取消自动休眠\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130145923390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n### 2.4 更换软件安装源\n- 打开终端\n- 切换到 root 用户\n- 注释掉 `/etc/apt/sources.list` 文件中的源，并换上国内源，保存\n- 切换回普通用户\n\n\n```bash\n# 切换用户\nsudo su\n# 输入密码\nkali-test\n# 更改软件安装源\nvim vim /etc/apt/sources.list\n```\n注释掉原来的内容，并复制 下列内容到 sources.list 中\n\n```bash\n#中科大\ndeb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib\ndeb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib\n \n#阿里云\ndeb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib\ndeb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib\n \n#清华大学\ndeb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free\n \n#浙大\ndeb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free\ndeb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free\n \n#东软大学\ndeb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib\ndeb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib\n \n#官方源\ndeb http://http.kali.org/kali kali-rolling main non-free contrib\ndeb-src http://http.kali.org/kali kali-rolling main non-free contrib\n \ndeb http://mirrors.163.com/debian/ jessie main non-free contrib\ndeb http://mirrors.163.com/debian/ jessie-updates main non-free contrib\ndeb http://mirrors.163.com/debian/ jessie-backports main non-free contrib\ndeb-src http://mirrors.163.com/debian/ jessie main non-free contrib\ndeb-src http://mirrors.163.com/debian/ jessie-updates main non-free contrib\ndeb-src http://mirrors.163.com/debian/ jessie-backports main non-free contrib\ndeb http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib\ndeb-src http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib\n```\n\n`:wq`保存后，执行以下命令\n\n```bash\napt-get update  # 取回更新的软件包列表信息\napt-get upgrade # 进行一次升级\napt-get clean # 删除已经下载的安装包\nreboot  #重启\n```\n\n","source":"_posts/Kali-笔记.md","raw":"---\ntitle: Kali-安装笔记\ntag: Linux\ncategories:\n  - [后端,操作系统,Linux使用]\n  - [信息安全,系统安全]\n\n---\n\n# KaLi—— 笔记\n[toc]\n下载地址：【国内镜像】\n\n```bash\n搜狐：http://mirrors.sohu.com/\n网易：http://mirrors.163.com/\n阿里云：http://mirrors.aliyun.com/\n腾讯：http://android-mirror.bugly.qq.com:8080/（仅针对APP开发的软件，限流，不推荐）\n淘宝：http://npm.taobao.org/\n\n上海交通大学：http://ftp.sjtu.edu.cn/html/resources.xml（部分移动运营商出口状况不佳，无法访问）\n华中科技大学：http://mirror.hust.edu.cn/（当前已用容量估计：4.83T）\n清华大学：http://mirrors.tuna.tsinghua.edu.cn/（当前已用容量估计：9.8T）\n北京理工大学：http://mirror.bit.edu.cn/web/\n兰州大学：http://mirror.lzu.edu.cn/\n中国科技大学：http://mirrors.ustc.edu.cn/（当前已用容量估计：21.32T）\n大连东软信息学院：http://mirrors.neusoft.edu.cn/（当前已用容量估计：2.5T）\n东北大学：http://mirror.neu.edu.cn/\n大连理工大学：http://mirror.dlut.edu.cn/\n哈尔滨工业大学：http://run.hit.edu.cn/html/（部分联通运营商出口状况不佳，无法访问）\n北京交通大学：http://mirror.bjtu.edu.cn/cn/\n天津大学：http://mirror.tju.edu.cn（无法访问，ping超时）\n中国地质大学：http://mirrors.cug.edu.cn/（当前已用容量估计：2.3T）\n浙江大学：http://mirrors.zju.edu.cn/\n厦门大学：http://mirrors.xmu.edu.cn/\n中山大学：http://mirror.sysu.edu.cn/\n重庆大学：http://mirrors.cqu.edu.cn/（当前已用容量估计：3.93T）\n北京化工大学：http://ubuntu.buct.edu.cn/（Android SDK镜像仅供校内使用，当前已用容量估计：1.72T）\n南阳理工学院：http://mirror.nyist.edu.cn/\n中国科学院：http://www.opencas.org/mirrors/\n电子科技大学：http://ubuntu.uestc.edu.cn/（无法访问，ping超时）\n电子科技大学星辰工作室：http://mirrors.stuhome.net/（当前已用容量估计：1.08T）\n西北农林科技大学：http://mirrors.nwsuaf.edu.cn/（只做CentOS镜像，当前已用容量估计：140GB） \n浙江大学：http://mirrors.zju.edu.cn/\n台湾淡江大学: http://ftp.tku.edu.tw/Linux/\n\n首都在线科技股份有限公司（英文名Capital Online Data Service）：http://mirrors.yun-idc.com/\n中国电信天翼云：http://mirrors.ctyun.cn/\nnoc.im：http://mirrors.noc.im/（当前已用容量估计：3.74T）\n常州贝特康姆软件技术有限公司：http://centos.bitcomm.cn/（只做CentOS镜像，当前已用容量估计：140GB）\n公云PubYun（母公司为贝特康姆）：http://mirrors.pubyun.com/\nLinux运维派：http://mirrors.skyshe.cn/（使用阿里云服务器，界面使用浙江大学的模板，首页维护，内容可访问）\n中国互联网络信息中心：http://mirrors.cnnic.cn/（只做Apache镜像，当前已用容量估计：120GB）\nFayea工作室：http://apache.fayea.com/（只做Apache镜像，当前已用容量估计：120GB）\n开源中国社区 http://mirrors.oss.org.cn/\n```\n\n## 1. 安装\n参考【部分不一致】：\n`https://zhuanlan.zhihu.com/p/107667275?from_voters_page=true`\n文件= 》 新建虚拟机 =》 经典 = 》稍后安装 =》 Linux =》 \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128190857420.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191053589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191208991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191337918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191517333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191551465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191640963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n选择第一项：图形化安装【由于我们刚才分配给虚拟机的内存太小（只有 512 MB），所以，只出现这种难看的界面】\n然后：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191829246.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191915611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128191949932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202011281927033.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128192721872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112819281250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128192916509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128192950314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193153727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193207605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193225924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112819325350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193316391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193529659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n在这里选择【图形界面的种类】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193622921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128193744420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128194928831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128194957601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128195238913.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 2. 初始设置\n### 2.1 设置分辨率【以下为：2020.4版】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128153043764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### 2.2 设置网络\n使用VM中的 NAT 模式\n要注意：\n- 物理机是否启用 vm 的 nat 服务\n- 是否将 网卡设为可共享- \n- **锐捷校园网的客户端每隔一段时间就会关掉vm的nat服务**\n- 进入`/etc/network/interfaces`文件，仿照 lo0添加网卡，保存；重启服务 `/etc/init.d/networking restart`\n\n\n使用VM中的 NAT 模式的**步骤**： \n\n- `win + R`，输入`services.msc` , 找到`VM NAT Server`服务，启动\n- 设置vmnet8 网卡的 ip 与 网关【两个要在同一网段】\n- 在vm 中打开虚拟网络编辑器，选择 vmnet8\n- 在下方填写 **子网网段 和 掩码** ，\n- 点击 NAT 设置，输入**网关IP**【该IP不能和物理机中vmnet8的IP相同，但要与物理机中vmnet8 的网关相同】\n\n\n### 2.3 更改鼠标大小\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130141604663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 2.4 调整 终端 字体\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130142910861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 2.4 取消自动休眠\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201130145923390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n### 2.4 更换软件安装源\n- 打开终端\n- 切换到 root 用户\n- 注释掉 `/etc/apt/sources.list` 文件中的源，并换上国内源，保存\n- 切换回普通用户\n\n\n```bash\n# 切换用户\nsudo su\n# 输入密码\nkali-test\n# 更改软件安装源\nvim vim /etc/apt/sources.list\n```\n注释掉原来的内容，并复制 下列内容到 sources.list 中\n\n```bash\n#中科大\ndeb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib\ndeb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib\n \n#阿里云\ndeb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib\ndeb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib\n \n#清华大学\ndeb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free\n \n#浙大\ndeb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free\ndeb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free\n \n#东软大学\ndeb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib\ndeb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib\n \n#官方源\ndeb http://http.kali.org/kali kali-rolling main non-free contrib\ndeb-src http://http.kali.org/kali kali-rolling main non-free contrib\n \ndeb http://mirrors.163.com/debian/ jessie main non-free contrib\ndeb http://mirrors.163.com/debian/ jessie-updates main non-free contrib\ndeb http://mirrors.163.com/debian/ jessie-backports main non-free contrib\ndeb-src http://mirrors.163.com/debian/ jessie main non-free contrib\ndeb-src http://mirrors.163.com/debian/ jessie-updates main non-free contrib\ndeb-src http://mirrors.163.com/debian/ jessie-backports main non-free contrib\ndeb http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib\ndeb-src http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib\n```\n\n`:wq`保存后，执行以下命令\n\n```bash\napt-get update  # 取回更新的软件包列表信息\napt-get upgrade # 进行一次升级\napt-get clean # 删除已经下载的安装包\nreboot  #重启\n```\n\n","slug":"Kali-笔记","published":1,"date":"2021-06-02T02:49:19.131Z","updated":"2021-06-01T07:36:09.365Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs1a000ilcvd3o4k8uez","content":"<h1 id=\"KaLi——-笔记\"><a href=\"#KaLi——-笔记\" class=\"headerlink\" title=\"KaLi—— 笔记\"></a>KaLi—— 笔记</h1><p>[toc]<br>下载地址：【国内镜像】</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">搜狐：http://mirrors.sohu.com/</span><br><span class=\"line\">网易：http://mirrors.163.com/</span><br><span class=\"line\">阿里云：http://mirrors.aliyun.com/</span><br><span class=\"line\">腾讯：http://android-mirror.bugly.qq.com:8080/（仅针对APP开发的软件，限流，不推荐）</span><br><span class=\"line\">淘宝：http://npm.taobao.org/</span><br><span class=\"line\"></span><br><span class=\"line\">上海交通大学：http://ftp.sjtu.edu.cn/html/resources.xml（部分移动运营商出口状况不佳，无法访问）</span><br><span class=\"line\">华中科技大学：http://mirror.hust.edu.cn/（当前已用容量估计：4.83T）</span><br><span class=\"line\">清华大学：http://mirrors.tuna.tsinghua.edu.cn/（当前已用容量估计：9.8T）</span><br><span class=\"line\">北京理工大学：http://mirror.bit.edu.cn/web/</span><br><span class=\"line\">兰州大学：http://mirror.lzu.edu.cn/</span><br><span class=\"line\">中国科技大学：http://mirrors.ustc.edu.cn/（当前已用容量估计：21.32T）</span><br><span class=\"line\">大连东软信息学院：http://mirrors.neusoft.edu.cn/（当前已用容量估计：2.5T）</span><br><span class=\"line\">东北大学：http://mirror.neu.edu.cn/</span><br><span class=\"line\">大连理工大学：http://mirror.dlut.edu.cn/</span><br><span class=\"line\">哈尔滨工业大学：http://run.hit.edu.cn/html/（部分联通运营商出口状况不佳，无法访问）</span><br><span class=\"line\">北京交通大学：http://mirror.bjtu.edu.cn/cn/</span><br><span class=\"line\">天津大学：http://mirror.tju.edu.cn（无法访问，ping超时）</span><br><span class=\"line\">中国地质大学：http://mirrors.cug.edu.cn/（当前已用容量估计：2.3T）</span><br><span class=\"line\">浙江大学：http://mirrors.zju.edu.cn/</span><br><span class=\"line\">厦门大学：http://mirrors.xmu.edu.cn/</span><br><span class=\"line\">中山大学：http://mirror.sysu.edu.cn/</span><br><span class=\"line\">重庆大学：http://mirrors.cqu.edu.cn/（当前已用容量估计：3.93T）</span><br><span class=\"line\">北京化工大学：http://ubuntu.buct.edu.cn/（Android SDK镜像仅供校内使用，当前已用容量估计：1.72T）</span><br><span class=\"line\">南阳理工学院：http://mirror.nyist.edu.cn/</span><br><span class=\"line\">中国科学院：http://www.opencas.org/mirrors/</span><br><span class=\"line\">电子科技大学：http://ubuntu.uestc.edu.cn/（无法访问，ping超时）</span><br><span class=\"line\">电子科技大学星辰工作室：http://mirrors.stuhome.net/（当前已用容量估计：1.08T）</span><br><span class=\"line\">西北农林科技大学：http://mirrors.nwsuaf.edu.cn/（只做CentOS镜像，当前已用容量估计：140GB） </span><br><span class=\"line\">浙江大学：http://mirrors.zju.edu.cn/</span><br><span class=\"line\">台湾淡江大学: http://ftp.tku.edu.tw/Linux/</span><br><span class=\"line\"></span><br><span class=\"line\">首都在线科技股份有限公司（英文名Capital Online Data Service）：http://mirrors.yun-idc.com/</span><br><span class=\"line\">中国电信天翼云：http://mirrors.ctyun.cn/</span><br><span class=\"line\">noc.im：http://mirrors.noc.im/（当前已用容量估计：3.74T）</span><br><span class=\"line\">常州贝特康姆软件技术有限公司：http://centos.bitcomm.cn/（只做CentOS镜像，当前已用容量估计：140GB）</span><br><span class=\"line\">公云PubYun（母公司为贝特康姆）：http://mirrors.pubyun.com/</span><br><span class=\"line\">Linux运维派：http://mirrors.skyshe.cn/（使用阿里云服务器，界面使用浙江大学的模板，首页维护，内容可访问）</span><br><span class=\"line\">中国互联网络信息中心：http://mirrors.cnnic.cn/（只做Apache镜像，当前已用容量估计：120GB）</span><br><span class=\"line\">Fayea工作室：http://apache.fayea.com/（只做Apache镜像，当前已用容量估计：120GB）</span><br><span class=\"line\">开源中国社区 http://mirrors.oss.org.cn/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1. 安装\"></a>1. 安装</h2><p>参考【部分不一致】：<br><code>https://zhuanlan.zhihu.com/p/107667275?from_voters_page=true</code><br>文件= 》 新建虚拟机 =》 经典 = 》稍后安装 =》 Linux =》<br><img src=\"https://img-blog.csdnimg.cn/20201128190857420.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191053589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191208991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191337918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191517333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191551465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191640963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>选择第一项：图形化安装【由于我们刚才分配给虚拟机的内存太小（只有 512 MB），所以，只出现这种难看的界面】<br>然后：<br><img src=\"https://img-blog.csdnimg.cn/20201128191829246.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191915611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191949932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/202011281927033.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128192721872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020112819281250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128192916509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128192950314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128193153727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128193207605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128193225924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020112819325350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128193316391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128193529659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>在这里选择【图形界面的种类】<br><img src=\"https://img-blog.csdnimg.cn/20201128193622921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128193744420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128194928831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128194957601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128195238913.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-初始设置\"><a href=\"#2-初始设置\" class=\"headerlink\" title=\"2. 初始设置\"></a>2. 初始设置</h2><h3 id=\"2-1-设置分辨率【以下为：2020-4版】\"><a href=\"#2-1-设置分辨率【以下为：2020-4版】\" class=\"headerlink\" title=\"2.1 设置分辨率【以下为：2020.4版】\"></a>2.1 设置分辨率【以下为：2020.4版】</h3><p><img src=\"https://img-blog.csdnimg.cn/20201128153043764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-2-设置网络\"><a href=\"#2-2-设置网络\" class=\"headerlink\" title=\"2.2 设置网络\"></a>2.2 设置网络</h3><p>使用VM中的 NAT 模式<br>要注意：</p>\n<ul>\n<li>物理机是否启用 vm 的 nat 服务</li>\n<li>是否将 网卡设为可共享- </li>\n<li><strong>锐捷校园网的客户端每隔一段时间就会关掉vm的nat服务</strong></li>\n<li>进入<code>/etc/network/interfaces</code>文件，仿照 lo0添加网卡，保存；重启服务 <code>/etc/init.d/networking restart</code></li>\n</ul>\n<p>使用VM中的 NAT 模式的<strong>步骤</strong>： </p>\n<ul>\n<li><code>win + R</code>，输入<code>services.msc</code> , 找到<code>VM NAT Server</code>服务，启动</li>\n<li>设置vmnet8 网卡的 ip 与 网关【两个要在同一网段】</li>\n<li>在vm 中打开虚拟网络编辑器，选择 vmnet8</li>\n<li>在下方填写 <strong>子网网段 和 掩码</strong> ，</li>\n<li>点击 NAT 设置，输入<strong>网关IP</strong>【该IP不能和物理机中vmnet8的IP相同，但要与物理机中vmnet8 的网关相同】</li>\n</ul>\n<h3 id=\"2-3-更改鼠标大小\"><a href=\"#2-3-更改鼠标大小\" class=\"headerlink\" title=\"2.3 更改鼠标大小\"></a>2.3 更改鼠标大小</h3><p><img src=\"https://img-blog.csdnimg.cn/20201130141604663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-4-调整-终端-字体\"><a href=\"#2-4-调整-终端-字体\" class=\"headerlink\" title=\"2.4 调整 终端 字体\"></a>2.4 调整 终端 字体</h3><p><img src=\"https://img-blog.csdnimg.cn/20201130142910861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-4-取消自动休眠\"><a href=\"#2-4-取消自动休眠\" class=\"headerlink\" title=\"2.4 取消自动休眠\"></a>2.4 取消自动休眠</h3><p><img src=\"https://img-blog.csdnimg.cn/20201130145923390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-4-更换软件安装源\"><a href=\"#2-4-更换软件安装源\" class=\"headerlink\" title=\"2.4 更换软件安装源\"></a>2.4 更换软件安装源</h3><ul>\n<li>打开终端</li>\n<li>切换到 root 用户</li>\n<li>注释掉 <code>/etc/apt/sources.list</code> 文件中的源，并换上国内源，保存</li>\n<li>切换回普通用户</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换用户</span></span><br><span class=\"line\">sudo su</span><br><span class=\"line\"><span class=\"comment\"># 输入密码</span></span><br><span class=\"line\">kali-test</span><br><span class=\"line\"><span class=\"comment\"># 更改软件安装源</span></span><br><span class=\"line\">vim vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n<p>注释掉原来的内容，并复制 下列内容到 sources.list 中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#中科大</span></span><br><span class=\"line\">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#阿里云</span></span><br><span class=\"line\">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#清华大学</span></span><br><span class=\"line\">deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#浙大</span></span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#东软大学</span></span><br><span class=\"line\">deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#官方源</span></span><br><span class=\"line\">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class=\"line\">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class=\"line\"> </span><br><span class=\"line\">deb http://mirrors.163.com/debian/ jessie main non-free contrib</span><br><span class=\"line\">deb http://mirrors.163.com/debian/ jessie-updates main non-free contrib</span><br><span class=\"line\">deb http://mirrors.163.com/debian/ jessie-backports main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.163.com/debian/ jessie main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.163.com/debian/ jessie-updates main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.163.com/debian/ jessie-backports main non-free contrib</span><br><span class=\"line\">deb http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib</span><br></pre></td></tr></table></figure>\n\n<p><code>:wq</code>保存后，执行以下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get update  <span class=\"comment\"># 取回更新的软件包列表信息</span></span><br><span class=\"line\">apt-get upgrade <span class=\"comment\"># 进行一次升级</span></span><br><span class=\"line\">apt-get clean <span class=\"comment\"># 删除已经下载的安装包</span></span><br><span class=\"line\">reboot  <span class=\"comment\">#重启</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"KaLi——-笔记\"><a href=\"#KaLi——-笔记\" class=\"headerlink\" title=\"KaLi—— 笔记\"></a>KaLi—— 笔记</h1><p>[toc]<br>下载地址：【国内镜像】</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">搜狐：http://mirrors.sohu.com/</span><br><span class=\"line\">网易：http://mirrors.163.com/</span><br><span class=\"line\">阿里云：http://mirrors.aliyun.com/</span><br><span class=\"line\">腾讯：http://android-mirror.bugly.qq.com:8080/（仅针对APP开发的软件，限流，不推荐）</span><br><span class=\"line\">淘宝：http://npm.taobao.org/</span><br><span class=\"line\"></span><br><span class=\"line\">上海交通大学：http://ftp.sjtu.edu.cn/html/resources.xml（部分移动运营商出口状况不佳，无法访问）</span><br><span class=\"line\">华中科技大学：http://mirror.hust.edu.cn/（当前已用容量估计：4.83T）</span><br><span class=\"line\">清华大学：http://mirrors.tuna.tsinghua.edu.cn/（当前已用容量估计：9.8T）</span><br><span class=\"line\">北京理工大学：http://mirror.bit.edu.cn/web/</span><br><span class=\"line\">兰州大学：http://mirror.lzu.edu.cn/</span><br><span class=\"line\">中国科技大学：http://mirrors.ustc.edu.cn/（当前已用容量估计：21.32T）</span><br><span class=\"line\">大连东软信息学院：http://mirrors.neusoft.edu.cn/（当前已用容量估计：2.5T）</span><br><span class=\"line\">东北大学：http://mirror.neu.edu.cn/</span><br><span class=\"line\">大连理工大学：http://mirror.dlut.edu.cn/</span><br><span class=\"line\">哈尔滨工业大学：http://run.hit.edu.cn/html/（部分联通运营商出口状况不佳，无法访问）</span><br><span class=\"line\">北京交通大学：http://mirror.bjtu.edu.cn/cn/</span><br><span class=\"line\">天津大学：http://mirror.tju.edu.cn（无法访问，ping超时）</span><br><span class=\"line\">中国地质大学：http://mirrors.cug.edu.cn/（当前已用容量估计：2.3T）</span><br><span class=\"line\">浙江大学：http://mirrors.zju.edu.cn/</span><br><span class=\"line\">厦门大学：http://mirrors.xmu.edu.cn/</span><br><span class=\"line\">中山大学：http://mirror.sysu.edu.cn/</span><br><span class=\"line\">重庆大学：http://mirrors.cqu.edu.cn/（当前已用容量估计：3.93T）</span><br><span class=\"line\">北京化工大学：http://ubuntu.buct.edu.cn/（Android SDK镜像仅供校内使用，当前已用容量估计：1.72T）</span><br><span class=\"line\">南阳理工学院：http://mirror.nyist.edu.cn/</span><br><span class=\"line\">中国科学院：http://www.opencas.org/mirrors/</span><br><span class=\"line\">电子科技大学：http://ubuntu.uestc.edu.cn/（无法访问，ping超时）</span><br><span class=\"line\">电子科技大学星辰工作室：http://mirrors.stuhome.net/（当前已用容量估计：1.08T）</span><br><span class=\"line\">西北农林科技大学：http://mirrors.nwsuaf.edu.cn/（只做CentOS镜像，当前已用容量估计：140GB） </span><br><span class=\"line\">浙江大学：http://mirrors.zju.edu.cn/</span><br><span class=\"line\">台湾淡江大学: http://ftp.tku.edu.tw/Linux/</span><br><span class=\"line\"></span><br><span class=\"line\">首都在线科技股份有限公司（英文名Capital Online Data Service）：http://mirrors.yun-idc.com/</span><br><span class=\"line\">中国电信天翼云：http://mirrors.ctyun.cn/</span><br><span class=\"line\">noc.im：http://mirrors.noc.im/（当前已用容量估计：3.74T）</span><br><span class=\"line\">常州贝特康姆软件技术有限公司：http://centos.bitcomm.cn/（只做CentOS镜像，当前已用容量估计：140GB）</span><br><span class=\"line\">公云PubYun（母公司为贝特康姆）：http://mirrors.pubyun.com/</span><br><span class=\"line\">Linux运维派：http://mirrors.skyshe.cn/（使用阿里云服务器，界面使用浙江大学的模板，首页维护，内容可访问）</span><br><span class=\"line\">中国互联网络信息中心：http://mirrors.cnnic.cn/（只做Apache镜像，当前已用容量估计：120GB）</span><br><span class=\"line\">Fayea工作室：http://apache.fayea.com/（只做Apache镜像，当前已用容量估计：120GB）</span><br><span class=\"line\">开源中国社区 http://mirrors.oss.org.cn/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1. 安装\"></a>1. 安装</h2><p>参考【部分不一致】：<br><code>https://zhuanlan.zhihu.com/p/107667275?from_voters_page=true</code><br>文件= 》 新建虚拟机 =》 经典 = 》稍后安装 =》 Linux =》<br><img src=\"https://img-blog.csdnimg.cn/20201128190857420.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191053589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191208991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191337918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191517333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191551465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191640963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>选择第一项：图形化安装【由于我们刚才分配给虚拟机的内存太小（只有 512 MB），所以，只出现这种难看的界面】<br>然后：<br><img src=\"https://img-blog.csdnimg.cn/20201128191829246.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191915611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128191949932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/202011281927033.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128192721872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020112819281250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128192916509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128192950314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128193153727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128193207605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128193225924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020112819325350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128193316391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128193529659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>在这里选择【图形界面的种类】<br><img src=\"https://img-blog.csdnimg.cn/20201128193622921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128193744420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128194928831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128194957601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201128195238913.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-初始设置\"><a href=\"#2-初始设置\" class=\"headerlink\" title=\"2. 初始设置\"></a>2. 初始设置</h2><h3 id=\"2-1-设置分辨率【以下为：2020-4版】\"><a href=\"#2-1-设置分辨率【以下为：2020-4版】\" class=\"headerlink\" title=\"2.1 设置分辨率【以下为：2020.4版】\"></a>2.1 设置分辨率【以下为：2020.4版】</h3><p><img src=\"https://img-blog.csdnimg.cn/20201128153043764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-2-设置网络\"><a href=\"#2-2-设置网络\" class=\"headerlink\" title=\"2.2 设置网络\"></a>2.2 设置网络</h3><p>使用VM中的 NAT 模式<br>要注意：</p>\n<ul>\n<li>物理机是否启用 vm 的 nat 服务</li>\n<li>是否将 网卡设为可共享- </li>\n<li><strong>锐捷校园网的客户端每隔一段时间就会关掉vm的nat服务</strong></li>\n<li>进入<code>/etc/network/interfaces</code>文件，仿照 lo0添加网卡，保存；重启服务 <code>/etc/init.d/networking restart</code></li>\n</ul>\n<p>使用VM中的 NAT 模式的<strong>步骤</strong>： </p>\n<ul>\n<li><code>win + R</code>，输入<code>services.msc</code> , 找到<code>VM NAT Server</code>服务，启动</li>\n<li>设置vmnet8 网卡的 ip 与 网关【两个要在同一网段】</li>\n<li>在vm 中打开虚拟网络编辑器，选择 vmnet8</li>\n<li>在下方填写 <strong>子网网段 和 掩码</strong> ，</li>\n<li>点击 NAT 设置，输入<strong>网关IP</strong>【该IP不能和物理机中vmnet8的IP相同，但要与物理机中vmnet8 的网关相同】</li>\n</ul>\n<h3 id=\"2-3-更改鼠标大小\"><a href=\"#2-3-更改鼠标大小\" class=\"headerlink\" title=\"2.3 更改鼠标大小\"></a>2.3 更改鼠标大小</h3><p><img src=\"https://img-blog.csdnimg.cn/20201130141604663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-4-调整-终端-字体\"><a href=\"#2-4-调整-终端-字体\" class=\"headerlink\" title=\"2.4 调整 终端 字体\"></a>2.4 调整 终端 字体</h3><p><img src=\"https://img-blog.csdnimg.cn/20201130142910861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-4-取消自动休眠\"><a href=\"#2-4-取消自动休眠\" class=\"headerlink\" title=\"2.4 取消自动休眠\"></a>2.4 取消自动休眠</h3><p><img src=\"https://img-blog.csdnimg.cn/20201130145923390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-4-更换软件安装源\"><a href=\"#2-4-更换软件安装源\" class=\"headerlink\" title=\"2.4 更换软件安装源\"></a>2.4 更换软件安装源</h3><ul>\n<li>打开终端</li>\n<li>切换到 root 用户</li>\n<li>注释掉 <code>/etc/apt/sources.list</code> 文件中的源，并换上国内源，保存</li>\n<li>切换回普通用户</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换用户</span></span><br><span class=\"line\">sudo su</span><br><span class=\"line\"><span class=\"comment\"># 输入密码</span></span><br><span class=\"line\">kali-test</span><br><span class=\"line\"><span class=\"comment\"># 更改软件安装源</span></span><br><span class=\"line\">vim vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n<p>注释掉原来的内容，并复制 下列内容到 sources.list 中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#中科大</span></span><br><span class=\"line\">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#阿里云</span></span><br><span class=\"line\">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#清华大学</span></span><br><span class=\"line\">deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#浙大</span></span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#东软大学</span></span><br><span class=\"line\">deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#官方源</span></span><br><span class=\"line\">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class=\"line\">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class=\"line\"> </span><br><span class=\"line\">deb http://mirrors.163.com/debian/ jessie main non-free contrib</span><br><span class=\"line\">deb http://mirrors.163.com/debian/ jessie-updates main non-free contrib</span><br><span class=\"line\">deb http://mirrors.163.com/debian/ jessie-backports main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.163.com/debian/ jessie main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.163.com/debian/ jessie-updates main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.163.com/debian/ jessie-backports main non-free contrib</span><br><span class=\"line\">deb http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib</span><br><span class=\"line\">deb-src http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib</span><br></pre></td></tr></table></figure>\n\n<p><code>:wq</code>保存后，执行以下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get update  <span class=\"comment\"># 取回更新的软件包列表信息</span></span><br><span class=\"line\">apt-get upgrade <span class=\"comment\"># 进行一次升级</span></span><br><span class=\"line\">apt-get clean <span class=\"comment\"># 删除已经下载的安装包</span></span><br><span class=\"line\">reboot  <span class=\"comment\">#重启</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"MySQL 8.0版本-安装篇","_content":"\n# MySQL 8.0版本-安装篇\n\n[toc]\n\n### 1. MySQL免安装版下载(8.0.22)\n\n进入：[MySQL官网](https://www.mysql.com/)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112714302283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127143131278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127150613416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127143501926.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n之后 等待下载。\n### 2. MySQL的安装\n#### 2.1 解压 下载好的压缩包【路径不为中文】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127151330477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 2.2 创建 my.ini 配置文件,并生成初始密码\n**第一步：**\n\t在 bin 的同一级目录创建my.ini配置文件\n配置文件中，需要更改的2部分为：\n+ basedir: 安装路径\n+ datadir：安装路径\\data\n\n输入的配置：\n```c\n[mysqld]\n# 设置3306端口\nport=3306\n# 设置mysql的安装目录\nbasedir=E:\\mysql-8.0.22-winx64\n# 设置mysql数据库的数据的存放目录\ndatadir=E:\\mysql-8.0.22-winx64\\Data\n# 允许最大连接数\nmax_connections=200\n# 允许连接失败的次数。\nmax_connect_errors=10\n# 服务端使用的字符集默认为utf8mb4\ncharacter-set-server=utf8mb4\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=INNODB\n# 默认使用“mysql_native_password”插件认证\n#mysql_native_password\ndefault_authentication_plugin=mysql_native_password\n[mysql]\n# 设置mysql客户端默认字符集\ndefault-character-set=utf8mb4\n[client]\n# 设置mysql客户端连接服务端时默认使用的端口\nport=3306\ndefault-character-set=utf8mb4\n```\n**第二步：**\n以**管理员**身份运行 cmd，进入MySQL的 bin 目录，\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127152842804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n为了生成Data目录和初始密码，输入：\n `mysqld --initialize --console `\n若出现  如下报错：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112715354489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n则 百度下载：vcruntime140_1.dll\n并复制到以下目录`C:\\Windows\\System32`：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127153801616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n复制完该文件后，\n重新在 cmd 输入:  `mysqld --initialize --console`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127154427353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n上图红色部分为：随机生成的初始密码【记录下来，方便后面使用】\n#### 2.3 安装 + 启动 MySQL服务\n**安装：**\ncmd输入：`mysqld --install [服务名]`,\n其中，**服务名可省略**\n即：输入：`mysqld --install`\n**卸载服务：** `mysqld --remove mysql`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127155811577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n**启动：** 两种方式\n+  cmd 中输入： `net start  mysql` 【如果服务**没有设为自动**，则每次开机都要输一遍】（关闭指令:`net stop mysql`）\n+ \t 右键 “计算机” =》 “管理” =》 “服务” =》 找到 mysql =》启动\n【将其设为**自动**，这样可以不用每次开机都手动开启 mysql 服务】\n#### 2.4 进入MySQL\n输入：`mysql -u root –p`\n输入刚才生成的初始密码【必须手动输入】\n更改初始密码\n`ALTER USER \"root\"@\"localhost\" IDENTIFIED BY \"你的新密码\";`\n#### 2.5 配置环境变量\n配置环境变量是为了在cmd下的任意目录中都能使用mysql\n**配置MySQL的主目录**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128100208106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n**配置path**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128100511736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n3次确定\n\n\n\n### 3. Navacat的安装\n参考：`https://www.cnblogs.com/yanghongtao/p/10976526.html`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163008138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163020957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163104351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112716311497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112716312449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163146205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163332149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163344601.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163351105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163412973.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163421884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163444278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163549530.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163600171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112716361083.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163644942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163725455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163741557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163807439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 4. 常用的MySQL命令\n注意：MySQL的所有命令都以英文分号<kbd>;</kbd>结尾\n#### 4.1 显示所有数据库\n```sql\nshow databases;\n```\n\n#### 4.2 创建数据库\n```sql\ncreate database School;\n```\n#### 4.3 删除数据库\n```sql\ndrop database School;\n```\n\n","source":"_posts/MySQL 8.0版本-安装篇.md","raw":"---\ntitle: MySQL 8.0版本-安装篇\ntag: MySQL\ncategories:\n  - SQL\n  - MySQL\n---\n\n# MySQL 8.0版本-安装篇\n\n[toc]\n\n### 1. MySQL免安装版下载(8.0.22)\n\n进入：[MySQL官网](https://www.mysql.com/)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112714302283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127143131278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127150613416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127143501926.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n之后 等待下载。\n### 2. MySQL的安装\n#### 2.1 解压 下载好的压缩包【路径不为中文】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127151330477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 2.2 创建 my.ini 配置文件,并生成初始密码\n**第一步：**\n\t在 bin 的同一级目录创建my.ini配置文件\n配置文件中，需要更改的2部分为：\n+ basedir: 安装路径\n+ datadir：安装路径\\data\n\n输入的配置：\n```c\n[mysqld]\n# 设置3306端口\nport=3306\n# 设置mysql的安装目录\nbasedir=E:\\mysql-8.0.22-winx64\n# 设置mysql数据库的数据的存放目录\ndatadir=E:\\mysql-8.0.22-winx64\\Data\n# 允许最大连接数\nmax_connections=200\n# 允许连接失败的次数。\nmax_connect_errors=10\n# 服务端使用的字符集默认为utf8mb4\ncharacter-set-server=utf8mb4\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=INNODB\n# 默认使用“mysql_native_password”插件认证\n#mysql_native_password\ndefault_authentication_plugin=mysql_native_password\n[mysql]\n# 设置mysql客户端默认字符集\ndefault-character-set=utf8mb4\n[client]\n# 设置mysql客户端连接服务端时默认使用的端口\nport=3306\ndefault-character-set=utf8mb4\n```\n**第二步：**\n以**管理员**身份运行 cmd，进入MySQL的 bin 目录，\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127152842804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n为了生成Data目录和初始密码，输入：\n `mysqld --initialize --console `\n若出现  如下报错：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112715354489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n则 百度下载：vcruntime140_1.dll\n并复制到以下目录`C:\\Windows\\System32`：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127153801616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n复制完该文件后，\n重新在 cmd 输入:  `mysqld --initialize --console`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127154427353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n上图红色部分为：随机生成的初始密码【记录下来，方便后面使用】\n#### 2.3 安装 + 启动 MySQL服务\n**安装：**\ncmd输入：`mysqld --install [服务名]`,\n其中，**服务名可省略**\n即：输入：`mysqld --install`\n**卸载服务：** `mysqld --remove mysql`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127155811577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n**启动：** 两种方式\n+  cmd 中输入： `net start  mysql` 【如果服务**没有设为自动**，则每次开机都要输一遍】（关闭指令:`net stop mysql`）\n+ \t 右键 “计算机” =》 “管理” =》 “服务” =》 找到 mysql =》启动\n【将其设为**自动**，这样可以不用每次开机都手动开启 mysql 服务】\n#### 2.4 进入MySQL\n输入：`mysql -u root –p`\n输入刚才生成的初始密码【必须手动输入】\n更改初始密码\n`ALTER USER \"root\"@\"localhost\" IDENTIFIED BY \"你的新密码\";`\n#### 2.5 配置环境变量\n配置环境变量是为了在cmd下的任意目录中都能使用mysql\n**配置MySQL的主目录**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128100208106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n**配置path**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201128100511736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n3次确定\n\n\n\n### 3. Navacat的安装\n参考：`https://www.cnblogs.com/yanghongtao/p/10976526.html`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163008138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163020957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163104351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112716311497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112716312449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163146205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163332149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163344601.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163351105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163412973.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163421884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163444278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163549530.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163600171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020112716361083.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163644942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163725455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163741557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201127163807439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 4. 常用的MySQL命令\n注意：MySQL的所有命令都以英文分号<kbd>;</kbd>结尾\n#### 4.1 显示所有数据库\n```sql\nshow databases;\n```\n\n#### 4.2 创建数据库\n```sql\ncreate database School;\n```\n#### 4.3 删除数据库\n```sql\ndrop database School;\n```\n\n","slug":"MySQL 8.0版本-安装篇","published":1,"date":"2021-06-02T02:49:19.165Z","updated":"2021-06-01T07:36:09.368Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs1b000llcvd3zz59e2i","content":"<h1 id=\"MySQL-8-0版本-安装篇\"><a href=\"#MySQL-8-0版本-安装篇\" class=\"headerlink\" title=\"MySQL 8.0版本-安装篇\"></a>MySQL 8.0版本-安装篇</h1><p>[toc]</p>\n<h3 id=\"1-MySQL免安装版下载-8-0-22\"><a href=\"#1-MySQL免安装版下载-8-0-22\" class=\"headerlink\" title=\"1. MySQL免安装版下载(8.0.22)\"></a>1. MySQL免安装版下载(8.0.22)</h3><p>进入：<a href=\"https://www.mysql.com/\">MySQL官网</a><br><img src=\"https://img-blog.csdnimg.cn/2020112714302283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127143131278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127150613416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201127143501926.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>之后 等待下载。</p>\n<h3 id=\"2-MySQL的安装\"><a href=\"#2-MySQL的安装\" class=\"headerlink\" title=\"2. MySQL的安装\"></a>2. MySQL的安装</h3><h4 id=\"2-1-解压-下载好的压缩包【路径不为中文】\"><a href=\"#2-1-解压-下载好的压缩包【路径不为中文】\" class=\"headerlink\" title=\"2.1 解压 下载好的压缩包【路径不为中文】\"></a>2.1 解压 下载好的压缩包【路径不为中文】</h4><p><img src=\"https://img-blog.csdnimg.cn/20201127151330477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"2-2-创建-my-ini-配置文件-并生成初始密码\"><a href=\"#2-2-创建-my-ini-配置文件-并生成初始密码\" class=\"headerlink\" title=\"2.2 创建 my.ini 配置文件,并生成初始密码\"></a>2.2 创建 my.ini 配置文件,并生成初始密码</h4><p><strong>第一步：</strong><br>    在 bin 的同一级目录创建my.ini配置文件<br>配置文件中，需要更改的2部分为：</p>\n<ul>\n<li>basedir: 安装路径</li>\n<li>datadir：安装路径\\data</li>\n</ul>\n<p>输入的配置：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\"># 设置<span class=\"number\">3306</span>端口</span><br><span class=\"line\">port=<span class=\"number\">3306</span></span><br><span class=\"line\"># 设置mysql的安装目录</span><br><span class=\"line\">basedir=E:\\mysql<span class=\"number\">-8.0</span><span class=\"number\">.22</span>-winx64</span><br><span class=\"line\"># 设置mysql数据库的数据的存放目录</span><br><span class=\"line\">datadir=E:\\mysql<span class=\"number\">-8.0</span><span class=\"number\">.22</span>-winx64\\Data</span><br><span class=\"line\"># 允许最大连接数</span><br><span class=\"line\">max_connections=<span class=\"number\">200</span></span><br><span class=\"line\"># 允许连接失败的次数。</span><br><span class=\"line\">max_connect_errors=<span class=\"number\">10</span></span><br><span class=\"line\"># 服务端使用的字符集默认为utf8mb4</span><br><span class=\"line\">character-<span class=\"built_in\">set</span>-server=utf8mb4</span><br><span class=\"line\"># 创建新表时将使用的默认存储引擎</span><br><span class=\"line\"><span class=\"keyword\">default</span>-storage-engine=INNODB</span><br><span class=\"line\"># 默认使用“mysql_native_password”插件认证</span><br><span class=\"line\">#mysql_native_password</span><br><span class=\"line\">default_authentication_plugin=mysql_native_password</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\"># 设置mysql客户端默认字符集</span><br><span class=\"line\"><span class=\"keyword\">default</span>-character-<span class=\"built_in\">set</span>=utf8mb4</span><br><span class=\"line\">[client]</span><br><span class=\"line\"># 设置mysql客户端连接服务端时默认使用的端口</span><br><span class=\"line\">port=<span class=\"number\">3306</span></span><br><span class=\"line\"><span class=\"keyword\">default</span>-character-<span class=\"built_in\">set</span>=utf8mb4</span><br></pre></td></tr></table></figure>\n<p><strong>第二步：</strong><br>以<strong>管理员</strong>身份运行 cmd，进入MySQL的 bin 目录，<br><img src=\"https://img-blog.csdnimg.cn/20201127152842804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>为了生成Data目录和初始密码，输入：<br> <code>mysqld --initialize --console </code><br>若出现  如下报错：<br><img src=\"https://img-blog.csdnimg.cn/2020112715354489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>则 百度下载：vcruntime140_1.dll<br>并复制到以下目录<code>C:\\Windows\\System32</code>：<br><img src=\"https://img-blog.csdnimg.cn/20201127153801616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>复制完该文件后，<br>重新在 cmd 输入:  <code>mysqld --initialize --console</code><br><img src=\"https://img-blog.csdnimg.cn/20201127154427353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>上图红色部分为：随机生成的初始密码【记录下来，方便后面使用】</p>\n<h4 id=\"2-3-安装-启动-MySQL服务\"><a href=\"#2-3-安装-启动-MySQL服务\" class=\"headerlink\" title=\"2.3 安装 + 启动 MySQL服务\"></a>2.3 安装 + 启动 MySQL服务</h4><p><strong>安装：</strong><br>cmd输入：<code>mysqld --install [服务名]</code>,<br>其中，<strong>服务名可省略</strong><br>即：输入：<code>mysqld --install</code><br><strong>卸载服务：</strong> <code>mysqld --remove mysql</code><br><img src=\"https://img-blog.csdnimg.cn/20201127155811577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>启动：</strong> 两种方式</p>\n<ul>\n<li> cmd 中输入： <code>net start  mysql</code> 【如果服务<strong>没有设为自动</strong>，则每次开机都要输一遍】（关闭指令:<code>net stop mysql</code>）</li>\n<li><pre><code> 右键 “计算机” =》 “管理” =》 “服务” =》 找到 mysql =》启动\n</code></pre>\n【将其设为<strong>自动</strong>，这样可以不用每次开机都手动开启 mysql 服务】<h4 id=\"2-4-进入MySQL\"><a href=\"#2-4-进入MySQL\" class=\"headerlink\" title=\"2.4 进入MySQL\"></a>2.4 进入MySQL</h4>输入：<code>mysql -u root –p</code><br>输入刚才生成的初始密码【必须手动输入】<br>更改初始密码<br><code>ALTER USER &quot;root&quot;@&quot;localhost&quot; IDENTIFIED BY &quot;你的新密码&quot;;</code><h4 id=\"2-5-配置环境变量\"><a href=\"#2-5-配置环境变量\" class=\"headerlink\" title=\"2.5 配置环境变量\"></a>2.5 配置环境变量</h4>配置环境变量是为了在cmd下的任意目录中都能使用mysql</li>\n</ul>\n<p><strong>配置MySQL的主目录</strong><br><img src=\"https://img-blog.csdnimg.cn/20201128100208106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>配置path</strong><br><img src=\"https://img-blog.csdnimg.cn/20201128100511736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>3次确定</p>\n<h3 id=\"3-Navacat的安装\"><a href=\"#3-Navacat的安装\" class=\"headerlink\" title=\"3. Navacat的安装\"></a>3. Navacat的安装</h3><p>参考：<code>https://www.cnblogs.com/yanghongtao/p/10976526.html</code><br><img src=\"https://img-blog.csdnimg.cn/20201127163008138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163020957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163104351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020112716311497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020112716312449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163146205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163332149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163344601.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163351105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163412973.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163421884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163444278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163549530.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163600171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020112716361083.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163644942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163725455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163741557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163807439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-常用的MySQL命令\"><a href=\"#4-常用的MySQL命令\" class=\"headerlink\" title=\"4. 常用的MySQL命令\"></a>4. 常用的MySQL命令</h3><p>注意：MySQL的所有命令都以英文分号<kbd>;</kbd>结尾</p>\n<h4 id=\"4-1-显示所有数据库\"><a href=\"#4-1-显示所有数据库\" class=\"headerlink\" title=\"4.1 显示所有数据库\"></a>4.1 显示所有数据库</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> databases;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-创建数据库\"><a href=\"#4-2-创建数据库\" class=\"headerlink\" title=\"4.2 创建数据库\"></a>4.2 创建数据库</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> database School;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-3-删除数据库\"><a href=\"#4-3-删除数据库\" class=\"headerlink\" title=\"4.3 删除数据库\"></a>4.3 删除数据库</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> database School;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"MySQL-8-0版本-安装篇\"><a href=\"#MySQL-8-0版本-安装篇\" class=\"headerlink\" title=\"MySQL 8.0版本-安装篇\"></a>MySQL 8.0版本-安装篇</h1><p>[toc]</p>\n<h3 id=\"1-MySQL免安装版下载-8-0-22\"><a href=\"#1-MySQL免安装版下载-8-0-22\" class=\"headerlink\" title=\"1. MySQL免安装版下载(8.0.22)\"></a>1. MySQL免安装版下载(8.0.22)</h3><p>进入：<a href=\"https://www.mysql.com/\">MySQL官网</a><br><img src=\"https://img-blog.csdnimg.cn/2020112714302283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127143131278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127150613416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201127143501926.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>之后 等待下载。</p>\n<h3 id=\"2-MySQL的安装\"><a href=\"#2-MySQL的安装\" class=\"headerlink\" title=\"2. MySQL的安装\"></a>2. MySQL的安装</h3><h4 id=\"2-1-解压-下载好的压缩包【路径不为中文】\"><a href=\"#2-1-解压-下载好的压缩包【路径不为中文】\" class=\"headerlink\" title=\"2.1 解压 下载好的压缩包【路径不为中文】\"></a>2.1 解压 下载好的压缩包【路径不为中文】</h4><p><img src=\"https://img-blog.csdnimg.cn/20201127151330477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"2-2-创建-my-ini-配置文件-并生成初始密码\"><a href=\"#2-2-创建-my-ini-配置文件-并生成初始密码\" class=\"headerlink\" title=\"2.2 创建 my.ini 配置文件,并生成初始密码\"></a>2.2 创建 my.ini 配置文件,并生成初始密码</h4><p><strong>第一步：</strong><br>    在 bin 的同一级目录创建my.ini配置文件<br>配置文件中，需要更改的2部分为：</p>\n<ul>\n<li>basedir: 安装路径</li>\n<li>datadir：安装路径\\data</li>\n</ul>\n<p>输入的配置：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\"># 设置<span class=\"number\">3306</span>端口</span><br><span class=\"line\">port=<span class=\"number\">3306</span></span><br><span class=\"line\"># 设置mysql的安装目录</span><br><span class=\"line\">basedir=E:\\mysql<span class=\"number\">-8.0</span><span class=\"number\">.22</span>-winx64</span><br><span class=\"line\"># 设置mysql数据库的数据的存放目录</span><br><span class=\"line\">datadir=E:\\mysql<span class=\"number\">-8.0</span><span class=\"number\">.22</span>-winx64\\Data</span><br><span class=\"line\"># 允许最大连接数</span><br><span class=\"line\">max_connections=<span class=\"number\">200</span></span><br><span class=\"line\"># 允许连接失败的次数。</span><br><span class=\"line\">max_connect_errors=<span class=\"number\">10</span></span><br><span class=\"line\"># 服务端使用的字符集默认为utf8mb4</span><br><span class=\"line\">character-<span class=\"built_in\">set</span>-server=utf8mb4</span><br><span class=\"line\"># 创建新表时将使用的默认存储引擎</span><br><span class=\"line\"><span class=\"keyword\">default</span>-storage-engine=INNODB</span><br><span class=\"line\"># 默认使用“mysql_native_password”插件认证</span><br><span class=\"line\">#mysql_native_password</span><br><span class=\"line\">default_authentication_plugin=mysql_native_password</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\"># 设置mysql客户端默认字符集</span><br><span class=\"line\"><span class=\"keyword\">default</span>-character-<span class=\"built_in\">set</span>=utf8mb4</span><br><span class=\"line\">[client]</span><br><span class=\"line\"># 设置mysql客户端连接服务端时默认使用的端口</span><br><span class=\"line\">port=<span class=\"number\">3306</span></span><br><span class=\"line\"><span class=\"keyword\">default</span>-character-<span class=\"built_in\">set</span>=utf8mb4</span><br></pre></td></tr></table></figure>\n<p><strong>第二步：</strong><br>以<strong>管理员</strong>身份运行 cmd，进入MySQL的 bin 目录，<br><img src=\"https://img-blog.csdnimg.cn/20201127152842804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>为了生成Data目录和初始密码，输入：<br> <code>mysqld --initialize --console </code><br>若出现  如下报错：<br><img src=\"https://img-blog.csdnimg.cn/2020112715354489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>则 百度下载：vcruntime140_1.dll<br>并复制到以下目录<code>C:\\Windows\\System32</code>：<br><img src=\"https://img-blog.csdnimg.cn/20201127153801616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>复制完该文件后，<br>重新在 cmd 输入:  <code>mysqld --initialize --console</code><br><img src=\"https://img-blog.csdnimg.cn/20201127154427353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>上图红色部分为：随机生成的初始密码【记录下来，方便后面使用】</p>\n<h4 id=\"2-3-安装-启动-MySQL服务\"><a href=\"#2-3-安装-启动-MySQL服务\" class=\"headerlink\" title=\"2.3 安装 + 启动 MySQL服务\"></a>2.3 安装 + 启动 MySQL服务</h4><p><strong>安装：</strong><br>cmd输入：<code>mysqld --install [服务名]</code>,<br>其中，<strong>服务名可省略</strong><br>即：输入：<code>mysqld --install</code><br><strong>卸载服务：</strong> <code>mysqld --remove mysql</code><br><img src=\"https://img-blog.csdnimg.cn/20201127155811577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>启动：</strong> 两种方式</p>\n<ul>\n<li> cmd 中输入： <code>net start  mysql</code> 【如果服务<strong>没有设为自动</strong>，则每次开机都要输一遍】（关闭指令:<code>net stop mysql</code>）</li>\n<li><pre><code> 右键 “计算机” =》 “管理” =》 “服务” =》 找到 mysql =》启动\n</code></pre>\n【将其设为<strong>自动</strong>，这样可以不用每次开机都手动开启 mysql 服务】<h4 id=\"2-4-进入MySQL\"><a href=\"#2-4-进入MySQL\" class=\"headerlink\" title=\"2.4 进入MySQL\"></a>2.4 进入MySQL</h4>输入：<code>mysql -u root –p</code><br>输入刚才生成的初始密码【必须手动输入】<br>更改初始密码<br><code>ALTER USER &quot;root&quot;@&quot;localhost&quot; IDENTIFIED BY &quot;你的新密码&quot;;</code><h4 id=\"2-5-配置环境变量\"><a href=\"#2-5-配置环境变量\" class=\"headerlink\" title=\"2.5 配置环境变量\"></a>2.5 配置环境变量</h4>配置环境变量是为了在cmd下的任意目录中都能使用mysql</li>\n</ul>\n<p><strong>配置MySQL的主目录</strong><br><img src=\"https://img-blog.csdnimg.cn/20201128100208106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>配置path</strong><br><img src=\"https://img-blog.csdnimg.cn/20201128100511736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>3次确定</p>\n<h3 id=\"3-Navacat的安装\"><a href=\"#3-Navacat的安装\" class=\"headerlink\" title=\"3. Navacat的安装\"></a>3. Navacat的安装</h3><p>参考：<code>https://www.cnblogs.com/yanghongtao/p/10976526.html</code><br><img src=\"https://img-blog.csdnimg.cn/20201127163008138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163020957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163104351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020112716311497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020112716312449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163146205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163332149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163344601.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163351105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163412973.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163421884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163444278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163549530.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163600171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020112716361083.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163644942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163725455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163741557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201127163807439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-常用的MySQL命令\"><a href=\"#4-常用的MySQL命令\" class=\"headerlink\" title=\"4. 常用的MySQL命令\"></a>4. 常用的MySQL命令</h3><p>注意：MySQL的所有命令都以英文分号<kbd>;</kbd>结尾</p>\n<h4 id=\"4-1-显示所有数据库\"><a href=\"#4-1-显示所有数据库\" class=\"headerlink\" title=\"4.1 显示所有数据库\"></a>4.1 显示所有数据库</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> databases;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-创建数据库\"><a href=\"#4-2-创建数据库\" class=\"headerlink\" title=\"4.2 创建数据库\"></a>4.2 创建数据库</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> database School;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-3-删除数据库\"><a href=\"#4-3-删除数据库\" class=\"headerlink\" title=\"4.3 删除数据库\"></a>4.3 删除数据库</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> database School;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Nginx-入门","_content":"\n\n\n# Nginx-基础\n\n[toc]\n\n\n\n\n\n\n\n## 0. 教程\n\n-   [b站-Nginx通俗视频教程](https://www.bilibili.com/video/BV1zJ411w7SV?p=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 1. Nginx的相关概念\n- **正向代理：** 隐藏客户机。利用正向代理服务器的 ip 访问服务器的数据【fan墙】\n- **反向代理：** 隐藏服务器。利用反向代理服务器的ip，将服务端的数据传给客户机【服务器的负载分担】\n- **动静分离：** 准备若干台服务器，一部分服务器专门存放**静态资源**(html+css+js+img等)，另一部分服务器存放**动态的资源**。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 2. Nginx的安装+启动\n1.  ssh 连接到 Linux（以下以centos为例）\n2. 下载依赖、nginx： openssl + pcre + zlib +nginx\n3. 安装完后，nginx的根目录为：`/usr/local/nginx/`\n\n\n\n-   安装 openssl +zlib：\n\n```bash\nyum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel\n```\n\n\n\n-   安装pcre:\t\n\n```bash\n#下载最新版本的，注意不要用pcre2\nwget https://jaist.dl.sourceforge.net/project/pcre/pcre/8.42/pcre-8.42.tar.gz\n\n#解压\ntar -xvf pcre-8.42.tar.gz\n\n\ncd pcre-8.42 \n\n\n./configure\n\n# 安装编译\nmake && make install\n\n#查看pcre版本\npcre-config --version\n```\n\n\n-   下载 + 安装 + 启动 Nginx:\n\n```bash\nwget https://nginx.org/download/nginx-1.15.9.tar.gz\n\ntar -xvf nginx-1.15.9.tar.gz\n\ncd nginx-1.15.9\n\n./configure\n\n# 编译安装\nmake && make install\n\n\n#安装后的nginx在：\n/usr/local/nginx\n\n# nginx的启动脚本：\ncd /usr/local/nginx/sbin/\n\n# 启动 nginx\n./nginx\n\n# 查看nginx是否启动成功：\nps -ef | grep nginx\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 3. Nginx常用命令\n\n **Nginx命令：** 所有nginx命令都必须在 `/usr/local/nginx/conf` 目录下进行\n```bash\n# nginx配置文件的位置,所有nginx命令都必须在此目录下进行\ncd /usr/local/nginx/conf\n\n# 1. 查看nginx版本号\n./nginx -v\n\n# 2. 启动nginx\n./nginx\n\n# 3. 关闭nginx\n./nginx -s stop\n\n# 4. 重启nginx\n./nginx -s reload\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 4. 配置Nginx\n\n1. 开放防火墙(可选,在虚拟机中 |  ecs中开放安全组的相关端口)：\n```bash\n# 查看防火墙的端口\nfirewall-cmd --list-all\n\n# 添加端口\nsudo firewall-cmd --add-port=8001-tcp --permanent\n\n# 重启防火墙\nfirewall-cmd --reload\n\n```\n\n2. **Nginx的配置文件** 的位置: `/usr/local/nginx/conf/nginx.conf`\n\n```bash\ncd /usr/local/nginx/conf\n\nvim ./nginx.conf\n```\nNginx的配置文件的3部分组成【每个层次都有1个全局块】：\n- **全局块：** 最外面1层的内容，影响**全局运行配置**\n> 例如：\n> worker_processes  1;\t// nginx处理的并发数，越大越多\n\n- **events块：** 影响网络连接\n> worker_connections  1024;\t//最大连接数\n- **http块：** 最频繁操作的部分，**代理+缓存+日志**等内容\n\t- http全局块：文件引入+MIME类型+超时+日志+单次请求数上限\n\t- server块：虚拟主机相关\n\t\t- 全局server：\n\t\t- location server：\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 5. 案例1：反向代理的配置1\n**效果：** \n> 浏览器访问Nginx的域名时，跳转到 Tomcat 的页面\n\n### 5.1 步骤一：安装Tomcat\n\n[tomcat的安装](https://blog.csdn.net/zhaoyanjun6/article/details/79131856)\n1. 安装tomcat,使用其默认的8080端口：`yum -y install tomcat`,\n2. 安装目录在 ：`/usr/share/tomcat`，\n3. 查看tomcat的状态：`systemctl status tomcat`，\n4. 启动Tomcat：`systemctl start tomcat`，\n5. 安装tomcat的web界面：`cd webapps/` + `yum install -y tomcat-webapps tomcat-admin-webapps`\n6. tomcat 的其他命令：\n> 关闭：systemctl stop tomcat\n> 重启：systemctl restart tomcat\n> 开机启动：systemctl enable tomcat\n>\n> **注意：** 要开放防火墙的8080端口【ecs则要配置安全组的8080端口】\n\n```bash\n# 开放端口\nfirewall-cmd   --add-port=8080/tcp   --permanent\n\n# 重启防火墙\nfirewall-cmd   --reload\n\n# 查看端口开放情况\nfirewall-cmd   --list-all\n\n```\n\n\n\n### 5.2 步骤二：配置Nginx反向代理\n1. 域名解析：\n> 为了实现**访问 nginx的域名 =》tomcat**。因为目前**手上没域名**，使用我们需要先修改本地Windows的**hosts文件**，来实现域名的ip的映射。\n> `C:\\Windows\\System32\\drivers\\etc\\hosts`\n2. 配置Nginx的请求转发\n\n```bash\ncd /usr/local/nginx/conf\n\nvim ./nginx.conf\n```\n> 找到 `server`下的`server_name`,将后面的localhost改为 nginx的 ip地址\n> 将 `location` 的大括号内,添加`proxy_pass http://127.0.0.1:8080;`\n> 保存：`:wq`\n3. 重启nginx,使得配置生效：\n\n```bash\ncd /usr/local/nginx/sbin\n\n./nginx -s reload\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 6. 案例2：反向代理的配置2\n\n**效果：** \n> 浏览器访问 **Nginx** 的域名时【监听9001】，根据域名后的**路径不同**，跳转**不同的页面**【遇到edu=>跳到8080的服务器；遇到vod=>跳到8081的服务器】\n### 6.1 准备\n准备两个tomcat服务器,1个开放8080，一个开放8081\n\n### 6.2 创建测试页面\n在两台服务器的 tomcat 的安装目录下的 webapps内分别创建文件夹：\n- edu：a.html\n- vod：b.html\n\n### 6.3 配置Nginx反向代理\n1. 开放 9001，8080，8081端口\n2. 打开配置文件\n```bash\ncd /usr/local/nginx/conf\n\nvim ./nginx.conf\n```\n3. 修改 nginx.conf\n\n\t- 将原来 被注释的server及其内部 取消注释，将监听的端口改为9001\n\t- server_name 后面的对应项改为 ip地址\n\t- 将location复制1份，粘贴\n```bash\nserver {\n\tlisten       9001;\t#监听9001端口\n\t\n\tserver_name  相应的ip地址;\n\t\n\tlocation ~ /edu/ {\t# 遇见/edu路径，转发到8080端口\n\t\tproxy_pass http:127.0.0.1:8080;\n\t}\n\n\tlocation ~ /vod/ {\t# 遇见/vod路径，转发到8081端口\n\t\tproxy_pass http:127.0.0.1:8081;\n\t}\n```\n> **注意：**\n> location后，大括号前的为正则表达式，用于匹配路径。\n> 主要有以下几项：\n> + ~   表示 区分大小写的正则表达式\n> + ~* 表示 不区分大小写的正则表达式\n> + =   表示严格匹配\n4. 重启nginx【`/usr/local/nginx/sbin`】：`./nginx -s reload`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 7. 案例3：负载均衡\n\n \n\n\n\n### 7.1 负载均衡的概念：\n\n>   通过 增加1台 负载均衡服务器，由 `负载均衡服务器` 将 `客户端的请求` 分发到`多台服务器`中\n\n\n\n\n\n\n\n\n\n### 7.2 效果：\n\n>   在浏览器的地址栏，输入：`http://ip地址/edu/a.html` ,负载均衡后，平均请求到8080、8081两个端口。\n>\n>   即：将`http://ip地址:80/edu/a.html`的请求，\n>\n>   ​\t=> 转发到`http://ip地址:8080/edu/a.html`\n>\n>   ​\t=> 转发到`http://ip地址:8081/edu/a.html`\n\n\n\n### 7.3 准备工作：\n\n>   -   准备`2台Tomcat`服务器，1台监听`8080`，另一台监听`8081`\n>   -   在2台Tomcat的 `WebApps目录`中，创建edu文件夹，并放入测试的 a.html【利用XFTP工具远程上传】\n>   -   启动2台Tomcat\n\n\n\n\n\n### 7.4 步骤：\n\n-   在Nginx的`配置文件`中，`http块`内，配置以下的相关内容\n\n```bash\n// 新增项，(配置：分配策略)表示要转发到哪两个服务器【要点】\n   upstream myserver{\n     ip_hash;\t// ip_hash策略\n     server 123.60.25.23:8080 weight=1;\t // weight =1是默认值，值越大，分配到的请求越多\n     server 123.60.25.23:8081 weight=1;\n     fair;\t// 第三方的分配策略\n   }\n   \n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n            \n// 新增项，【要点】\n            proxy_pass http://myserver;\n            proxy_connect_timeout 10;\n        }\n     }\n```\n\n\n\n\n\n\n\n### 7.5 Nginx负载均衡的分配策略：\n\n\n\n-   `轮询` -（**默认的策略**）:【按照时间逐一分配，若服务器down掉，自动剔除。】\n-   `weight权重`：默认1，数字越高表示分配的请求越多。\n-   `ip_hash`：根据请求的IP地址的 hash值来决定分配的服务器，该策略可以保证某个客户端每次请求都分配同一个服务器，解决了Session的问题。\n-   fair：【第三方的策略】按照响应时间来分配，响应快的优先。\n\n\n\n注意：当轮询几率相同时，weight权重 与 访问率 成正比。适用于后端服务器性能不一的情况。\n\n\n\n\n\n\n\n","source":"_posts/Nginx-入门笔记.md","raw":"---\ntitle: Nginx-入门\ntag: Nginx\ncategories:\n  - 后端\n  - 服务器\n  - Nginx\n---\n\n\n\n# Nginx-基础\n\n[toc]\n\n\n\n\n\n\n\n## 0. 教程\n\n-   [b站-Nginx通俗视频教程](https://www.bilibili.com/video/BV1zJ411w7SV?p=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 1. Nginx的相关概念\n- **正向代理：** 隐藏客户机。利用正向代理服务器的 ip 访问服务器的数据【fan墙】\n- **反向代理：** 隐藏服务器。利用反向代理服务器的ip，将服务端的数据传给客户机【服务器的负载分担】\n- **动静分离：** 准备若干台服务器，一部分服务器专门存放**静态资源**(html+css+js+img等)，另一部分服务器存放**动态的资源**。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 2. Nginx的安装+启动\n1.  ssh 连接到 Linux（以下以centos为例）\n2. 下载依赖、nginx： openssl + pcre + zlib +nginx\n3. 安装完后，nginx的根目录为：`/usr/local/nginx/`\n\n\n\n-   安装 openssl +zlib：\n\n```bash\nyum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel\n```\n\n\n\n-   安装pcre:\t\n\n```bash\n#下载最新版本的，注意不要用pcre2\nwget https://jaist.dl.sourceforge.net/project/pcre/pcre/8.42/pcre-8.42.tar.gz\n\n#解压\ntar -xvf pcre-8.42.tar.gz\n\n\ncd pcre-8.42 \n\n\n./configure\n\n# 安装编译\nmake && make install\n\n#查看pcre版本\npcre-config --version\n```\n\n\n-   下载 + 安装 + 启动 Nginx:\n\n```bash\nwget https://nginx.org/download/nginx-1.15.9.tar.gz\n\ntar -xvf nginx-1.15.9.tar.gz\n\ncd nginx-1.15.9\n\n./configure\n\n# 编译安装\nmake && make install\n\n\n#安装后的nginx在：\n/usr/local/nginx\n\n# nginx的启动脚本：\ncd /usr/local/nginx/sbin/\n\n# 启动 nginx\n./nginx\n\n# 查看nginx是否启动成功：\nps -ef | grep nginx\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 3. Nginx常用命令\n\n **Nginx命令：** 所有nginx命令都必须在 `/usr/local/nginx/conf` 目录下进行\n```bash\n# nginx配置文件的位置,所有nginx命令都必须在此目录下进行\ncd /usr/local/nginx/conf\n\n# 1. 查看nginx版本号\n./nginx -v\n\n# 2. 启动nginx\n./nginx\n\n# 3. 关闭nginx\n./nginx -s stop\n\n# 4. 重启nginx\n./nginx -s reload\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 4. 配置Nginx\n\n1. 开放防火墙(可选,在虚拟机中 |  ecs中开放安全组的相关端口)：\n```bash\n# 查看防火墙的端口\nfirewall-cmd --list-all\n\n# 添加端口\nsudo firewall-cmd --add-port=8001-tcp --permanent\n\n# 重启防火墙\nfirewall-cmd --reload\n\n```\n\n2. **Nginx的配置文件** 的位置: `/usr/local/nginx/conf/nginx.conf`\n\n```bash\ncd /usr/local/nginx/conf\n\nvim ./nginx.conf\n```\nNginx的配置文件的3部分组成【每个层次都有1个全局块】：\n- **全局块：** 最外面1层的内容，影响**全局运行配置**\n> 例如：\n> worker_processes  1;\t// nginx处理的并发数，越大越多\n\n- **events块：** 影响网络连接\n> worker_connections  1024;\t//最大连接数\n- **http块：** 最频繁操作的部分，**代理+缓存+日志**等内容\n\t- http全局块：文件引入+MIME类型+超时+日志+单次请求数上限\n\t- server块：虚拟主机相关\n\t\t- 全局server：\n\t\t- location server：\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 5. 案例1：反向代理的配置1\n**效果：** \n> 浏览器访问Nginx的域名时，跳转到 Tomcat 的页面\n\n### 5.1 步骤一：安装Tomcat\n\n[tomcat的安装](https://blog.csdn.net/zhaoyanjun6/article/details/79131856)\n1. 安装tomcat,使用其默认的8080端口：`yum -y install tomcat`,\n2. 安装目录在 ：`/usr/share/tomcat`，\n3. 查看tomcat的状态：`systemctl status tomcat`，\n4. 启动Tomcat：`systemctl start tomcat`，\n5. 安装tomcat的web界面：`cd webapps/` + `yum install -y tomcat-webapps tomcat-admin-webapps`\n6. tomcat 的其他命令：\n> 关闭：systemctl stop tomcat\n> 重启：systemctl restart tomcat\n> 开机启动：systemctl enable tomcat\n>\n> **注意：** 要开放防火墙的8080端口【ecs则要配置安全组的8080端口】\n\n```bash\n# 开放端口\nfirewall-cmd   --add-port=8080/tcp   --permanent\n\n# 重启防火墙\nfirewall-cmd   --reload\n\n# 查看端口开放情况\nfirewall-cmd   --list-all\n\n```\n\n\n\n### 5.2 步骤二：配置Nginx反向代理\n1. 域名解析：\n> 为了实现**访问 nginx的域名 =》tomcat**。因为目前**手上没域名**，使用我们需要先修改本地Windows的**hosts文件**，来实现域名的ip的映射。\n> `C:\\Windows\\System32\\drivers\\etc\\hosts`\n2. 配置Nginx的请求转发\n\n```bash\ncd /usr/local/nginx/conf\n\nvim ./nginx.conf\n```\n> 找到 `server`下的`server_name`,将后面的localhost改为 nginx的 ip地址\n> 将 `location` 的大括号内,添加`proxy_pass http://127.0.0.1:8080;`\n> 保存：`:wq`\n3. 重启nginx,使得配置生效：\n\n```bash\ncd /usr/local/nginx/sbin\n\n./nginx -s reload\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 6. 案例2：反向代理的配置2\n\n**效果：** \n> 浏览器访问 **Nginx** 的域名时【监听9001】，根据域名后的**路径不同**，跳转**不同的页面**【遇到edu=>跳到8080的服务器；遇到vod=>跳到8081的服务器】\n### 6.1 准备\n准备两个tomcat服务器,1个开放8080，一个开放8081\n\n### 6.2 创建测试页面\n在两台服务器的 tomcat 的安装目录下的 webapps内分别创建文件夹：\n- edu：a.html\n- vod：b.html\n\n### 6.3 配置Nginx反向代理\n1. 开放 9001，8080，8081端口\n2. 打开配置文件\n```bash\ncd /usr/local/nginx/conf\n\nvim ./nginx.conf\n```\n3. 修改 nginx.conf\n\n\t- 将原来 被注释的server及其内部 取消注释，将监听的端口改为9001\n\t- server_name 后面的对应项改为 ip地址\n\t- 将location复制1份，粘贴\n```bash\nserver {\n\tlisten       9001;\t#监听9001端口\n\t\n\tserver_name  相应的ip地址;\n\t\n\tlocation ~ /edu/ {\t# 遇见/edu路径，转发到8080端口\n\t\tproxy_pass http:127.0.0.1:8080;\n\t}\n\n\tlocation ~ /vod/ {\t# 遇见/vod路径，转发到8081端口\n\t\tproxy_pass http:127.0.0.1:8081;\n\t}\n```\n> **注意：**\n> location后，大括号前的为正则表达式，用于匹配路径。\n> 主要有以下几项：\n> + ~   表示 区分大小写的正则表达式\n> + ~* 表示 不区分大小写的正则表达式\n> + =   表示严格匹配\n4. 重启nginx【`/usr/local/nginx/sbin`】：`./nginx -s reload`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 7. 案例3：负载均衡\n\n \n\n\n\n### 7.1 负载均衡的概念：\n\n>   通过 增加1台 负载均衡服务器，由 `负载均衡服务器` 将 `客户端的请求` 分发到`多台服务器`中\n\n\n\n\n\n\n\n\n\n### 7.2 效果：\n\n>   在浏览器的地址栏，输入：`http://ip地址/edu/a.html` ,负载均衡后，平均请求到8080、8081两个端口。\n>\n>   即：将`http://ip地址:80/edu/a.html`的请求，\n>\n>   ​\t=> 转发到`http://ip地址:8080/edu/a.html`\n>\n>   ​\t=> 转发到`http://ip地址:8081/edu/a.html`\n\n\n\n### 7.3 准备工作：\n\n>   -   准备`2台Tomcat`服务器，1台监听`8080`，另一台监听`8081`\n>   -   在2台Tomcat的 `WebApps目录`中，创建edu文件夹，并放入测试的 a.html【利用XFTP工具远程上传】\n>   -   启动2台Tomcat\n\n\n\n\n\n### 7.4 步骤：\n\n-   在Nginx的`配置文件`中，`http块`内，配置以下的相关内容\n\n```bash\n// 新增项，(配置：分配策略)表示要转发到哪两个服务器【要点】\n   upstream myserver{\n     ip_hash;\t// ip_hash策略\n     server 123.60.25.23:8080 weight=1;\t // weight =1是默认值，值越大，分配到的请求越多\n     server 123.60.25.23:8081 weight=1;\n     fair;\t// 第三方的分配策略\n   }\n   \n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n            \n// 新增项，【要点】\n            proxy_pass http://myserver;\n            proxy_connect_timeout 10;\n        }\n     }\n```\n\n\n\n\n\n\n\n### 7.5 Nginx负载均衡的分配策略：\n\n\n\n-   `轮询` -（**默认的策略**）:【按照时间逐一分配，若服务器down掉，自动剔除。】\n-   `weight权重`：默认1，数字越高表示分配的请求越多。\n-   `ip_hash`：根据请求的IP地址的 hash值来决定分配的服务器，该策略可以保证某个客户端每次请求都分配同一个服务器，解决了Session的问题。\n-   fair：【第三方的策略】按照响应时间来分配，响应快的优先。\n\n\n\n注意：当轮询几率相同时，weight权重 与 访问率 成正比。适用于后端服务器性能不一的情况。\n\n\n\n\n\n\n\n","slug":"Nginx-入门笔记","published":1,"date":"2021-06-02T02:49:19.170Z","updated":"2021-06-01T07:36:09.371Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs1c000nlcvdg1fwgfzs","content":"<h1 id=\"Nginx-基础\"><a href=\"#Nginx-基础\" class=\"headerlink\" title=\"Nginx-基础\"></a>Nginx-基础</h1><p>[toc]</p>\n<h2 id=\"0-教程\"><a href=\"#0-教程\" class=\"headerlink\" title=\"0. 教程\"></a>0. 教程</h2><ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1zJ411w7SV?p=2\">b站-Nginx通俗视频教程</a></li>\n</ul>\n<h2 id=\"1-Nginx的相关概念\"><a href=\"#1-Nginx的相关概念\" class=\"headerlink\" title=\"1. Nginx的相关概念\"></a>1. Nginx的相关概念</h2><ul>\n<li><strong>正向代理：</strong> 隐藏客户机。利用正向代理服务器的 ip 访问服务器的数据【fan墙】</li>\n<li><strong>反向代理：</strong> 隐藏服务器。利用反向代理服务器的ip，将服务端的数据传给客户机【服务器的负载分担】</li>\n<li><strong>动静分离：</strong> 准备若干台服务器，一部分服务器专门存放<strong>静态资源</strong>(html+css+js+img等)，另一部分服务器存放<strong>动态的资源</strong>。</li>\n</ul>\n<h2 id=\"2-Nginx的安装-启动\"><a href=\"#2-Nginx的安装-启动\" class=\"headerlink\" title=\"2. Nginx的安装+启动\"></a>2. Nginx的安装+启动</h2><ol>\n<li> ssh 连接到 Linux（以下以centos为例）</li>\n<li>下载依赖、nginx： openssl + pcre + zlib +nginx</li>\n<li>安装完后，nginx的根目录为：<code>/usr/local/nginx/</code></li>\n</ol>\n<ul>\n<li>  安装 openssl +zlib：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>  安装pcre:    </li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#下载最新版本的，注意不要用pcre2</span></span><br><span class=\"line\">wget https://jaist.dl.sourceforge.net/project/pcre/pcre/8.42/pcre-8.42.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#解压</span></span><br><span class=\"line\">tar -xvf pcre-8.42.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> pcre-8.42 </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装编译</span></span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看pcre版本</span></span><br><span class=\"line\">pcre-config --version</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>  下载 + 安装 + 启动 Nginx:</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://nginx.org/download/nginx-1.15.9.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xvf nginx-1.15.9.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.15.9</span><br><span class=\"line\"></span><br><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编译安装</span></span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装后的nginx在：</span></span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># nginx的启动脚本：</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/sbin/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动 nginx</span></span><br><span class=\"line\">./nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看nginx是否启动成功：</span></span><br><span class=\"line\">ps -ef | grep nginx</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"3-Nginx常用命令\"><a href=\"#3-Nginx常用命令\" class=\"headerlink\" title=\"3. Nginx常用命令\"></a>3. Nginx常用命令</h2><p> <strong>Nginx命令：</strong> 所有nginx命令都必须在 <code>/usr/local/nginx/conf</code> 目录下进行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># nginx配置文件的位置,所有nginx命令都必须在此目录下进行</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 查看nginx版本号</span></span><br><span class=\"line\">./nginx -v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 启动nginx</span></span><br><span class=\"line\">./nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 关闭nginx</span></span><br><span class=\"line\">./nginx -s stop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 重启nginx</span></span><br><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"4-配置Nginx\"><a href=\"#4-配置Nginx\" class=\"headerlink\" title=\"4. 配置Nginx\"></a>4. 配置Nginx</h2><ol>\n<li><p>开放防火墙(可选,在虚拟机中 |  ecs中开放安全组的相关端口)：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看防火墙的端口</span></span><br><span class=\"line\">firewall-cmd --list-all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加端口</span></span><br><span class=\"line\">sudo firewall-cmd --add-port=8001-tcp --permanent</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启防火墙</span></span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>Nginx的配置文件</strong> 的位置: <code>/usr/local/nginx/conf/nginx.conf</code></p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/conf</span><br><span class=\"line\"></span><br><span class=\"line\">vim ./nginx.conf</span><br></pre></td></tr></table></figure>\n<p>Nginx的配置文件的3部分组成【每个层次都有1个全局块】：</p>\n<ul>\n<li><p><strong>全局块：</strong> 最外面1层的内容，影响<strong>全局运行配置</strong></p>\n<blockquote>\n<p>例如：<br>worker_processes  1;    // nginx处理的并发数，越大越多</p>\n</blockquote>\n</li>\n<li><p><strong>events块：</strong> 影响网络连接</p>\n<blockquote>\n<p>worker_connections  1024;    //最大连接数</p>\n</blockquote>\n</li>\n<li><p><strong>http块：</strong> 最频繁操作的部分，<strong>代理+缓存+日志</strong>等内容</p>\n<ul>\n<li>http全局块：文件引入+MIME类型+超时+日志+单次请求数上限</li>\n<li>server块：虚拟主机相关<ul>\n<li>全局server：</li>\n<li>location server：</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-案例1：反向代理的配置1\"><a href=\"#5-案例1：反向代理的配置1\" class=\"headerlink\" title=\"5. 案例1：反向代理的配置1\"></a>5. 案例1：反向代理的配置1</h2><p><strong>效果：</strong> </p>\n<blockquote>\n<p>浏览器访问Nginx的域名时，跳转到 Tomcat 的页面</p>\n</blockquote>\n<h3 id=\"5-1-步骤一：安装Tomcat\"><a href=\"#5-1-步骤一：安装Tomcat\" class=\"headerlink\" title=\"5.1 步骤一：安装Tomcat\"></a>5.1 步骤一：安装Tomcat</h3><p><a href=\"https://blog.csdn.net/zhaoyanjun6/article/details/79131856\">tomcat的安装</a></p>\n<ol>\n<li>安装tomcat,使用其默认的8080端口：<code>yum -y install tomcat</code>,</li>\n<li>安装目录在 ：<code>/usr/share/tomcat</code>，</li>\n<li>查看tomcat的状态：<code>systemctl status tomcat</code>，</li>\n<li>启动Tomcat：<code>systemctl start tomcat</code>，</li>\n<li>安装tomcat的web界面：<code>cd webapps/</code> + <code>yum install -y tomcat-webapps tomcat-admin-webapps</code></li>\n<li>tomcat 的其他命令：<blockquote>\n<p>关闭：systemctl stop tomcat<br>重启：systemctl restart tomcat<br>开机启动：systemctl enable tomcat</p>\n<p><strong>注意：</strong> 要开放防火墙的8080端口【ecs则要配置安全组的8080端口】</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 开放端口</span></span><br><span class=\"line\">firewall-cmd   --add-port=8080/tcp   --permanent</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启防火墙</span></span><br><span class=\"line\">firewall-cmd   --reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看端口开放情况</span></span><br><span class=\"line\">firewall-cmd   --list-all</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"5-2-步骤二：配置Nginx反向代理\"><a href=\"#5-2-步骤二：配置Nginx反向代理\" class=\"headerlink\" title=\"5.2 步骤二：配置Nginx反向代理\"></a>5.2 步骤二：配置Nginx反向代理</h3><ol>\n<li>域名解析：<blockquote>\n<p>为了实现<strong>访问 nginx的域名 =》tomcat</strong>。因为目前<strong>手上没域名</strong>，使用我们需要先修改本地Windows的<strong>hosts文件</strong>，来实现域名的ip的映射。<br><code>C:\\Windows\\System32\\drivers\\etc\\hosts</code></p>\n</blockquote>\n</li>\n<li>配置Nginx的请求转发</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/conf</span><br><span class=\"line\"></span><br><span class=\"line\">vim ./nginx.conf</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>找到 <code>server</code>下的<code>server_name</code>,将后面的localhost改为 nginx的 ip地址<br>将 <code>location</code> 的大括号内,添加<code>proxy_pass http://127.0.0.1:8080;</code><br>保存：<code>:wq</code><br>3. 重启nginx,使得配置生效：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/sbin</span><br><span class=\"line\"></span><br><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"6-案例2：反向代理的配置2\"><a href=\"#6-案例2：反向代理的配置2\" class=\"headerlink\" title=\"6. 案例2：反向代理的配置2\"></a>6. 案例2：反向代理的配置2</h2><p><strong>效果：</strong> </p>\n<blockquote>\n<p>浏览器访问 <strong>Nginx</strong> 的域名时【监听9001】，根据域名后的<strong>路径不同</strong>，跳转<strong>不同的页面</strong>【遇到edu=&gt;跳到8080的服务器；遇到vod=&gt;跳到8081的服务器】</p>\n</blockquote>\n<h3 id=\"6-1-准备\"><a href=\"#6-1-准备\" class=\"headerlink\" title=\"6.1 准备\"></a>6.1 准备</h3><p>准备两个tomcat服务器,1个开放8080，一个开放8081</p>\n<h3 id=\"6-2-创建测试页面\"><a href=\"#6-2-创建测试页面\" class=\"headerlink\" title=\"6.2 创建测试页面\"></a>6.2 创建测试页面</h3><p>在两台服务器的 tomcat 的安装目录下的 webapps内分别创建文件夹：</p>\n<ul>\n<li>edu：a.html</li>\n<li>vod：b.html</li>\n</ul>\n<h3 id=\"6-3-配置Nginx反向代理\"><a href=\"#6-3-配置Nginx反向代理\" class=\"headerlink\" title=\"6.3 配置Nginx反向代理\"></a>6.3 配置Nginx反向代理</h3><ol>\n<li><p>开放 9001，8080，8081端口</p>\n</li>\n<li><p>打开配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/conf</span><br><span class=\"line\"></span><br><span class=\"line\">vim ./nginx.conf</span><br></pre></td></tr></table></figure></li>\n<li><p>修改 nginx.conf</p>\n<ul>\n<li>将原来 被注释的server及其内部 取消注释，将监听的端口改为9001</li>\n<li>server_name 后面的对应项改为 ip地址</li>\n<li>将location复制1份，粘贴<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">\tlisten       9001;\t<span class=\"comment\">#监听9001端口</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tserver_name  相应的ip地址;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tlocation ~ /edu/ &#123;\t<span class=\"comment\"># 遇见/edu路径，转发到8080端口</span></span><br><span class=\"line\">\t\tproxy_pass http:127.0.0.1:8080;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlocation ~ /vod/ &#123;\t<span class=\"comment\"># 遇见/vod路径，转发到8081端口</span></span><br><span class=\"line\">\t\tproxy_pass http:127.0.0.1:8081;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>注意：</strong><br>location后，大括号前的为正则表达式，用于匹配路径。<br>主要有以下几项：</p>\n<ul>\n<li>~   表示 区分大小写的正则表达式</li>\n<li>~* 表示 不区分大小写的正则表达式</li>\n<li>=   表示严格匹配</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>重启nginx【<code>/usr/local/nginx/sbin</code>】：<code>./nginx -s reload</code></p>\n</li>\n</ol>\n<h2 id=\"7-案例3：负载均衡\"><a href=\"#7-案例3：负载均衡\" class=\"headerlink\" title=\"7. 案例3：负载均衡\"></a>7. 案例3：负载均衡</h2><h3 id=\"7-1-负载均衡的概念：\"><a href=\"#7-1-负载均衡的概念：\" class=\"headerlink\" title=\"7.1 负载均衡的概念：\"></a>7.1 负载均衡的概念：</h3><blockquote>\n<p>  通过 增加1台 负载均衡服务器，由 <code>负载均衡服务器</code> 将 <code>客户端的请求</code> 分发到<code>多台服务器</code>中</p>\n</blockquote>\n<h3 id=\"7-2-效果：\"><a href=\"#7-2-效果：\" class=\"headerlink\" title=\"7.2 效果：\"></a>7.2 效果：</h3><blockquote>\n<p>  在浏览器的地址栏，输入：<code>http://ip地址/edu/a.html</code> ,负载均衡后，平均请求到8080、8081两个端口。</p>\n<p>  即：将<code>http://ip地址:80/edu/a.html</code>的请求，</p>\n<p>  ​    =&gt; 转发到<code>http://ip地址:8080/edu/a.html</code></p>\n<p>  ​    =&gt; 转发到<code>http://ip地址:8081/edu/a.html</code></p>\n</blockquote>\n<h3 id=\"7-3-准备工作：\"><a href=\"#7-3-准备工作：\" class=\"headerlink\" title=\"7.3 准备工作：\"></a>7.3 准备工作：</h3><blockquote>\n<ul>\n<li>  准备<code>2台Tomcat</code>服务器，1台监听<code>8080</code>，另一台监听<code>8081</code></li>\n<li>  在2台Tomcat的 <code>WebApps目录</code>中，创建edu文件夹，并放入测试的 a.html【利用XFTP工具远程上传】</li>\n<li>  启动2台Tomcat</li>\n</ul>\n</blockquote>\n<h3 id=\"7-4-步骤：\"><a href=\"#7-4-步骤：\" class=\"headerlink\" title=\"7.4 步骤：\"></a>7.4 步骤：</h3><ul>\n<li>  在Nginx的<code>配置文件</code>中，<code>http块</code>内，配置以下的相关内容</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 新增项，(配置：分配策略)表示要转发到哪两个服务器【要点】</span><br><span class=\"line\">   upstream myserver&#123;</span><br><span class=\"line\">     ip_hash;\t// ip_hash策略</span><br><span class=\"line\">     server 123.60.25.23:8080 weight=1;\t // weight =1是默认值，值越大，分配到的请求越多</span><br><span class=\"line\">     server 123.60.25.23:8081 weight=1;</span><br><span class=\"line\">     fair;\t// 第三方的分配策略</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        server_name  localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#charset koi8-r;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#access_log  logs/host.access.log  main;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">            </span><br><span class=\"line\">// 新增项，【要点】</span><br><span class=\"line\">            proxy_pass http://myserver;</span><br><span class=\"line\">            proxy_connect_timeout 10;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">     &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"7-5-Nginx负载均衡的分配策略：\"><a href=\"#7-5-Nginx负载均衡的分配策略：\" class=\"headerlink\" title=\"7.5 Nginx负载均衡的分配策略：\"></a>7.5 Nginx负载均衡的分配策略：</h3><ul>\n<li>  <code>轮询</code> -（<strong>默认的策略</strong>）:【按照时间逐一分配，若服务器down掉，自动剔除。】</li>\n<li>  <code>weight权重</code>：默认1，数字越高表示分配的请求越多。</li>\n<li>  <code>ip_hash</code>：根据请求的IP地址的 hash值来决定分配的服务器，该策略可以保证某个客户端每次请求都分配同一个服务器，解决了Session的问题。</li>\n<li>  fair：【第三方的策略】按照响应时间来分配，响应快的优先。</li>\n</ul>\n<p>注意：当轮询几率相同时，weight权重 与 访问率 成正比。适用于后端服务器性能不一的情况。</p>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"Nginx-基础\"><a href=\"#Nginx-基础\" class=\"headerlink\" title=\"Nginx-基础\"></a>Nginx-基础</h1><p>[toc]</p>\n<h2 id=\"0-教程\"><a href=\"#0-教程\" class=\"headerlink\" title=\"0. 教程\"></a>0. 教程</h2><ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1zJ411w7SV?p=2\">b站-Nginx通俗视频教程</a></li>\n</ul>\n<h2 id=\"1-Nginx的相关概念\"><a href=\"#1-Nginx的相关概念\" class=\"headerlink\" title=\"1. Nginx的相关概念\"></a>1. Nginx的相关概念</h2><ul>\n<li><strong>正向代理：</strong> 隐藏客户机。利用正向代理服务器的 ip 访问服务器的数据【fan墙】</li>\n<li><strong>反向代理：</strong> 隐藏服务器。利用反向代理服务器的ip，将服务端的数据传给客户机【服务器的负载分担】</li>\n<li><strong>动静分离：</strong> 准备若干台服务器，一部分服务器专门存放<strong>静态资源</strong>(html+css+js+img等)，另一部分服务器存放<strong>动态的资源</strong>。</li>\n</ul>\n<h2 id=\"2-Nginx的安装-启动\"><a href=\"#2-Nginx的安装-启动\" class=\"headerlink\" title=\"2. Nginx的安装+启动\"></a>2. Nginx的安装+启动</h2><ol>\n<li> ssh 连接到 Linux（以下以centos为例）</li>\n<li>下载依赖、nginx： openssl + pcre + zlib +nginx</li>\n<li>安装完后，nginx的根目录为：<code>/usr/local/nginx/</code></li>\n</ol>\n<ul>\n<li>  安装 openssl +zlib：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>  安装pcre:    </li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#下载最新版本的，注意不要用pcre2</span></span><br><span class=\"line\">wget https://jaist.dl.sourceforge.net/project/pcre/pcre/8.42/pcre-8.42.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#解压</span></span><br><span class=\"line\">tar -xvf pcre-8.42.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> pcre-8.42 </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装编译</span></span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看pcre版本</span></span><br><span class=\"line\">pcre-config --version</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>  下载 + 安装 + 启动 Nginx:</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://nginx.org/download/nginx-1.15.9.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xvf nginx-1.15.9.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.15.9</span><br><span class=\"line\"></span><br><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编译安装</span></span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装后的nginx在：</span></span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># nginx的启动脚本：</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/sbin/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动 nginx</span></span><br><span class=\"line\">./nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看nginx是否启动成功：</span></span><br><span class=\"line\">ps -ef | grep nginx</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"3-Nginx常用命令\"><a href=\"#3-Nginx常用命令\" class=\"headerlink\" title=\"3. Nginx常用命令\"></a>3. Nginx常用命令</h2><p> <strong>Nginx命令：</strong> 所有nginx命令都必须在 <code>/usr/local/nginx/conf</code> 目录下进行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># nginx配置文件的位置,所有nginx命令都必须在此目录下进行</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 查看nginx版本号</span></span><br><span class=\"line\">./nginx -v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 启动nginx</span></span><br><span class=\"line\">./nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 关闭nginx</span></span><br><span class=\"line\">./nginx -s stop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 重启nginx</span></span><br><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"4-配置Nginx\"><a href=\"#4-配置Nginx\" class=\"headerlink\" title=\"4. 配置Nginx\"></a>4. 配置Nginx</h2><ol>\n<li><p>开放防火墙(可选,在虚拟机中 |  ecs中开放安全组的相关端口)：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看防火墙的端口</span></span><br><span class=\"line\">firewall-cmd --list-all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加端口</span></span><br><span class=\"line\">sudo firewall-cmd --add-port=8001-tcp --permanent</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启防火墙</span></span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>Nginx的配置文件</strong> 的位置: <code>/usr/local/nginx/conf/nginx.conf</code></p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/conf</span><br><span class=\"line\"></span><br><span class=\"line\">vim ./nginx.conf</span><br></pre></td></tr></table></figure>\n<p>Nginx的配置文件的3部分组成【每个层次都有1个全局块】：</p>\n<ul>\n<li><p><strong>全局块：</strong> 最外面1层的内容，影响<strong>全局运行配置</strong></p>\n<blockquote>\n<p>例如：<br>worker_processes  1;    // nginx处理的并发数，越大越多</p>\n</blockquote>\n</li>\n<li><p><strong>events块：</strong> 影响网络连接</p>\n<blockquote>\n<p>worker_connections  1024;    //最大连接数</p>\n</blockquote>\n</li>\n<li><p><strong>http块：</strong> 最频繁操作的部分，<strong>代理+缓存+日志</strong>等内容</p>\n<ul>\n<li>http全局块：文件引入+MIME类型+超时+日志+单次请求数上限</li>\n<li>server块：虚拟主机相关<ul>\n<li>全局server：</li>\n<li>location server：</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-案例1：反向代理的配置1\"><a href=\"#5-案例1：反向代理的配置1\" class=\"headerlink\" title=\"5. 案例1：反向代理的配置1\"></a>5. 案例1：反向代理的配置1</h2><p><strong>效果：</strong> </p>\n<blockquote>\n<p>浏览器访问Nginx的域名时，跳转到 Tomcat 的页面</p>\n</blockquote>\n<h3 id=\"5-1-步骤一：安装Tomcat\"><a href=\"#5-1-步骤一：安装Tomcat\" class=\"headerlink\" title=\"5.1 步骤一：安装Tomcat\"></a>5.1 步骤一：安装Tomcat</h3><p><a href=\"https://blog.csdn.net/zhaoyanjun6/article/details/79131856\">tomcat的安装</a></p>\n<ol>\n<li>安装tomcat,使用其默认的8080端口：<code>yum -y install tomcat</code>,</li>\n<li>安装目录在 ：<code>/usr/share/tomcat</code>，</li>\n<li>查看tomcat的状态：<code>systemctl status tomcat</code>，</li>\n<li>启动Tomcat：<code>systemctl start tomcat</code>，</li>\n<li>安装tomcat的web界面：<code>cd webapps/</code> + <code>yum install -y tomcat-webapps tomcat-admin-webapps</code></li>\n<li>tomcat 的其他命令：<blockquote>\n<p>关闭：systemctl stop tomcat<br>重启：systemctl restart tomcat<br>开机启动：systemctl enable tomcat</p>\n<p><strong>注意：</strong> 要开放防火墙的8080端口【ecs则要配置安全组的8080端口】</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 开放端口</span></span><br><span class=\"line\">firewall-cmd   --add-port=8080/tcp   --permanent</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启防火墙</span></span><br><span class=\"line\">firewall-cmd   --reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看端口开放情况</span></span><br><span class=\"line\">firewall-cmd   --list-all</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"5-2-步骤二：配置Nginx反向代理\"><a href=\"#5-2-步骤二：配置Nginx反向代理\" class=\"headerlink\" title=\"5.2 步骤二：配置Nginx反向代理\"></a>5.2 步骤二：配置Nginx反向代理</h3><ol>\n<li>域名解析：<blockquote>\n<p>为了实现<strong>访问 nginx的域名 =》tomcat</strong>。因为目前<strong>手上没域名</strong>，使用我们需要先修改本地Windows的<strong>hosts文件</strong>，来实现域名的ip的映射。<br><code>C:\\Windows\\System32\\drivers\\etc\\hosts</code></p>\n</blockquote>\n</li>\n<li>配置Nginx的请求转发</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/conf</span><br><span class=\"line\"></span><br><span class=\"line\">vim ./nginx.conf</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>找到 <code>server</code>下的<code>server_name</code>,将后面的localhost改为 nginx的 ip地址<br>将 <code>location</code> 的大括号内,添加<code>proxy_pass http://127.0.0.1:8080;</code><br>保存：<code>:wq</code><br>3. 重启nginx,使得配置生效：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/sbin</span><br><span class=\"line\"></span><br><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"6-案例2：反向代理的配置2\"><a href=\"#6-案例2：反向代理的配置2\" class=\"headerlink\" title=\"6. 案例2：反向代理的配置2\"></a>6. 案例2：反向代理的配置2</h2><p><strong>效果：</strong> </p>\n<blockquote>\n<p>浏览器访问 <strong>Nginx</strong> 的域名时【监听9001】，根据域名后的<strong>路径不同</strong>，跳转<strong>不同的页面</strong>【遇到edu=&gt;跳到8080的服务器；遇到vod=&gt;跳到8081的服务器】</p>\n</blockquote>\n<h3 id=\"6-1-准备\"><a href=\"#6-1-准备\" class=\"headerlink\" title=\"6.1 准备\"></a>6.1 准备</h3><p>准备两个tomcat服务器,1个开放8080，一个开放8081</p>\n<h3 id=\"6-2-创建测试页面\"><a href=\"#6-2-创建测试页面\" class=\"headerlink\" title=\"6.2 创建测试页面\"></a>6.2 创建测试页面</h3><p>在两台服务器的 tomcat 的安装目录下的 webapps内分别创建文件夹：</p>\n<ul>\n<li>edu：a.html</li>\n<li>vod：b.html</li>\n</ul>\n<h3 id=\"6-3-配置Nginx反向代理\"><a href=\"#6-3-配置Nginx反向代理\" class=\"headerlink\" title=\"6.3 配置Nginx反向代理\"></a>6.3 配置Nginx反向代理</h3><ol>\n<li><p>开放 9001，8080，8081端口</p>\n</li>\n<li><p>打开配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/conf</span><br><span class=\"line\"></span><br><span class=\"line\">vim ./nginx.conf</span><br></pre></td></tr></table></figure></li>\n<li><p>修改 nginx.conf</p>\n<ul>\n<li>将原来 被注释的server及其内部 取消注释，将监听的端口改为9001</li>\n<li>server_name 后面的对应项改为 ip地址</li>\n<li>将location复制1份，粘贴<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">\tlisten       9001;\t<span class=\"comment\">#监听9001端口</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tserver_name  相应的ip地址;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tlocation ~ /edu/ &#123;\t<span class=\"comment\"># 遇见/edu路径，转发到8080端口</span></span><br><span class=\"line\">\t\tproxy_pass http:127.0.0.1:8080;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlocation ~ /vod/ &#123;\t<span class=\"comment\"># 遇见/vod路径，转发到8081端口</span></span><br><span class=\"line\">\t\tproxy_pass http:127.0.0.1:8081;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>注意：</strong><br>location后，大括号前的为正则表达式，用于匹配路径。<br>主要有以下几项：</p>\n<ul>\n<li>~   表示 区分大小写的正则表达式</li>\n<li>~* 表示 不区分大小写的正则表达式</li>\n<li>=   表示严格匹配</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>重启nginx【<code>/usr/local/nginx/sbin</code>】：<code>./nginx -s reload</code></p>\n</li>\n</ol>\n<h2 id=\"7-案例3：负载均衡\"><a href=\"#7-案例3：负载均衡\" class=\"headerlink\" title=\"7. 案例3：负载均衡\"></a>7. 案例3：负载均衡</h2><h3 id=\"7-1-负载均衡的概念：\"><a href=\"#7-1-负载均衡的概念：\" class=\"headerlink\" title=\"7.1 负载均衡的概念：\"></a>7.1 负载均衡的概念：</h3><blockquote>\n<p>  通过 增加1台 负载均衡服务器，由 <code>负载均衡服务器</code> 将 <code>客户端的请求</code> 分发到<code>多台服务器</code>中</p>\n</blockquote>\n<h3 id=\"7-2-效果：\"><a href=\"#7-2-效果：\" class=\"headerlink\" title=\"7.2 效果：\"></a>7.2 效果：</h3><blockquote>\n<p>  在浏览器的地址栏，输入：<code>http://ip地址/edu/a.html</code> ,负载均衡后，平均请求到8080、8081两个端口。</p>\n<p>  即：将<code>http://ip地址:80/edu/a.html</code>的请求，</p>\n<p>  ​    =&gt; 转发到<code>http://ip地址:8080/edu/a.html</code></p>\n<p>  ​    =&gt; 转发到<code>http://ip地址:8081/edu/a.html</code></p>\n</blockquote>\n<h3 id=\"7-3-准备工作：\"><a href=\"#7-3-准备工作：\" class=\"headerlink\" title=\"7.3 准备工作：\"></a>7.3 准备工作：</h3><blockquote>\n<ul>\n<li>  准备<code>2台Tomcat</code>服务器，1台监听<code>8080</code>，另一台监听<code>8081</code></li>\n<li>  在2台Tomcat的 <code>WebApps目录</code>中，创建edu文件夹，并放入测试的 a.html【利用XFTP工具远程上传】</li>\n<li>  启动2台Tomcat</li>\n</ul>\n</blockquote>\n<h3 id=\"7-4-步骤：\"><a href=\"#7-4-步骤：\" class=\"headerlink\" title=\"7.4 步骤：\"></a>7.4 步骤：</h3><ul>\n<li>  在Nginx的<code>配置文件</code>中，<code>http块</code>内，配置以下的相关内容</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 新增项，(配置：分配策略)表示要转发到哪两个服务器【要点】</span><br><span class=\"line\">   upstream myserver&#123;</span><br><span class=\"line\">     ip_hash;\t// ip_hash策略</span><br><span class=\"line\">     server 123.60.25.23:8080 weight=1;\t // weight =1是默认值，值越大，分配到的请求越多</span><br><span class=\"line\">     server 123.60.25.23:8081 weight=1;</span><br><span class=\"line\">     fair;\t// 第三方的分配策略</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        server_name  localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#charset koi8-r;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#access_log  logs/host.access.log  main;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">            </span><br><span class=\"line\">// 新增项，【要点】</span><br><span class=\"line\">            proxy_pass http://myserver;</span><br><span class=\"line\">            proxy_connect_timeout 10;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">     &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"7-5-Nginx负载均衡的分配策略：\"><a href=\"#7-5-Nginx负载均衡的分配策略：\" class=\"headerlink\" title=\"7.5 Nginx负载均衡的分配策略：\"></a>7.5 Nginx负载均衡的分配策略：</h3><ul>\n<li>  <code>轮询</code> -（<strong>默认的策略</strong>）:【按照时间逐一分配，若服务器down掉，自动剔除。】</li>\n<li>  <code>weight权重</code>：默认1，数字越高表示分配的请求越多。</li>\n<li>  <code>ip_hash</code>：根据请求的IP地址的 hash值来决定分配的服务器，该策略可以保证某个客户端每次请求都分配同一个服务器，解决了Session的问题。</li>\n<li>  fair：【第三方的策略】按照响应时间来分配，响应快的优先。</li>\n</ul>\n<p>注意：当轮询几率相同时，weight权重 与 访问率 成正比。适用于后端服务器性能不一的情况。</p>\n"},{"title":"SQL Server-入门笔记","_content":"\n# SQL Server-入门笔记\n\n[toc]\n\n## 1. 登录\n\n2种方式：\n\n-   windows身份验证：登录windows账户后就能使用 数据库\n-   混合身份验证：登录windows账户后，还需要知道 数据库的用户名+密码\n\n\n\n## 2. 数据库\n\n### 2.1 创建数据库\n\n```sql\nCREATE DATABASE school\non\n(\n\tname = 'school',\n\tfilename = 'E:\\DB_demo\\school.mdf',\n\tsize=5mb,\n\tmaxsize = 50mb,\n\tfilegrowth = 1%\n\n\n)\n-- 后可以跟 其他文件组，文件组与文件组之间使用逗号分隔\n\n\nlog on(\n\tname = 'school_db',\n\tfilename = 'E:\\DB_demo\\school_log.ldf',\n\tsize=1mb,\n\tmaxsize = 10mb,\n\tfilegrowth = 1%\n\n)\n```\n\n### 2.2 删除数据库\n\n```sql\ndrop database school\n```\n\n\n\n### 2.3  数据库文件的修改\n\n```sql\n-- 添加 数据库文件\nalter database school \nadd file(\n\tname =ciyao,\n\tfilename = 'E:\\DB_demo\\ciyao.ndf',\n\tsize=5,\n\tmaxsize=10,\n\tfilegrowth=1%\n)\ngo\n\n--*******************************************\n\n-- 修改 数据库文件\nalter database school\nmodify file(\n\tname =ciyao,\n\tfilename = 'E:\\DB_demo\\ciyao.ndf',\n\tsize=6,\n\tmaxsize=10,\n\tfilegrowth=1%\n\n)\n\n--*******************************************\n\n-- 删除 数据库文件\nalter database school\nremove file ciyao\n```\n\n\n\n\n\n\n\n## 3. 数据表\n\n### 3.1 创建数据表\n\n创建 3个数据表\n\n```sql\nCREATE TABLE student\n(\n\tsno int PRIMARY KEY,\n\tsname char(10) constraint not_null_cons NOT NULL,\n\tage int CHECK(age>=0 AND age<150)\n\n)\ngo\n\n\n--*******************************************\n\nCREATE TABLE class\n(\n\tcno int PRIMARY KEY,\n\tcname char(20) ,\n\tcredit float CHECK(credit>=0 AND credit<5)\n\n)\ngo\n\n--*******************************************\n\nCREATE TABLE sc\n(\n\tsno int FOREIGN KEY REFERENCES student(sno),\n\tcno int FOREIGN KEY REFERENCES class(cno),\n\tgrade float CHECK(grade>=0 and grade<=100),\n\tPRIMARY KEY(sno,cno)\n\n)\ngo\n```\n\n\n\n\n\n### 3.2 删除数据表\n\n```sql\ndrop table student\n```\n\n\n\n\n\n### 3.3 修改数据表\n\n```sql\n\n-- 添加 属性\nalter table student\n\tadd\n\t\tsex char(2) default '男',\n\t\taddress char(20)\ngo\n\n--*******************************************\n\n-- 修改 属性\nalter table student\n\talter column\n\t\tsname char(12) \ngo\n\n\n```\n\n\n\n\n\n## 4. 数据\n\n### 4.1 插入数据：insert\n\n```sql\nuse school\n\n\ninsert into student(sno,sname)\nvalues(1,'张三'),(2,'李四')\ngo\n\n--*******************************************\n\ninsert into class(cno,cname,credit)\nvalues(11,'计算机',2.5),(12,'高数',4.0)\ngo\n\n--*******************************************\n\ninsert into sc\nvalues(1,11,60),(2,12,70)\ngo\n\n```\n\n\n\n\n\n### 4.2 删除数据：delete\n\n```sql\ndelete from s \nwhere s.sno='A123'\n```\n\n\n\n### 4.3 修改数据：update\n\n```sql\nupdate sc  \nset sc.score = 90\nwhere sc.sno = 'A123'\n```\n\n\n\n### 4.4 查询数据：select\n\n```sql\n\n-- 查询名字为小明，且分数大于80的学生的学号、姓名、成绩,【按成绩：降序排列】\nselect s.sno  , s.sname ,  sc.score\nfrom s,sc\nwhere  s.sname='小明' and sc.sc.score>=80\norder by sc.score desc\n```\n\nselect语句的执行顺序：\n\n-   from\n-   on\n-   join\n-   where\n-   group by\n-   having\n-   order by\n-   select\n\n## 5. 视图\n\n### 5.1 创建视图\n\n```sql\ncreate view     st_Details_View\nas\nselect  s.sno as ‘学号’, sname as '姓名', \n\t\tsage as '年龄', c,cno as '课程号', \n\t\tcname as '课程名', score as '分数'\n\t\t\nfrom s,c.sc\n\nwhere \n\ts,sno = sc,sno and c.cno = sc.cno\n\t\n    \nwith check option\n```\n\n\n\n### 5.2 删除视图\n\n```sql\ndrop view    st_Details_View\n```\n\n\n\n\n\n### 5.3 修改视图\n\n ```sql\nalter view   st_Details_View\nas\n\nselect  s.sno as ‘学号’, sname as '姓名', \n\t\tsage as '年龄', c,cno as '课程号', \n\t\tcname as '课程名', score as '分数'\n\t\t\nfrom s,c.sc\nwhere \n\ts,sno = sc,sno \n\tand c.cno = sc.cno \n\tand sc.score>=80\n\t\n\t\n\n ```\n\n\n\n\n\n## 6. 索引\n\n### 6.1 创建索引\n\n```sql\ncreate unique clusered index    PK_index\non sc(sno,cno)\n\nwith(\n\tpad_index = on,\n    filefactor = 10,\n    drop_existing = on\n    \n\n)\n\n```\n\n\n\n### 6.2 删除索引\n\n```sql\ndrop index 表名.索引名\n```\n\n\n\n### 6.3 修改索引\n\n```sql\n-- 重新生成 索引\nalter index 索引名\non 表名\nrebuild\n\n\n-- 重新组织 索引\nalter index 索引名\non 表名\nreorganize\n\n\n-- 禁用 索引\nalter index 索引名\non 表名\ndisable\n```\n\n\n\n\n\n\n\n\n\n## 7. 存储过程\n\n### 7.1 创建 存储过程\n\n```sql\ncreate procedure ProSeEmp\nas\nselect employee\nwhere sex='女'\n\n\n-- 创建带输入参数+输出参数的存储过程\n--返回指定empid的员工所在的dep\ncreate procedure ProDep\n\t@Empid int , @Dep varchar(30) output\nas \nselect @Dep=DepetName\nfrom dept join emp \n\ton dep.depid = emp.depid\nwhere empid = @empid\t\n\n\n-- 执行\nexecute ProDep 参数\n```\n\n\n\n### 7.2 执行 存储过程\n\n```sql\nexecute 存储过程名\n```\n\n\n\n\n\n### 7.3 删除 存储过程\n\n```sql\ndrop procedure 存储过程名\n```\n\n\n\n\n\n### 7.4 修改 存储过程\n\n```sql\nalter procedure proSeEmp\nas\n\tselect empName,salary,depid\n\tfrom emp\n```\n\n\n\n\n\n## 8. 触发器\n\n### 8.1 创建 触发器\n\n```sql\ncreate trigger 触发器名\non 表名\nfor/instead of/after  [insert/update/delete]\nas ...sql语句\n\n\n\n\n-- 创建触发器实例：数据 进行更新操作后，触发器启动：打印修改行数\ncreate trigger emp_Tri\non emp\nafter update\nas\n\tdeclare @c int\n\tselect @c=@@rowcount\n\tprint '一共修改了'+char(48+@c)+'行'\n\n```\n\n### 8.2 删除 触发器\n\n```sql\ndrop trigger 触发器名\n```\n\n\n\n### 8.3 修改 触发器\n\n```sql\nalter trigger 触发器名\non 表名\nfor / instead of / after   [insert/ update / delete]\nas ...sql语句\n\n```\n\n\n\n\n\n## 9. 数据库安全性\n\n### 9.1 创建账户\n\n步骤：\n\n-   选中 某个数据库 =》展开，选中  ‘安全性’  下的 ‘用户’  =》右键\n-   新建用户\n-   输入、选择：用户名，登录名，默认架构\n-   确定\n\n\n\n\n\n### 9.2 授予权限\n\n步骤：\n\n-   选中 某个数据库 =》 右键 =》 属性\n-   权限 =》 点击 ‘搜索’ 按钮 =》浏览 =》选中 某个 用户\n-   勾选 所需权限\n-   确定\n\n‘、\n\n\n\n### 9.3 备份\n\n备份设备\n\n步骤：\n\n-   选中 ”服务器对象“ =》 展开 =》选中 ”备份设备 “ =》右键 \n-   ”新建备份设备 “   =》输入 一个备份名 \n-   确认\n\n\n\n\n\n\n\n\n\n## 10. T-SQL 批处理\n\n### 10.1 变量：\n\n- **局部变量：** 以@符号开头，先定义后使用。\n如：@age\n- **全局变量：** 以@@开头，由系统控制，用户只能读取，不能修改。如：@@VERSION\n\n\n\n**变量的声明 和 赋值：**\n\n```SQL\nDECLARE @age int\t//declare 声明变量 @age,该变量的类型为 int\n\n\nSET @age = 12\t\t//给变量赋值\n\n\nSELECT @age = stuAge FROM Student WHERE Sno='S001' \n//将查询到的1个值赋给变量\n```\n\n\n\n\n\n\n\n### 10.2 流程控制：\n\nbegin和and之间的语句是1个整体，类似C语言中的大括号的作用。\n```sql\ndeclare @price varchar(2) =10\n\nbegin \n\tprint '价格为：'+@price\nend\n```\n\n\n\n\n\n\n\n### 10.3 IF...ELSE 语句块\n\nif... else\n```sql\ndeclare @price int =10\n\nif @price > 5\n\tprint @price\nelse\n\tprint '@price<=5'\n```\n\n\n\n\n\n\n\n### 10.4 CASE...END 语句块\n\ncase...end语句相当于C语言中的 switch 语句\n\n```sql\n// 第一种\ndeclare @price int = 10\n\ndeclare @price2 int = case \n\twhen @price=10 then 11\n\twhen @price=20 then 21\n\twhen @price=30 then 31\nend\n\nprint @price2\n\n\n\n\n//第二种\ndeclare @price int =10\n\ndeclare @price2 int = case @price\n\twhen 10 then 11\n\twhen 20 then 21\n\twhen 30 then 31\nend\n\nprint @price2\n```\n\n\n\n\n\n\n### 10.5 while 循环：\n\nwhile语句中，如果循环体有多条语句，需要结合begin...end，while循环中的变量变化需要有 select 关键字修饰\n\n```sql\n// 打印 1~9\ndeclare @num int = 1\n\nwhile @num < 10\n\tbegin\t\n\t\tprint @num\n\t\tselect @num = @num+1\n\tend\n\n```\n\n\n\n\n\n\n\n### 10.6 WAITFOR 语句：\n\nwaitfor语句用于：延迟执行\n\n\n\n第一种：\n\n```sql\n\ndeclare @num int = 1\n\n// 延迟 5秒 执行：打印1~9\nwaitfor delay '00:00:05'\n\nwhile @num < 10\n\tbegin\n\t\t\t\n\t\tprint @num\n\t\tselect @num = @num+1\n\tend\n\n```\n\n\n\n第二种：\n\n```sql\ndeclare @num int = 1\n\n// 在 今天的13：01：55 执行以下操作：打印 1~9\nwaitfor time '13:01:55'\n\nwhile @num < 10\n\tbegin\n\t\t\t\n\t\tprint @num\n\t\tselect @num = @num+1\n\tend\n\n\n```\n","source":"_posts/SQL Server-入门笔记.md","raw":"---\ntitle: SQL Server-入门笔记\ntag: SQL Server\ncategories:\n  - SQL\n  - SQL-Server\n---\n\n# SQL Server-入门笔记\n\n[toc]\n\n## 1. 登录\n\n2种方式：\n\n-   windows身份验证：登录windows账户后就能使用 数据库\n-   混合身份验证：登录windows账户后，还需要知道 数据库的用户名+密码\n\n\n\n## 2. 数据库\n\n### 2.1 创建数据库\n\n```sql\nCREATE DATABASE school\non\n(\n\tname = 'school',\n\tfilename = 'E:\\DB_demo\\school.mdf',\n\tsize=5mb,\n\tmaxsize = 50mb,\n\tfilegrowth = 1%\n\n\n)\n-- 后可以跟 其他文件组，文件组与文件组之间使用逗号分隔\n\n\nlog on(\n\tname = 'school_db',\n\tfilename = 'E:\\DB_demo\\school_log.ldf',\n\tsize=1mb,\n\tmaxsize = 10mb,\n\tfilegrowth = 1%\n\n)\n```\n\n### 2.2 删除数据库\n\n```sql\ndrop database school\n```\n\n\n\n### 2.3  数据库文件的修改\n\n```sql\n-- 添加 数据库文件\nalter database school \nadd file(\n\tname =ciyao,\n\tfilename = 'E:\\DB_demo\\ciyao.ndf',\n\tsize=5,\n\tmaxsize=10,\n\tfilegrowth=1%\n)\ngo\n\n--*******************************************\n\n-- 修改 数据库文件\nalter database school\nmodify file(\n\tname =ciyao,\n\tfilename = 'E:\\DB_demo\\ciyao.ndf',\n\tsize=6,\n\tmaxsize=10,\n\tfilegrowth=1%\n\n)\n\n--*******************************************\n\n-- 删除 数据库文件\nalter database school\nremove file ciyao\n```\n\n\n\n\n\n\n\n## 3. 数据表\n\n### 3.1 创建数据表\n\n创建 3个数据表\n\n```sql\nCREATE TABLE student\n(\n\tsno int PRIMARY KEY,\n\tsname char(10) constraint not_null_cons NOT NULL,\n\tage int CHECK(age>=0 AND age<150)\n\n)\ngo\n\n\n--*******************************************\n\nCREATE TABLE class\n(\n\tcno int PRIMARY KEY,\n\tcname char(20) ,\n\tcredit float CHECK(credit>=0 AND credit<5)\n\n)\ngo\n\n--*******************************************\n\nCREATE TABLE sc\n(\n\tsno int FOREIGN KEY REFERENCES student(sno),\n\tcno int FOREIGN KEY REFERENCES class(cno),\n\tgrade float CHECK(grade>=0 and grade<=100),\n\tPRIMARY KEY(sno,cno)\n\n)\ngo\n```\n\n\n\n\n\n### 3.2 删除数据表\n\n```sql\ndrop table student\n```\n\n\n\n\n\n### 3.3 修改数据表\n\n```sql\n\n-- 添加 属性\nalter table student\n\tadd\n\t\tsex char(2) default '男',\n\t\taddress char(20)\ngo\n\n--*******************************************\n\n-- 修改 属性\nalter table student\n\talter column\n\t\tsname char(12) \ngo\n\n\n```\n\n\n\n\n\n## 4. 数据\n\n### 4.1 插入数据：insert\n\n```sql\nuse school\n\n\ninsert into student(sno,sname)\nvalues(1,'张三'),(2,'李四')\ngo\n\n--*******************************************\n\ninsert into class(cno,cname,credit)\nvalues(11,'计算机',2.5),(12,'高数',4.0)\ngo\n\n--*******************************************\n\ninsert into sc\nvalues(1,11,60),(2,12,70)\ngo\n\n```\n\n\n\n\n\n### 4.2 删除数据：delete\n\n```sql\ndelete from s \nwhere s.sno='A123'\n```\n\n\n\n### 4.3 修改数据：update\n\n```sql\nupdate sc  \nset sc.score = 90\nwhere sc.sno = 'A123'\n```\n\n\n\n### 4.4 查询数据：select\n\n```sql\n\n-- 查询名字为小明，且分数大于80的学生的学号、姓名、成绩,【按成绩：降序排列】\nselect s.sno  , s.sname ,  sc.score\nfrom s,sc\nwhere  s.sname='小明' and sc.sc.score>=80\norder by sc.score desc\n```\n\nselect语句的执行顺序：\n\n-   from\n-   on\n-   join\n-   where\n-   group by\n-   having\n-   order by\n-   select\n\n## 5. 视图\n\n### 5.1 创建视图\n\n```sql\ncreate view     st_Details_View\nas\nselect  s.sno as ‘学号’, sname as '姓名', \n\t\tsage as '年龄', c,cno as '课程号', \n\t\tcname as '课程名', score as '分数'\n\t\t\nfrom s,c.sc\n\nwhere \n\ts,sno = sc,sno and c.cno = sc.cno\n\t\n    \nwith check option\n```\n\n\n\n### 5.2 删除视图\n\n```sql\ndrop view    st_Details_View\n```\n\n\n\n\n\n### 5.3 修改视图\n\n ```sql\nalter view   st_Details_View\nas\n\nselect  s.sno as ‘学号’, sname as '姓名', \n\t\tsage as '年龄', c,cno as '课程号', \n\t\tcname as '课程名', score as '分数'\n\t\t\nfrom s,c.sc\nwhere \n\ts,sno = sc,sno \n\tand c.cno = sc.cno \n\tand sc.score>=80\n\t\n\t\n\n ```\n\n\n\n\n\n## 6. 索引\n\n### 6.1 创建索引\n\n```sql\ncreate unique clusered index    PK_index\non sc(sno,cno)\n\nwith(\n\tpad_index = on,\n    filefactor = 10,\n    drop_existing = on\n    \n\n)\n\n```\n\n\n\n### 6.2 删除索引\n\n```sql\ndrop index 表名.索引名\n```\n\n\n\n### 6.3 修改索引\n\n```sql\n-- 重新生成 索引\nalter index 索引名\non 表名\nrebuild\n\n\n-- 重新组织 索引\nalter index 索引名\non 表名\nreorganize\n\n\n-- 禁用 索引\nalter index 索引名\non 表名\ndisable\n```\n\n\n\n\n\n\n\n\n\n## 7. 存储过程\n\n### 7.1 创建 存储过程\n\n```sql\ncreate procedure ProSeEmp\nas\nselect employee\nwhere sex='女'\n\n\n-- 创建带输入参数+输出参数的存储过程\n--返回指定empid的员工所在的dep\ncreate procedure ProDep\n\t@Empid int , @Dep varchar(30) output\nas \nselect @Dep=DepetName\nfrom dept join emp \n\ton dep.depid = emp.depid\nwhere empid = @empid\t\n\n\n-- 执行\nexecute ProDep 参数\n```\n\n\n\n### 7.2 执行 存储过程\n\n```sql\nexecute 存储过程名\n```\n\n\n\n\n\n### 7.3 删除 存储过程\n\n```sql\ndrop procedure 存储过程名\n```\n\n\n\n\n\n### 7.4 修改 存储过程\n\n```sql\nalter procedure proSeEmp\nas\n\tselect empName,salary,depid\n\tfrom emp\n```\n\n\n\n\n\n## 8. 触发器\n\n### 8.1 创建 触发器\n\n```sql\ncreate trigger 触发器名\non 表名\nfor/instead of/after  [insert/update/delete]\nas ...sql语句\n\n\n\n\n-- 创建触发器实例：数据 进行更新操作后，触发器启动：打印修改行数\ncreate trigger emp_Tri\non emp\nafter update\nas\n\tdeclare @c int\n\tselect @c=@@rowcount\n\tprint '一共修改了'+char(48+@c)+'行'\n\n```\n\n### 8.2 删除 触发器\n\n```sql\ndrop trigger 触发器名\n```\n\n\n\n### 8.3 修改 触发器\n\n```sql\nalter trigger 触发器名\non 表名\nfor / instead of / after   [insert/ update / delete]\nas ...sql语句\n\n```\n\n\n\n\n\n## 9. 数据库安全性\n\n### 9.1 创建账户\n\n步骤：\n\n-   选中 某个数据库 =》展开，选中  ‘安全性’  下的 ‘用户’  =》右键\n-   新建用户\n-   输入、选择：用户名，登录名，默认架构\n-   确定\n\n\n\n\n\n### 9.2 授予权限\n\n步骤：\n\n-   选中 某个数据库 =》 右键 =》 属性\n-   权限 =》 点击 ‘搜索’ 按钮 =》浏览 =》选中 某个 用户\n-   勾选 所需权限\n-   确定\n\n‘、\n\n\n\n### 9.3 备份\n\n备份设备\n\n步骤：\n\n-   选中 ”服务器对象“ =》 展开 =》选中 ”备份设备 “ =》右键 \n-   ”新建备份设备 “   =》输入 一个备份名 \n-   确认\n\n\n\n\n\n\n\n\n\n## 10. T-SQL 批处理\n\n### 10.1 变量：\n\n- **局部变量：** 以@符号开头，先定义后使用。\n如：@age\n- **全局变量：** 以@@开头，由系统控制，用户只能读取，不能修改。如：@@VERSION\n\n\n\n**变量的声明 和 赋值：**\n\n```SQL\nDECLARE @age int\t//declare 声明变量 @age,该变量的类型为 int\n\n\nSET @age = 12\t\t//给变量赋值\n\n\nSELECT @age = stuAge FROM Student WHERE Sno='S001' \n//将查询到的1个值赋给变量\n```\n\n\n\n\n\n\n\n### 10.2 流程控制：\n\nbegin和and之间的语句是1个整体，类似C语言中的大括号的作用。\n```sql\ndeclare @price varchar(2) =10\n\nbegin \n\tprint '价格为：'+@price\nend\n```\n\n\n\n\n\n\n\n### 10.3 IF...ELSE 语句块\n\nif... else\n```sql\ndeclare @price int =10\n\nif @price > 5\n\tprint @price\nelse\n\tprint '@price<=5'\n```\n\n\n\n\n\n\n\n### 10.4 CASE...END 语句块\n\ncase...end语句相当于C语言中的 switch 语句\n\n```sql\n// 第一种\ndeclare @price int = 10\n\ndeclare @price2 int = case \n\twhen @price=10 then 11\n\twhen @price=20 then 21\n\twhen @price=30 then 31\nend\n\nprint @price2\n\n\n\n\n//第二种\ndeclare @price int =10\n\ndeclare @price2 int = case @price\n\twhen 10 then 11\n\twhen 20 then 21\n\twhen 30 then 31\nend\n\nprint @price2\n```\n\n\n\n\n\n\n### 10.5 while 循环：\n\nwhile语句中，如果循环体有多条语句，需要结合begin...end，while循环中的变量变化需要有 select 关键字修饰\n\n```sql\n// 打印 1~9\ndeclare @num int = 1\n\nwhile @num < 10\n\tbegin\t\n\t\tprint @num\n\t\tselect @num = @num+1\n\tend\n\n```\n\n\n\n\n\n\n\n### 10.6 WAITFOR 语句：\n\nwaitfor语句用于：延迟执行\n\n\n\n第一种：\n\n```sql\n\ndeclare @num int = 1\n\n// 延迟 5秒 执行：打印1~9\nwaitfor delay '00:00:05'\n\nwhile @num < 10\n\tbegin\n\t\t\t\n\t\tprint @num\n\t\tselect @num = @num+1\n\tend\n\n```\n\n\n\n第二种：\n\n```sql\ndeclare @num int = 1\n\n// 在 今天的13：01：55 执行以下操作：打印 1~9\nwaitfor time '13:01:55'\n\nwhile @num < 10\n\tbegin\n\t\t\t\n\t\tprint @num\n\t\tselect @num = @num+1\n\tend\n\n\n```\n","slug":"SQL Server-入门笔记","published":1,"date":"2021-06-02T02:49:19.176Z","updated":"2021-06-01T07:36:09.373Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs1d000qlcvd6z822ajd","content":"<h1 id=\"SQL-Server-入门笔记\"><a href=\"#SQL-Server-入门笔记\" class=\"headerlink\" title=\"SQL Server-入门笔记\"></a>SQL Server-入门笔记</h1><p>[toc]</p>\n<h2 id=\"1-登录\"><a href=\"#1-登录\" class=\"headerlink\" title=\"1. 登录\"></a>1. 登录</h2><p>2种方式：</p>\n<ul>\n<li>  windows身份验证：登录windows账户后就能使用 数据库</li>\n<li>  混合身份验证：登录windows账户后，还需要知道 数据库的用户名+密码</li>\n</ul>\n<h2 id=\"2-数据库\"><a href=\"#2-数据库\" class=\"headerlink\" title=\"2. 数据库\"></a>2. 数据库</h2><h3 id=\"2-1-创建数据库\"><a href=\"#2-1-创建数据库\" class=\"headerlink\" title=\"2.1 创建数据库\"></a>2.1 创建数据库</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> DATABASE school</span><br><span class=\"line\"><span class=\"keyword\">on</span></span><br><span class=\"line\">(</span><br><span class=\"line\">\tname <span class=\"operator\">=</span> <span class=\"string\">&#x27;school&#x27;</span>,</span><br><span class=\"line\">\tfilename <span class=\"operator\">=</span> <span class=\"string\">&#x27;E:\\DB_demo\\school.mdf&#x27;</span>,</span><br><span class=\"line\">\tsize<span class=\"operator\">=</span><span class=\"number\">5</span>mb,</span><br><span class=\"line\">\tmaxsize <span class=\"operator\">=</span> <span class=\"number\">50</span>mb,</span><br><span class=\"line\">\tfilegrowth <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"operator\">%</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\">-- 后可以跟 其他文件组，文件组与文件组之间使用逗号分隔</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">log <span class=\"keyword\">on</span>(</span><br><span class=\"line\">\tname <span class=\"operator\">=</span> <span class=\"string\">&#x27;school_db&#x27;</span>,</span><br><span class=\"line\">\tfilename <span class=\"operator\">=</span> <span class=\"string\">&#x27;E:\\DB_demo\\school_log.ldf&#x27;</span>,</span><br><span class=\"line\">\tsize<span class=\"operator\">=</span><span class=\"number\">1</span>mb,</span><br><span class=\"line\">\tmaxsize <span class=\"operator\">=</span> <span class=\"number\">10</span>mb,</span><br><span class=\"line\">\tfilegrowth <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"operator\">%</span></span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-删除数据库\"><a href=\"#2-2-删除数据库\" class=\"headerlink\" title=\"2.2 删除数据库\"></a>2.2 删除数据库</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> database school</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-3-数据库文件的修改\"><a href=\"#2-3-数据库文件的修改\" class=\"headerlink\" title=\"2.3  数据库文件的修改\"></a>2.3  数据库文件的修改</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 添加 数据库文件</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> database school </span><br><span class=\"line\"><span class=\"keyword\">add</span> file(</span><br><span class=\"line\">\tname <span class=\"operator\">=</span>ciyao,</span><br><span class=\"line\">\tfilename <span class=\"operator\">=</span> <span class=\"string\">&#x27;E:\\DB_demo\\ciyao.ndf&#x27;</span>,</span><br><span class=\"line\">\tsize<span class=\"operator\">=</span><span class=\"number\">5</span>,</span><br><span class=\"line\">\tmaxsize<span class=\"operator\">=</span><span class=\"number\">10</span>,</span><br><span class=\"line\">\tfilegrowth<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"operator\">%</span></span><br><span class=\"line\">)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 修改 数据库文件</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> database school</span><br><span class=\"line\">modify file(</span><br><span class=\"line\">\tname <span class=\"operator\">=</span>ciyao,</span><br><span class=\"line\">\tfilename <span class=\"operator\">=</span> <span class=\"string\">&#x27;E:\\DB_demo\\ciyao.ndf&#x27;</span>,</span><br><span class=\"line\">\tsize<span class=\"operator\">=</span><span class=\"number\">6</span>,</span><br><span class=\"line\">\tmaxsize<span class=\"operator\">=</span><span class=\"number\">10</span>,</span><br><span class=\"line\">\tfilegrowth<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"operator\">%</span></span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 删除 数据库文件</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> database school</span><br><span class=\"line\">remove file ciyao</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"3-数据表\"><a href=\"#3-数据表\" class=\"headerlink\" title=\"3. 数据表\"></a>3. 数据表</h2><h3 id=\"3-1-创建数据表\"><a href=\"#3-1-创建数据表\" class=\"headerlink\" title=\"3.1 创建数据表\"></a>3.1 创建数据表</h3><p>创建 3个数据表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> student</span><br><span class=\"line\">(</span><br><span class=\"line\">\tsno <span class=\"type\">int</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">\tsname <span class=\"type\">char</span>(<span class=\"number\">10</span>) <span class=\"keyword\">constraint</span> not_null_cons <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tage <span class=\"type\">int</span> <span class=\"keyword\">CHECK</span>(age<span class=\"operator\">&gt;=</span><span class=\"number\">0</span> <span class=\"keyword\">AND</span> age<span class=\"operator\">&lt;</span><span class=\"number\">150</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> class</span><br><span class=\"line\">(</span><br><span class=\"line\">\tcno <span class=\"type\">int</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">\tcname <span class=\"type\">char</span>(<span class=\"number\">20</span>) ,</span><br><span class=\"line\">\tcredit <span class=\"type\">float</span> <span class=\"keyword\">CHECK</span>(credit<span class=\"operator\">&gt;=</span><span class=\"number\">0</span> <span class=\"keyword\">AND</span> credit<span class=\"operator\">&lt;</span><span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> sc</span><br><span class=\"line\">(</span><br><span class=\"line\">\tsno <span class=\"type\">int</span> <span class=\"keyword\">FOREIGN</span> KEY <span class=\"keyword\">REFERENCES</span> student(sno),</span><br><span class=\"line\">\tcno <span class=\"type\">int</span> <span class=\"keyword\">FOREIGN</span> KEY <span class=\"keyword\">REFERENCES</span> class(cno),</span><br><span class=\"line\">\tgrade <span class=\"type\">float</span> <span class=\"keyword\">CHECK</span>(grade<span class=\"operator\">&gt;=</span><span class=\"number\">0</span> <span class=\"keyword\">and</span> grade<span class=\"operator\">&lt;=</span><span class=\"number\">100</span>),</span><br><span class=\"line\">\t<span class=\"keyword\">PRIMARY</span> KEY(sno,cno)</span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\">go</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"3-2-删除数据表\"><a href=\"#3-2-删除数据表\" class=\"headerlink\" title=\"3.2 删除数据表\"></a>3.2 删除数据表</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> student</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"3-3-修改数据表\"><a href=\"#3-3-修改数据表\" class=\"headerlink\" title=\"3.3 修改数据表\"></a>3.3 修改数据表</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 添加 属性</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> student</span><br><span class=\"line\">\t<span class=\"keyword\">add</span></span><br><span class=\"line\">\t\tsex <span class=\"type\">char</span>(<span class=\"number\">2</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;男&#x27;</span>,</span><br><span class=\"line\">\t\taddress <span class=\"type\">char</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 修改 属性</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> student</span><br><span class=\"line\">\t<span class=\"keyword\">alter</span> <span class=\"keyword\">column</span></span><br><span class=\"line\">\t\tsname <span class=\"type\">char</span>(<span class=\"number\">12</span>) </span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"4-数据\"><a href=\"#4-数据\" class=\"headerlink\" title=\"4. 数据\"></a>4. 数据</h2><h3 id=\"4-1-插入数据：insert\"><a href=\"#4-1-插入数据：insert\" class=\"headerlink\" title=\"4.1 插入数据：insert\"></a>4.1 插入数据：insert</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use school</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> student(sno,sname)</span><br><span class=\"line\"><span class=\"keyword\">values</span>(<span class=\"number\">1</span>,<span class=\"string\">&#x27;张三&#x27;</span>),(<span class=\"number\">2</span>,<span class=\"string\">&#x27;李四&#x27;</span>)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> class(cno,cname,credit)</span><br><span class=\"line\"><span class=\"keyword\">values</span>(<span class=\"number\">11</span>,<span class=\"string\">&#x27;计算机&#x27;</span>,<span class=\"number\">2.5</span>),(<span class=\"number\">12</span>,<span class=\"string\">&#x27;高数&#x27;</span>,<span class=\"number\">4.0</span>)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> sc</span><br><span class=\"line\"><span class=\"keyword\">values</span>(<span class=\"number\">1</span>,<span class=\"number\">11</span>,<span class=\"number\">60</span>),(<span class=\"number\">2</span>,<span class=\"number\">12</span>,<span class=\"number\">70</span>)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"4-2-删除数据：delete\"><a href=\"#4-2-删除数据：delete\" class=\"headerlink\" title=\"4.2 删除数据：delete\"></a>4.2 删除数据：delete</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> s </span><br><span class=\"line\"><span class=\"keyword\">where</span> s.sno<span class=\"operator\">=</span><span class=\"string\">&#x27;A123&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-3-修改数据：update\"><a href=\"#4-3-修改数据：update\" class=\"headerlink\" title=\"4.3 修改数据：update\"></a>4.3 修改数据：update</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update sc  </span><br><span class=\"line\"><span class=\"keyword\">set</span> sc.score <span class=\"operator\">=</span> <span class=\"number\">90</span></span><br><span class=\"line\"><span class=\"keyword\">where</span> sc.sno <span class=\"operator\">=</span> <span class=\"string\">&#x27;A123&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-4-查询数据：select\"><a href=\"#4-4-查询数据：select\" class=\"headerlink\" title=\"4.4 查询数据：select\"></a>4.4 查询数据：select</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询名字为小明，且分数大于80的学生的学号、姓名、成绩,【按成绩：降序排列】</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> s.sno  , s.sname ,  sc.score</span><br><span class=\"line\"><span class=\"keyword\">from</span> s,sc</span><br><span class=\"line\"><span class=\"keyword\">where</span>  s.sname<span class=\"operator\">=</span><span class=\"string\">&#x27;小明&#x27;</span> <span class=\"keyword\">and</span> sc.sc.score<span class=\"operator\">&gt;=</span><span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"keyword\">order</span> <span class=\"keyword\">by</span> sc.score <span class=\"keyword\">desc</span></span><br></pre></td></tr></table></figure>\n\n<p>select语句的执行顺序：</p>\n<ul>\n<li>  from</li>\n<li>  on</li>\n<li>  join</li>\n<li>  where</li>\n<li>  group by</li>\n<li>  having</li>\n<li>  order by</li>\n<li>  select</li>\n</ul>\n<h2 id=\"5-视图\"><a href=\"#5-视图\" class=\"headerlink\" title=\"5. 视图\"></a>5. 视图</h2><h3 id=\"5-1-创建视图\"><a href=\"#5-1-创建视图\" class=\"headerlink\" title=\"5.1 创建视图\"></a>5.1 创建视图</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">view</span>     st_Details_View</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span>  s.sno <span class=\"keyword\">as</span> ‘学号’, sname <span class=\"keyword\">as</span> <span class=\"string\">&#x27;姓名&#x27;</span>, </span><br><span class=\"line\">\t\tsage <span class=\"keyword\">as</span> <span class=\"string\">&#x27;年龄&#x27;</span>, c,cno <span class=\"keyword\">as</span> <span class=\"string\">&#x27;课程号&#x27;</span>, </span><br><span class=\"line\">\t\tcname <span class=\"keyword\">as</span> <span class=\"string\">&#x27;课程名&#x27;</span>, score <span class=\"keyword\">as</span> <span class=\"string\">&#x27;分数&#x27;</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\"><span class=\"keyword\">from</span> s,c.sc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">where</span> </span><br><span class=\"line\">\ts,sno <span class=\"operator\">=</span> sc,sno <span class=\"keyword\">and</span> c.cno <span class=\"operator\">=</span> sc.cno</span><br><span class=\"line\">\t</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"keyword\">check</span> option</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"5-2-删除视图\"><a href=\"#5-2-删除视图\" class=\"headerlink\" title=\"5.2 删除视图\"></a>5.2 删除视图</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">view</span>    st_Details_View</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"5-3-修改视图\"><a href=\"#5-3-修改视图\" class=\"headerlink\" title=\"5.3 修改视图\"></a>5.3 修改视图</h3> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">view</span>   st_Details_View</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span>  s.sno <span class=\"keyword\">as</span> ‘学号’, sname <span class=\"keyword\">as</span> <span class=\"string\">&#x27;姓名&#x27;</span>, </span><br><span class=\"line\">\t\tsage <span class=\"keyword\">as</span> <span class=\"string\">&#x27;年龄&#x27;</span>, c,cno <span class=\"keyword\">as</span> <span class=\"string\">&#x27;课程号&#x27;</span>, </span><br><span class=\"line\">\t\tcname <span class=\"keyword\">as</span> <span class=\"string\">&#x27;课程名&#x27;</span>, score <span class=\"keyword\">as</span> <span class=\"string\">&#x27;分数&#x27;</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\"><span class=\"keyword\">from</span> s,c.sc</span><br><span class=\"line\"><span class=\"keyword\">where</span> </span><br><span class=\"line\">\ts,sno <span class=\"operator\">=</span> sc,sno </span><br><span class=\"line\">\t<span class=\"keyword\">and</span> c.cno <span class=\"operator\">=</span> sc.cno </span><br><span class=\"line\">\t<span class=\"keyword\">and</span> sc.score<span class=\"operator\">&gt;=</span><span class=\"number\">80</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"6-索引\"><a href=\"#6-索引\" class=\"headerlink\" title=\"6. 索引\"></a>6. 索引</h2><h3 id=\"6-1-创建索引\"><a href=\"#6-1-创建索引\" class=\"headerlink\" title=\"6.1 创建索引\"></a>6.1 创建索引</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">unique</span> clusered index    PK_index</span><br><span class=\"line\"><span class=\"keyword\">on</span> sc(sno,cno)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span>(</span><br><span class=\"line\">\tpad_index <span class=\"operator\">=</span> <span class=\"keyword\">on</span>,</span><br><span class=\"line\">    filefactor <span class=\"operator\">=</span> <span class=\"number\">10</span>,</span><br><span class=\"line\">    drop_existing <span class=\"operator\">=</span> <span class=\"keyword\">on</span></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"6-2-删除索引\"><a href=\"#6-2-删除索引\" class=\"headerlink\" title=\"6.2 删除索引\"></a>6.2 删除索引</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> index 表名.索引名</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"6-3-修改索引\"><a href=\"#6-3-修改索引\" class=\"headerlink\" title=\"6.3 修改索引\"></a>6.3 修改索引</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 重新生成 索引</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> index 索引名</span><br><span class=\"line\"><span class=\"keyword\">on</span> 表名</span><br><span class=\"line\">rebuild</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 重新组织 索引</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> index 索引名</span><br><span class=\"line\"><span class=\"keyword\">on</span> 表名</span><br><span class=\"line\">reorganize</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 禁用 索引</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> index 索引名</span><br><span class=\"line\"><span class=\"keyword\">on</span> 表名</span><br><span class=\"line\">disable</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h2 id=\"7-存储过程\"><a href=\"#7-存储过程\" class=\"headerlink\" title=\"7. 存储过程\"></a>7. 存储过程</h2><h3 id=\"7-1-创建-存储过程\"><a href=\"#7-1-创建-存储过程\" class=\"headerlink\" title=\"7.1 创建 存储过程\"></a>7.1 创建 存储过程</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> ProSeEmp</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> employee</span><br><span class=\"line\"><span class=\"keyword\">where</span> sex<span class=\"operator\">=</span><span class=\"string\">&#x27;女&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 创建带输入参数+输出参数的存储过程</span></span><br><span class=\"line\"><span class=\"comment\">--返回指定empid的员工所在的dep</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> ProDep</span><br><span class=\"line\">\t<span class=\"variable\">@Empid</span> <span class=\"type\">int</span> , <span class=\"variable\">@Dep</span> <span class=\"type\">varchar</span>(<span class=\"number\">30</span>) output</span><br><span class=\"line\"><span class=\"keyword\">as</span> </span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"variable\">@Dep</span><span class=\"operator\">=</span>DepetName</span><br><span class=\"line\"><span class=\"keyword\">from</span> dept <span class=\"keyword\">join</span> emp </span><br><span class=\"line\">\t<span class=\"keyword\">on</span> dep.depid <span class=\"operator\">=</span> emp.depid</span><br><span class=\"line\"><span class=\"keyword\">where</span> empid <span class=\"operator\">=</span> <span class=\"variable\">@empid</span>\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 执行</span></span><br><span class=\"line\"><span class=\"keyword\">execute</span> ProDep 参数</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"7-2-执行-存储过程\"><a href=\"#7-2-执行-存储过程\" class=\"headerlink\" title=\"7.2 执行 存储过程\"></a>7.2 执行 存储过程</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">execute</span> 存储过程名</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"7-3-删除-存储过程\"><a href=\"#7-3-删除-存储过程\" class=\"headerlink\" title=\"7.3 删除 存储过程\"></a>7.3 删除 存储过程</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">procedure</span> 存储过程名</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"7-4-修改-存储过程\"><a href=\"#7-4-修改-存储过程\" class=\"headerlink\" title=\"7.4 修改 存储过程\"></a>7.4 修改 存储过程</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">procedure</span> proSeEmp</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> empName,salary,depid</span><br><span class=\"line\">\t<span class=\"keyword\">from</span> emp</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"8-触发器\"><a href=\"#8-触发器\" class=\"headerlink\" title=\"8. 触发器\"></a>8. 触发器</h2><h3 id=\"8-1-创建-触发器\"><a href=\"#8-1-创建-触发器\" class=\"headerlink\" title=\"8.1 创建 触发器\"></a>8.1 创建 触发器</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">trigger</span> 触发器名</span><br><span class=\"line\"><span class=\"keyword\">on</span> 表名</span><br><span class=\"line\"><span class=\"keyword\">for</span><span class=\"operator\">/</span>instead <span class=\"keyword\">of</span><span class=\"operator\">/</span>after  [<span class=\"keyword\">insert</span><span class=\"operator\">/</span>update<span class=\"operator\">/</span><span class=\"keyword\">delete</span>]</span><br><span class=\"line\"><span class=\"keyword\">as</span> ...<span class=\"keyword\">sql</span>语句</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 创建触发器实例：数据 进行更新操作后，触发器启动：打印修改行数</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">trigger</span> emp_Tri</span><br><span class=\"line\"><span class=\"keyword\">on</span> emp</span><br><span class=\"line\">after update</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\">\t<span class=\"keyword\">declare</span> <span class=\"variable\">@c</span> <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"variable\">@c</span><span class=\"operator\">=</span>@<span class=\"variable\">@rowcount</span></span><br><span class=\"line\">\tprint <span class=\"string\">&#x27;一共修改了&#x27;</span><span class=\"operator\">+</span><span class=\"type\">char</span>(<span class=\"number\">48</span><span class=\"operator\">+</span><span class=\"variable\">@c</span>)<span class=\"operator\">+</span><span class=\"string\">&#x27;行&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-2-删除-触发器\"><a href=\"#8-2-删除-触发器\" class=\"headerlink\" title=\"8.2 删除 触发器\"></a>8.2 删除 触发器</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">trigger</span> 触发器名</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"8-3-修改-触发器\"><a href=\"#8-3-修改-触发器\" class=\"headerlink\" title=\"8.3 修改 触发器\"></a>8.3 修改 触发器</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">trigger</span> 触发器名</span><br><span class=\"line\"><span class=\"keyword\">on</span> 表名</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"operator\">/</span> instead <span class=\"keyword\">of</span> <span class=\"operator\">/</span> after   [<span class=\"keyword\">insert</span><span class=\"operator\">/</span> update <span class=\"operator\">/</span> <span class=\"keyword\">delete</span>]</span><br><span class=\"line\"><span class=\"keyword\">as</span> ...<span class=\"keyword\">sql</span>语句</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"9-数据库安全性\"><a href=\"#9-数据库安全性\" class=\"headerlink\" title=\"9. 数据库安全性\"></a>9. 数据库安全性</h2><h3 id=\"9-1-创建账户\"><a href=\"#9-1-创建账户\" class=\"headerlink\" title=\"9.1 创建账户\"></a>9.1 创建账户</h3><p>步骤：</p>\n<ul>\n<li>  选中 某个数据库 =》展开，选中  ‘安全性’  下的 ‘用户’  =》右键</li>\n<li>  新建用户</li>\n<li>  输入、选择：用户名，登录名，默认架构</li>\n<li>  确定</li>\n</ul>\n<h3 id=\"9-2-授予权限\"><a href=\"#9-2-授予权限\" class=\"headerlink\" title=\"9.2 授予权限\"></a>9.2 授予权限</h3><p>步骤：</p>\n<ul>\n<li>  选中 某个数据库 =》 右键 =》 属性</li>\n<li>  权限 =》 点击 ‘搜索’ 按钮 =》浏览 =》选中 某个 用户</li>\n<li>  勾选 所需权限</li>\n<li>  确定</li>\n</ul>\n<p>‘、</p>\n<h3 id=\"9-3-备份\"><a href=\"#9-3-备份\" class=\"headerlink\" title=\"9.3 备份\"></a>9.3 备份</h3><p>备份设备</p>\n<p>步骤：</p>\n<ul>\n<li>  选中 ”服务器对象“ =》 展开 =》选中 ”备份设备 “ =》右键 </li>\n<li>  ”新建备份设备 “   =》输入 一个备份名 </li>\n<li>  确认</li>\n</ul>\n<h2 id=\"10-T-SQL-批处理\"><a href=\"#10-T-SQL-批处理\" class=\"headerlink\" title=\"10. T-SQL 批处理\"></a>10. T-SQL 批处理</h2><h3 id=\"10-1-变量：\"><a href=\"#10-1-变量：\" class=\"headerlink\" title=\"10.1 变量：\"></a>10.1 变量：</h3><ul>\n<li><strong>局部变量：</strong> 以@符号开头，先定义后使用。<br>如：@age</li>\n<li><strong>全局变量：</strong> 以@@开头，由系统控制，用户只能读取，不能修改。如：@@VERSION</li>\n</ul>\n<p><strong>变量的声明 和 赋值：</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DECLARE</span> <span class=\"variable\">@age</span> <span class=\"type\">int</span>\t<span class=\"operator\">/</span><span class=\"operator\">/</span><span class=\"keyword\">declare</span> 声明变量 <span class=\"variable\">@age</span>,该变量的类型为 <span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"variable\">@age</span> <span class=\"operator\">=</span> <span class=\"number\">12</span>\t\t<span class=\"operator\">/</span><span class=\"operator\">/</span>给变量赋值</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"variable\">@age</span> <span class=\"operator\">=</span> stuAge <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sno<span class=\"operator\">=</span><span class=\"string\">&#x27;S001&#x27;</span> </span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span>将查询到的<span class=\"number\">1</span>个值赋给变量</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"10-2-流程控制：\"><a href=\"#10-2-流程控制：\" class=\"headerlink\" title=\"10.2 流程控制：\"></a>10.2 流程控制：</h3><p>begin和and之间的语句是1个整体，类似C语言中的大括号的作用。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@price</span> <span class=\"type\">varchar</span>(<span class=\"number\">2</span>) <span class=\"operator\">=</span><span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">begin</span> </span><br><span class=\"line\">\tprint <span class=\"string\">&#x27;价格为：&#x27;</span><span class=\"operator\">+</span><span class=\"variable\">@price</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"10-3-IF…ELSE-语句块\"><a href=\"#10-3-IF…ELSE-语句块\" class=\"headerlink\" title=\"10.3 IF…ELSE 语句块\"></a>10.3 IF…ELSE 语句块</h3><p>if… else</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@price</span> <span class=\"type\">int</span> <span class=\"operator\">=</span><span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">if <span class=\"variable\">@price</span> <span class=\"operator\">&gt;</span> <span class=\"number\">5</span></span><br><span class=\"line\">\tprint <span class=\"variable\">@price</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\tprint <span class=\"string\">&#x27;@price&lt;=5&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"10-4-CASE…END-语句块\"><a href=\"#10-4-CASE…END-语句块\" class=\"headerlink\" title=\"10.4 CASE…END 语句块\"></a>10.4 CASE…END 语句块</h3><p>case…end语句相当于C语言中的 switch 语句</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span> 第一种</span><br><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@price</span> <span class=\"type\">int</span> <span class=\"operator\">=</span> <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@price2</span> <span class=\"type\">int</span> <span class=\"operator\">=</span> <span class=\"keyword\">case</span> </span><br><span class=\"line\">\t<span class=\"keyword\">when</span> <span class=\"variable\">@price</span><span class=\"operator\">=</span><span class=\"number\">10</span> <span class=\"keyword\">then</span> <span class=\"number\">11</span></span><br><span class=\"line\">\t<span class=\"keyword\">when</span> <span class=\"variable\">@price</span><span class=\"operator\">=</span><span class=\"number\">20</span> <span class=\"keyword\">then</span> <span class=\"number\">21</span></span><br><span class=\"line\">\t<span class=\"keyword\">when</span> <span class=\"variable\">@price</span><span class=\"operator\">=</span><span class=\"number\">30</span> <span class=\"keyword\">then</span> <span class=\"number\">31</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">print <span class=\"variable\">@price2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span>第二种</span><br><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@price</span> <span class=\"type\">int</span> <span class=\"operator\">=</span><span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@price2</span> <span class=\"type\">int</span> <span class=\"operator\">=</span> <span class=\"keyword\">case</span> <span class=\"variable\">@price</span></span><br><span class=\"line\">\t<span class=\"keyword\">when</span> <span class=\"number\">10</span> <span class=\"keyword\">then</span> <span class=\"number\">11</span></span><br><span class=\"line\">\t<span class=\"keyword\">when</span> <span class=\"number\">20</span> <span class=\"keyword\">then</span> <span class=\"number\">21</span></span><br><span class=\"line\">\t<span class=\"keyword\">when</span> <span class=\"number\">30</span> <span class=\"keyword\">then</span> <span class=\"number\">31</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">print <span class=\"variable\">@price2</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h3 id=\"10-5-while-循环：\"><a href=\"#10-5-while-循环：\" class=\"headerlink\" title=\"10.5 while 循环：\"></a>10.5 while 循环：</h3><p>while语句中，如果循环体有多条语句，需要结合begin…end，while循环中的变量变化需要有 select 关键字修饰</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span> 打印 <span class=\"number\">1</span><span class=\"operator\">~</span><span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@num</span> <span class=\"type\">int</span> <span class=\"operator\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">while <span class=\"variable\">@num</span> <span class=\"operator\">&lt;</span> <span class=\"number\">10</span></span><br><span class=\"line\">\t<span class=\"keyword\">begin</span>\t</span><br><span class=\"line\">\t\tprint <span class=\"variable\">@num</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> <span class=\"variable\">@num</span> <span class=\"operator\">=</span> <span class=\"variable\">@num</span><span class=\"operator\">+</span><span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"10-6-WAITFOR-语句：\"><a href=\"#10-6-WAITFOR-语句：\" class=\"headerlink\" title=\"10.6 WAITFOR 语句：\"></a>10.6 WAITFOR 语句：</h3><p>waitfor语句用于：延迟执行</p>\n<p>第一种：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@num</span> <span class=\"type\">int</span> <span class=\"operator\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span> 延迟 <span class=\"number\">5</span>秒 执行：打印<span class=\"number\">1</span><span class=\"operator\">~</span><span class=\"number\">9</span></span><br><span class=\"line\">waitfor delay <span class=\"string\">&#x27;00:00:05&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">while <span class=\"variable\">@num</span> <span class=\"operator\">&lt;</span> <span class=\"number\">10</span></span><br><span class=\"line\">\t<span class=\"keyword\">begin</span></span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\tprint <span class=\"variable\">@num</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> <span class=\"variable\">@num</span> <span class=\"operator\">=</span> <span class=\"variable\">@num</span><span class=\"operator\">+</span><span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>第二种：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@num</span> <span class=\"type\">int</span> <span class=\"operator\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span> 在 今天的<span class=\"number\">13</span>：<span class=\"number\">01</span>：<span class=\"number\">55</span> 执行以下操作：打印 <span class=\"number\">1</span><span class=\"operator\">~</span><span class=\"number\">9</span></span><br><span class=\"line\">waitfor <span class=\"type\">time</span> <span class=\"string\">&#x27;13:01:55&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">while <span class=\"variable\">@num</span> <span class=\"operator\">&lt;</span> <span class=\"number\">10</span></span><br><span class=\"line\">\t<span class=\"keyword\">begin</span></span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\tprint <span class=\"variable\">@num</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> <span class=\"variable\">@num</span> <span class=\"operator\">=</span> <span class=\"variable\">@num</span><span class=\"operator\">+</span><span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"SQL-Server-入门笔记\"><a href=\"#SQL-Server-入门笔记\" class=\"headerlink\" title=\"SQL Server-入门笔记\"></a>SQL Server-入门笔记</h1><p>[toc]</p>\n<h2 id=\"1-登录\"><a href=\"#1-登录\" class=\"headerlink\" title=\"1. 登录\"></a>1. 登录</h2><p>2种方式：</p>\n<ul>\n<li>  windows身份验证：登录windows账户后就能使用 数据库</li>\n<li>  混合身份验证：登录windows账户后，还需要知道 数据库的用户名+密码</li>\n</ul>\n<h2 id=\"2-数据库\"><a href=\"#2-数据库\" class=\"headerlink\" title=\"2. 数据库\"></a>2. 数据库</h2><h3 id=\"2-1-创建数据库\"><a href=\"#2-1-创建数据库\" class=\"headerlink\" title=\"2.1 创建数据库\"></a>2.1 创建数据库</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> DATABASE school</span><br><span class=\"line\"><span class=\"keyword\">on</span></span><br><span class=\"line\">(</span><br><span class=\"line\">\tname <span class=\"operator\">=</span> <span class=\"string\">&#x27;school&#x27;</span>,</span><br><span class=\"line\">\tfilename <span class=\"operator\">=</span> <span class=\"string\">&#x27;E:\\DB_demo\\school.mdf&#x27;</span>,</span><br><span class=\"line\">\tsize<span class=\"operator\">=</span><span class=\"number\">5</span>mb,</span><br><span class=\"line\">\tmaxsize <span class=\"operator\">=</span> <span class=\"number\">50</span>mb,</span><br><span class=\"line\">\tfilegrowth <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"operator\">%</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\">-- 后可以跟 其他文件组，文件组与文件组之间使用逗号分隔</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">log <span class=\"keyword\">on</span>(</span><br><span class=\"line\">\tname <span class=\"operator\">=</span> <span class=\"string\">&#x27;school_db&#x27;</span>,</span><br><span class=\"line\">\tfilename <span class=\"operator\">=</span> <span class=\"string\">&#x27;E:\\DB_demo\\school_log.ldf&#x27;</span>,</span><br><span class=\"line\">\tsize<span class=\"operator\">=</span><span class=\"number\">1</span>mb,</span><br><span class=\"line\">\tmaxsize <span class=\"operator\">=</span> <span class=\"number\">10</span>mb,</span><br><span class=\"line\">\tfilegrowth <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"operator\">%</span></span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-删除数据库\"><a href=\"#2-2-删除数据库\" class=\"headerlink\" title=\"2.2 删除数据库\"></a>2.2 删除数据库</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> database school</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-3-数据库文件的修改\"><a href=\"#2-3-数据库文件的修改\" class=\"headerlink\" title=\"2.3  数据库文件的修改\"></a>2.3  数据库文件的修改</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 添加 数据库文件</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> database school </span><br><span class=\"line\"><span class=\"keyword\">add</span> file(</span><br><span class=\"line\">\tname <span class=\"operator\">=</span>ciyao,</span><br><span class=\"line\">\tfilename <span class=\"operator\">=</span> <span class=\"string\">&#x27;E:\\DB_demo\\ciyao.ndf&#x27;</span>,</span><br><span class=\"line\">\tsize<span class=\"operator\">=</span><span class=\"number\">5</span>,</span><br><span class=\"line\">\tmaxsize<span class=\"operator\">=</span><span class=\"number\">10</span>,</span><br><span class=\"line\">\tfilegrowth<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"operator\">%</span></span><br><span class=\"line\">)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 修改 数据库文件</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> database school</span><br><span class=\"line\">modify file(</span><br><span class=\"line\">\tname <span class=\"operator\">=</span>ciyao,</span><br><span class=\"line\">\tfilename <span class=\"operator\">=</span> <span class=\"string\">&#x27;E:\\DB_demo\\ciyao.ndf&#x27;</span>,</span><br><span class=\"line\">\tsize<span class=\"operator\">=</span><span class=\"number\">6</span>,</span><br><span class=\"line\">\tmaxsize<span class=\"operator\">=</span><span class=\"number\">10</span>,</span><br><span class=\"line\">\tfilegrowth<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"operator\">%</span></span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 删除 数据库文件</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> database school</span><br><span class=\"line\">remove file ciyao</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"3-数据表\"><a href=\"#3-数据表\" class=\"headerlink\" title=\"3. 数据表\"></a>3. 数据表</h2><h3 id=\"3-1-创建数据表\"><a href=\"#3-1-创建数据表\" class=\"headerlink\" title=\"3.1 创建数据表\"></a>3.1 创建数据表</h3><p>创建 3个数据表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> student</span><br><span class=\"line\">(</span><br><span class=\"line\">\tsno <span class=\"type\">int</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">\tsname <span class=\"type\">char</span>(<span class=\"number\">10</span>) <span class=\"keyword\">constraint</span> not_null_cons <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tage <span class=\"type\">int</span> <span class=\"keyword\">CHECK</span>(age<span class=\"operator\">&gt;=</span><span class=\"number\">0</span> <span class=\"keyword\">AND</span> age<span class=\"operator\">&lt;</span><span class=\"number\">150</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> class</span><br><span class=\"line\">(</span><br><span class=\"line\">\tcno <span class=\"type\">int</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">\tcname <span class=\"type\">char</span>(<span class=\"number\">20</span>) ,</span><br><span class=\"line\">\tcredit <span class=\"type\">float</span> <span class=\"keyword\">CHECK</span>(credit<span class=\"operator\">&gt;=</span><span class=\"number\">0</span> <span class=\"keyword\">AND</span> credit<span class=\"operator\">&lt;</span><span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> sc</span><br><span class=\"line\">(</span><br><span class=\"line\">\tsno <span class=\"type\">int</span> <span class=\"keyword\">FOREIGN</span> KEY <span class=\"keyword\">REFERENCES</span> student(sno),</span><br><span class=\"line\">\tcno <span class=\"type\">int</span> <span class=\"keyword\">FOREIGN</span> KEY <span class=\"keyword\">REFERENCES</span> class(cno),</span><br><span class=\"line\">\tgrade <span class=\"type\">float</span> <span class=\"keyword\">CHECK</span>(grade<span class=\"operator\">&gt;=</span><span class=\"number\">0</span> <span class=\"keyword\">and</span> grade<span class=\"operator\">&lt;=</span><span class=\"number\">100</span>),</span><br><span class=\"line\">\t<span class=\"keyword\">PRIMARY</span> KEY(sno,cno)</span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\">go</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"3-2-删除数据表\"><a href=\"#3-2-删除数据表\" class=\"headerlink\" title=\"3.2 删除数据表\"></a>3.2 删除数据表</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> student</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"3-3-修改数据表\"><a href=\"#3-3-修改数据表\" class=\"headerlink\" title=\"3.3 修改数据表\"></a>3.3 修改数据表</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 添加 属性</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> student</span><br><span class=\"line\">\t<span class=\"keyword\">add</span></span><br><span class=\"line\">\t\tsex <span class=\"type\">char</span>(<span class=\"number\">2</span>) <span class=\"keyword\">default</span> <span class=\"string\">&#x27;男&#x27;</span>,</span><br><span class=\"line\">\t\taddress <span class=\"type\">char</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 修改 属性</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> student</span><br><span class=\"line\">\t<span class=\"keyword\">alter</span> <span class=\"keyword\">column</span></span><br><span class=\"line\">\t\tsname <span class=\"type\">char</span>(<span class=\"number\">12</span>) </span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"4-数据\"><a href=\"#4-数据\" class=\"headerlink\" title=\"4. 数据\"></a>4. 数据</h2><h3 id=\"4-1-插入数据：insert\"><a href=\"#4-1-插入数据：insert\" class=\"headerlink\" title=\"4.1 插入数据：insert\"></a>4.1 插入数据：insert</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use school</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> student(sno,sname)</span><br><span class=\"line\"><span class=\"keyword\">values</span>(<span class=\"number\">1</span>,<span class=\"string\">&#x27;张三&#x27;</span>),(<span class=\"number\">2</span>,<span class=\"string\">&#x27;李四&#x27;</span>)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> class(cno,cname,credit)</span><br><span class=\"line\"><span class=\"keyword\">values</span>(<span class=\"number\">11</span>,<span class=\"string\">&#x27;计算机&#x27;</span>,<span class=\"number\">2.5</span>),(<span class=\"number\">12</span>,<span class=\"string\">&#x27;高数&#x27;</span>,<span class=\"number\">4.0</span>)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--*******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> sc</span><br><span class=\"line\"><span class=\"keyword\">values</span>(<span class=\"number\">1</span>,<span class=\"number\">11</span>,<span class=\"number\">60</span>),(<span class=\"number\">2</span>,<span class=\"number\">12</span>,<span class=\"number\">70</span>)</span><br><span class=\"line\">go</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"4-2-删除数据：delete\"><a href=\"#4-2-删除数据：delete\" class=\"headerlink\" title=\"4.2 删除数据：delete\"></a>4.2 删除数据：delete</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> s </span><br><span class=\"line\"><span class=\"keyword\">where</span> s.sno<span class=\"operator\">=</span><span class=\"string\">&#x27;A123&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-3-修改数据：update\"><a href=\"#4-3-修改数据：update\" class=\"headerlink\" title=\"4.3 修改数据：update\"></a>4.3 修改数据：update</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update sc  </span><br><span class=\"line\"><span class=\"keyword\">set</span> sc.score <span class=\"operator\">=</span> <span class=\"number\">90</span></span><br><span class=\"line\"><span class=\"keyword\">where</span> sc.sno <span class=\"operator\">=</span> <span class=\"string\">&#x27;A123&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-4-查询数据：select\"><a href=\"#4-4-查询数据：select\" class=\"headerlink\" title=\"4.4 查询数据：select\"></a>4.4 查询数据：select</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询名字为小明，且分数大于80的学生的学号、姓名、成绩,【按成绩：降序排列】</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> s.sno  , s.sname ,  sc.score</span><br><span class=\"line\"><span class=\"keyword\">from</span> s,sc</span><br><span class=\"line\"><span class=\"keyword\">where</span>  s.sname<span class=\"operator\">=</span><span class=\"string\">&#x27;小明&#x27;</span> <span class=\"keyword\">and</span> sc.sc.score<span class=\"operator\">&gt;=</span><span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"keyword\">order</span> <span class=\"keyword\">by</span> sc.score <span class=\"keyword\">desc</span></span><br></pre></td></tr></table></figure>\n\n<p>select语句的执行顺序：</p>\n<ul>\n<li>  from</li>\n<li>  on</li>\n<li>  join</li>\n<li>  where</li>\n<li>  group by</li>\n<li>  having</li>\n<li>  order by</li>\n<li>  select</li>\n</ul>\n<h2 id=\"5-视图\"><a href=\"#5-视图\" class=\"headerlink\" title=\"5. 视图\"></a>5. 视图</h2><h3 id=\"5-1-创建视图\"><a href=\"#5-1-创建视图\" class=\"headerlink\" title=\"5.1 创建视图\"></a>5.1 创建视图</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">view</span>     st_Details_View</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span>  s.sno <span class=\"keyword\">as</span> ‘学号’, sname <span class=\"keyword\">as</span> <span class=\"string\">&#x27;姓名&#x27;</span>, </span><br><span class=\"line\">\t\tsage <span class=\"keyword\">as</span> <span class=\"string\">&#x27;年龄&#x27;</span>, c,cno <span class=\"keyword\">as</span> <span class=\"string\">&#x27;课程号&#x27;</span>, </span><br><span class=\"line\">\t\tcname <span class=\"keyword\">as</span> <span class=\"string\">&#x27;课程名&#x27;</span>, score <span class=\"keyword\">as</span> <span class=\"string\">&#x27;分数&#x27;</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\"><span class=\"keyword\">from</span> s,c.sc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">where</span> </span><br><span class=\"line\">\ts,sno <span class=\"operator\">=</span> sc,sno <span class=\"keyword\">and</span> c.cno <span class=\"operator\">=</span> sc.cno</span><br><span class=\"line\">\t</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"keyword\">check</span> option</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"5-2-删除视图\"><a href=\"#5-2-删除视图\" class=\"headerlink\" title=\"5.2 删除视图\"></a>5.2 删除视图</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">view</span>    st_Details_View</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"5-3-修改视图\"><a href=\"#5-3-修改视图\" class=\"headerlink\" title=\"5.3 修改视图\"></a>5.3 修改视图</h3> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">view</span>   st_Details_View</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span>  s.sno <span class=\"keyword\">as</span> ‘学号’, sname <span class=\"keyword\">as</span> <span class=\"string\">&#x27;姓名&#x27;</span>, </span><br><span class=\"line\">\t\tsage <span class=\"keyword\">as</span> <span class=\"string\">&#x27;年龄&#x27;</span>, c,cno <span class=\"keyword\">as</span> <span class=\"string\">&#x27;课程号&#x27;</span>, </span><br><span class=\"line\">\t\tcname <span class=\"keyword\">as</span> <span class=\"string\">&#x27;课程名&#x27;</span>, score <span class=\"keyword\">as</span> <span class=\"string\">&#x27;分数&#x27;</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\"><span class=\"keyword\">from</span> s,c.sc</span><br><span class=\"line\"><span class=\"keyword\">where</span> </span><br><span class=\"line\">\ts,sno <span class=\"operator\">=</span> sc,sno </span><br><span class=\"line\">\t<span class=\"keyword\">and</span> c.cno <span class=\"operator\">=</span> sc.cno </span><br><span class=\"line\">\t<span class=\"keyword\">and</span> sc.score<span class=\"operator\">&gt;=</span><span class=\"number\">80</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"6-索引\"><a href=\"#6-索引\" class=\"headerlink\" title=\"6. 索引\"></a>6. 索引</h2><h3 id=\"6-1-创建索引\"><a href=\"#6-1-创建索引\" class=\"headerlink\" title=\"6.1 创建索引\"></a>6.1 创建索引</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">unique</span> clusered index    PK_index</span><br><span class=\"line\"><span class=\"keyword\">on</span> sc(sno,cno)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span>(</span><br><span class=\"line\">\tpad_index <span class=\"operator\">=</span> <span class=\"keyword\">on</span>,</span><br><span class=\"line\">    filefactor <span class=\"operator\">=</span> <span class=\"number\">10</span>,</span><br><span class=\"line\">    drop_existing <span class=\"operator\">=</span> <span class=\"keyword\">on</span></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"6-2-删除索引\"><a href=\"#6-2-删除索引\" class=\"headerlink\" title=\"6.2 删除索引\"></a>6.2 删除索引</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> index 表名.索引名</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"6-3-修改索引\"><a href=\"#6-3-修改索引\" class=\"headerlink\" title=\"6.3 修改索引\"></a>6.3 修改索引</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 重新生成 索引</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> index 索引名</span><br><span class=\"line\"><span class=\"keyword\">on</span> 表名</span><br><span class=\"line\">rebuild</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 重新组织 索引</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> index 索引名</span><br><span class=\"line\"><span class=\"keyword\">on</span> 表名</span><br><span class=\"line\">reorganize</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 禁用 索引</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> index 索引名</span><br><span class=\"line\"><span class=\"keyword\">on</span> 表名</span><br><span class=\"line\">disable</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h2 id=\"7-存储过程\"><a href=\"#7-存储过程\" class=\"headerlink\" title=\"7. 存储过程\"></a>7. 存储过程</h2><h3 id=\"7-1-创建-存储过程\"><a href=\"#7-1-创建-存储过程\" class=\"headerlink\" title=\"7.1 创建 存储过程\"></a>7.1 创建 存储过程</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> ProSeEmp</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> employee</span><br><span class=\"line\"><span class=\"keyword\">where</span> sex<span class=\"operator\">=</span><span class=\"string\">&#x27;女&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 创建带输入参数+输出参数的存储过程</span></span><br><span class=\"line\"><span class=\"comment\">--返回指定empid的员工所在的dep</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> ProDep</span><br><span class=\"line\">\t<span class=\"variable\">@Empid</span> <span class=\"type\">int</span> , <span class=\"variable\">@Dep</span> <span class=\"type\">varchar</span>(<span class=\"number\">30</span>) output</span><br><span class=\"line\"><span class=\"keyword\">as</span> </span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"variable\">@Dep</span><span class=\"operator\">=</span>DepetName</span><br><span class=\"line\"><span class=\"keyword\">from</span> dept <span class=\"keyword\">join</span> emp </span><br><span class=\"line\">\t<span class=\"keyword\">on</span> dep.depid <span class=\"operator\">=</span> emp.depid</span><br><span class=\"line\"><span class=\"keyword\">where</span> empid <span class=\"operator\">=</span> <span class=\"variable\">@empid</span>\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 执行</span></span><br><span class=\"line\"><span class=\"keyword\">execute</span> ProDep 参数</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"7-2-执行-存储过程\"><a href=\"#7-2-执行-存储过程\" class=\"headerlink\" title=\"7.2 执行 存储过程\"></a>7.2 执行 存储过程</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">execute</span> 存储过程名</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"7-3-删除-存储过程\"><a href=\"#7-3-删除-存储过程\" class=\"headerlink\" title=\"7.3 删除 存储过程\"></a>7.3 删除 存储过程</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">procedure</span> 存储过程名</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"7-4-修改-存储过程\"><a href=\"#7-4-修改-存储过程\" class=\"headerlink\" title=\"7.4 修改 存储过程\"></a>7.4 修改 存储过程</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">procedure</span> proSeEmp</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> empName,salary,depid</span><br><span class=\"line\">\t<span class=\"keyword\">from</span> emp</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"8-触发器\"><a href=\"#8-触发器\" class=\"headerlink\" title=\"8. 触发器\"></a>8. 触发器</h2><h3 id=\"8-1-创建-触发器\"><a href=\"#8-1-创建-触发器\" class=\"headerlink\" title=\"8.1 创建 触发器\"></a>8.1 创建 触发器</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">trigger</span> 触发器名</span><br><span class=\"line\"><span class=\"keyword\">on</span> 表名</span><br><span class=\"line\"><span class=\"keyword\">for</span><span class=\"operator\">/</span>instead <span class=\"keyword\">of</span><span class=\"operator\">/</span>after  [<span class=\"keyword\">insert</span><span class=\"operator\">/</span>update<span class=\"operator\">/</span><span class=\"keyword\">delete</span>]</span><br><span class=\"line\"><span class=\"keyword\">as</span> ...<span class=\"keyword\">sql</span>语句</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 创建触发器实例：数据 进行更新操作后，触发器启动：打印修改行数</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">trigger</span> emp_Tri</span><br><span class=\"line\"><span class=\"keyword\">on</span> emp</span><br><span class=\"line\">after update</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\">\t<span class=\"keyword\">declare</span> <span class=\"variable\">@c</span> <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"variable\">@c</span><span class=\"operator\">=</span>@<span class=\"variable\">@rowcount</span></span><br><span class=\"line\">\tprint <span class=\"string\">&#x27;一共修改了&#x27;</span><span class=\"operator\">+</span><span class=\"type\">char</span>(<span class=\"number\">48</span><span class=\"operator\">+</span><span class=\"variable\">@c</span>)<span class=\"operator\">+</span><span class=\"string\">&#x27;行&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-2-删除-触发器\"><a href=\"#8-2-删除-触发器\" class=\"headerlink\" title=\"8.2 删除 触发器\"></a>8.2 删除 触发器</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">trigger</span> 触发器名</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"8-3-修改-触发器\"><a href=\"#8-3-修改-触发器\" class=\"headerlink\" title=\"8.3 修改 触发器\"></a>8.3 修改 触发器</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">trigger</span> 触发器名</span><br><span class=\"line\"><span class=\"keyword\">on</span> 表名</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"operator\">/</span> instead <span class=\"keyword\">of</span> <span class=\"operator\">/</span> after   [<span class=\"keyword\">insert</span><span class=\"operator\">/</span> update <span class=\"operator\">/</span> <span class=\"keyword\">delete</span>]</span><br><span class=\"line\"><span class=\"keyword\">as</span> ...<span class=\"keyword\">sql</span>语句</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"9-数据库安全性\"><a href=\"#9-数据库安全性\" class=\"headerlink\" title=\"9. 数据库安全性\"></a>9. 数据库安全性</h2><h3 id=\"9-1-创建账户\"><a href=\"#9-1-创建账户\" class=\"headerlink\" title=\"9.1 创建账户\"></a>9.1 创建账户</h3><p>步骤：</p>\n<ul>\n<li>  选中 某个数据库 =》展开，选中  ‘安全性’  下的 ‘用户’  =》右键</li>\n<li>  新建用户</li>\n<li>  输入、选择：用户名，登录名，默认架构</li>\n<li>  确定</li>\n</ul>\n<h3 id=\"9-2-授予权限\"><a href=\"#9-2-授予权限\" class=\"headerlink\" title=\"9.2 授予权限\"></a>9.2 授予权限</h3><p>步骤：</p>\n<ul>\n<li>  选中 某个数据库 =》 右键 =》 属性</li>\n<li>  权限 =》 点击 ‘搜索’ 按钮 =》浏览 =》选中 某个 用户</li>\n<li>  勾选 所需权限</li>\n<li>  确定</li>\n</ul>\n<p>‘、</p>\n<h3 id=\"9-3-备份\"><a href=\"#9-3-备份\" class=\"headerlink\" title=\"9.3 备份\"></a>9.3 备份</h3><p>备份设备</p>\n<p>步骤：</p>\n<ul>\n<li>  选中 ”服务器对象“ =》 展开 =》选中 ”备份设备 “ =》右键 </li>\n<li>  ”新建备份设备 “   =》输入 一个备份名 </li>\n<li>  确认</li>\n</ul>\n<h2 id=\"10-T-SQL-批处理\"><a href=\"#10-T-SQL-批处理\" class=\"headerlink\" title=\"10. T-SQL 批处理\"></a>10. T-SQL 批处理</h2><h3 id=\"10-1-变量：\"><a href=\"#10-1-变量：\" class=\"headerlink\" title=\"10.1 变量：\"></a>10.1 变量：</h3><ul>\n<li><strong>局部变量：</strong> 以@符号开头，先定义后使用。<br>如：@age</li>\n<li><strong>全局变量：</strong> 以@@开头，由系统控制，用户只能读取，不能修改。如：@@VERSION</li>\n</ul>\n<p><strong>变量的声明 和 赋值：</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DECLARE</span> <span class=\"variable\">@age</span> <span class=\"type\">int</span>\t<span class=\"operator\">/</span><span class=\"operator\">/</span><span class=\"keyword\">declare</span> 声明变量 <span class=\"variable\">@age</span>,该变量的类型为 <span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"variable\">@age</span> <span class=\"operator\">=</span> <span class=\"number\">12</span>\t\t<span class=\"operator\">/</span><span class=\"operator\">/</span>给变量赋值</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"variable\">@age</span> <span class=\"operator\">=</span> stuAge <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sno<span class=\"operator\">=</span><span class=\"string\">&#x27;S001&#x27;</span> </span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span>将查询到的<span class=\"number\">1</span>个值赋给变量</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"10-2-流程控制：\"><a href=\"#10-2-流程控制：\" class=\"headerlink\" title=\"10.2 流程控制：\"></a>10.2 流程控制：</h3><p>begin和and之间的语句是1个整体，类似C语言中的大括号的作用。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@price</span> <span class=\"type\">varchar</span>(<span class=\"number\">2</span>) <span class=\"operator\">=</span><span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">begin</span> </span><br><span class=\"line\">\tprint <span class=\"string\">&#x27;价格为：&#x27;</span><span class=\"operator\">+</span><span class=\"variable\">@price</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"10-3-IF…ELSE-语句块\"><a href=\"#10-3-IF…ELSE-语句块\" class=\"headerlink\" title=\"10.3 IF…ELSE 语句块\"></a>10.3 IF…ELSE 语句块</h3><p>if… else</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@price</span> <span class=\"type\">int</span> <span class=\"operator\">=</span><span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">if <span class=\"variable\">@price</span> <span class=\"operator\">&gt;</span> <span class=\"number\">5</span></span><br><span class=\"line\">\tprint <span class=\"variable\">@price</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\tprint <span class=\"string\">&#x27;@price&lt;=5&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"10-4-CASE…END-语句块\"><a href=\"#10-4-CASE…END-语句块\" class=\"headerlink\" title=\"10.4 CASE…END 语句块\"></a>10.4 CASE…END 语句块</h3><p>case…end语句相当于C语言中的 switch 语句</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span> 第一种</span><br><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@price</span> <span class=\"type\">int</span> <span class=\"operator\">=</span> <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@price2</span> <span class=\"type\">int</span> <span class=\"operator\">=</span> <span class=\"keyword\">case</span> </span><br><span class=\"line\">\t<span class=\"keyword\">when</span> <span class=\"variable\">@price</span><span class=\"operator\">=</span><span class=\"number\">10</span> <span class=\"keyword\">then</span> <span class=\"number\">11</span></span><br><span class=\"line\">\t<span class=\"keyword\">when</span> <span class=\"variable\">@price</span><span class=\"operator\">=</span><span class=\"number\">20</span> <span class=\"keyword\">then</span> <span class=\"number\">21</span></span><br><span class=\"line\">\t<span class=\"keyword\">when</span> <span class=\"variable\">@price</span><span class=\"operator\">=</span><span class=\"number\">30</span> <span class=\"keyword\">then</span> <span class=\"number\">31</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">print <span class=\"variable\">@price2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span>第二种</span><br><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@price</span> <span class=\"type\">int</span> <span class=\"operator\">=</span><span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@price2</span> <span class=\"type\">int</span> <span class=\"operator\">=</span> <span class=\"keyword\">case</span> <span class=\"variable\">@price</span></span><br><span class=\"line\">\t<span class=\"keyword\">when</span> <span class=\"number\">10</span> <span class=\"keyword\">then</span> <span class=\"number\">11</span></span><br><span class=\"line\">\t<span class=\"keyword\">when</span> <span class=\"number\">20</span> <span class=\"keyword\">then</span> <span class=\"number\">21</span></span><br><span class=\"line\">\t<span class=\"keyword\">when</span> <span class=\"number\">30</span> <span class=\"keyword\">then</span> <span class=\"number\">31</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">print <span class=\"variable\">@price2</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h3 id=\"10-5-while-循环：\"><a href=\"#10-5-while-循环：\" class=\"headerlink\" title=\"10.5 while 循环：\"></a>10.5 while 循环：</h3><p>while语句中，如果循环体有多条语句，需要结合begin…end，while循环中的变量变化需要有 select 关键字修饰</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span> 打印 <span class=\"number\">1</span><span class=\"operator\">~</span><span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@num</span> <span class=\"type\">int</span> <span class=\"operator\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">while <span class=\"variable\">@num</span> <span class=\"operator\">&lt;</span> <span class=\"number\">10</span></span><br><span class=\"line\">\t<span class=\"keyword\">begin</span>\t</span><br><span class=\"line\">\t\tprint <span class=\"variable\">@num</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> <span class=\"variable\">@num</span> <span class=\"operator\">=</span> <span class=\"variable\">@num</span><span class=\"operator\">+</span><span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"10-6-WAITFOR-语句：\"><a href=\"#10-6-WAITFOR-语句：\" class=\"headerlink\" title=\"10.6 WAITFOR 语句：\"></a>10.6 WAITFOR 语句：</h3><p>waitfor语句用于：延迟执行</p>\n<p>第一种：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@num</span> <span class=\"type\">int</span> <span class=\"operator\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span> 延迟 <span class=\"number\">5</span>秒 执行：打印<span class=\"number\">1</span><span class=\"operator\">~</span><span class=\"number\">9</span></span><br><span class=\"line\">waitfor delay <span class=\"string\">&#x27;00:00:05&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">while <span class=\"variable\">@num</span> <span class=\"operator\">&lt;</span> <span class=\"number\">10</span></span><br><span class=\"line\">\t<span class=\"keyword\">begin</span></span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\tprint <span class=\"variable\">@num</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> <span class=\"variable\">@num</span> <span class=\"operator\">=</span> <span class=\"variable\">@num</span><span class=\"operator\">+</span><span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>第二种：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"variable\">@num</span> <span class=\"type\">int</span> <span class=\"operator\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span> 在 今天的<span class=\"number\">13</span>：<span class=\"number\">01</span>：<span class=\"number\">55</span> 执行以下操作：打印 <span class=\"number\">1</span><span class=\"operator\">~</span><span class=\"number\">9</span></span><br><span class=\"line\">waitfor <span class=\"type\">time</span> <span class=\"string\">&#x27;13:01:55&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">while <span class=\"variable\">@num</span> <span class=\"operator\">&lt;</span> <span class=\"number\">10</span></span><br><span class=\"line\">\t<span class=\"keyword\">begin</span></span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\tprint <span class=\"variable\">@num</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> <span class=\"variable\">@num</span> <span class=\"operator\">=</span> <span class=\"variable\">@num</span><span class=\"operator\">+</span><span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"Vue 入门-01","_content":"\n\n\n# Vue入门-01\n\n[toc]\n## 1. Vue 的介绍\n\n\n\n`https://cn.vuejs.org/v2/guide/`\n[Vue官网教程](https://cn.vuejs.org/v2/guide/)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117122819956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 1.1 安装\n#### 1.1.1 使用CDN【不用安装，但需要联网】\n开发环境：\n\n```markup\n<!-- 开发环境版本，包含了有帮助的命令行警告 -->\n<script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"></script>\n```\n生产环境：\n\n```markup\n<!-- 生产环境版本，优化了尺寸和速度 -->\n<script src=\"https://cdn.jsdelivr.net/npm/vue\"></script>\n```\n#### 1.1.2 使用npm包管理器安装【不推荐新手】\n\n\n### 1.2 Vue必备步骤\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117124822974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n- Vue 以数据驱动的【即：根据数据来改变】\n- Vue 的指令：\n\t- 与 `标签属性相关`：使用 `:`   =》 `v-bind:src=\"key名\"`\n\t- 与 `标签属性无关`：使用 `=`  =》  `v-if=\"false\"`\n\n\n### 1.3 Vue 绑定数据\n- 单向绑定【适用于 普通的标签】:  `Vue =渲染到=》HTML`\n- 双向绑定【适用于 表单标签】： `Html的内容变，则Vue中也变；Vue内变，则Html中也变`\n\n单项绑定-实例：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117125749164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n双项绑定-实例：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117130609985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.4 Vue 绑定属性\n`v-bind:属性名=“Vue中的变量”`\n例如：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117131910842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n### 1.5 Vue 显示+隐藏\n不显示内容：【将条件置为false】\n- 使用 `v-if`： 完全不渲染【连标签都没有】\n- 使用 `v-show`：渲染，但利用 CSS\t中的 `display:none;` 来隐藏\n\n`v-if=\"布尔值\"`实例：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021011713293566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n`v-show=“布尔值”`实例：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117132536937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.6 Vue 循环\n`v-for=“变量名 in 可遍历的对象”`\n\n`v-for`指令实例：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117133639478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.7 Vue 绑定事件\n` v-on:click`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117134420764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.8 实例-1 ：输入文本，查看预览效果\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117140218529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.9 实例-2 ：勾选复选框-显示图片\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117141728671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 1.10 实例-3 ：博客发布-简易版\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117144208281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117144242331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 2.1 组件(自定义组件)\n定义组件名时：使用 驼峰法 或 - 法\n使用组件时，用 - 法\n组件的属性在定义时要有双引号<kbd> \"  \"</kbd>\n组件的data的**冒号后**只能跟函数【函数的返回值可以是对象】，这点要与Vue对象区分开，且组件不能有el 键【这也与Vue对象不同】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021011715054395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 2.2.1 自定义组件-实例：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117151523122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 3.1 常用指令\n\n\n\n> v-show： 显示、隐藏=》display:none;\n> v-if：显示、隐藏=》不渲染\n> v-else\n> v-else-if\n\n> v-text：插入vue的data中的值，相当于{%raw%}{{ }}{%endraw%}\n> v-html ：可以插入html代码\n\n> v-bind：绑定属性\n> v-model：双向绑定数据\n> v-on：{% raw %}绑定事件，结合vue中的 `methods：{ 事件名：function(){ } } `来使用{% endraw %}\n\n> v-for：循环\n\n\n\n### 3.1.1 v-text 和 {%raw %} {{ }} {% endraw %}\n\n\n\n- `v-text`  : 等价于{%raw %} {{ }}  {% endraw %}，当输出的内容为html代码时，{% raw %}{{}}{% endraw %}原样输出，\n而`v-html`会根据输出内容渲染\n例如：\n【以下两条指令等价，但 {%raw %} {{}}  {%endraw %} 在js加载缓慢时可能为显示出来】\n\n```markup\n  <p>{% raw %} {{ msg }} {% endraw %}</p>\n  \n  <p v-text=\"msg\"></p>\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117153705654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n {%raw %} 为避免{{ }} 插值时 {%endraw %} ，因为加载速度慢而渲染出 大括号，可使用`v-cloak`来避免出现大括号\n【使用 `v-cloak`的前提是 在`<style> [v-cloak]{display:none;}</style>`,然后在有{%raw %} {{ }}  {%endraw%}的标签中`v-cloak`】  \n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117172433827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n### 3.1.2 v-for\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117161917689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 3.1.3 v-on\n\n`v-on`  等价于  `@`\n\n例如【以下二者等价】：\n\n```markup\n<button v-on:click=\"alertMsg\">点击1</button>\n           \n<button @click=\"alertMsg\">点击2</button>\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021011716304391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n`冒泡事件`：内层元素触发事件后，外层元素也会触发事件\n例如：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117165840328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n- 冒泡事件：`@click=\"helloMsg\"` \n- 停止冒泡事件`事件.stop`：`v-on:click.stop=\"helloMsg\"` 即：`@click.stop=\"helloMsg\"` \n- 鼠标事件【只有mousedown 事件才触发】：\n\t- `@mousedown.left=\"helloMsg\"`  ：鼠标左键\n\t-  `@mousedown.right=\"helloMsg\"`：鼠标右键\n\t- `@mousedown.middle=\"helloMsg\"`：鼠标滚轮 \n- 键盘事件【键盘按下某个键时才触发，键盘码 / ctrl / shift 等】：\n- `@keydown.enter=\"hellMsg\"`：键盘按下回车\n\n### 3.1.4 v-bind\n\n`v-bind:` 绑定属性：  等价于 直接 `：`\n例如【以下二者等价】：\n\n```markup\n    <img v-bind:src=\"imgSrc\" alt=\"\">\n    <img :src=\"imgSrc\" alt=\"\">\n```\n\n### 3.1.6 实例：tab切换【v-show 或 v-if】\n\n快捷生成标签：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117155449125.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117155505200.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117160113765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n或\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117160332375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n## 4. 注意事项\n### 4.1 取用Vue对象中的值\n\n 取用 Vue对象中的内容【设 vm为 Vue对象的名字】： `vm.$变量名`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117173258973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n### 4.2 `.$watch`:监听 指定属性 的属性值的变化\n\n\n\n第一种方式【Vue对象外】：\n`vm.$watch(\"属性名\",function(新值，旧值){ }  )`\n\n第二种方式【Vue对象内】：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118163855925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n\n### 4.3 Vue的生命周期\n#### 4.3.1 beforeCreate事件\n\nbeforeCreate事件在new 完 Vue对象后马上触发，是第一个触发的事件【此时还没有事件的监听，即：`初始化之后，数据监听前（还没有数据）`】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117182607184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n#### 4.3.2 created事件【重要：绑定数据】\n在 beforeCreate事件之后，dom元素之前【此时还没有事件的监听，即：`初始化之后，数据监听后（有数据了）`】，ajax赋值要在这个阶段之后\n\n#### 4.3.3 beforeMount 事件\n\n\n\n beforeMount 事件：在dom元素产生之后，渲染之前触发，【即：{% raw %}有{{ }}且还没有处理{{ }}的阶段{% endraw %}】\n\n\n\n#### 4.3.4 mounted 事件【重要：绑定dom元素】\nmounted 事件：在dom元素渲染之后触发，【此时，已经可以识别元素】\n\n#### 4.3.5 beforeUpdate 事件\n\nbeforeUpdate 事件：在监听阶段（即：vm.$watch(属性名，function(){})），如果属性发生变化，则在渲染之前触发该事件\n\n#### 4.3.6 updated 事件【重要：修改属性之后】\nupdated 事件：在监听阶段，如果属性发生变化，则在渲染之后触发该事件\n#### 4.3.7 beforeDestroy 事件\nbeforeDestroy 事件:销毁之前触发\n\n#### 4.3.8 Destroyed 事件\nbeforeDestroy 事件:销毁之后触发","source":"_posts/Vue入门-01.md","raw":"---\ntitle: Vue 入门-01\ntag: Vue\ncategories:\n  - 前端\n  - Vue\n---\n\n\n\n# Vue入门-01\n\n[toc]\n## 1. Vue 的介绍\n\n\n\n`https://cn.vuejs.org/v2/guide/`\n[Vue官网教程](https://cn.vuejs.org/v2/guide/)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117122819956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 1.1 安装\n#### 1.1.1 使用CDN【不用安装，但需要联网】\n开发环境：\n\n```markup\n<!-- 开发环境版本，包含了有帮助的命令行警告 -->\n<script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"></script>\n```\n生产环境：\n\n```markup\n<!-- 生产环境版本，优化了尺寸和速度 -->\n<script src=\"https://cdn.jsdelivr.net/npm/vue\"></script>\n```\n#### 1.1.2 使用npm包管理器安装【不推荐新手】\n\n\n### 1.2 Vue必备步骤\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117124822974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n- Vue 以数据驱动的【即：根据数据来改变】\n- Vue 的指令：\n\t- 与 `标签属性相关`：使用 `:`   =》 `v-bind:src=\"key名\"`\n\t- 与 `标签属性无关`：使用 `=`  =》  `v-if=\"false\"`\n\n\n### 1.3 Vue 绑定数据\n- 单向绑定【适用于 普通的标签】:  `Vue =渲染到=》HTML`\n- 双向绑定【适用于 表单标签】： `Html的内容变，则Vue中也变；Vue内变，则Html中也变`\n\n单项绑定-实例：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117125749164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n双项绑定-实例：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117130609985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.4 Vue 绑定属性\n`v-bind:属性名=“Vue中的变量”`\n例如：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117131910842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n### 1.5 Vue 显示+隐藏\n不显示内容：【将条件置为false】\n- 使用 `v-if`： 完全不渲染【连标签都没有】\n- 使用 `v-show`：渲染，但利用 CSS\t中的 `display:none;` 来隐藏\n\n`v-if=\"布尔值\"`实例：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021011713293566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n`v-show=“布尔值”`实例：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117132536937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.6 Vue 循环\n`v-for=“变量名 in 可遍历的对象”`\n\n`v-for`指令实例：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117133639478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.7 Vue 绑定事件\n` v-on:click`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117134420764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.8 实例-1 ：输入文本，查看预览效果\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117140218529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.9 实例-2 ：勾选复选框-显示图片\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117141728671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 1.10 实例-3 ：博客发布-简易版\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117144208281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117144242331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 2.1 组件(自定义组件)\n定义组件名时：使用 驼峰法 或 - 法\n使用组件时，用 - 法\n组件的属性在定义时要有双引号<kbd> \"  \"</kbd>\n组件的data的**冒号后**只能跟函数【函数的返回值可以是对象】，这点要与Vue对象区分开，且组件不能有el 键【这也与Vue对象不同】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021011715054395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 2.2.1 自定义组件-实例：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117151523122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 3.1 常用指令\n\n\n\n> v-show： 显示、隐藏=》display:none;\n> v-if：显示、隐藏=》不渲染\n> v-else\n> v-else-if\n\n> v-text：插入vue的data中的值，相当于{%raw%}{{ }}{%endraw%}\n> v-html ：可以插入html代码\n\n> v-bind：绑定属性\n> v-model：双向绑定数据\n> v-on：{% raw %}绑定事件，结合vue中的 `methods：{ 事件名：function(){ } } `来使用{% endraw %}\n\n> v-for：循环\n\n\n\n### 3.1.1 v-text 和 {%raw %} {{ }} {% endraw %}\n\n\n\n- `v-text`  : 等价于{%raw %} {{ }}  {% endraw %}，当输出的内容为html代码时，{% raw %}{{}}{% endraw %}原样输出，\n而`v-html`会根据输出内容渲染\n例如：\n【以下两条指令等价，但 {%raw %} {{}}  {%endraw %} 在js加载缓慢时可能为显示出来】\n\n```markup\n  <p>{% raw %} {{ msg }} {% endraw %}</p>\n  \n  <p v-text=\"msg\"></p>\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117153705654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n {%raw %} 为避免{{ }} 插值时 {%endraw %} ，因为加载速度慢而渲染出 大括号，可使用`v-cloak`来避免出现大括号\n【使用 `v-cloak`的前提是 在`<style> [v-cloak]{display:none;}</style>`,然后在有{%raw %} {{ }}  {%endraw%}的标签中`v-cloak`】  \n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117172433827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n### 3.1.2 v-for\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117161917689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 3.1.3 v-on\n\n`v-on`  等价于  `@`\n\n例如【以下二者等价】：\n\n```markup\n<button v-on:click=\"alertMsg\">点击1</button>\n           \n<button @click=\"alertMsg\">点击2</button>\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021011716304391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n`冒泡事件`：内层元素触发事件后，外层元素也会触发事件\n例如：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117165840328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n- 冒泡事件：`@click=\"helloMsg\"` \n- 停止冒泡事件`事件.stop`：`v-on:click.stop=\"helloMsg\"` 即：`@click.stop=\"helloMsg\"` \n- 鼠标事件【只有mousedown 事件才触发】：\n\t- `@mousedown.left=\"helloMsg\"`  ：鼠标左键\n\t-  `@mousedown.right=\"helloMsg\"`：鼠标右键\n\t- `@mousedown.middle=\"helloMsg\"`：鼠标滚轮 \n- 键盘事件【键盘按下某个键时才触发，键盘码 / ctrl / shift 等】：\n- `@keydown.enter=\"hellMsg\"`：键盘按下回车\n\n### 3.1.4 v-bind\n\n`v-bind:` 绑定属性：  等价于 直接 `：`\n例如【以下二者等价】：\n\n```markup\n    <img v-bind:src=\"imgSrc\" alt=\"\">\n    <img :src=\"imgSrc\" alt=\"\">\n```\n\n### 3.1.6 实例：tab切换【v-show 或 v-if】\n\n快捷生成标签：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117155449125.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117155505200.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117160113765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n或\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117160332375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n## 4. 注意事项\n### 4.1 取用Vue对象中的值\n\n 取用 Vue对象中的内容【设 vm为 Vue对象的名字】： `vm.$变量名`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117173258973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n### 4.2 `.$watch`:监听 指定属性 的属性值的变化\n\n\n\n第一种方式【Vue对象外】：\n`vm.$watch(\"属性名\",function(新值，旧值){ }  )`\n\n第二种方式【Vue对象内】：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118163855925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n\n### 4.3 Vue的生命周期\n#### 4.3.1 beforeCreate事件\n\nbeforeCreate事件在new 完 Vue对象后马上触发，是第一个触发的事件【此时还没有事件的监听，即：`初始化之后，数据监听前（还没有数据）`】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210117182607184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n#### 4.3.2 created事件【重要：绑定数据】\n在 beforeCreate事件之后，dom元素之前【此时还没有事件的监听，即：`初始化之后，数据监听后（有数据了）`】，ajax赋值要在这个阶段之后\n\n#### 4.3.3 beforeMount 事件\n\n\n\n beforeMount 事件：在dom元素产生之后，渲染之前触发，【即：{% raw %}有{{ }}且还没有处理{{ }}的阶段{% endraw %}】\n\n\n\n#### 4.3.4 mounted 事件【重要：绑定dom元素】\nmounted 事件：在dom元素渲染之后触发，【此时，已经可以识别元素】\n\n#### 4.3.5 beforeUpdate 事件\n\nbeforeUpdate 事件：在监听阶段（即：vm.$watch(属性名，function(){})），如果属性发生变化，则在渲染之前触发该事件\n\n#### 4.3.6 updated 事件【重要：修改属性之后】\nupdated 事件：在监听阶段，如果属性发生变化，则在渲染之后触发该事件\n#### 4.3.7 beforeDestroy 事件\nbeforeDestroy 事件:销毁之前触发\n\n#### 4.3.8 Destroyed 事件\nbeforeDestroy 事件:销毁之后触发","slug":"Vue入门-01","published":1,"date":"2021-06-02T02:49:19.178Z","updated":"2021-06-01T07:36:09.375Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs1e000slcvd0lfefgj9","content":"<h1 id=\"Vue入门-01\"><a href=\"#Vue入门-01\" class=\"headerlink\" title=\"Vue入门-01\"></a>Vue入门-01</h1><p>[toc]</p>\n<h2 id=\"1-Vue-的介绍\"><a href=\"#1-Vue-的介绍\" class=\"headerlink\" title=\"1. Vue 的介绍\"></a>1. Vue 的介绍</h2><p><code>https://cn.vuejs.org/v2/guide/</code><br><a href=\"https://cn.vuejs.org/v2/guide/\">Vue官网教程</a><br><img src=\"https://img-blog.csdnimg.cn/20210117122819956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-1-安装\"><a href=\"#1-1-安装\" class=\"headerlink\" title=\"1.1 安装\"></a>1.1 安装</h3><h4 id=\"1-1-1-使用CDN【不用安装，但需要联网】\"><a href=\"#1-1-1-使用CDN【不用安装，但需要联网】\" class=\"headerlink\" title=\"1.1.1 使用CDN【不用安装，但需要联网】\"></a>1.1.1 使用CDN【不用安装，但需要联网】</h4><p>开发环境：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span><br><span class=\"line\">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>生产环境：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span><br><span class=\"line\">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-1-2-使用npm包管理器安装【不推荐新手】\"><a href=\"#1-1-2-使用npm包管理器安装【不推荐新手】\" class=\"headerlink\" title=\"1.1.2 使用npm包管理器安装【不推荐新手】\"></a>1.1.2 使用npm包管理器安装【不推荐新手】</h4><h3 id=\"1-2-Vue必备步骤\"><a href=\"#1-2-Vue必备步骤\" class=\"headerlink\" title=\"1.2 Vue必备步骤\"></a>1.2 Vue必备步骤</h3><p><img src=\"https://img-blog.csdnimg.cn/20210117124822974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>Vue 以数据驱动的【即：根据数据来改变】</li>\n<li>Vue 的指令：<ul>\n<li>与 <code>标签属性相关</code>：使用 <code>:</code>   =》 <code>v-bind:src=&quot;key名&quot;</code></li>\n<li>与 <code>标签属性无关</code>：使用 <code>=</code>  =》  <code>v-if=&quot;false&quot;</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-3-Vue-绑定数据\"><a href=\"#1-3-Vue-绑定数据\" class=\"headerlink\" title=\"1.3 Vue 绑定数据\"></a>1.3 Vue 绑定数据</h3><ul>\n<li>单向绑定【适用于 普通的标签】:  <code>Vue =渲染到=》HTML</code></li>\n<li>双向绑定【适用于 表单标签】： <code>Html的内容变，则Vue中也变；Vue内变，则Html中也变</code></li>\n</ul>\n<p>单项绑定-实例：<br><img src=\"https://img-blog.csdnimg.cn/20210117125749164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>双项绑定-实例：<br><img src=\"https://img-blog.csdnimg.cn/20210117130609985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-4-Vue-绑定属性\"><a href=\"#1-4-Vue-绑定属性\" class=\"headerlink\" title=\"1.4 Vue 绑定属性\"></a>1.4 Vue 绑定属性</h3><p><code>v-bind:属性名=“Vue中的变量”</code><br>例如：<br><img src=\"https://img-blog.csdnimg.cn/20210117131910842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-5-Vue-显示-隐藏\"><a href=\"#1-5-Vue-显示-隐藏\" class=\"headerlink\" title=\"1.5 Vue 显示+隐藏\"></a>1.5 Vue 显示+隐藏</h3><p>不显示内容：【将条件置为false】</p>\n<ul>\n<li>使用 <code>v-if</code>： 完全不渲染【连标签都没有】</li>\n<li>使用 <code>v-show</code>：渲染，但利用 CSS    中的 <code>display:none;</code> 来隐藏</li>\n</ul>\n<p><code>v-if=&quot;布尔值&quot;</code>实例：<br><img src=\"https://img-blog.csdnimg.cn/2021011713293566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><code>v-show=“布尔值”</code>实例：<br><img src=\"https://img-blog.csdnimg.cn/20210117132536937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-6-Vue-循环\"><a href=\"#1-6-Vue-循环\" class=\"headerlink\" title=\"1.6 Vue 循环\"></a>1.6 Vue 循环</h3><p><code>v-for=“变量名 in 可遍历的对象”</code></p>\n<p><code>v-for</code>指令实例：<br><img src=\"https://img-blog.csdnimg.cn/20210117133639478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-7-Vue-绑定事件\"><a href=\"#1-7-Vue-绑定事件\" class=\"headerlink\" title=\"1.7 Vue 绑定事件\"></a>1.7 Vue 绑定事件</h3><p><code> v-on:click</code><br><img src=\"https://img-blog.csdnimg.cn/20210117134420764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-8-实例-1-：输入文本，查看预览效果\"><a href=\"#1-8-实例-1-：输入文本，查看预览效果\" class=\"headerlink\" title=\"1.8 实例-1 ：输入文本，查看预览效果\"></a>1.8 实例-1 ：输入文本，查看预览效果</h3><p><img src=\"https://img-blog.csdnimg.cn/20210117140218529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-9-实例-2-：勾选复选框-显示图片\"><a href=\"#1-9-实例-2-：勾选复选框-显示图片\" class=\"headerlink\" title=\"1.9 实例-2 ：勾选复选框-显示图片\"></a>1.9 实例-2 ：勾选复选框-显示图片</h3><p><img src=\"https://img-blog.csdnimg.cn/20210117141728671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-10-实例-3-：博客发布-简易版\"><a href=\"#1-10-实例-3-：博客发布-简易版\" class=\"headerlink\" title=\"1.10 实例-3 ：博客发布-简易版\"></a>1.10 实例-3 ：博客发布-简易版</h3><p><img src=\"https://img-blog.csdnimg.cn/20210117144208281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210117144242331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-1-组件-自定义组件\"><a href=\"#2-1-组件-自定义组件\" class=\"headerlink\" title=\"2.1 组件(自定义组件)\"></a>2.1 组件(自定义组件)</h2><p>定义组件名时：使用 驼峰法 或 - 法<br>使用组件时，用 - 法<br>组件的属性在定义时要有双引号<kbd> \"  \"</kbd><br>组件的data的<strong>冒号后</strong>只能跟函数【函数的返回值可以是对象】，这点要与Vue对象区分开，且组件不能有el 键【这也与Vue对象不同】<br><img src=\"https://img-blog.csdnimg.cn/2021011715054395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-2-1-自定义组件-实例：\"><a href=\"#2-2-1-自定义组件-实例：\" class=\"headerlink\" title=\"2.2.1 自定义组件-实例：\"></a>2.2.1 自定义组件-实例：</h3><p><img src=\"https://img-blog.csdnimg.cn/20210117151523122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-1-常用指令\"><a href=\"#3-1-常用指令\" class=\"headerlink\" title=\"3.1 常用指令\"></a>3.1 常用指令</h2><blockquote>\n<p>v-show： 显示、隐藏=》display:none;<br>v-if：显示、隐藏=》不渲染<br>v-else<br>v-else-if</p>\n</blockquote>\n<blockquote>\n<p>v-text：插入vue的data中的值，相当于{{ }}<br>v-html ：可以插入html代码</p>\n</blockquote>\n<blockquote>\n<p>v-bind：绑定属性<br>v-model：双向绑定数据<br>v-on：绑定事件，结合vue中的 `methods：{ 事件名：function(){ } } `来使用</p>\n</blockquote>\n<blockquote>\n<p>v-for：循环</p>\n</blockquote>\n<h3 id=\"3-1-1-v-text-和\"><a href=\"#3-1-1-v-text-和\" class=\"headerlink\" title=\"3.1.1 v-text 和 \"></a>3.1.1 v-text 和  {{ }} </h3><ul>\n<li><code>v-text</code>  : 等价于 {{ }}  ，当输出的内容为html代码时，{{}}原样输出，\n而`v-html`会根据输出内容渲染\n例如：\n【以下两条指令等价，但  {{}}   在js加载缓慢时可能为显示出来】</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;&#123;% raw %&#125; &#123;&#123; msg &#125;&#125; &#123;% endraw %&#125;&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p v-text=&quot;msg&quot;&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210117153705654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n  为避免{{ }} 插值时  ，因为加载速度慢而渲染出 大括号，可使用`v-cloak`来避免出现大括号\n<p>【使用 <code>v-cloak</code>的前提是 在<code>&lt;style&gt; [v-cloak]&#123;display:none;&#125;&lt;/style&gt;</code>,然后在有 {{ }}  的标签中<code>v-cloak</code>】  </p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210117172433827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-1-2-v-for\"><a href=\"#3-1-2-v-for\" class=\"headerlink\" title=\"3.1.2 v-for\"></a>3.1.2 v-for</h3><p><img src=\"https://img-blog.csdnimg.cn/20210117161917689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-1-3-v-on\"><a href=\"#3-1-3-v-on\" class=\"headerlink\" title=\"3.1.3 v-on\"></a>3.1.3 v-on</h3><p><code>v-on</code>  等价于  <code>@</code></p>\n<p>例如【以下二者等价】：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button v-on:click=&quot;alertMsg&quot;&gt;点击1&lt;/button&gt;</span><br><span class=\"line\">           </span><br><span class=\"line\">&lt;button @click=&quot;alertMsg&quot;&gt;点击2&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/2021011716304391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><code>冒泡事件</code>：内层元素触发事件后，外层元素也会触发事件<br>例如：<br><img src=\"https://img-blog.csdnimg.cn/20210117165840328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>冒泡事件：<code>@click=&quot;helloMsg&quot;</code> </li>\n<li>停止冒泡事件<code>事件.stop</code>：<code>v-on:click.stop=&quot;helloMsg&quot;</code> 即：<code>@click.stop=&quot;helloMsg&quot;</code> </li>\n<li>鼠标事件【只有mousedown 事件才触发】：<ul>\n<li><code>@mousedown.left=&quot;helloMsg&quot;</code>  ：鼠标左键</li>\n<li> <code>@mousedown.right=&quot;helloMsg&quot;</code>：鼠标右键</li>\n<li><code>@mousedown.middle=&quot;helloMsg&quot;</code>：鼠标滚轮 </li>\n</ul>\n</li>\n<li>键盘事件【键盘按下某个键时才触发，键盘码 / ctrl / shift 等】：</li>\n<li><code>@keydown.enter=&quot;hellMsg&quot;</code>：键盘按下回车</li>\n</ul>\n<h3 id=\"3-1-4-v-bind\"><a href=\"#3-1-4-v-bind\" class=\"headerlink\" title=\"3.1.4 v-bind\"></a>3.1.4 v-bind</h3><p><code>v-bind:</code> 绑定属性：  等价于 直接 <code>：</code><br>例如【以下二者等价】：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img v-bind:src=&quot;imgSrc&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\">&lt;img :src=&quot;imgSrc&quot; alt=&quot;&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-1-6-实例：tab切换【v-show-或-v-if】\"><a href=\"#3-1-6-实例：tab切换【v-show-或-v-if】\" class=\"headerlink\" title=\"3.1.6 实例：tab切换【v-show 或 v-if】\"></a>3.1.6 实例：tab切换【v-show 或 v-if】</h3><p>快捷生成标签：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210117155449125.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210117155505200.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210117160113765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>或<br><img src=\"https://img-blog.csdnimg.cn/20210117160332375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"4-注意事项\"><a href=\"#4-注意事项\" class=\"headerlink\" title=\"4. 注意事项\"></a>4. 注意事项</h2><h3 id=\"4-1-取用Vue对象中的值\"><a href=\"#4-1-取用Vue对象中的值\" class=\"headerlink\" title=\"4.1 取用Vue对象中的值\"></a>4.1 取用Vue对象中的值</h3><p> 取用 Vue对象中的内容【设 vm为 Vue对象的名字】： <code>vm.$变量名</code><br><img src=\"https://img-blog.csdnimg.cn/20210117173258973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-2-watch-监听-指定属性-的属性值的变化\"><a href=\"#4-2-watch-监听-指定属性-的属性值的变化\" class=\"headerlink\" title=\"4.2 .$watch:监听 指定属性 的属性值的变化\"></a>4.2 <code>.$watch</code>:监听 指定属性 的属性值的变化</h3><p>第一种方式【Vue对象外】：<br><code>vm.$watch(&quot;属性名&quot;,function(新值，旧值)&#123; &#125;  )</code></p>\n<p>第二种方式【Vue对象内】：<br><img src=\"https://img-blog.csdnimg.cn/20210118163855925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-3-Vue的生命周期\"><a href=\"#4-3-Vue的生命周期\" class=\"headerlink\" title=\"4.3 Vue的生命周期\"></a>4.3 Vue的生命周期</h3><h4 id=\"4-3-1-beforeCreate事件\"><a href=\"#4-3-1-beforeCreate事件\" class=\"headerlink\" title=\"4.3.1 beforeCreate事件\"></a>4.3.1 beforeCreate事件</h4><p>beforeCreate事件在new 完 Vue对象后马上触发，是第一个触发的事件【此时还没有事件的监听，即：<code>初始化之后，数据监听前（还没有数据）</code>】<br><img src=\"https://img-blog.csdnimg.cn/20210117182607184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"4-3-2-created事件【重要：绑定数据】\"><a href=\"#4-3-2-created事件【重要：绑定数据】\" class=\"headerlink\" title=\"4.3.2 created事件【重要：绑定数据】\"></a>4.3.2 created事件【重要：绑定数据】</h4><p>在 beforeCreate事件之后，dom元素之前【此时还没有事件的监听，即：<code>初始化之后，数据监听后（有数据了）</code>】，ajax赋值要在这个阶段之后</p>\n<h4 id=\"4-3-3-beforeMount-事件\"><a href=\"#4-3-3-beforeMount-事件\" class=\"headerlink\" title=\"4.3.3 beforeMount 事件\"></a>4.3.3 beforeMount 事件</h4><p> beforeMount 事件：在dom元素产生之后，渲染之前触发，【即：有{{ }}且还没有处理{{ }}的阶段】</p>\n<h4 id=\"4-3-4-mounted-事件【重要：绑定dom元素】\"><a href=\"#4-3-4-mounted-事件【重要：绑定dom元素】\" class=\"headerlink\" title=\"4.3.4 mounted 事件【重要：绑定dom元素】\"></a>4.3.4 mounted 事件【重要：绑定dom元素】</h4><p>mounted 事件：在dom元素渲染之后触发，【此时，已经可以识别元素】</p>\n<h4 id=\"4-3-5-beforeUpdate-事件\"><a href=\"#4-3-5-beforeUpdate-事件\" class=\"headerlink\" title=\"4.3.5 beforeUpdate 事件\"></a>4.3.5 beforeUpdate 事件</h4><p>beforeUpdate 事件：在监听阶段（即：vm.$watch(属性名，function(){})），如果属性发生变化，则在渲染之前触发该事件</p>\n<h4 id=\"4-3-6-updated-事件【重要：修改属性之后】\"><a href=\"#4-3-6-updated-事件【重要：修改属性之后】\" class=\"headerlink\" title=\"4.3.6 updated 事件【重要：修改属性之后】\"></a>4.3.6 updated 事件【重要：修改属性之后】</h4><p>updated 事件：在监听阶段，如果属性发生变化，则在渲染之后触发该事件</p>\n<h4 id=\"4-3-7-beforeDestroy-事件\"><a href=\"#4-3-7-beforeDestroy-事件\" class=\"headerlink\" title=\"4.3.7 beforeDestroy 事件\"></a>4.3.7 beforeDestroy 事件</h4><p>beforeDestroy 事件:销毁之前触发</p>\n<h4 id=\"4-3-8-Destroyed-事件\"><a href=\"#4-3-8-Destroyed-事件\" class=\"headerlink\" title=\"4.3.8 Destroyed 事件\"></a>4.3.8 Destroyed 事件</h4><p>beforeDestroy 事件:销毁之后触发</p>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"Vue入门-01\"><a href=\"#Vue入门-01\" class=\"headerlink\" title=\"Vue入门-01\"></a>Vue入门-01</h1><p>[toc]</p>\n<h2 id=\"1-Vue-的介绍\"><a href=\"#1-Vue-的介绍\" class=\"headerlink\" title=\"1. Vue 的介绍\"></a>1. Vue 的介绍</h2><p><code>https://cn.vuejs.org/v2/guide/</code><br><a href=\"https://cn.vuejs.org/v2/guide/\">Vue官网教程</a><br><img src=\"https://img-blog.csdnimg.cn/20210117122819956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-1-安装\"><a href=\"#1-1-安装\" class=\"headerlink\" title=\"1.1 安装\"></a>1.1 安装</h3><h4 id=\"1-1-1-使用CDN【不用安装，但需要联网】\"><a href=\"#1-1-1-使用CDN【不用安装，但需要联网】\" class=\"headerlink\" title=\"1.1.1 使用CDN【不用安装，但需要联网】\"></a>1.1.1 使用CDN【不用安装，但需要联网】</h4><p>开发环境：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span><br><span class=\"line\">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>生产环境：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span><br><span class=\"line\">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-1-2-使用npm包管理器安装【不推荐新手】\"><a href=\"#1-1-2-使用npm包管理器安装【不推荐新手】\" class=\"headerlink\" title=\"1.1.2 使用npm包管理器安装【不推荐新手】\"></a>1.1.2 使用npm包管理器安装【不推荐新手】</h4><h3 id=\"1-2-Vue必备步骤\"><a href=\"#1-2-Vue必备步骤\" class=\"headerlink\" title=\"1.2 Vue必备步骤\"></a>1.2 Vue必备步骤</h3><p><img src=\"https://img-blog.csdnimg.cn/20210117124822974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>Vue 以数据驱动的【即：根据数据来改变】</li>\n<li>Vue 的指令：<ul>\n<li>与 <code>标签属性相关</code>：使用 <code>:</code>   =》 <code>v-bind:src=&quot;key名&quot;</code></li>\n<li>与 <code>标签属性无关</code>：使用 <code>=</code>  =》  <code>v-if=&quot;false&quot;</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-3-Vue-绑定数据\"><a href=\"#1-3-Vue-绑定数据\" class=\"headerlink\" title=\"1.3 Vue 绑定数据\"></a>1.3 Vue 绑定数据</h3><ul>\n<li>单向绑定【适用于 普通的标签】:  <code>Vue =渲染到=》HTML</code></li>\n<li>双向绑定【适用于 表单标签】： <code>Html的内容变，则Vue中也变；Vue内变，则Html中也变</code></li>\n</ul>\n<p>单项绑定-实例：<br><img src=\"https://img-blog.csdnimg.cn/20210117125749164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>双项绑定-实例：<br><img src=\"https://img-blog.csdnimg.cn/20210117130609985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-4-Vue-绑定属性\"><a href=\"#1-4-Vue-绑定属性\" class=\"headerlink\" title=\"1.4 Vue 绑定属性\"></a>1.4 Vue 绑定属性</h3><p><code>v-bind:属性名=“Vue中的变量”</code><br>例如：<br><img src=\"https://img-blog.csdnimg.cn/20210117131910842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-5-Vue-显示-隐藏\"><a href=\"#1-5-Vue-显示-隐藏\" class=\"headerlink\" title=\"1.5 Vue 显示+隐藏\"></a>1.5 Vue 显示+隐藏</h3><p>不显示内容：【将条件置为false】</p>\n<ul>\n<li>使用 <code>v-if</code>： 完全不渲染【连标签都没有】</li>\n<li>使用 <code>v-show</code>：渲染，但利用 CSS    中的 <code>display:none;</code> 来隐藏</li>\n</ul>\n<p><code>v-if=&quot;布尔值&quot;</code>实例：<br><img src=\"https://img-blog.csdnimg.cn/2021011713293566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><code>v-show=“布尔值”</code>实例：<br><img src=\"https://img-blog.csdnimg.cn/20210117132536937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-6-Vue-循环\"><a href=\"#1-6-Vue-循环\" class=\"headerlink\" title=\"1.6 Vue 循环\"></a>1.6 Vue 循环</h3><p><code>v-for=“变量名 in 可遍历的对象”</code></p>\n<p><code>v-for</code>指令实例：<br><img src=\"https://img-blog.csdnimg.cn/20210117133639478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-7-Vue-绑定事件\"><a href=\"#1-7-Vue-绑定事件\" class=\"headerlink\" title=\"1.7 Vue 绑定事件\"></a>1.7 Vue 绑定事件</h3><p><code> v-on:click</code><br><img src=\"https://img-blog.csdnimg.cn/20210117134420764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-8-实例-1-：输入文本，查看预览效果\"><a href=\"#1-8-实例-1-：输入文本，查看预览效果\" class=\"headerlink\" title=\"1.8 实例-1 ：输入文本，查看预览效果\"></a>1.8 实例-1 ：输入文本，查看预览效果</h3><p><img src=\"https://img-blog.csdnimg.cn/20210117140218529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-9-实例-2-：勾选复选框-显示图片\"><a href=\"#1-9-实例-2-：勾选复选框-显示图片\" class=\"headerlink\" title=\"1.9 实例-2 ：勾选复选框-显示图片\"></a>1.9 实例-2 ：勾选复选框-显示图片</h3><p><img src=\"https://img-blog.csdnimg.cn/20210117141728671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-10-实例-3-：博客发布-简易版\"><a href=\"#1-10-实例-3-：博客发布-简易版\" class=\"headerlink\" title=\"1.10 实例-3 ：博客发布-简易版\"></a>1.10 实例-3 ：博客发布-简易版</h3><p><img src=\"https://img-blog.csdnimg.cn/20210117144208281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210117144242331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-1-组件-自定义组件\"><a href=\"#2-1-组件-自定义组件\" class=\"headerlink\" title=\"2.1 组件(自定义组件)\"></a>2.1 组件(自定义组件)</h2><p>定义组件名时：使用 驼峰法 或 - 法<br>使用组件时，用 - 法<br>组件的属性在定义时要有双引号<kbd> \"  \"</kbd><br>组件的data的<strong>冒号后</strong>只能跟函数【函数的返回值可以是对象】，这点要与Vue对象区分开，且组件不能有el 键【这也与Vue对象不同】<br><img src=\"https://img-blog.csdnimg.cn/2021011715054395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-2-1-自定义组件-实例：\"><a href=\"#2-2-1-自定义组件-实例：\" class=\"headerlink\" title=\"2.2.1 自定义组件-实例：\"></a>2.2.1 自定义组件-实例：</h3><p><img src=\"https://img-blog.csdnimg.cn/20210117151523122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-1-常用指令\"><a href=\"#3-1-常用指令\" class=\"headerlink\" title=\"3.1 常用指令\"></a>3.1 常用指令</h2><blockquote>\n<p>v-show： 显示、隐藏=》display:none;<br>v-if：显示、隐藏=》不渲染<br>v-else<br>v-else-if</p>\n</blockquote>\n<blockquote>\n<p>v-text：插入vue的data中的值，相当于{{ }}<br>v-html ：可以插入html代码</p>\n</blockquote>\n<blockquote>\n<p>v-bind：绑定属性<br>v-model：双向绑定数据<br>v-on：绑定事件，结合vue中的 `methods：{ 事件名：function(){ } } `来使用</p>\n</blockquote>\n<blockquote>\n<p>v-for：循环</p>\n</blockquote>\n<h3 id=\"3-1-1-v-text-和\"><a href=\"#3-1-1-v-text-和\" class=\"headerlink\" title=\"3.1.1 v-text 和 \"></a>3.1.1 v-text 和  {{ }} </h3><ul>\n<li><code>v-text</code>  : 等价于 {{ }}  ，当输出的内容为html代码时，{{}}原样输出，\n而`v-html`会根据输出内容渲染\n例如：\n【以下两条指令等价，但  {{}}   在js加载缓慢时可能为显示出来】</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;&#123;% raw %&#125; &#123;&#123; msg &#125;&#125; &#123;% endraw %&#125;&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p v-text=&quot;msg&quot;&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210117153705654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n  为避免{{ }} 插值时  ，因为加载速度慢而渲染出 大括号，可使用`v-cloak`来避免出现大括号\n<p>【使用 <code>v-cloak</code>的前提是 在<code>&lt;style&gt; [v-cloak]&#123;display:none;&#125;&lt;/style&gt;</code>,然后在有 {{ }}  的标签中<code>v-cloak</code>】  </p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210117172433827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-1-2-v-for\"><a href=\"#3-1-2-v-for\" class=\"headerlink\" title=\"3.1.2 v-for\"></a>3.1.2 v-for</h3><p><img src=\"https://img-blog.csdnimg.cn/20210117161917689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-1-3-v-on\"><a href=\"#3-1-3-v-on\" class=\"headerlink\" title=\"3.1.3 v-on\"></a>3.1.3 v-on</h3><p><code>v-on</code>  等价于  <code>@</code></p>\n<p>例如【以下二者等价】：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button v-on:click=&quot;alertMsg&quot;&gt;点击1&lt;/button&gt;</span><br><span class=\"line\">           </span><br><span class=\"line\">&lt;button @click=&quot;alertMsg&quot;&gt;点击2&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/2021011716304391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><code>冒泡事件</code>：内层元素触发事件后，外层元素也会触发事件<br>例如：<br><img src=\"https://img-blog.csdnimg.cn/20210117165840328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>冒泡事件：<code>@click=&quot;helloMsg&quot;</code> </li>\n<li>停止冒泡事件<code>事件.stop</code>：<code>v-on:click.stop=&quot;helloMsg&quot;</code> 即：<code>@click.stop=&quot;helloMsg&quot;</code> </li>\n<li>鼠标事件【只有mousedown 事件才触发】：<ul>\n<li><code>@mousedown.left=&quot;helloMsg&quot;</code>  ：鼠标左键</li>\n<li> <code>@mousedown.right=&quot;helloMsg&quot;</code>：鼠标右键</li>\n<li><code>@mousedown.middle=&quot;helloMsg&quot;</code>：鼠标滚轮 </li>\n</ul>\n</li>\n<li>键盘事件【键盘按下某个键时才触发，键盘码 / ctrl / shift 等】：</li>\n<li><code>@keydown.enter=&quot;hellMsg&quot;</code>：键盘按下回车</li>\n</ul>\n<h3 id=\"3-1-4-v-bind\"><a href=\"#3-1-4-v-bind\" class=\"headerlink\" title=\"3.1.4 v-bind\"></a>3.1.4 v-bind</h3><p><code>v-bind:</code> 绑定属性：  等价于 直接 <code>：</code><br>例如【以下二者等价】：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img v-bind:src=&quot;imgSrc&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\">&lt;img :src=&quot;imgSrc&quot; alt=&quot;&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-1-6-实例：tab切换【v-show-或-v-if】\"><a href=\"#3-1-6-实例：tab切换【v-show-或-v-if】\" class=\"headerlink\" title=\"3.1.6 实例：tab切换【v-show 或 v-if】\"></a>3.1.6 实例：tab切换【v-show 或 v-if】</h3><p>快捷生成标签：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210117155449125.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210117155505200.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210117160113765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>或<br><img src=\"https://img-blog.csdnimg.cn/20210117160332375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"4-注意事项\"><a href=\"#4-注意事项\" class=\"headerlink\" title=\"4. 注意事项\"></a>4. 注意事项</h2><h3 id=\"4-1-取用Vue对象中的值\"><a href=\"#4-1-取用Vue对象中的值\" class=\"headerlink\" title=\"4.1 取用Vue对象中的值\"></a>4.1 取用Vue对象中的值</h3><p> 取用 Vue对象中的内容【设 vm为 Vue对象的名字】： <code>vm.$变量名</code><br><img src=\"https://img-blog.csdnimg.cn/20210117173258973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-2-watch-监听-指定属性-的属性值的变化\"><a href=\"#4-2-watch-监听-指定属性-的属性值的变化\" class=\"headerlink\" title=\"4.2 .$watch:监听 指定属性 的属性值的变化\"></a>4.2 <code>.$watch</code>:监听 指定属性 的属性值的变化</h3><p>第一种方式【Vue对象外】：<br><code>vm.$watch(&quot;属性名&quot;,function(新值，旧值)&#123; &#125;  )</code></p>\n<p>第二种方式【Vue对象内】：<br><img src=\"https://img-blog.csdnimg.cn/20210118163855925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-3-Vue的生命周期\"><a href=\"#4-3-Vue的生命周期\" class=\"headerlink\" title=\"4.3 Vue的生命周期\"></a>4.3 Vue的生命周期</h3><h4 id=\"4-3-1-beforeCreate事件\"><a href=\"#4-3-1-beforeCreate事件\" class=\"headerlink\" title=\"4.3.1 beforeCreate事件\"></a>4.3.1 beforeCreate事件</h4><p>beforeCreate事件在new 完 Vue对象后马上触发，是第一个触发的事件【此时还没有事件的监听，即：<code>初始化之后，数据监听前（还没有数据）</code>】<br><img src=\"https://img-blog.csdnimg.cn/20210117182607184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"4-3-2-created事件【重要：绑定数据】\"><a href=\"#4-3-2-created事件【重要：绑定数据】\" class=\"headerlink\" title=\"4.3.2 created事件【重要：绑定数据】\"></a>4.3.2 created事件【重要：绑定数据】</h4><p>在 beforeCreate事件之后，dom元素之前【此时还没有事件的监听，即：<code>初始化之后，数据监听后（有数据了）</code>】，ajax赋值要在这个阶段之后</p>\n<h4 id=\"4-3-3-beforeMount-事件\"><a href=\"#4-3-3-beforeMount-事件\" class=\"headerlink\" title=\"4.3.3 beforeMount 事件\"></a>4.3.3 beforeMount 事件</h4><p> beforeMount 事件：在dom元素产生之后，渲染之前触发，【即：有{{ }}且还没有处理{{ }}的阶段】</p>\n<h4 id=\"4-3-4-mounted-事件【重要：绑定dom元素】\"><a href=\"#4-3-4-mounted-事件【重要：绑定dom元素】\" class=\"headerlink\" title=\"4.3.4 mounted 事件【重要：绑定dom元素】\"></a>4.3.4 mounted 事件【重要：绑定dom元素】</h4><p>mounted 事件：在dom元素渲染之后触发，【此时，已经可以识别元素】</p>\n<h4 id=\"4-3-5-beforeUpdate-事件\"><a href=\"#4-3-5-beforeUpdate-事件\" class=\"headerlink\" title=\"4.3.5 beforeUpdate 事件\"></a>4.3.5 beforeUpdate 事件</h4><p>beforeUpdate 事件：在监听阶段（即：vm.$watch(属性名，function(){})），如果属性发生变化，则在渲染之前触发该事件</p>\n<h4 id=\"4-3-6-updated-事件【重要：修改属性之后】\"><a href=\"#4-3-6-updated-事件【重要：修改属性之后】\" class=\"headerlink\" title=\"4.3.6 updated 事件【重要：修改属性之后】\"></a>4.3.6 updated 事件【重要：修改属性之后】</h4><p>updated 事件：在监听阶段，如果属性发生变化，则在渲染之后触发该事件</p>\n<h4 id=\"4-3-7-beforeDestroy-事件\"><a href=\"#4-3-7-beforeDestroy-事件\" class=\"headerlink\" title=\"4.3.7 beforeDestroy 事件\"></a>4.3.7 beforeDestroy 事件</h4><p>beforeDestroy 事件:销毁之前触发</p>\n<h4 id=\"4-3-8-Destroyed-事件\"><a href=\"#4-3-8-Destroyed-事件\" class=\"headerlink\" title=\"4.3.8 Destroyed 事件\"></a>4.3.8 Destroyed 事件</h4><p>beforeDestroy 事件:销毁之后触发</p>\n"},{"title":"Vue 入门-03","_content":"\n# Vue入门-03\n\n[toc]\n\n## 1.1 Vue cli 安装\n\n1. 官网下载+安装 node.js：[node官网下载](http://nodejs.cn/download/)\n2. 配置 node.js 的 镜像源：`npm install -g cnpm --registry=https://registry.npm.taobao.org`\n3. 安装 vue:`npm install @vue/cli -g`\n4. 使用cmd进入项目目录输入 vue ui 管理项目【不要关闭cmd】：`vue ui`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121093747655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121093904458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121094019976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121094221635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121094411293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121094544103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121094611966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121095832299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121095919324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n最终的目录下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121100242313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n展开 src目录：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121100537873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121100556258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121101042308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121101228593.png)\n## 1.2 Vue 组件\n组件的其他笔记可参见  [vue笔记01](https://blog.csdn.net/m0_46578592/article/details/112737312)\n\n 组件的两种方式：\n1. 方式1【内部】：在script标签内\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021012111022074.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n2. 方式2【单独在外部写成1个文件】：`App.Vue`文件\nApp.vue最终会挂载到 HTML中\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121110724470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121111817442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 组件的使用步骤\n- 定义组件\n- App.vue 文件【相当于Vue对象】 中 手动引入 (`import`)自定义的组件文件【相当于 组件】\n- 在App.vue模板中使用组件，编写事件\n- 自动挂载到 Html\n- \n### 1.2.1 创建组件并引入【外部组件】：\n1.创建外部的组件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121122353996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n2. App.vue中导入刚才创建的组件：\n\n【@符号表示：根目录，此例中为App.vue所在的src目录】\n此例中，`demo1` 表示 `demo.vue整个文件`，`Demo`才是`真正的名字`\n将 `demo1` 放到对象 `components` 对象内的过程就是`注册组件`【此时组件才可以使用】\n【注册时，如果组件的 **调用名字** 和 **导出名字**  一模**一样**，则可直接省略`名字:名字`中的冒号及之后的名字来简写】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121124527572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 1.2.1.1 实例1 组件使用时 传值给自定义的属性：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121130542732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021012113062640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n组件定义时的类型检查：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121133534888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n自定义的属性 在定义时常用：\n- type: 参见上图\n- require: true/false\n- default: 默认值\n#### 1.2.1.2 实例2 【输入标题和内容，输出组件】：\n组件定义：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121132616948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n#### 1.2.1.3 实例3 【给自创的组件 定义事件】：\n在 组件定义 的时候 在 methods键 后的对象内定义1个函数，函数内绑定 自定义的`事件名`和`要返回的数据`，在`App.vue`文件中定义事件【该**事件作为参数** 传给 组件的事件（即：回调函数的语法）】，\n\n### 1.2.2 组件的内容 : slot标签\n在定义时，用 `<slot>  </slot>`作为 组件内容的占位符，当组件使用时，就会用 组件 包裹的部分来替换掉 slot 标签\n\n## 1.3 Vue 路由\nVue路由用到了组件，下图中 组件 router-view 相当于是 1个小页面，当点击router-link时，router-view 中的内容就会根据组件的内容改变【相当于 frame】\n\n[vue路由-官网](https://router.vuejs.org/zh/guide/#html)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210119131025839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n组件调用：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121132924901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 1.3.1 Vue 路由-前置知识实例：\n目标页面：【变化部分为 .container】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121155547745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 1.3.1.1 组件的 css 样式\n3种：\n- 默认【样式重名时，样式会污染出去】：`<style>       </style>`\n- scoped【样式只在定义的文件中有效】: `<style scoped>      </style>`\n\n#### 1.3.1.2 left组件\nrouter-view 跟着 router-link 变化\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121164057933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121164906518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n上图中，\npath就是地址栏的变化，\n`/about` 最后导入的组件显示在 router-view 中\n\n\n实例1：【 **left中 的点击 router-link**  使    **container 中的 router-view 变化**】\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121170344391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121170532683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121170714448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 基本路由的大致步骤小结\n【在默认的情况下，点击链接所在的组件，让router-view变化】：\n- 定义组件\n- 在App.vue中定义router-view\n- 在某个组件中定义router-link，且router-link标签的 to 属性绑定 地址\n- 在 views 目录下 定义组件，由于点击链接后显示\n- 在 router/index 中 绑定 地址栏的变化 与 导入组件的关系【注册路由】\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121172438231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.3.2 动态路由【地址栏传参数】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121175810568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121180036456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\nHTML中如果需要获取地址栏的参数：` {%raw%}{{ $route.params.参数名}} {%endraw%}`\nJS 中使用地址栏的参数：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121191630300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n实例1：\n- 目标：点击 left中的“博客” =》 右侧出现 博客的title,点击title,跳转到显示pid的界面【pid为地址栏中的博客id】\n- 主要 需修改 的文件：\n\t-  left.vue组件\n\t-  路由【包括：左侧导航栏的路由，博文列表中每1项的路由】\n\t-  Articels.vue组件: 存放博文列表\n\t- article.vue：博文内容\n\nleft.vue组件：点击后显示博客的标题列表\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121190127215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121190229322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121190401380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121190544132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121191840694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n1. 在 函数中使用 地址栏中的参数-实例：\n`this.$route.params.地址栏参数名`\n【假设 data 是 ajax 获取的数据集，根据地址栏的参数id 来匹配 data中的每一项，将不符合条件的过滤掉，最后取 过滤后的数组的第1项 来显示】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121192834676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 子组件向父组件传值：\n- 子组件 先 绑定**方法**\n- 子组件的方法中 再 绑定**事件**：`$emit(\"小写的事件名\"，this.$data)`\n- 父组件 的方法的参数名为data, \n- 父组件使用子组件时，将父组件中的**方法** => **传入** 子组件的**事件**中\n\n### 组件嵌套的路由\n要使用路由一般要有以下条件：\n- 路由注册【path，要导入的组件】:最重要\n- route-view\n- route-link\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121200043973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.4 命名路由\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121202032986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n在 js 的方法中中可使用【name需要params；path需要拼接】：\n-  `this.$router.push(地址)`  \n-  `this.$router.push({path:\"地址\",query:{参数名：参数值，参数名：参数值}})`\n-  `this.$router.push({name:\"路由名\"})`\n- `this.$router.push({name:\"路由名\",params:{参数名：参数值，参数名：参数值}})`\n\n###  1.5 去掉使用路由时，地址栏上的#号\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021012120374382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121204319530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n","source":"_posts/Vue入门-03-组件(部分)+vue路由.md","raw":"---\ntitle: Vue 入门-03\ntag: Vue\ncategories:\n  - 前端\n  - Vue\n---\n\n# Vue入门-03\n\n[toc]\n\n## 1.1 Vue cli 安装\n\n1. 官网下载+安装 node.js：[node官网下载](http://nodejs.cn/download/)\n2. 配置 node.js 的 镜像源：`npm install -g cnpm --registry=https://registry.npm.taobao.org`\n3. 安装 vue:`npm install @vue/cli -g`\n4. 使用cmd进入项目目录输入 vue ui 管理项目【不要关闭cmd】：`vue ui`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121093747655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121093904458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121094019976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121094221635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121094411293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121094544103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121094611966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121095832299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121095919324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n最终的目录下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121100242313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n展开 src目录：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121100537873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121100556258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121101042308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121101228593.png)\n## 1.2 Vue 组件\n组件的其他笔记可参见  [vue笔记01](https://blog.csdn.net/m0_46578592/article/details/112737312)\n\n 组件的两种方式：\n1. 方式1【内部】：在script标签内\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021012111022074.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n2. 方式2【单独在外部写成1个文件】：`App.Vue`文件\nApp.vue最终会挂载到 HTML中\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121110724470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121111817442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 组件的使用步骤\n- 定义组件\n- App.vue 文件【相当于Vue对象】 中 手动引入 (`import`)自定义的组件文件【相当于 组件】\n- 在App.vue模板中使用组件，编写事件\n- 自动挂载到 Html\n- \n### 1.2.1 创建组件并引入【外部组件】：\n1.创建外部的组件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121122353996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n2. App.vue中导入刚才创建的组件：\n\n【@符号表示：根目录，此例中为App.vue所在的src目录】\n此例中，`demo1` 表示 `demo.vue整个文件`，`Demo`才是`真正的名字`\n将 `demo1` 放到对象 `components` 对象内的过程就是`注册组件`【此时组件才可以使用】\n【注册时，如果组件的 **调用名字** 和 **导出名字**  一模**一样**，则可直接省略`名字:名字`中的冒号及之后的名字来简写】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121124527572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 1.2.1.1 实例1 组件使用时 传值给自定义的属性：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121130542732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021012113062640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n组件定义时的类型检查：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121133534888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n自定义的属性 在定义时常用：\n- type: 参见上图\n- require: true/false\n- default: 默认值\n#### 1.2.1.2 实例2 【输入标题和内容，输出组件】：\n组件定义：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121132616948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n#### 1.2.1.3 实例3 【给自创的组件 定义事件】：\n在 组件定义 的时候 在 methods键 后的对象内定义1个函数，函数内绑定 自定义的`事件名`和`要返回的数据`，在`App.vue`文件中定义事件【该**事件作为参数** 传给 组件的事件（即：回调函数的语法）】，\n\n### 1.2.2 组件的内容 : slot标签\n在定义时，用 `<slot>  </slot>`作为 组件内容的占位符，当组件使用时，就会用 组件 包裹的部分来替换掉 slot 标签\n\n## 1.3 Vue 路由\nVue路由用到了组件，下图中 组件 router-view 相当于是 1个小页面，当点击router-link时，router-view 中的内容就会根据组件的内容改变【相当于 frame】\n\n[vue路由-官网](https://router.vuejs.org/zh/guide/#html)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210119131025839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n组件调用：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121132924901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 1.3.1 Vue 路由-前置知识实例：\n目标页面：【变化部分为 .container】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121155547745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 1.3.1.1 组件的 css 样式\n3种：\n- 默认【样式重名时，样式会污染出去】：`<style>       </style>`\n- scoped【样式只在定义的文件中有效】: `<style scoped>      </style>`\n\n#### 1.3.1.2 left组件\nrouter-view 跟着 router-link 变化\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121164057933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121164906518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n上图中，\npath就是地址栏的变化，\n`/about` 最后导入的组件显示在 router-view 中\n\n\n实例1：【 **left中 的点击 router-link**  使    **container 中的 router-view 变化**】\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121170344391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121170532683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121170714448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 基本路由的大致步骤小结\n【在默认的情况下，点击链接所在的组件，让router-view变化】：\n- 定义组件\n- 在App.vue中定义router-view\n- 在某个组件中定义router-link，且router-link标签的 to 属性绑定 地址\n- 在 views 目录下 定义组件，由于点击链接后显示\n- 在 router/index 中 绑定 地址栏的变化 与 导入组件的关系【注册路由】\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121172438231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.3.2 动态路由【地址栏传参数】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121175810568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121180036456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\nHTML中如果需要获取地址栏的参数：` {%raw%}{{ $route.params.参数名}} {%endraw%}`\nJS 中使用地址栏的参数：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121191630300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n实例1：\n- 目标：点击 left中的“博客” =》 右侧出现 博客的title,点击title,跳转到显示pid的界面【pid为地址栏中的博客id】\n- 主要 需修改 的文件：\n\t-  left.vue组件\n\t-  路由【包括：左侧导航栏的路由，博文列表中每1项的路由】\n\t-  Articels.vue组件: 存放博文列表\n\t- article.vue：博文内容\n\nleft.vue组件：点击后显示博客的标题列表\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121190127215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121190229322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121190401380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121190544132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121191840694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n1. 在 函数中使用 地址栏中的参数-实例：\n`this.$route.params.地址栏参数名`\n【假设 data 是 ajax 获取的数据集，根据地址栏的参数id 来匹配 data中的每一项，将不符合条件的过滤掉，最后取 过滤后的数组的第1项 来显示】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121192834676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 子组件向父组件传值：\n- 子组件 先 绑定**方法**\n- 子组件的方法中 再 绑定**事件**：`$emit(\"小写的事件名\"，this.$data)`\n- 父组件 的方法的参数名为data, \n- 父组件使用子组件时，将父组件中的**方法** => **传入** 子组件的**事件**中\n\n### 组件嵌套的路由\n要使用路由一般要有以下条件：\n- 路由注册【path，要导入的组件】:最重要\n- route-view\n- route-link\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121200043973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.4 命名路由\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121202032986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n在 js 的方法中中可使用【name需要params；path需要拼接】：\n-  `this.$router.push(地址)`  \n-  `this.$router.push({path:\"地址\",query:{参数名：参数值，参数名：参数值}})`\n-  `this.$router.push({name:\"路由名\"})`\n- `this.$router.push({name:\"路由名\",params:{参数名：参数值，参数名：参数值}})`\n\n###  1.5 去掉使用路由时，地址栏上的#号\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021012120374382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210121204319530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n","slug":"Vue入门-03-组件(部分)+vue路由","published":1,"date":"2021-06-02T02:49:19.183Z","updated":"2021-06-01T07:36:09.377Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs1f000wlcvdf3l6ezoh","content":"<h1 id=\"Vue入门-03\"><a href=\"#Vue入门-03\" class=\"headerlink\" title=\"Vue入门-03\"></a>Vue入门-03</h1><p>[toc]</p>\n<h2 id=\"1-1-Vue-cli-安装\"><a href=\"#1-1-Vue-cli-安装\" class=\"headerlink\" title=\"1.1 Vue cli 安装\"></a>1.1 Vue cli 安装</h2><ol>\n<li>官网下载+安装 node.js：<a href=\"http://nodejs.cn/download/\">node官网下载</a></li>\n<li>配置 node.js 的 镜像源：<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></li>\n<li>安装 vue:<code>npm install @vue/cli -g</code></li>\n<li>使用cmd进入项目目录输入 vue ui 管理项目【不要关闭cmd】：<code>vue ui</code><br><img src=\"https://img-blog.csdnimg.cn/20210121093747655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121093904458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121094019976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121094221635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121094411293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121094544103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121094611966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121095832299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121095919324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>最终的目录下：<br><img src=\"https://img-blog.csdnimg.cn/20210121100242313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>展开 src目录：<br><img src=\"https://img-blog.csdnimg.cn/20210121100537873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121100556258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121101042308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121101228593.png\" alt=\"在这里插入图片描述\"><h2 id=\"1-2-Vue-组件\"><a href=\"#1-2-Vue-组件\" class=\"headerlink\" title=\"1.2 Vue 组件\"></a>1.2 Vue 组件</h2>组件的其他笔记可参见  <a href=\"https://blog.csdn.net/m0_46578592/article/details/112737312\">vue笔记01</a></li>\n</ol>\n<p> 组件的两种方式：</p>\n<ol>\n<li>方式1【内部】：在script标签内<br><img src=\"https://img-blog.csdnimg.cn/2021012111022074.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>方式2【单独在外部写成1个文件】：<code>App.Vue</code>文件<br>App.vue最终会挂载到 HTML中<br><img src=\"https://img-blog.csdnimg.cn/20210121110724470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121111817442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><h2 id=\"组件的使用步骤\"><a href=\"#组件的使用步骤\" class=\"headerlink\" title=\"组件的使用步骤\"></a>组件的使用步骤</h2></li>\n</ol>\n<ul>\n<li>定义组件</li>\n<li>App.vue 文件【相当于Vue对象】 中 手动引入 (<code>import</code>)自定义的组件文件【相当于 组件】</li>\n<li>在App.vue模板中使用组件，编写事件</li>\n<li>自动挂载到 Html</li>\n<li><h3 id=\"1-2-1-创建组件并引入【外部组件】：\"><a href=\"#1-2-1-创建组件并引入【外部组件】：\" class=\"headerlink\" title=\"1.2.1 创建组件并引入【外部组件】：\"></a>1.2.1 创建组件并引入【外部组件】：</h3></li>\n</ul>\n<p>1.创建外部的组件<br><img src=\"https://img-blog.csdnimg.cn/20210121122353996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>2. App.vue中导入刚才创建的组件：</p>\n<p>【@符号表示：根目录，此例中为App.vue所在的src目录】<br>此例中，<code>demo1</code> 表示 <code>demo.vue整个文件</code>，<code>Demo</code>才是<code>真正的名字</code><br>将 <code>demo1</code> 放到对象 <code>components</code> 对象内的过程就是<code>注册组件</code>【此时组件才可以使用】<br>【注册时，如果组件的 <strong>调用名字</strong> 和 <strong>导出名字</strong>  一模<strong>一样</strong>，则可直接省略<code>名字:名字</code>中的冒号及之后的名字来简写】<br><img src=\"https://img-blog.csdnimg.cn/20210121124527572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"1-2-1-1-实例1-组件使用时-传值给自定义的属性：\"><a href=\"#1-2-1-1-实例1-组件使用时-传值给自定义的属性：\" class=\"headerlink\" title=\"1.2.1.1 实例1 组件使用时 传值给自定义的属性：\"></a>1.2.1.1 实例1 组件使用时 传值给自定义的属性：</h4><p><img src=\"https://img-blog.csdnimg.cn/20210121130542732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2021012113062640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>组件定义时的类型检查：<br><img src=\"https://img-blog.csdnimg.cn/20210121133534888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>自定义的属性 在定义时常用：</p>\n<ul>\n<li>type: 参见上图</li>\n<li>require: true/false</li>\n<li>default: 默认值<h4 id=\"1-2-1-2-实例2-【输入标题和内容，输出组件】：\"><a href=\"#1-2-1-2-实例2-【输入标题和内容，输出组件】：\" class=\"headerlink\" title=\"1.2.1.2 实例2 【输入标题和内容，输出组件】：\"></a>1.2.1.2 实例2 【输入标题和内容，输出组件】：</h4>组件定义：<br><img src=\"https://img-blog.csdnimg.cn/20210121132616948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<h4 id=\"1-2-1-3-实例3-【给自创的组件-定义事件】：\"><a href=\"#1-2-1-3-实例3-【给自创的组件-定义事件】：\" class=\"headerlink\" title=\"1.2.1.3 实例3 【给自创的组件 定义事件】：\"></a>1.2.1.3 实例3 【给自创的组件 定义事件】：</h4><p>在 组件定义 的时候 在 methods键 后的对象内定义1个函数，函数内绑定 自定义的<code>事件名</code>和<code>要返回的数据</code>，在<code>App.vue</code>文件中定义事件【该<strong>事件作为参数</strong> 传给 组件的事件（即：回调函数的语法）】，</p>\n<h3 id=\"1-2-2-组件的内容-slot标签\"><a href=\"#1-2-2-组件的内容-slot标签\" class=\"headerlink\" title=\"1.2.2 组件的内容 : slot标签\"></a>1.2.2 组件的内容 : slot标签</h3><p>在定义时，用 <code>&lt;slot&gt;  &lt;/slot&gt;</code>作为 组件内容的占位符，当组件使用时，就会用 组件 包裹的部分来替换掉 slot 标签</p>\n<h2 id=\"1-3-Vue-路由\"><a href=\"#1-3-Vue-路由\" class=\"headerlink\" title=\"1.3 Vue 路由\"></a>1.3 Vue 路由</h2><p>Vue路由用到了组件，下图中 组件 router-view 相当于是 1个小页面，当点击router-link时，router-view 中的内容就会根据组件的内容改变【相当于 frame】</p>\n<p><a href=\"https://router.vuejs.org/zh/guide/#html\">vue路由-官网</a><br><img src=\"https://img-blog.csdnimg.cn/20210119131025839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>组件调用：<br><img src=\"https://img-blog.csdnimg.cn/20210121132924901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-3-1-Vue-路由-前置知识实例：\"><a href=\"#1-3-1-Vue-路由-前置知识实例：\" class=\"headerlink\" title=\"1.3.1 Vue 路由-前置知识实例：\"></a>1.3.1 Vue 路由-前置知识实例：</h3><p>目标页面：【变化部分为 .container】<br><img src=\"https://img-blog.csdnimg.cn/20210121155547745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"1-3-1-1-组件的-css-样式\"><a href=\"#1-3-1-1-组件的-css-样式\" class=\"headerlink\" title=\"1.3.1.1 组件的 css 样式\"></a>1.3.1.1 组件的 css 样式</h4><p>3种：</p>\n<ul>\n<li>默认【样式重名时，样式会污染出去】：<code>&lt;style&gt;       &lt;/style&gt;</code></li>\n<li>scoped【样式只在定义的文件中有效】: <code>&lt;style scoped&gt;      &lt;/style&gt;</code></li>\n</ul>\n<h4 id=\"1-3-1-2-left组件\"><a href=\"#1-3-1-2-left组件\" class=\"headerlink\" title=\"1.3.1.2 left组件\"></a>1.3.1.2 left组件</h4><p>router-view 跟着 router-link 变化<br><img src=\"https://img-blog.csdnimg.cn/20210121164057933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121164906518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>上图中，<br>path就是地址栏的变化，<br><code>/about</code> 最后导入的组件显示在 router-view 中</p>\n<p>实例1：【 <strong>left中 的点击 router-link</strong>  使    <strong>container 中的 router-view 变化</strong>】</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210121170344391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121170532683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121170714448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"基本路由的大致步骤小结\"><a href=\"#基本路由的大致步骤小结\" class=\"headerlink\" title=\"基本路由的大致步骤小结\"></a>基本路由的大致步骤小结</h3><p>【在默认的情况下，点击链接所在的组件，让router-view变化】：</p>\n<ul>\n<li>定义组件</li>\n<li>在App.vue中定义router-view</li>\n<li>在某个组件中定义router-link，且router-link标签的 to 属性绑定 地址</li>\n<li>在 views 目录下 定义组件，由于点击链接后显示</li>\n<li>在 router/index 中 绑定 地址栏的变化 与 导入组件的关系【注册路由】</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20210121172438231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-3-2-动态路由【地址栏传参数】\"><a href=\"#1-3-2-动态路由【地址栏传参数】\" class=\"headerlink\" title=\"1.3.2 动态路由【地址栏传参数】\"></a>1.3.2 动态路由【地址栏传参数】</h3><p><img src=\"https://img-blog.csdnimg.cn/20210121175810568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121180036456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>HTML中如果需要获取地址栏的参数：<code> {{ $route.params.参数名}} </code><br>JS 中使用地址栏的参数：<br><img src=\"https://img-blog.csdnimg.cn/20210121191630300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>实例1：</p>\n<ul>\n<li>目标：点击 left中的“博客” =》 右侧出现 博客的title,点击title,跳转到显示pid的界面【pid为地址栏中的博客id】</li>\n<li>主要 需修改 的文件：<ul>\n<li> left.vue组件</li>\n<li> 路由【包括：左侧导航栏的路由，博文列表中每1项的路由】</li>\n<li> Articels.vue组件: 存放博文列表</li>\n<li>article.vue：博文内容</li>\n</ul>\n</li>\n</ul>\n<p>left.vue组件：点击后显示博客的标题列表<br><img src=\"https://img-blog.csdnimg.cn/20210121190127215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121190229322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121190401380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121190544132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121191840694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ol>\n<li>在 函数中使用 地址栏中的参数-实例：<br><code>this.$route.params.地址栏参数名</code><br>【假设 data 是 ajax 获取的数据集，根据地址栏的参数id 来匹配 data中的每一项，将不符合条件的过滤掉，最后取 过滤后的数组的第1项 来显示】<br><img src=\"https://img-blog.csdnimg.cn/20210121192834676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><h3 id=\"子组件向父组件传值：\"><a href=\"#子组件向父组件传值：\" class=\"headerlink\" title=\"子组件向父组件传值：\"></a>子组件向父组件传值：</h3></li>\n</ol>\n<ul>\n<li>子组件 先 绑定<strong>方法</strong></li>\n<li>子组件的方法中 再 绑定<strong>事件</strong>：<code>$emit(&quot;小写的事件名&quot;，this.$data)</code></li>\n<li>父组件 的方法的参数名为data, </li>\n<li>父组件使用子组件时，将父组件中的<strong>方法</strong> =&gt; <strong>传入</strong> 子组件的<strong>事件</strong>中</li>\n</ul>\n<h3 id=\"组件嵌套的路由\"><a href=\"#组件嵌套的路由\" class=\"headerlink\" title=\"组件嵌套的路由\"></a>组件嵌套的路由</h3><p>要使用路由一般要有以下条件：</p>\n<ul>\n<li>路由注册【path，要导入的组件】:最重要</li>\n<li>route-view</li>\n<li>route-link<br><img src=\"https://img-blog.csdnimg.cn/20210121200043973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><h3 id=\"1-4-命名路由\"><a href=\"#1-4-命名路由\" class=\"headerlink\" title=\"1.4 命名路由\"></a>1.4 命名路由</h3><img src=\"https://img-blog.csdnimg.cn/20210121202032986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>在 js 的方法中中可使用【name需要params；path需要拼接】：</li>\n<li> <code>this.$router.push(地址)</code>  </li>\n<li> <code>this.$router.push(&#123;path:&quot;地址&quot;,query:&#123;参数名：参数值，参数名：参数值&#125;&#125;)</code></li>\n<li> <code>this.$router.push(&#123;name:&quot;路由名&quot;&#125;)</code></li>\n<li><code>this.$router.push(&#123;name:&quot;路由名&quot;,params:&#123;参数名：参数值，参数名：参数值&#125;&#125;)</code></li>\n</ul>\n<h3 id=\"1-5-去掉使用路由时，地址栏上的-号\"><a href=\"#1-5-去掉使用路由时，地址栏上的-号\" class=\"headerlink\" title=\"1.5 去掉使用路由时，地址栏上的#号\"></a>1.5 去掉使用路由时，地址栏上的#号</h3><p><img src=\"https://img-blog.csdnimg.cn/2021012120374382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121204319530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"Vue入门-03\"><a href=\"#Vue入门-03\" class=\"headerlink\" title=\"Vue入门-03\"></a>Vue入门-03</h1><p>[toc]</p>\n<h2 id=\"1-1-Vue-cli-安装\"><a href=\"#1-1-Vue-cli-安装\" class=\"headerlink\" title=\"1.1 Vue cli 安装\"></a>1.1 Vue cli 安装</h2><ol>\n<li>官网下载+安装 node.js：<a href=\"http://nodejs.cn/download/\">node官网下载</a></li>\n<li>配置 node.js 的 镜像源：<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></li>\n<li>安装 vue:<code>npm install @vue/cli -g</code></li>\n<li>使用cmd进入项目目录输入 vue ui 管理项目【不要关闭cmd】：<code>vue ui</code><br><img src=\"https://img-blog.csdnimg.cn/20210121093747655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121093904458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121094019976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121094221635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121094411293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121094544103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121094611966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121095832299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121095919324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>最终的目录下：<br><img src=\"https://img-blog.csdnimg.cn/20210121100242313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>展开 src目录：<br><img src=\"https://img-blog.csdnimg.cn/20210121100537873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121100556258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121101042308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121101228593.png\" alt=\"在这里插入图片描述\"><h2 id=\"1-2-Vue-组件\"><a href=\"#1-2-Vue-组件\" class=\"headerlink\" title=\"1.2 Vue 组件\"></a>1.2 Vue 组件</h2>组件的其他笔记可参见  <a href=\"https://blog.csdn.net/m0_46578592/article/details/112737312\">vue笔记01</a></li>\n</ol>\n<p> 组件的两种方式：</p>\n<ol>\n<li>方式1【内部】：在script标签内<br><img src=\"https://img-blog.csdnimg.cn/2021012111022074.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>方式2【单独在外部写成1个文件】：<code>App.Vue</code>文件<br>App.vue最终会挂载到 HTML中<br><img src=\"https://img-blog.csdnimg.cn/20210121110724470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121111817442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><h2 id=\"组件的使用步骤\"><a href=\"#组件的使用步骤\" class=\"headerlink\" title=\"组件的使用步骤\"></a>组件的使用步骤</h2></li>\n</ol>\n<ul>\n<li>定义组件</li>\n<li>App.vue 文件【相当于Vue对象】 中 手动引入 (<code>import</code>)自定义的组件文件【相当于 组件】</li>\n<li>在App.vue模板中使用组件，编写事件</li>\n<li>自动挂载到 Html</li>\n<li><h3 id=\"1-2-1-创建组件并引入【外部组件】：\"><a href=\"#1-2-1-创建组件并引入【外部组件】：\" class=\"headerlink\" title=\"1.2.1 创建组件并引入【外部组件】：\"></a>1.2.1 创建组件并引入【外部组件】：</h3></li>\n</ul>\n<p>1.创建外部的组件<br><img src=\"https://img-blog.csdnimg.cn/20210121122353996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>2. App.vue中导入刚才创建的组件：</p>\n<p>【@符号表示：根目录，此例中为App.vue所在的src目录】<br>此例中，<code>demo1</code> 表示 <code>demo.vue整个文件</code>，<code>Demo</code>才是<code>真正的名字</code><br>将 <code>demo1</code> 放到对象 <code>components</code> 对象内的过程就是<code>注册组件</code>【此时组件才可以使用】<br>【注册时，如果组件的 <strong>调用名字</strong> 和 <strong>导出名字</strong>  一模<strong>一样</strong>，则可直接省略<code>名字:名字</code>中的冒号及之后的名字来简写】<br><img src=\"https://img-blog.csdnimg.cn/20210121124527572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"1-2-1-1-实例1-组件使用时-传值给自定义的属性：\"><a href=\"#1-2-1-1-实例1-组件使用时-传值给自定义的属性：\" class=\"headerlink\" title=\"1.2.1.1 实例1 组件使用时 传值给自定义的属性：\"></a>1.2.1.1 实例1 组件使用时 传值给自定义的属性：</h4><p><img src=\"https://img-blog.csdnimg.cn/20210121130542732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2021012113062640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>组件定义时的类型检查：<br><img src=\"https://img-blog.csdnimg.cn/20210121133534888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>自定义的属性 在定义时常用：</p>\n<ul>\n<li>type: 参见上图</li>\n<li>require: true/false</li>\n<li>default: 默认值<h4 id=\"1-2-1-2-实例2-【输入标题和内容，输出组件】：\"><a href=\"#1-2-1-2-实例2-【输入标题和内容，输出组件】：\" class=\"headerlink\" title=\"1.2.1.2 实例2 【输入标题和内容，输出组件】：\"></a>1.2.1.2 实例2 【输入标题和内容，输出组件】：</h4>组件定义：<br><img src=\"https://img-blog.csdnimg.cn/20210121132616948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<h4 id=\"1-2-1-3-实例3-【给自创的组件-定义事件】：\"><a href=\"#1-2-1-3-实例3-【给自创的组件-定义事件】：\" class=\"headerlink\" title=\"1.2.1.3 实例3 【给自创的组件 定义事件】：\"></a>1.2.1.3 实例3 【给自创的组件 定义事件】：</h4><p>在 组件定义 的时候 在 methods键 后的对象内定义1个函数，函数内绑定 自定义的<code>事件名</code>和<code>要返回的数据</code>，在<code>App.vue</code>文件中定义事件【该<strong>事件作为参数</strong> 传给 组件的事件（即：回调函数的语法）】，</p>\n<h3 id=\"1-2-2-组件的内容-slot标签\"><a href=\"#1-2-2-组件的内容-slot标签\" class=\"headerlink\" title=\"1.2.2 组件的内容 : slot标签\"></a>1.2.2 组件的内容 : slot标签</h3><p>在定义时，用 <code>&lt;slot&gt;  &lt;/slot&gt;</code>作为 组件内容的占位符，当组件使用时，就会用 组件 包裹的部分来替换掉 slot 标签</p>\n<h2 id=\"1-3-Vue-路由\"><a href=\"#1-3-Vue-路由\" class=\"headerlink\" title=\"1.3 Vue 路由\"></a>1.3 Vue 路由</h2><p>Vue路由用到了组件，下图中 组件 router-view 相当于是 1个小页面，当点击router-link时，router-view 中的内容就会根据组件的内容改变【相当于 frame】</p>\n<p><a href=\"https://router.vuejs.org/zh/guide/#html\">vue路由-官网</a><br><img src=\"https://img-blog.csdnimg.cn/20210119131025839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>组件调用：<br><img src=\"https://img-blog.csdnimg.cn/20210121132924901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-3-1-Vue-路由-前置知识实例：\"><a href=\"#1-3-1-Vue-路由-前置知识实例：\" class=\"headerlink\" title=\"1.3.1 Vue 路由-前置知识实例：\"></a>1.3.1 Vue 路由-前置知识实例：</h3><p>目标页面：【变化部分为 .container】<br><img src=\"https://img-blog.csdnimg.cn/20210121155547745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"1-3-1-1-组件的-css-样式\"><a href=\"#1-3-1-1-组件的-css-样式\" class=\"headerlink\" title=\"1.3.1.1 组件的 css 样式\"></a>1.3.1.1 组件的 css 样式</h4><p>3种：</p>\n<ul>\n<li>默认【样式重名时，样式会污染出去】：<code>&lt;style&gt;       &lt;/style&gt;</code></li>\n<li>scoped【样式只在定义的文件中有效】: <code>&lt;style scoped&gt;      &lt;/style&gt;</code></li>\n</ul>\n<h4 id=\"1-3-1-2-left组件\"><a href=\"#1-3-1-2-left组件\" class=\"headerlink\" title=\"1.3.1.2 left组件\"></a>1.3.1.2 left组件</h4><p>router-view 跟着 router-link 变化<br><img src=\"https://img-blog.csdnimg.cn/20210121164057933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121164906518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>上图中，<br>path就是地址栏的变化，<br><code>/about</code> 最后导入的组件显示在 router-view 中</p>\n<p>实例1：【 <strong>left中 的点击 router-link</strong>  使    <strong>container 中的 router-view 变化</strong>】</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210121170344391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121170532683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121170714448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"基本路由的大致步骤小结\"><a href=\"#基本路由的大致步骤小结\" class=\"headerlink\" title=\"基本路由的大致步骤小结\"></a>基本路由的大致步骤小结</h3><p>【在默认的情况下，点击链接所在的组件，让router-view变化】：</p>\n<ul>\n<li>定义组件</li>\n<li>在App.vue中定义router-view</li>\n<li>在某个组件中定义router-link，且router-link标签的 to 属性绑定 地址</li>\n<li>在 views 目录下 定义组件，由于点击链接后显示</li>\n<li>在 router/index 中 绑定 地址栏的变化 与 导入组件的关系【注册路由】</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20210121172438231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-3-2-动态路由【地址栏传参数】\"><a href=\"#1-3-2-动态路由【地址栏传参数】\" class=\"headerlink\" title=\"1.3.2 动态路由【地址栏传参数】\"></a>1.3.2 动态路由【地址栏传参数】</h3><p><img src=\"https://img-blog.csdnimg.cn/20210121175810568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121180036456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>HTML中如果需要获取地址栏的参数：<code> {{ $route.params.参数名}} </code><br>JS 中使用地址栏的参数：<br><img src=\"https://img-blog.csdnimg.cn/20210121191630300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>实例1：</p>\n<ul>\n<li>目标：点击 left中的“博客” =》 右侧出现 博客的title,点击title,跳转到显示pid的界面【pid为地址栏中的博客id】</li>\n<li>主要 需修改 的文件：<ul>\n<li> left.vue组件</li>\n<li> 路由【包括：左侧导航栏的路由，博文列表中每1项的路由】</li>\n<li> Articels.vue组件: 存放博文列表</li>\n<li>article.vue：博文内容</li>\n</ul>\n</li>\n</ul>\n<p>left.vue组件：点击后显示博客的标题列表<br><img src=\"https://img-blog.csdnimg.cn/20210121190127215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121190229322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121190401380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121190544132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121191840694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ol>\n<li>在 函数中使用 地址栏中的参数-实例：<br><code>this.$route.params.地址栏参数名</code><br>【假设 data 是 ajax 获取的数据集，根据地址栏的参数id 来匹配 data中的每一项，将不符合条件的过滤掉，最后取 过滤后的数组的第1项 来显示】<br><img src=\"https://img-blog.csdnimg.cn/20210121192834676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><h3 id=\"子组件向父组件传值：\"><a href=\"#子组件向父组件传值：\" class=\"headerlink\" title=\"子组件向父组件传值：\"></a>子组件向父组件传值：</h3></li>\n</ol>\n<ul>\n<li>子组件 先 绑定<strong>方法</strong></li>\n<li>子组件的方法中 再 绑定<strong>事件</strong>：<code>$emit(&quot;小写的事件名&quot;，this.$data)</code></li>\n<li>父组件 的方法的参数名为data, </li>\n<li>父组件使用子组件时，将父组件中的<strong>方法</strong> =&gt; <strong>传入</strong> 子组件的<strong>事件</strong>中</li>\n</ul>\n<h3 id=\"组件嵌套的路由\"><a href=\"#组件嵌套的路由\" class=\"headerlink\" title=\"组件嵌套的路由\"></a>组件嵌套的路由</h3><p>要使用路由一般要有以下条件：</p>\n<ul>\n<li>路由注册【path，要导入的组件】:最重要</li>\n<li>route-view</li>\n<li>route-link<br><img src=\"https://img-blog.csdnimg.cn/20210121200043973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><h3 id=\"1-4-命名路由\"><a href=\"#1-4-命名路由\" class=\"headerlink\" title=\"1.4 命名路由\"></a>1.4 命名路由</h3><img src=\"https://img-blog.csdnimg.cn/20210121202032986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>在 js 的方法中中可使用【name需要params；path需要拼接】：</li>\n<li> <code>this.$router.push(地址)</code>  </li>\n<li> <code>this.$router.push(&#123;path:&quot;地址&quot;,query:&#123;参数名：参数值，参数名：参数值&#125;&#125;)</code></li>\n<li> <code>this.$router.push(&#123;name:&quot;路由名&quot;&#125;)</code></li>\n<li><code>this.$router.push(&#123;name:&quot;路由名&quot;,params:&#123;参数名：参数值，参数名：参数值&#125;&#125;)</code></li>\n</ul>\n<h3 id=\"1-5-去掉使用路由时，地址栏上的-号\"><a href=\"#1-5-去掉使用路由时，地址栏上的-号\" class=\"headerlink\" title=\"1.5 去掉使用路由时，地址栏上的#号\"></a>1.5 去掉使用路由时，地址栏上的#号</h3><p><img src=\"https://img-blog.csdnimg.cn/2021012120374382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210121204319530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"Vue 入门-02","_content":"\n# Vue入门-02\n\n[toc]\n\n## 1.1 计算属性【用于 数据处理】\n\n**作用**：为了不让{%raw%} {{ }} {%endraw%}内的东西太长，使其不好维护，可先使用`计算属性`处理，处理完后的结果再在 {%raw%}{{ }} {%endraw%}中使用，【保证在 {%raw%}{{ }} {%endraw%}只写简单的逻辑】  \n\n  \n\n**计算属性** 会很 **快**，因为使用了 **缓存**，【只计算1次，之后刷新页面时，直接从缓存调用 `计算属性`。除非属性值被修改了，才会再一次进行 computed】   \n\n\n**格式：**【定义在 conputed 中；定义时 格式类似函数，有小括号，有返回值；调用时 无需小括号】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118161230581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 1.2 CSS 样式的绑定\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118171547218.png)\n\n实例1：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118165226196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118165612375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n实例2【重要】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118171331166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n实例3【指定默认样式，最终样式为：default + odd/even】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118171831444.png)\n实例4【绑定style属性】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118172421806.png)\n\n## 1.3 数组的变更方法\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118173323306.png)\n以上这些方法可以在**Vue对象内部**  `变更数组`并刷新界面【对原数组进行改变】，\n在Vue对象内部，可使用 `Vue.set(要被设置的对象，”属性名“，属性值)`， \n在**Vue对象外面**，还可以使用 `vm.数组名.length=0`来变更数组，\n除以上提及的方式外，其他方式均无法在Vue内部更改数组。【改了也不更新页面】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118180023113.png)\n以上方法用 新数组  替换 旧数组\n\n实例：【模糊查询】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118183909419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n实例：计划表\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118191645297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118191317308.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118191444702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118191621270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n","source":"_posts/Vue入门-02.md","raw":"---\ntitle: Vue 入门-02\ntag: Vue\ncategories:\n  - 前端\n  - Vue\n---\n\n# Vue入门-02\n\n[toc]\n\n## 1.1 计算属性【用于 数据处理】\n\n**作用**：为了不让{%raw%} {{ }} {%endraw%}内的东西太长，使其不好维护，可先使用`计算属性`处理，处理完后的结果再在 {%raw%}{{ }} {%endraw%}中使用，【保证在 {%raw%}{{ }} {%endraw%}只写简单的逻辑】  \n\n  \n\n**计算属性** 会很 **快**，因为使用了 **缓存**，【只计算1次，之后刷新页面时，直接从缓存调用 `计算属性`。除非属性值被修改了，才会再一次进行 computed】   \n\n\n**格式：**【定义在 conputed 中；定义时 格式类似函数，有小括号，有返回值；调用时 无需小括号】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118161230581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 1.2 CSS 样式的绑定\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118171547218.png)\n\n实例1：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118165226196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118165612375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n实例2【重要】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118171331166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n实例3【指定默认样式，最终样式为：default + odd/even】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118171831444.png)\n实例4【绑定style属性】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118172421806.png)\n\n## 1.3 数组的变更方法\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118173323306.png)\n以上这些方法可以在**Vue对象内部**  `变更数组`并刷新界面【对原数组进行改变】，\n在Vue对象内部，可使用 `Vue.set(要被设置的对象，”属性名“，属性值)`， \n在**Vue对象外面**，还可以使用 `vm.数组名.length=0`来变更数组，\n除以上提及的方式外，其他方式均无法在Vue内部更改数组。【改了也不更新页面】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118180023113.png)\n以上方法用 新数组  替换 旧数组\n\n实例：【模糊查询】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118183909419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n实例：计划表\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118191645297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118191317308.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118191444702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210118191621270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n","slug":"Vue入门-02","published":1,"date":"2021-06-02T02:49:19.180Z","updated":"2021-06-01T07:36:09.376Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs1g000zlcvdeytx5bsg","content":"<h1 id=\"Vue入门-02\"><a href=\"#Vue入门-02\" class=\"headerlink\" title=\"Vue入门-02\"></a>Vue入门-02</h1><p>[toc]</p>\n<h2 id=\"1-1-计算属性【用于-数据处理】\"><a href=\"#1-1-计算属性【用于-数据处理】\" class=\"headerlink\" title=\"1.1 计算属性【用于 数据处理】\"></a>1.1 计算属性【用于 数据处理】</h2><p><strong>作用</strong>：为了不让 {{ }} 内的东西太长，使其不好维护，可先使用<code>计算属性</code>处理，处理完后的结果再在 {{ }} 中使用，【保证在 {{ }} 只写简单的逻辑】  </p>\n<p><strong>计算属性</strong> 会很 <strong>快</strong>，因为使用了 <strong>缓存</strong>，【只计算1次，之后刷新页面时，直接从缓存调用 <code>计算属性</code>。除非属性值被修改了，才会再一次进行 computed】   </p>\n<p><strong>格式：</strong>【定义在 conputed 中；定义时 格式类似函数，有小括号，有返回值；调用时 无需小括号】<br><img src=\"https://img-blog.csdnimg.cn/20210118161230581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"1-2-CSS-样式的绑定\"><a href=\"#1-2-CSS-样式的绑定\" class=\"headerlink\" title=\"1.2 CSS 样式的绑定\"></a>1.2 CSS 样式的绑定</h2><p><img src=\"https://img-blog.csdnimg.cn/20210118171547218.png\" alt=\"在这里插入图片描述\"></p>\n<p>实例1：<br><img src=\"https://img-blog.csdnimg.cn/20210118165226196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210118165612375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>实例2【重要】<br><img src=\"https://img-blog.csdnimg.cn/20210118171331166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>实例3【指定默认样式，最终样式为：default + odd/even】<br><img src=\"https://img-blog.csdnimg.cn/20210118171831444.png\" alt=\"在这里插入图片描述\"><br>实例4【绑定style属性】<br><img src=\"https://img-blog.csdnimg.cn/20210118172421806.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"1-3-数组的变更方法\"><a href=\"#1-3-数组的变更方法\" class=\"headerlink\" title=\"1.3 数组的变更方法\"></a>1.3 数组的变更方法</h2><p><img src=\"https://img-blog.csdnimg.cn/20210118173323306.png\" alt=\"在这里插入图片描述\"><br>以上这些方法可以在<strong>Vue对象内部</strong>  <code>变更数组</code>并刷新界面【对原数组进行改变】，<br>在Vue对象内部，可使用 <code>Vue.set(要被设置的对象，”属性名“，属性值)</code>，<br>在<strong>Vue对象外面</strong>，还可以使用 <code>vm.数组名.length=0</code>来变更数组，<br>除以上提及的方式外，其他方式均无法在Vue内部更改数组。【改了也不更新页面】<br><img src=\"https://img-blog.csdnimg.cn/20210118180023113.png\" alt=\"在这里插入图片描述\"><br>以上方法用 新数组  替换 旧数组</p>\n<p>实例：【模糊查询】<br><img src=\"https://img-blog.csdnimg.cn/20210118183909419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>实例：计划表<br><img src=\"https://img-blog.csdnimg.cn/20210118191645297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210118191317308.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210118191444702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210118191621270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"Vue入门-02\"><a href=\"#Vue入门-02\" class=\"headerlink\" title=\"Vue入门-02\"></a>Vue入门-02</h1><p>[toc]</p>\n<h2 id=\"1-1-计算属性【用于-数据处理】\"><a href=\"#1-1-计算属性【用于-数据处理】\" class=\"headerlink\" title=\"1.1 计算属性【用于 数据处理】\"></a>1.1 计算属性【用于 数据处理】</h2><p><strong>作用</strong>：为了不让 {{ }} 内的东西太长，使其不好维护，可先使用<code>计算属性</code>处理，处理完后的结果再在 {{ }} 中使用，【保证在 {{ }} 只写简单的逻辑】  </p>\n<p><strong>计算属性</strong> 会很 <strong>快</strong>，因为使用了 <strong>缓存</strong>，【只计算1次，之后刷新页面时，直接从缓存调用 <code>计算属性</code>。除非属性值被修改了，才会再一次进行 computed】   </p>\n<p><strong>格式：</strong>【定义在 conputed 中；定义时 格式类似函数，有小括号，有返回值；调用时 无需小括号】<br><img src=\"https://img-blog.csdnimg.cn/20210118161230581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"1-2-CSS-样式的绑定\"><a href=\"#1-2-CSS-样式的绑定\" class=\"headerlink\" title=\"1.2 CSS 样式的绑定\"></a>1.2 CSS 样式的绑定</h2><p><img src=\"https://img-blog.csdnimg.cn/20210118171547218.png\" alt=\"在这里插入图片描述\"></p>\n<p>实例1：<br><img src=\"https://img-blog.csdnimg.cn/20210118165226196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210118165612375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>实例2【重要】<br><img src=\"https://img-blog.csdnimg.cn/20210118171331166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>实例3【指定默认样式，最终样式为：default + odd/even】<br><img src=\"https://img-blog.csdnimg.cn/20210118171831444.png\" alt=\"在这里插入图片描述\"><br>实例4【绑定style属性】<br><img src=\"https://img-blog.csdnimg.cn/20210118172421806.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"1-3-数组的变更方法\"><a href=\"#1-3-数组的变更方法\" class=\"headerlink\" title=\"1.3 数组的变更方法\"></a>1.3 数组的变更方法</h2><p><img src=\"https://img-blog.csdnimg.cn/20210118173323306.png\" alt=\"在这里插入图片描述\"><br>以上这些方法可以在<strong>Vue对象内部</strong>  <code>变更数组</code>并刷新界面【对原数组进行改变】，<br>在Vue对象内部，可使用 <code>Vue.set(要被设置的对象，”属性名“，属性值)</code>，<br>在<strong>Vue对象外面</strong>，还可以使用 <code>vm.数组名.length=0</code>来变更数组，<br>除以上提及的方式外，其他方式均无法在Vue内部更改数组。【改了也不更新页面】<br><img src=\"https://img-blog.csdnimg.cn/20210118180023113.png\" alt=\"在这里插入图片描述\"><br>以上方法用 新数组  替换 旧数组</p>\n<p>实例：【模糊查询】<br><img src=\"https://img-blog.csdnimg.cn/20210118183909419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>实例：计划表<br><img src=\"https://img-blog.csdnimg.cn/20210118191645297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210118191317308.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210118191444702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210118191621270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"Vue 入门-04","_content":"\n# Vue入门-04\n\n[toc]\n\n## 1.1 Vuex\n\n使用 Vuex 可以在整个Vue项目中共享数据【类似 数据库的作用】\n=》官方叫`状态管理模式` \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122104027301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n项目中要使用 vuex 必须要 `use` 来应用【vue 的 router 也一样】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122104249153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n vuex 的路径：`/src/store/index.js`\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122104820568.png)\n首先，在`/store/index.js`文件中引入vuex，并导出1个store对象，\n在`main.js`文件中导入 `/store/index.js`文件，并在Vue对象中注册\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202101221056369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122105030964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122110141606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 实例1【获取数据】：\n- store中的state里面写数据\n- store中的getters方法\n- 在要使用数据的组件中导入vuex的 mapGetters\n- 在计算属性computed中 使用`...mapGetters([\"getter方法名1\"，“getter方法名2”])`\n- 利用 {{ 计算属性名}} 来使用数据\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122113209775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021012211431555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 实例2【获取数据】：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122114921444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122115028541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 实例3 【设置数据】\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122122416420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122122915950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n","source":"_posts/Vue入门-04.md","raw":"---\ntitle: Vue 入门-04\ntag: Vue\ncategories:\n  - 前端\n  - Vue\n---\n\n# Vue入门-04\n\n[toc]\n\n## 1.1 Vuex\n\n使用 Vuex 可以在整个Vue项目中共享数据【类似 数据库的作用】\n=》官方叫`状态管理模式` \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122104027301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n项目中要使用 vuex 必须要 `use` 来应用【vue 的 router 也一样】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122104249153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n vuex 的路径：`/src/store/index.js`\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122104820568.png)\n首先，在`/store/index.js`文件中引入vuex，并导出1个store对象，\n在`main.js`文件中导入 `/store/index.js`文件，并在Vue对象中注册\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202101221056369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122105030964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122110141606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 实例1【获取数据】：\n- store中的state里面写数据\n- store中的getters方法\n- 在要使用数据的组件中导入vuex的 mapGetters\n- 在计算属性computed中 使用`...mapGetters([\"getter方法名1\"，“getter方法名2”])`\n- 利用 {{ 计算属性名}} 来使用数据\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122113209775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2021012211431555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 实例2【获取数据】：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122114921444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122115028541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 实例3 【设置数据】\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122122416420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210122122915950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n","slug":"Vue入门-04","published":1,"date":"2021-06-02T02:49:19.186Z","updated":"2021-06-01T07:36:09.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs1j0011lcvde3kehy6u","content":"<h1 id=\"Vue入门-04\"><a href=\"#Vue入门-04\" class=\"headerlink\" title=\"Vue入门-04\"></a>Vue入门-04</h1><p>[toc]</p>\n<h2 id=\"1-1-Vuex\"><a href=\"#1-1-Vuex\" class=\"headerlink\" title=\"1.1 Vuex\"></a>1.1 Vuex</h2><p>使用 Vuex 可以在整个Vue项目中共享数据【类似 数据库的作用】<br>=》官方叫<code>状态管理模式</code><br><img src=\"https://img-blog.csdnimg.cn/20210122104027301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>项目中要使用 vuex 必须要 <code>use</code> 来应用【vue 的 router 也一样】<br><img src=\"https://img-blog.csdnimg.cn/20210122104249153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br> vuex 的路径：<code>/src/store/index.js</code><br> <img src=\"https://img-blog.csdnimg.cn/20210122104820568.png\" alt=\"在这里插入图片描述\"><br>首先，在<code>/store/index.js</code>文件中引入vuex，并导出1个store对象，<br>在<code>main.js</code>文件中导入 <code>/store/index.js</code>文件，并在Vue对象中注册<br><img src=\"https://img-blog.csdnimg.cn/202101221056369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210122105030964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210122110141606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"实例1【获取数据】：\"><a href=\"#实例1【获取数据】：\" class=\"headerlink\" title=\"实例1【获取数据】：\"></a>实例1【获取数据】：</h3><ul>\n<li>store中的state里面写数据</li>\n<li>store中的getters方法</li>\n<li>在要使用数据的组件中导入vuex的 mapGetters</li>\n<li>在计算属性computed中 使用<code>...mapGetters([&quot;getter方法名1&quot;，“getter方法名2”])</code></li>\n<li>利用  来使用数据<br><img src=\"https://img-blog.csdnimg.cn/20210122113209775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/2021012211431555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"实例2【获取数据】：\"><a href=\"#实例2【获取数据】：\" class=\"headerlink\" title=\"实例2【获取数据】：\"></a>实例2【获取数据】：</h3><p><img src=\"https://img-blog.csdnimg.cn/20210122114921444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210122115028541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"实例3-【设置数据】\"><a href=\"#实例3-【设置数据】\" class=\"headerlink\" title=\"实例3 【设置数据】\"></a>实例3 【设置数据】</h3><p><img src=\"https://img-blog.csdnimg.cn/20210122122416420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210122122915950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"Vue入门-04\"><a href=\"#Vue入门-04\" class=\"headerlink\" title=\"Vue入门-04\"></a>Vue入门-04</h1><p>[toc]</p>\n<h2 id=\"1-1-Vuex\"><a href=\"#1-1-Vuex\" class=\"headerlink\" title=\"1.1 Vuex\"></a>1.1 Vuex</h2><p>使用 Vuex 可以在整个Vue项目中共享数据【类似 数据库的作用】<br>=》官方叫<code>状态管理模式</code><br><img src=\"https://img-blog.csdnimg.cn/20210122104027301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>项目中要使用 vuex 必须要 <code>use</code> 来应用【vue 的 router 也一样】<br><img src=\"https://img-blog.csdnimg.cn/20210122104249153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br> vuex 的路径：<code>/src/store/index.js</code><br> <img src=\"https://img-blog.csdnimg.cn/20210122104820568.png\" alt=\"在这里插入图片描述\"><br>首先，在<code>/store/index.js</code>文件中引入vuex，并导出1个store对象，<br>在<code>main.js</code>文件中导入 <code>/store/index.js</code>文件，并在Vue对象中注册<br><img src=\"https://img-blog.csdnimg.cn/202101221056369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210122105030964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210122110141606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"实例1【获取数据】：\"><a href=\"#实例1【获取数据】：\" class=\"headerlink\" title=\"实例1【获取数据】：\"></a>实例1【获取数据】：</h3><ul>\n<li>store中的state里面写数据</li>\n<li>store中的getters方法</li>\n<li>在要使用数据的组件中导入vuex的 mapGetters</li>\n<li>在计算属性computed中 使用<code>...mapGetters([&quot;getter方法名1&quot;，“getter方法名2”])</code></li>\n<li>利用  来使用数据<br><img src=\"https://img-blog.csdnimg.cn/20210122113209775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/2021012211431555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"实例2【获取数据】：\"><a href=\"#实例2【获取数据】：\" class=\"headerlink\" title=\"实例2【获取数据】：\"></a>实例2【获取数据】：</h3><p><img src=\"https://img-blog.csdnimg.cn/20210122114921444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210122115028541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"实例3-【设置数据】\"><a href=\"#实例3-【设置数据】\" class=\"headerlink\" title=\"实例3 【设置数据】\"></a>实例3 【设置数据】</h3><p><img src=\"https://img-blog.csdnimg.cn/20210122122416420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210122122915950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"Windows批处理命令—入门","_content":"\n\n\n# Windows批处理命令—入门\n\n@[toc]\n\n### 1. 解决 cmd  中文乱码\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203130339914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203130429604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203130651236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\ncmd中输入：`chcp 65001` 将 编码改为 UTF-8\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202012031309099.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n若以上方法无效，则：\n\n> bat文件右键用“ 编辑”  打开，\n> 另存为时，UTF-8保存为ANSI 格式。即可解决运行是乱码问题\n\n\n\n###  2. 批处理文件\n\n批处理文件 就是 将多条DOS命令放在一个`.bat` 文件中，运行时，依次执行文件中编写的 DOS命令\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203133633685.png)\n\n\n\n### 3. 切换目录\n\ncd【即：change directory 更改当前目录】\n- 进入驱动器，如：`d:`\n- 进入文件夹，如：`cd d:\\abc\\Test.txt`\n\n`cls`：清屏\n`set` ：查看环境变量\n\n\n\n### 4. 获取当前 批处理文件 所在的目录\n\n“d” ： Drive的缩写，即为驱动器\n“p”：  Path缩写，即为路径，目录\n`cd %~dp0 `：进入批处理所在目录\n`cd %~dp0bin\\ `：进入批处理所在目录的bin目录\n```bash\ntitle 批处理演示\n:: 你当前的位置是 %time%\necho   你当前的位置是：%~dp0\npause\n```\n\n\n命令解析： \n\n- `::` 表示后面内容为批处理文件中**注释**，相当于命令`rem`\n- `echo` : 命令是什么，就在控制台打印什么\n- `pause`： 中断批处理文件，并等待用户输入任意字符\n- `title`：设置当前cmd 窗口的标题\n- `%time%`：获取当前的时间\n\n\n\n\n\n`%cd%`  和 `%~dp`的区别：\n\n 1. 当 批处理文件中 **没有调用 另外的文件夹**中的批处理文件时，两者取出的值**一样**\n 2. 如果有调用别的目录下的批处理文件，则 `%cd%`仍然是当前批处理文件的目录，但`%~dp0`变为**被调用的**批处理文件所在的**目录** \n\n\n\n\n\n**小结：** \n\n 1. `%~dp0`：当前正在执行的批处理文件所在的目录\n 2. `%cd%`： 当前主文件的目录，一般不变\n\n\n\n\n\n\n\n**示例：**\n\n```bash\necho   你当前的位置是：%~dp0\npause\n\necho   你当前的工作目录是：%cd%\npause\n```\n\n\n\n\n\n\n\n\n\n### 5. 杀进程：\n\n```bash\ntaskkill -f /im notepad.exe\necho 杀死记事本进程\npause\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203141751336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n\n\n### 6. 获取帮助\n\n例如：`taskkill  /?`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203142030518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n\n\n### 7. 常用命令\n\n```bash\n//查看系统版本的命令的语法【/？】\nver /?\n\n//启动1个cmd实例\ncmd /?\n\n//查看环境变量\nset /?\n\n//注释，相当于::\nrem /?\n\n//条件判断\nif /?\n\n//echo后是什么就打印什么\necho /?\n\n//跳转，可与:标签名 结合形成循环\ngoto /?\n\n//循环\nfor /?\n\n//更改批处理文件中可替换参数的位置\nshift /?\n\n//调用别的批处理文件\ncall /?\n\n//显示文本内容\ntype /?\n\n//查找,find \"要找的字符串\" 文件名\nfind /?\n\n//查找,find \"要找的字符串\" 文件名\nfindstr /?\n\n//将文件复制到另外的位置，copy src dis\ncopy /?\n```\n\n\n\n\n\n\n### 8. 运行的时候 传参\n\n例如：\n\n```bash\n//在批处理文件 a.bat中输入下列内容\ncall b.bat \"hello\" \"haha\"\n```\n\n\n命令解释：\n\n- 批处理文件的参数最多10个【0~9】\n- 参数0 表示本身，如上面代码中：`call   b.bat    \"hello\"`表示调用`b.bat`文件，并将”hello“ 作为参数传给`b.bat`文件。在`b.bat`文件内，执行`echo %0`表示打印当前文件名，执行`echo %`表示打印传入的第一个参数【即：”hello“】\n\n\n\n\n\n\n\n### 9. echo\n\n语法：\n1. `echo   on/off  `: 打开或关闭提示【不显示输入的过程，只显示执行结果】\n\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203144846250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203145037860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n### 10. @符号\n\n@与echo off 相似，用于隐藏 带@的命令的输入 \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203145545385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203145641769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n**在回显的同时将内容覆盖输入文件**\n\n```bash\necho hello  > d:\\Test.txt\n```\n\n\n\n\n**在回显的同时将内容追加输入文件**\n\n```bash\necho hello  >> d:\\Test.txt\n```\n\n\n\n\n\n\n### 11. goto\n\n实例：\n```bash\nset a=0\n\n:label_1\nif a == 0 \n(echo \"hello\")\nelse(goto label_1)\n```\n命令解析：\n- 设1个变量`a`，`a`的值为`0`时，打印`hello`，否则跳转到 `label_1`位置重新执行语句","source":"_posts/Windows批处理命令-入门.md","raw":"---\ntitle: Windows批处理命令—入门\ntag: Windows\ncategories:\n  - [后端,操作系统,Windows使用]\n---\n\n\n\n# Windows批处理命令—入门\n\n@[toc]\n\n### 1. 解决 cmd  中文乱码\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203130339914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203130429604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203130651236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\ncmd中输入：`chcp 65001` 将 编码改为 UTF-8\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202012031309099.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n若以上方法无效，则：\n\n> bat文件右键用“ 编辑”  打开，\n> 另存为时，UTF-8保存为ANSI 格式。即可解决运行是乱码问题\n\n\n\n###  2. 批处理文件\n\n批处理文件 就是 将多条DOS命令放在一个`.bat` 文件中，运行时，依次执行文件中编写的 DOS命令\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203133633685.png)\n\n\n\n### 3. 切换目录\n\ncd【即：change directory 更改当前目录】\n- 进入驱动器，如：`d:`\n- 进入文件夹，如：`cd d:\\abc\\Test.txt`\n\n`cls`：清屏\n`set` ：查看环境变量\n\n\n\n### 4. 获取当前 批处理文件 所在的目录\n\n“d” ： Drive的缩写，即为驱动器\n“p”：  Path缩写，即为路径，目录\n`cd %~dp0 `：进入批处理所在目录\n`cd %~dp0bin\\ `：进入批处理所在目录的bin目录\n```bash\ntitle 批处理演示\n:: 你当前的位置是 %time%\necho   你当前的位置是：%~dp0\npause\n```\n\n\n命令解析： \n\n- `::` 表示后面内容为批处理文件中**注释**，相当于命令`rem`\n- `echo` : 命令是什么，就在控制台打印什么\n- `pause`： 中断批处理文件，并等待用户输入任意字符\n- `title`：设置当前cmd 窗口的标题\n- `%time%`：获取当前的时间\n\n\n\n\n\n`%cd%`  和 `%~dp`的区别：\n\n 1. 当 批处理文件中 **没有调用 另外的文件夹**中的批处理文件时，两者取出的值**一样**\n 2. 如果有调用别的目录下的批处理文件，则 `%cd%`仍然是当前批处理文件的目录，但`%~dp0`变为**被调用的**批处理文件所在的**目录** \n\n\n\n\n\n**小结：** \n\n 1. `%~dp0`：当前正在执行的批处理文件所在的目录\n 2. `%cd%`： 当前主文件的目录，一般不变\n\n\n\n\n\n\n\n**示例：**\n\n```bash\necho   你当前的位置是：%~dp0\npause\n\necho   你当前的工作目录是：%cd%\npause\n```\n\n\n\n\n\n\n\n\n\n### 5. 杀进程：\n\n```bash\ntaskkill -f /im notepad.exe\necho 杀死记事本进程\npause\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203141751336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n\n\n### 6. 获取帮助\n\n例如：`taskkill  /?`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203142030518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n\n\n### 7. 常用命令\n\n```bash\n//查看系统版本的命令的语法【/？】\nver /?\n\n//启动1个cmd实例\ncmd /?\n\n//查看环境变量\nset /?\n\n//注释，相当于::\nrem /?\n\n//条件判断\nif /?\n\n//echo后是什么就打印什么\necho /?\n\n//跳转，可与:标签名 结合形成循环\ngoto /?\n\n//循环\nfor /?\n\n//更改批处理文件中可替换参数的位置\nshift /?\n\n//调用别的批处理文件\ncall /?\n\n//显示文本内容\ntype /?\n\n//查找,find \"要找的字符串\" 文件名\nfind /?\n\n//查找,find \"要找的字符串\" 文件名\nfindstr /?\n\n//将文件复制到另外的位置，copy src dis\ncopy /?\n```\n\n\n\n\n\n\n### 8. 运行的时候 传参\n\n例如：\n\n```bash\n//在批处理文件 a.bat中输入下列内容\ncall b.bat \"hello\" \"haha\"\n```\n\n\n命令解释：\n\n- 批处理文件的参数最多10个【0~9】\n- 参数0 表示本身，如上面代码中：`call   b.bat    \"hello\"`表示调用`b.bat`文件，并将”hello“ 作为参数传给`b.bat`文件。在`b.bat`文件内，执行`echo %0`表示打印当前文件名，执行`echo %`表示打印传入的第一个参数【即：”hello“】\n\n\n\n\n\n\n\n### 9. echo\n\n语法：\n1. `echo   on/off  `: 打开或关闭提示【不显示输入的过程，只显示执行结果】\n\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203144846250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203145037860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n### 10. @符号\n\n@与echo off 相似，用于隐藏 带@的命令的输入 \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203145545385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201203145641769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n\n**在回显的同时将内容覆盖输入文件**\n\n```bash\necho hello  > d:\\Test.txt\n```\n\n\n\n\n**在回显的同时将内容追加输入文件**\n\n```bash\necho hello  >> d:\\Test.txt\n```\n\n\n\n\n\n\n### 11. goto\n\n实例：\n```bash\nset a=0\n\n:label_1\nif a == 0 \n(echo \"hello\")\nelse(goto label_1)\n```\n命令解析：\n- 设1个变量`a`，`a`的值为`0`时，打印`hello`，否则跳转到 `label_1`位置重新执行语句","slug":"Windows批处理命令-入门","published":1,"date":"2021-06-02T02:49:19.190Z","updated":"2021-06-01T07:36:09.381Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs1m0016lcvdess0ej06","content":"<h1 id=\"Windows批处理命令—入门\"><a href=\"#Windows批处理命令—入门\" class=\"headerlink\" title=\"Windows批处理命令—入门\"></a>Windows批处理命令—入门</h1><p>@[toc]</p>\n<h3 id=\"1-解决-cmd-中文乱码\"><a href=\"#1-解决-cmd-中文乱码\" class=\"headerlink\" title=\"1. 解决 cmd  中文乱码\"></a>1. 解决 cmd  中文乱码</h3><p><img src=\"https://img-blog.csdnimg.cn/20201203130339914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201203130429604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201203130651236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>cmd中输入：<code>chcp 65001</code> 将 编码改为 UTF-8<br><img src=\"https://img-blog.csdnimg.cn/202012031309099.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>若以上方法无效，则：</p>\n<blockquote>\n<p>bat文件右键用“ 编辑”  打开，<br>另存为时，UTF-8保存为ANSI 格式。即可解决运行是乱码问题</p>\n</blockquote>\n<h3 id=\"2-批处理文件\"><a href=\"#2-批处理文件\" class=\"headerlink\" title=\"2. 批处理文件\"></a>2. 批处理文件</h3><p>批处理文件 就是 将多条DOS命令放在一个<code>.bat</code> 文件中，运行时，依次执行文件中编写的 DOS命令<br><img src=\"https://img-blog.csdnimg.cn/20201203133633685.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-切换目录\"><a href=\"#3-切换目录\" class=\"headerlink\" title=\"3. 切换目录\"></a>3. 切换目录</h3><p>cd【即：change directory 更改当前目录】</p>\n<ul>\n<li>进入驱动器，如：<code>d:</code></li>\n<li>进入文件夹，如：<code>cd d:\\abc\\Test.txt</code></li>\n</ul>\n<p><code>cls</code>：清屏<br><code>set</code> ：查看环境变量</p>\n<h3 id=\"4-获取当前-批处理文件-所在的目录\"><a href=\"#4-获取当前-批处理文件-所在的目录\" class=\"headerlink\" title=\"4. 获取当前 批处理文件 所在的目录\"></a>4. 获取当前 批处理文件 所在的目录</h3><p>“d” ： Drive的缩写，即为驱动器<br>“p”：  Path缩写，即为路径，目录<br><code>cd %~dp0 </code>：进入批处理所在目录<br><code>cd %~dp0bin\\ </code>：进入批处理所在目录的bin目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title 批处理演示</span><br><span class=\"line\">:: 你当前的位置是 %time%</span><br><span class=\"line\"><span class=\"built_in\">echo</span>   你当前的位置是：%~dp0</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n\n<p>命令解析： </p>\n<ul>\n<li><code>::</code> 表示后面内容为批处理文件中<strong>注释</strong>，相当于命令<code>rem</code></li>\n<li><code>echo</code> : 命令是什么，就在控制台打印什么</li>\n<li><code>pause</code>： 中断批处理文件，并等待用户输入任意字符</li>\n<li><code>title</code>：设置当前cmd 窗口的标题</li>\n<li><code>%time%</code>：获取当前的时间</li>\n</ul>\n<p><code>%cd%</code>  和 <code>%~dp</code>的区别：</p>\n<ol>\n<li>当 批处理文件中 <strong>没有调用 另外的文件夹</strong>中的批处理文件时，两者取出的值<strong>一样</strong></li>\n<li>如果有调用别的目录下的批处理文件，则 <code>%cd%</code>仍然是当前批处理文件的目录，但<code>%~dp0</code>变为<strong>被调用的</strong>批处理文件所在的<strong>目录</strong> </li>\n</ol>\n<p><strong>小结：</strong> </p>\n<ol>\n<li><code>%~dp0</code>：当前正在执行的批处理文件所在的目录</li>\n<li><code>%cd%</code>： 当前主文件的目录，一般不变</li>\n</ol>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span>   你当前的位置是：%~dp0</span><br><span class=\"line\">pause</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span>   你当前的工作目录是：%<span class=\"built_in\">cd</span>%</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h3 id=\"5-杀进程：\"><a href=\"#5-杀进程：\" class=\"headerlink\" title=\"5. 杀进程：\"></a>5. 杀进程：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">taskkill -f /im notepad.exe</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 杀死记事本进程</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20201203141751336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"6-获取帮助\"><a href=\"#6-获取帮助\" class=\"headerlink\" title=\"6. 获取帮助\"></a>6. 获取帮助</h3><p>例如：<code>taskkill  /?</code><br><img src=\"https://img-blog.csdnimg.cn/20201203142030518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"7-常用命令\"><a href=\"#7-常用命令\" class=\"headerlink\" title=\"7. 常用命令\"></a>7. 常用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查看系统版本的命令的语法【/？】</span><br><span class=\"line\">ver /?</span><br><span class=\"line\"></span><br><span class=\"line\">//启动1个cmd实例</span><br><span class=\"line\">cmd /?</span><br><span class=\"line\"></span><br><span class=\"line\">//查看环境变量</span><br><span class=\"line\"><span class=\"built_in\">set</span> /?</span><br><span class=\"line\"></span><br><span class=\"line\">//注释，相当于::</span><br><span class=\"line\">rem /?</span><br><span class=\"line\"></span><br><span class=\"line\">//条件判断</span><br><span class=\"line\"><span class=\"keyword\">if</span> /?</span><br><span class=\"line\"></span><br><span class=\"line\">//<span class=\"built_in\">echo</span>后是什么就打印什么</span><br><span class=\"line\"><span class=\"built_in\">echo</span> /?</span><br><span class=\"line\"></span><br><span class=\"line\">//跳转，可与:标签名 结合形成循环</span><br><span class=\"line\">goto /?</span><br><span class=\"line\"></span><br><span class=\"line\">//循环</span><br><span class=\"line\"><span class=\"keyword\">for</span> /?</span><br><span class=\"line\"></span><br><span class=\"line\">//更改批处理文件中可替换参数的位置</span><br><span class=\"line\"><span class=\"built_in\">shift</span> /?</span><br><span class=\"line\"></span><br><span class=\"line\">//调用别的批处理文件</span><br><span class=\"line\">call /?</span><br><span class=\"line\"></span><br><span class=\"line\">//显示文本内容</span><br><span class=\"line\"><span class=\"built_in\">type</span> /?</span><br><span class=\"line\"></span><br><span class=\"line\">//查找,find <span class=\"string\">&quot;要找的字符串&quot;</span> 文件名</span><br><span class=\"line\">find /?</span><br><span class=\"line\"></span><br><span class=\"line\">//查找,find <span class=\"string\">&quot;要找的字符串&quot;</span> 文件名</span><br><span class=\"line\">findstr /?</span><br><span class=\"line\"></span><br><span class=\"line\">//将文件复制到另外的位置，copy src dis</span><br><span class=\"line\">copy /?</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h3 id=\"8-运行的时候-传参\"><a href=\"#8-运行的时候-传参\" class=\"headerlink\" title=\"8. 运行的时候 传参\"></a>8. 运行的时候 传参</h3><p>例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//在批处理文件 a.bat中输入下列内容</span><br><span class=\"line\">call b.bat <span class=\"string\">&quot;hello&quot;</span> <span class=\"string\">&quot;haha&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>命令解释：</p>\n<ul>\n<li>批处理文件的参数最多10个【0~9】</li>\n<li>参数0 表示本身，如上面代码中：<code>call   b.bat    &quot;hello&quot;</code>表示调用<code>b.bat</code>文件，并将”hello“ 作为参数传给<code>b.bat</code>文件。在<code>b.bat</code>文件内，执行<code>echo %0</code>表示打印当前文件名，执行<code>echo %</code>表示打印传入的第一个参数【即：”hello“】</li>\n</ul>\n<h3 id=\"9-echo\"><a href=\"#9-echo\" class=\"headerlink\" title=\"9. echo\"></a>9. echo</h3><p>语法：</p>\n<ol>\n<li><code>echo   on/off  </code>: 打开或关闭提示【不显示输入的过程，只显示执行结果】</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20201203144846250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201203145037860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"10-符号\"><a href=\"#10-符号\" class=\"headerlink\" title=\"10. @符号\"></a>10. @符号</h3><p>@与echo off 相似，用于隐藏 带@的命令的输入<br><img src=\"https://img-blog.csdnimg.cn/20201203145545385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201203145641769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>在回显的同时将内容覆盖输入文件</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> hello  &gt; d:\\Test.txt</span><br></pre></td></tr></table></figure>\n\n\n\n\n<p><strong>在回显的同时将内容追加输入文件</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> hello  &gt;&gt; d:\\Test.txt</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h3 id=\"11-goto\"><a href=\"#11-goto\" class=\"headerlink\" title=\"11. goto\"></a>11. goto</h3><p>实例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> a=0</span><br><span class=\"line\"></span><br><span class=\"line\">:label_1</span><br><span class=\"line\"><span class=\"keyword\">if</span> a == 0 </span><br><span class=\"line\">(<span class=\"built_in\">echo</span> <span class=\"string\">&quot;hello&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>(goto label_1)</span><br></pre></td></tr></table></figure>\n<p>命令解析：</p>\n<ul>\n<li>设1个变量<code>a</code>，<code>a</code>的值为<code>0</code>时，打印<code>hello</code>，否则跳转到 <code>label_1</code>位置重新执行语句</li>\n</ul>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"Windows批处理命令—入门\"><a href=\"#Windows批处理命令—入门\" class=\"headerlink\" title=\"Windows批处理命令—入门\"></a>Windows批处理命令—入门</h1><p>@[toc]</p>\n<h3 id=\"1-解决-cmd-中文乱码\"><a href=\"#1-解决-cmd-中文乱码\" class=\"headerlink\" title=\"1. 解决 cmd  中文乱码\"></a>1. 解决 cmd  中文乱码</h3><p><img src=\"https://img-blog.csdnimg.cn/20201203130339914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201203130429604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201203130651236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>cmd中输入：<code>chcp 65001</code> 将 编码改为 UTF-8<br><img src=\"https://img-blog.csdnimg.cn/202012031309099.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>若以上方法无效，则：</p>\n<blockquote>\n<p>bat文件右键用“ 编辑”  打开，<br>另存为时，UTF-8保存为ANSI 格式。即可解决运行是乱码问题</p>\n</blockquote>\n<h3 id=\"2-批处理文件\"><a href=\"#2-批处理文件\" class=\"headerlink\" title=\"2. 批处理文件\"></a>2. 批处理文件</h3><p>批处理文件 就是 将多条DOS命令放在一个<code>.bat</code> 文件中，运行时，依次执行文件中编写的 DOS命令<br><img src=\"https://img-blog.csdnimg.cn/20201203133633685.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-切换目录\"><a href=\"#3-切换目录\" class=\"headerlink\" title=\"3. 切换目录\"></a>3. 切换目录</h3><p>cd【即：change directory 更改当前目录】</p>\n<ul>\n<li>进入驱动器，如：<code>d:</code></li>\n<li>进入文件夹，如：<code>cd d:\\abc\\Test.txt</code></li>\n</ul>\n<p><code>cls</code>：清屏<br><code>set</code> ：查看环境变量</p>\n<h3 id=\"4-获取当前-批处理文件-所在的目录\"><a href=\"#4-获取当前-批处理文件-所在的目录\" class=\"headerlink\" title=\"4. 获取当前 批处理文件 所在的目录\"></a>4. 获取当前 批处理文件 所在的目录</h3><p>“d” ： Drive的缩写，即为驱动器<br>“p”：  Path缩写，即为路径，目录<br><code>cd %~dp0 </code>：进入批处理所在目录<br><code>cd %~dp0bin\\ </code>：进入批处理所在目录的bin目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title 批处理演示</span><br><span class=\"line\">:: 你当前的位置是 %time%</span><br><span class=\"line\"><span class=\"built_in\">echo</span>   你当前的位置是：%~dp0</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n\n<p>命令解析： </p>\n<ul>\n<li><code>::</code> 表示后面内容为批处理文件中<strong>注释</strong>，相当于命令<code>rem</code></li>\n<li><code>echo</code> : 命令是什么，就在控制台打印什么</li>\n<li><code>pause</code>： 中断批处理文件，并等待用户输入任意字符</li>\n<li><code>title</code>：设置当前cmd 窗口的标题</li>\n<li><code>%time%</code>：获取当前的时间</li>\n</ul>\n<p><code>%cd%</code>  和 <code>%~dp</code>的区别：</p>\n<ol>\n<li>当 批处理文件中 <strong>没有调用 另外的文件夹</strong>中的批处理文件时，两者取出的值<strong>一样</strong></li>\n<li>如果有调用别的目录下的批处理文件，则 <code>%cd%</code>仍然是当前批处理文件的目录，但<code>%~dp0</code>变为<strong>被调用的</strong>批处理文件所在的<strong>目录</strong> </li>\n</ol>\n<p><strong>小结：</strong> </p>\n<ol>\n<li><code>%~dp0</code>：当前正在执行的批处理文件所在的目录</li>\n<li><code>%cd%</code>： 当前主文件的目录，一般不变</li>\n</ol>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span>   你当前的位置是：%~dp0</span><br><span class=\"line\">pause</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span>   你当前的工作目录是：%<span class=\"built_in\">cd</span>%</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h3 id=\"5-杀进程：\"><a href=\"#5-杀进程：\" class=\"headerlink\" title=\"5. 杀进程：\"></a>5. 杀进程：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">taskkill -f /im notepad.exe</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 杀死记事本进程</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20201203141751336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"6-获取帮助\"><a href=\"#6-获取帮助\" class=\"headerlink\" title=\"6. 获取帮助\"></a>6. 获取帮助</h3><p>例如：<code>taskkill  /?</code><br><img src=\"https://img-blog.csdnimg.cn/20201203142030518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"7-常用命令\"><a href=\"#7-常用命令\" class=\"headerlink\" title=\"7. 常用命令\"></a>7. 常用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查看系统版本的命令的语法【/？】</span><br><span class=\"line\">ver /?</span><br><span class=\"line\"></span><br><span class=\"line\">//启动1个cmd实例</span><br><span class=\"line\">cmd /?</span><br><span class=\"line\"></span><br><span class=\"line\">//查看环境变量</span><br><span class=\"line\"><span class=\"built_in\">set</span> /?</span><br><span class=\"line\"></span><br><span class=\"line\">//注释，相当于::</span><br><span class=\"line\">rem /?</span><br><span class=\"line\"></span><br><span class=\"line\">//条件判断</span><br><span class=\"line\"><span class=\"keyword\">if</span> /?</span><br><span class=\"line\"></span><br><span class=\"line\">//<span class=\"built_in\">echo</span>后是什么就打印什么</span><br><span class=\"line\"><span class=\"built_in\">echo</span> /?</span><br><span class=\"line\"></span><br><span class=\"line\">//跳转，可与:标签名 结合形成循环</span><br><span class=\"line\">goto /?</span><br><span class=\"line\"></span><br><span class=\"line\">//循环</span><br><span class=\"line\"><span class=\"keyword\">for</span> /?</span><br><span class=\"line\"></span><br><span class=\"line\">//更改批处理文件中可替换参数的位置</span><br><span class=\"line\"><span class=\"built_in\">shift</span> /?</span><br><span class=\"line\"></span><br><span class=\"line\">//调用别的批处理文件</span><br><span class=\"line\">call /?</span><br><span class=\"line\"></span><br><span class=\"line\">//显示文本内容</span><br><span class=\"line\"><span class=\"built_in\">type</span> /?</span><br><span class=\"line\"></span><br><span class=\"line\">//查找,find <span class=\"string\">&quot;要找的字符串&quot;</span> 文件名</span><br><span class=\"line\">find /?</span><br><span class=\"line\"></span><br><span class=\"line\">//查找,find <span class=\"string\">&quot;要找的字符串&quot;</span> 文件名</span><br><span class=\"line\">findstr /?</span><br><span class=\"line\"></span><br><span class=\"line\">//将文件复制到另外的位置，copy src dis</span><br><span class=\"line\">copy /?</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h3 id=\"8-运行的时候-传参\"><a href=\"#8-运行的时候-传参\" class=\"headerlink\" title=\"8. 运行的时候 传参\"></a>8. 运行的时候 传参</h3><p>例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//在批处理文件 a.bat中输入下列内容</span><br><span class=\"line\">call b.bat <span class=\"string\">&quot;hello&quot;</span> <span class=\"string\">&quot;haha&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>命令解释：</p>\n<ul>\n<li>批处理文件的参数最多10个【0~9】</li>\n<li>参数0 表示本身，如上面代码中：<code>call   b.bat    &quot;hello&quot;</code>表示调用<code>b.bat</code>文件，并将”hello“ 作为参数传给<code>b.bat</code>文件。在<code>b.bat</code>文件内，执行<code>echo %0</code>表示打印当前文件名，执行<code>echo %</code>表示打印传入的第一个参数【即：”hello“】</li>\n</ul>\n<h3 id=\"9-echo\"><a href=\"#9-echo\" class=\"headerlink\" title=\"9. echo\"></a>9. echo</h3><p>语法：</p>\n<ol>\n<li><code>echo   on/off  </code>: 打开或关闭提示【不显示输入的过程，只显示执行结果】</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20201203144846250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201203145037860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"10-符号\"><a href=\"#10-符号\" class=\"headerlink\" title=\"10. @符号\"></a>10. @符号</h3><p>@与echo off 相似，用于隐藏 带@的命令的输入<br><img src=\"https://img-blog.csdnimg.cn/20201203145545385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201203145641769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>在回显的同时将内容覆盖输入文件</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> hello  &gt; d:\\Test.txt</span><br></pre></td></tr></table></figure>\n\n\n\n\n<p><strong>在回显的同时将内容追加输入文件</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> hello  &gt;&gt; d:\\Test.txt</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h3 id=\"11-goto\"><a href=\"#11-goto\" class=\"headerlink\" title=\"11. goto\"></a>11. goto</h3><p>实例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> a=0</span><br><span class=\"line\"></span><br><span class=\"line\">:label_1</span><br><span class=\"line\"><span class=\"keyword\">if</span> a == 0 </span><br><span class=\"line\">(<span class=\"built_in\">echo</span> <span class=\"string\">&quot;hello&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>(goto label_1)</span><br></pre></td></tr></table></figure>\n<p>命令解析：</p>\n<ul>\n<li>设1个变量<code>a</code>，<code>a</code>的值为<code>0</code>时，打印<code>hello</code>，否则跳转到 <code>label_1</code>位置重新执行语句</li>\n</ul>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-06-02T01:15:10.925Z","updated":"2021-06-02T01:15:10.925Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs1n0017lcvdeev21rj8","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"劳动法-笔记","_content":"\n# 劳动法\n\n[toc]\n\n## 第一章 总则\n\n1.  适用**范围**：\n\n>   中国境内的 **企业** 、 **用人单位**  与 **劳动者** 之间\n>\n>   【签订劳动合同，依据本法执行】\n\n\n\n2.  劳动者的**权利+义务**：\n\n>   平等就业、选择职业、获取报酬、休息休假、劳动安全卫生保护、接受职业技能培训、享受社保、提请劳动争议处理、其他劳动权利 \n>\n>    \n>\n>   完成劳动任务、提高职业技能、执行劳动安全卫生规程、遵守纪律和职业道德\n\n\n\n\n\n## 第二章 促进就业\n\n-   鼓励就业、创业\n\n-   不得歧视\n\n-   男女平等就业\n\n-   禁止招收**小于 16周岁**的未成年人【文体等行业需要审批，保证其义务教育】\n\n\n\n\n\n## 第三章 劳动合同和集体合同\n\n1.  劳动合同：确定劳动关系、明确权利和义务\n2.  确定劳动关系 **必须** 签订 劳动合同\n3.  **签订和变更合同**时，需要 **平等自愿、协商一致** ，不得违法、违规\n\n4.  **无效合同**：违法违规、欺诈威胁的合同【是否无效，由劳动争议仲裁委员会、法院来确认】\n5.  劳动合同 **必须** 具备：\n\n>   -   期限\n>   -   工作内容\n>   -   劳动保护+劳动条件\n>   -   报酬\n>   -   纪律\n>   -   终止条件\n>   -   违约责任\n>   -   共同商议的其他条款\n\n6.  劳动合同的期限：\n\n>   -   固定期限\n>   -   不固定期限\n>   -   一定的工作期限\n\n7.  连续在同一公司工作10年时，如果劳动者要求 **不固定期限** ，用人单位应该满足**不固定期限**的要求\n8.  可以约定试用期，但试用期必须 **< = 6个月**\n\n9.  用人单位**解除劳动合同**：\n\n>   -   试用期不合格\n>   -   违规\n>   -   失职\n>   -   被追究刑事责任\n\n10.  必须**提前30天通知解除劳动合同**：\n\n>   -   患病后无法继续从事相关劳动\n>\n>   -   不能胜任工作\n>   -   客观原因无法履行合同\n>   -   濒临破产\n\n11.  需要给予补偿的情况：\n\n>   -   协商一致\n>   -   必须**提前30天通知解除劳动合同** 的情况\n\n12.  不能解除劳动合同的情况：\n\n>   -   未被确认丧失劳动能力\n>   -   女员工怀孕、产期、哺乳期\n>   -   其他\n\n13.  员工不满用人单位解除合同的，有权提出意见，工会有权要求重新处理\n14.  劳动者 **解除劳动合同** 应该**提前30天书面通知公司**\n15.  随时解约：\n\n>   -   试用期\n>   -   暴力威胁劳动\n>   -   未按合同支付报酬、提供劳动条件\n\n\n\n## 第四章 休息休假\n\n1.  每日工作< = 8小时，每周工作 < = 44 小时，每周最少休息 1天【特殊情况需审批】\n2.  休假节日：元旦、春节、劳动节、国庆节、其他\n3.  用人单位 和 劳动者协商后，可以延长时间【延时每日 < = 3小时，每月 < = 36 小时】\n4.  多倍工资：\n\n>   -   加班：150%\n>   -   休息日，不能补休：200%\n>   -   法定节假日：300%\n\n## 第五章 工资\n\n1.  带薪年假：连续工作一年以上，可以有带薪年假\n\n2.  工资：不得低于当地最低标准，货币形式、按月支付\n\n3.  法定节假日、婚丧假期间，需要支付工资\n\n","source":"_posts/劳动法.md","raw":"---\ntitle: 劳动法-笔记\ntag: 法律\ncategories:\n  - 日常\n  - 法律\n---\n\n# 劳动法\n\n[toc]\n\n## 第一章 总则\n\n1.  适用**范围**：\n\n>   中国境内的 **企业** 、 **用人单位**  与 **劳动者** 之间\n>\n>   【签订劳动合同，依据本法执行】\n\n\n\n2.  劳动者的**权利+义务**：\n\n>   平等就业、选择职业、获取报酬、休息休假、劳动安全卫生保护、接受职业技能培训、享受社保、提请劳动争议处理、其他劳动权利 \n>\n>    \n>\n>   完成劳动任务、提高职业技能、执行劳动安全卫生规程、遵守纪律和职业道德\n\n\n\n\n\n## 第二章 促进就业\n\n-   鼓励就业、创业\n\n-   不得歧视\n\n-   男女平等就业\n\n-   禁止招收**小于 16周岁**的未成年人【文体等行业需要审批，保证其义务教育】\n\n\n\n\n\n## 第三章 劳动合同和集体合同\n\n1.  劳动合同：确定劳动关系、明确权利和义务\n2.  确定劳动关系 **必须** 签订 劳动合同\n3.  **签订和变更合同**时，需要 **平等自愿、协商一致** ，不得违法、违规\n\n4.  **无效合同**：违法违规、欺诈威胁的合同【是否无效，由劳动争议仲裁委员会、法院来确认】\n5.  劳动合同 **必须** 具备：\n\n>   -   期限\n>   -   工作内容\n>   -   劳动保护+劳动条件\n>   -   报酬\n>   -   纪律\n>   -   终止条件\n>   -   违约责任\n>   -   共同商议的其他条款\n\n6.  劳动合同的期限：\n\n>   -   固定期限\n>   -   不固定期限\n>   -   一定的工作期限\n\n7.  连续在同一公司工作10年时，如果劳动者要求 **不固定期限** ，用人单位应该满足**不固定期限**的要求\n8.  可以约定试用期，但试用期必须 **< = 6个月**\n\n9.  用人单位**解除劳动合同**：\n\n>   -   试用期不合格\n>   -   违规\n>   -   失职\n>   -   被追究刑事责任\n\n10.  必须**提前30天通知解除劳动合同**：\n\n>   -   患病后无法继续从事相关劳动\n>\n>   -   不能胜任工作\n>   -   客观原因无法履行合同\n>   -   濒临破产\n\n11.  需要给予补偿的情况：\n\n>   -   协商一致\n>   -   必须**提前30天通知解除劳动合同** 的情况\n\n12.  不能解除劳动合同的情况：\n\n>   -   未被确认丧失劳动能力\n>   -   女员工怀孕、产期、哺乳期\n>   -   其他\n\n13.  员工不满用人单位解除合同的，有权提出意见，工会有权要求重新处理\n14.  劳动者 **解除劳动合同** 应该**提前30天书面通知公司**\n15.  随时解约：\n\n>   -   试用期\n>   -   暴力威胁劳动\n>   -   未按合同支付报酬、提供劳动条件\n\n\n\n## 第四章 休息休假\n\n1.  每日工作< = 8小时，每周工作 < = 44 小时，每周最少休息 1天【特殊情况需审批】\n2.  休假节日：元旦、春节、劳动节、国庆节、其他\n3.  用人单位 和 劳动者协商后，可以延长时间【延时每日 < = 3小时，每月 < = 36 小时】\n4.  多倍工资：\n\n>   -   加班：150%\n>   -   休息日，不能补休：200%\n>   -   法定节假日：300%\n\n## 第五章 工资\n\n1.  带薪年假：连续工作一年以上，可以有带薪年假\n\n2.  工资：不得低于当地最低标准，货币形式、按月支付\n\n3.  法定节假日、婚丧假期间，需要支付工资\n\n","slug":"劳动法","published":1,"date":"2021-06-02T02:49:19.193Z","updated":"2021-06-01T07:36:09.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs1o001alcvd1i4l5rew","content":"<h1 id=\"劳动法\"><a href=\"#劳动法\" class=\"headerlink\" title=\"劳动法\"></a>劳动法</h1><p>[toc]</p>\n<h2 id=\"第一章-总则\"><a href=\"#第一章-总则\" class=\"headerlink\" title=\"第一章 总则\"></a>第一章 总则</h2><ol>\n<li> 适用<strong>范围</strong>：</li>\n</ol>\n<blockquote>\n<p>  中国境内的 <strong>企业</strong> 、 <strong>用人单位</strong>  与 <strong>劳动者</strong> 之间</p>\n<p>  【签订劳动合同，依据本法执行】</p>\n</blockquote>\n<ol start=\"2\">\n<li> 劳动者的<strong>权利+义务</strong>：</li>\n</ol>\n<blockquote>\n<p>  平等就业、选择职业、获取报酬、休息休假、劳动安全卫生保护、接受职业技能培训、享受社保、提请劳动争议处理、其他劳动权利 </p>\n<p>  完成劳动任务、提高职业技能、执行劳动安全卫生规程、遵守纪律和职业道德</p>\n</blockquote>\n<h2 id=\"第二章-促进就业\"><a href=\"#第二章-促进就业\" class=\"headerlink\" title=\"第二章 促进就业\"></a>第二章 促进就业</h2><ul>\n<li><p>  鼓励就业、创业</p>\n</li>\n<li><p>  不得歧视</p>\n</li>\n<li><p>  男女平等就业</p>\n</li>\n<li><p>  禁止招收<strong>小于 16周岁</strong>的未成年人【文体等行业需要审批，保证其义务教育】</p>\n</li>\n</ul>\n<h2 id=\"第三章-劳动合同和集体合同\"><a href=\"#第三章-劳动合同和集体合同\" class=\"headerlink\" title=\"第三章 劳动合同和集体合同\"></a>第三章 劳动合同和集体合同</h2><ol>\n<li><p> 劳动合同：确定劳动关系、明确权利和义务</p>\n</li>\n<li><p> 确定劳动关系 <strong>必须</strong> 签订 劳动合同</p>\n</li>\n<li><p> <strong>签订和变更合同</strong>时，需要 <strong>平等自愿、协商一致</strong> ，不得违法、违规</p>\n</li>\n<li><p> <strong>无效合同</strong>：违法违规、欺诈威胁的合同【是否无效，由劳动争议仲裁委员会、法院来确认】</p>\n</li>\n<li><p> 劳动合同 <strong>必须</strong> 具备：</p>\n</li>\n</ol>\n<blockquote>\n<ul>\n<li>  期限</li>\n<li>  工作内容</li>\n<li>  劳动保护+劳动条件</li>\n<li>  报酬</li>\n<li>  纪律</li>\n<li>  终止条件</li>\n<li>  违约责任</li>\n<li>  共同商议的其他条款</li>\n</ul>\n</blockquote>\n<ol start=\"6\">\n<li> 劳动合同的期限：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  固定期限</li>\n<li>  不固定期限</li>\n<li>  一定的工作期限</li>\n</ul>\n</blockquote>\n<ol start=\"7\">\n<li><p> 连续在同一公司工作10年时，如果劳动者要求 <strong>不固定期限</strong> ，用人单位应该满足<strong>不固定期限</strong>的要求</p>\n</li>\n<li><p> 可以约定试用期，但试用期必须 <strong>&lt; = 6个月</strong></p>\n</li>\n<li><p> 用人单位<strong>解除劳动合同</strong>：</p>\n</li>\n</ol>\n<blockquote>\n<ul>\n<li>  试用期不合格</li>\n<li>  违规</li>\n<li>  失职</li>\n<li>  被追究刑事责任</li>\n</ul>\n</blockquote>\n<ol start=\"10\">\n<li> 必须<strong>提前30天通知解除劳动合同</strong>：</li>\n</ol>\n<blockquote>\n<ul>\n<li><p>  患病后无法继续从事相关劳动</p>\n</li>\n<li><p>  不能胜任工作</p>\n</li>\n<li><p>  客观原因无法履行合同</p>\n</li>\n<li><p>  濒临破产</p>\n</li>\n</ul>\n</blockquote>\n<ol start=\"11\">\n<li> 需要给予补偿的情况：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  协商一致</li>\n<li>  必须<strong>提前30天通知解除劳动合同</strong> 的情况</li>\n</ul>\n</blockquote>\n<ol start=\"12\">\n<li> 不能解除劳动合同的情况：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  未被确认丧失劳动能力</li>\n<li>  女员工怀孕、产期、哺乳期</li>\n<li>  其他</li>\n</ul>\n</blockquote>\n<ol start=\"13\">\n<li> 员工不满用人单位解除合同的，有权提出意见，工会有权要求重新处理</li>\n<li> 劳动者 <strong>解除劳动合同</strong> 应该<strong>提前30天书面通知公司</strong></li>\n<li> 随时解约：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  试用期</li>\n<li>  暴力威胁劳动</li>\n<li>  未按合同支付报酬、提供劳动条件</li>\n</ul>\n</blockquote>\n<h2 id=\"第四章-休息休假\"><a href=\"#第四章-休息休假\" class=\"headerlink\" title=\"第四章 休息休假\"></a>第四章 休息休假</h2><ol>\n<li> 每日工作&lt; = 8小时，每周工作 &lt; = 44 小时，每周最少休息 1天【特殊情况需审批】</li>\n<li> 休假节日：元旦、春节、劳动节、国庆节、其他</li>\n<li> 用人单位 和 劳动者协商后，可以延长时间【延时每日 &lt; = 3小时，每月 &lt; = 36 小时】</li>\n<li> 多倍工资：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  加班：150%</li>\n<li>  休息日，不能补休：200%</li>\n<li>  法定节假日：300%</li>\n</ul>\n</blockquote>\n<h2 id=\"第五章-工资\"><a href=\"#第五章-工资\" class=\"headerlink\" title=\"第五章 工资\"></a>第五章 工资</h2><ol>\n<li><p> 带薪年假：连续工作一年以上，可以有带薪年假</p>\n</li>\n<li><p> 工资：不得低于当地最低标准，货币形式、按月支付</p>\n</li>\n<li><p> 法定节假日、婚丧假期间，需要支付工资</p>\n</li>\n</ol>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"劳动法\"><a href=\"#劳动法\" class=\"headerlink\" title=\"劳动法\"></a>劳动法</h1><p>[toc]</p>\n<h2 id=\"第一章-总则\"><a href=\"#第一章-总则\" class=\"headerlink\" title=\"第一章 总则\"></a>第一章 总则</h2><ol>\n<li> 适用<strong>范围</strong>：</li>\n</ol>\n<blockquote>\n<p>  中国境内的 <strong>企业</strong> 、 <strong>用人单位</strong>  与 <strong>劳动者</strong> 之间</p>\n<p>  【签订劳动合同，依据本法执行】</p>\n</blockquote>\n<ol start=\"2\">\n<li> 劳动者的<strong>权利+义务</strong>：</li>\n</ol>\n<blockquote>\n<p>  平等就业、选择职业、获取报酬、休息休假、劳动安全卫生保护、接受职业技能培训、享受社保、提请劳动争议处理、其他劳动权利 </p>\n<p>  完成劳动任务、提高职业技能、执行劳动安全卫生规程、遵守纪律和职业道德</p>\n</blockquote>\n<h2 id=\"第二章-促进就业\"><a href=\"#第二章-促进就业\" class=\"headerlink\" title=\"第二章 促进就业\"></a>第二章 促进就业</h2><ul>\n<li><p>  鼓励就业、创业</p>\n</li>\n<li><p>  不得歧视</p>\n</li>\n<li><p>  男女平等就业</p>\n</li>\n<li><p>  禁止招收<strong>小于 16周岁</strong>的未成年人【文体等行业需要审批，保证其义务教育】</p>\n</li>\n</ul>\n<h2 id=\"第三章-劳动合同和集体合同\"><a href=\"#第三章-劳动合同和集体合同\" class=\"headerlink\" title=\"第三章 劳动合同和集体合同\"></a>第三章 劳动合同和集体合同</h2><ol>\n<li><p> 劳动合同：确定劳动关系、明确权利和义务</p>\n</li>\n<li><p> 确定劳动关系 <strong>必须</strong> 签订 劳动合同</p>\n</li>\n<li><p> <strong>签订和变更合同</strong>时，需要 <strong>平等自愿、协商一致</strong> ，不得违法、违规</p>\n</li>\n<li><p> <strong>无效合同</strong>：违法违规、欺诈威胁的合同【是否无效，由劳动争议仲裁委员会、法院来确认】</p>\n</li>\n<li><p> 劳动合同 <strong>必须</strong> 具备：</p>\n</li>\n</ol>\n<blockquote>\n<ul>\n<li>  期限</li>\n<li>  工作内容</li>\n<li>  劳动保护+劳动条件</li>\n<li>  报酬</li>\n<li>  纪律</li>\n<li>  终止条件</li>\n<li>  违约责任</li>\n<li>  共同商议的其他条款</li>\n</ul>\n</blockquote>\n<ol start=\"6\">\n<li> 劳动合同的期限：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  固定期限</li>\n<li>  不固定期限</li>\n<li>  一定的工作期限</li>\n</ul>\n</blockquote>\n<ol start=\"7\">\n<li><p> 连续在同一公司工作10年时，如果劳动者要求 <strong>不固定期限</strong> ，用人单位应该满足<strong>不固定期限</strong>的要求</p>\n</li>\n<li><p> 可以约定试用期，但试用期必须 <strong>&lt; = 6个月</strong></p>\n</li>\n<li><p> 用人单位<strong>解除劳动合同</strong>：</p>\n</li>\n</ol>\n<blockquote>\n<ul>\n<li>  试用期不合格</li>\n<li>  违规</li>\n<li>  失职</li>\n<li>  被追究刑事责任</li>\n</ul>\n</blockquote>\n<ol start=\"10\">\n<li> 必须<strong>提前30天通知解除劳动合同</strong>：</li>\n</ol>\n<blockquote>\n<ul>\n<li><p>  患病后无法继续从事相关劳动</p>\n</li>\n<li><p>  不能胜任工作</p>\n</li>\n<li><p>  客观原因无法履行合同</p>\n</li>\n<li><p>  濒临破产</p>\n</li>\n</ul>\n</blockquote>\n<ol start=\"11\">\n<li> 需要给予补偿的情况：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  协商一致</li>\n<li>  必须<strong>提前30天通知解除劳动合同</strong> 的情况</li>\n</ul>\n</blockquote>\n<ol start=\"12\">\n<li> 不能解除劳动合同的情况：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  未被确认丧失劳动能力</li>\n<li>  女员工怀孕、产期、哺乳期</li>\n<li>  其他</li>\n</ul>\n</blockquote>\n<ol start=\"13\">\n<li> 员工不满用人单位解除合同的，有权提出意见，工会有权要求重新处理</li>\n<li> 劳动者 <strong>解除劳动合同</strong> 应该<strong>提前30天书面通知公司</strong></li>\n<li> 随时解约：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  试用期</li>\n<li>  暴力威胁劳动</li>\n<li>  未按合同支付报酬、提供劳动条件</li>\n</ul>\n</blockquote>\n<h2 id=\"第四章-休息休假\"><a href=\"#第四章-休息休假\" class=\"headerlink\" title=\"第四章 休息休假\"></a>第四章 休息休假</h2><ol>\n<li> 每日工作&lt; = 8小时，每周工作 &lt; = 44 小时，每周最少休息 1天【特殊情况需审批】</li>\n<li> 休假节日：元旦、春节、劳动节、国庆节、其他</li>\n<li> 用人单位 和 劳动者协商后，可以延长时间【延时每日 &lt; = 3小时，每月 &lt; = 36 小时】</li>\n<li> 多倍工资：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  加班：150%</li>\n<li>  休息日，不能补休：200%</li>\n<li>  法定节假日：300%</li>\n</ul>\n</blockquote>\n<h2 id=\"第五章-工资\"><a href=\"#第五章-工资\" class=\"headerlink\" title=\"第五章 工资\"></a>第五章 工资</h2><ol>\n<li><p> 带薪年假：连续工作一年以上，可以有带薪年假</p>\n</li>\n<li><p> 工资：不得低于当地最低标准，货币形式、按月支付</p>\n</li>\n<li><p> 法定节假日、婚丧假期间，需要支付工资</p>\n</li>\n</ol>\n"},{"title":"ARP协议","_content":"\n\n\n## 1. ARP请求与ARP代理\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201214192045886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n- R1 上配 用`接口`的静态路由到R3，【最后一定可以知道目的设备的MAC,因为只知道从接口发，而不知道发给谁，只有得到目标设备的MAC地址，才能完成封装】\n- R3 上配 用`IP地址`的静态路由到R1 ,【最后不会知道目标的MAC，因为静态路由配的是地址，R3明确知道要发给谁，可以直接封装】\n\n**R1  = ping => R3** 过程\n1. R1到R3需要跨网段，因此，需要涉及代理ARP\n2. R1根据R3的IP地址发送ARP广播【广播包中有源IP，源MAC，目的IP】。网关R2收到后，解封装【其他设备收到后发现不是发给自己的，就丢弃】，再以自己的名义封装ARP请求并发给R3。R3收到请求后，返回1个ARP响应给R2,R2再发给R1\n\n\n代理ARP：以自己的名义将别人的包转发出去。\n\n\n\n\n\n## 2. 双出口\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201214195453914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n- 上图是网络双出口，R1到外网从R2走\n\t- 原因：\n> R1 ping 外网时，发送ARP广播，R2和R3都收到ARP广播，并发送了响应\n> 但是，由于R3的响应报文先发，R2的报文后发，后发的报文会覆盖先发的报文，因此，R1到外网从R2出去\n\n**华为、华三设备尤其要注意接口代理ARP是否打开。**","source":"_posts/网络-实例【ARP】.md","raw":"---\ntitle: ARP协议\ntag: CCNA\ncategories:\n  - 网络工程\n  - CCNA \n---\n\n\n\n## 1. ARP请求与ARP代理\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201214192045886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n- R1 上配 用`接口`的静态路由到R3，【最后一定可以知道目的设备的MAC,因为只知道从接口发，而不知道发给谁，只有得到目标设备的MAC地址，才能完成封装】\n- R3 上配 用`IP地址`的静态路由到R1 ,【最后不会知道目标的MAC，因为静态路由配的是地址，R3明确知道要发给谁，可以直接封装】\n\n**R1  = ping => R3** 过程\n1. R1到R3需要跨网段，因此，需要涉及代理ARP\n2. R1根据R3的IP地址发送ARP广播【广播包中有源IP，源MAC，目的IP】。网关R2收到后，解封装【其他设备收到后发现不是发给自己的，就丢弃】，再以自己的名义封装ARP请求并发给R3。R3收到请求后，返回1个ARP响应给R2,R2再发给R1\n\n\n代理ARP：以自己的名义将别人的包转发出去。\n\n\n\n\n\n## 2. 双出口\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201214195453914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n- 上图是网络双出口，R1到外网从R2走\n\t- 原因：\n> R1 ping 外网时，发送ARP广播，R2和R3都收到ARP广播，并发送了响应\n> 但是，由于R3的响应报文先发，R2的报文后发，后发的报文会覆盖先发的报文，因此，R1到外网从R2出去\n\n**华为、华三设备尤其要注意接口代理ARP是否打开。**","slug":"网络-实例【ARP】","published":1,"date":"2021-06-02T02:49:19.195Z","updated":"2021-06-01T07:36:09.386Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs1p001clcvdc9nqf9p3","content":"<h2 id=\"1-ARP请求与ARP代理\"><a href=\"#1-ARP请求与ARP代理\" class=\"headerlink\" title=\"1. ARP请求与ARP代理\"></a>1. ARP请求与ARP代理</h2><p><img src=\"https://img-blog.csdnimg.cn/20201214192045886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>R1 上配 用<code>接口</code>的静态路由到R3，【最后一定可以知道目的设备的MAC,因为只知道从接口发，而不知道发给谁，只有得到目标设备的MAC地址，才能完成封装】</li>\n<li>R3 上配 用<code>IP地址</code>的静态路由到R1 ,【最后不会知道目标的MAC，因为静态路由配的是地址，R3明确知道要发给谁，可以直接封装】</li>\n</ul>\n<p><strong>R1  = ping =&gt; R3</strong> 过程</p>\n<ol>\n<li>R1到R3需要跨网段，因此，需要涉及代理ARP</li>\n<li>R1根据R3的IP地址发送ARP广播【广播包中有源IP，源MAC，目的IP】。网关R2收到后，解封装【其他设备收到后发现不是发给自己的，就丢弃】，再以自己的名义封装ARP请求并发给R3。R3收到请求后，返回1个ARP响应给R2,R2再发给R1</li>\n</ol>\n<p>代理ARP：以自己的名义将别人的包转发出去。</p>\n<h2 id=\"2-双出口\"><a href=\"#2-双出口\" class=\"headerlink\" title=\"2. 双出口\"></a>2. 双出口</h2><p><img src=\"https://img-blog.csdnimg.cn/20201214195453914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>上图是网络双出口，R1到外网从R2走<ul>\n<li>原因：<blockquote>\n<p>R1 ping 外网时，发送ARP广播，R2和R3都收到ARP广播，并发送了响应<br>但是，由于R3的响应报文先发，R2的报文后发，后发的报文会覆盖先发的报文，因此，R1到外网从R2出去</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>华为、华三设备尤其要注意接口代理ARP是否打开。</strong></p>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h2 id=\"1-ARP请求与ARP代理\"><a href=\"#1-ARP请求与ARP代理\" class=\"headerlink\" title=\"1. ARP请求与ARP代理\"></a>1. ARP请求与ARP代理</h2><p><img src=\"https://img-blog.csdnimg.cn/20201214192045886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>R1 上配 用<code>接口</code>的静态路由到R3，【最后一定可以知道目的设备的MAC,因为只知道从接口发，而不知道发给谁，只有得到目标设备的MAC地址，才能完成封装】</li>\n<li>R3 上配 用<code>IP地址</code>的静态路由到R1 ,【最后不会知道目标的MAC，因为静态路由配的是地址，R3明确知道要发给谁，可以直接封装】</li>\n</ul>\n<p><strong>R1  = ping =&gt; R3</strong> 过程</p>\n<ol>\n<li>R1到R3需要跨网段，因此，需要涉及代理ARP</li>\n<li>R1根据R3的IP地址发送ARP广播【广播包中有源IP，源MAC，目的IP】。网关R2收到后，解封装【其他设备收到后发现不是发给自己的，就丢弃】，再以自己的名义封装ARP请求并发给R3。R3收到请求后，返回1个ARP响应给R2,R2再发给R1</li>\n</ol>\n<p>代理ARP：以自己的名义将别人的包转发出去。</p>\n<h2 id=\"2-双出口\"><a href=\"#2-双出口\" class=\"headerlink\" title=\"2. 双出口\"></a>2. 双出口</h2><p><img src=\"https://img-blog.csdnimg.cn/20201214195453914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>上图是网络双出口，R1到外网从R2走<ul>\n<li>原因：<blockquote>\n<p>R1 ping 外网时，发送ARP广播，R2和R3都收到ARP广播，并发送了响应<br>但是，由于R3的响应报文先发，R2的报文后发，后发的报文会覆盖先发的报文，因此，R1到外网从R2出去</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>华为、华三设备尤其要注意接口代理ARP是否打开。</strong></p>\n"},{"title":"ASP.NET —— 入门笔记","_content":"\n# ASP.NET-入门笔记\n\n[toc]\n\n## 1. 环境\n### 1.1 工具\n安装顺序：【IIS必须安装在VS前，不然需要在VS的安装路径下找到命令行，注册到 iis】\n- SQL Server2012 \n-  IIS\n-  VS2012 (.NETv2.0) \n\n\n### 1.2 .NET注册IIS【当安装顺序有误时】\n微软官网:`https://www.microsoft.com/en-us/download/`\n[微软官网](https://www.microsoft.com/en-us/download/)\n\n- asp.net4.0注册：\n\n>打开程序-运行-cmd:输入一下命令重新注册IIS\n`C:\\WINDOWS\\Microsoft.NET\\Framework64\\v4.0.30319\\aspnet_regiis.exe -i`\n\n- asp.net2.0注册：\n\n> `C:\\WINDOWS\\Microsoft.NET\\Framework64\\v2.0.50727\\aspnet_regiis.exe -i`\n\n### 1.3 IIS的安装及配置\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208105135509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120810525914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208105342212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208105514125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208105612468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n一路 “下一步”\n### 1.4 配置IIS\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208111241900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n自己建一个应用程序池\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208111513633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208111822740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208111920380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208112047663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208112233269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n默认文档的名字=》设为项目中要作为 首页的页面的文件名\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208112317624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.5 使用VS 打开站点，进行编辑代码\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208112846738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208112923434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208113058844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208113141199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208113313339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 2. 添加母版页\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208113534864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208113623603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120811391559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 3. 添加主题、样式、Skin\n一个站点可以有多个主题【但只能应用1个，主题相当于文件夹】，每个主题由 多个css文件和 skin文件构成\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208114303547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208114407482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\ncss文件用于调整 html 标签的样式\n【一般使用**类名**调整**样式**，**ID**供 **后端代码**使用，**skinID**调整**控件样式**】\n【控件要使用css样式，必须使用 CssClass=\"样式名\"】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208114433403.png)\n## 3. 应用主题\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208115644546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n删除原来的页面，添加使用 “主题” 的页面\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208115925372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208115947923.png)\n## 3. 使用母版页创建页面\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120812022881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208120327266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208120423763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 4. 添加站点地图\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120812055265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n叶子节点使用自闭合标签，非叶子节点使用双标签\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208121116863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 5. 网站Logo\n打开 PS,设计Logo,保存为png格式，并放入网站的主题文件夹内  \n-   宽：20cm  ;  \n-  高：2cm  ;  \n-  分辨率：72像素/英寸；  \n-  颜色模式：RGB 8位；  \n\t\t\t\t\t(高度一般为页面的10%，宽度为高度的4~5倍)  \n\t\t\t\t拖入image 控件，设置图片的路径，显示图片\n\n```csharp\n<asp:Image ID=\"Image1\" ImageURL=\"~/App_Themes/主题1/logo.png\" runat=\"server\" />\t  \n```\n## 6. 数据库设置\n 1. 准备好1个数据库 \n 2. 【管理员方式打开数据库DBMS】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208122238288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208122309196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208122332430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208122443767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208122839385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208122920323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208123146273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120812321557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n设置权限\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202012081233217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208123542685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 7. 网站连接数据库\n- 随便在1个页面中 拖入 “数据源控件”\n- 以可视化的方式连接数据库【目的是：在web.cofig中得到数据库的连接字符串】\n- 删除数据源控件\n>\t-  左下角切换到设计视图  \n>\t-  控件右上角的箭头  \n>\t-  配置数据源  \n>\t- 展开+号，可以看到连接数据库的字符串，然后单击新建连接  \n>\t- sqlServer   \n>\t- 服务器名，输入你的数据库所在的实例名  \n>\t-  登录数据库验证方式，有你的数据库创建时的设定来决定  \n>\t-  下方，选择你的数据库，测试一下连接  \n>\t-  多了一个链接字符串  \n>\t- 打上√，这样连接字符串就自动写进了你的web.config中  \n >\t- 【下一步，就建好了连接，并同时进入数据查询界面，\n\t\t\t\t\t为你的数据源控件准备一段查询语句】  \n\n\nweb.config就多了一段sql的相关代码 【Data Source=数据库所在电脑的主机名】 .\n\n```csharp\n <connectionStrings>\n    \t\t <add \tname=\"CompanySalesConnectionString\" \n    \t\t\t\tconnectionString=\"Data Source=WIN-JM8KUC1NODF;\n    \t\t\t\tInitial Catalog=CompanySales;\n    \t\t\t\tIntegrated Security=True\"\n        \t\t\tproviderName=\"System.Data.SqlClient\" />\n </connectionStrings>\n```\n\n\n## 8. 数据库操作类\n数据库访问类的编写步骤：\n\n+   在任一页面放置 数据源控件 ，以可视化的方式创建  **连接字符串**\n+   定义1个私有的静态 SqlConnection  属性，并 编写该属性的getter 访问器\n+   编写 静态 获取数据集的方法【及其重载方法】\n+   编写 静态 执行SQL语句的 方法【及其重载方法】\n+   编写 静态 关闭 sqlConnection 的 方法\n\n```csharp\nusing System;\nusing System.Collections.Generic;\nusing System.Web;\n\n\nusing System.Data;  //针对所有类型的数据库\nusing System.Data.SqlClient;  //针对SQL\nusing System.Configuration;  //针对web.config\n\n\n/// <summary>\n/// DBClass 的摘要说明\n/// </summary>\npublic class DBClass\n{\n    //数据库连接\n    private static SqlConnection connection;\n\n    public static SqlConnection Connection\n    {\n        get\n        {\n            String connectionString = ConfigurationManager.ConnectionStrings[\"SchoolConnectionString\"].ConnectionString;\n\n            if (connection == null || connection.State == ConnectionState.Closed)\n            {\n                connection = new SqlConnection(connectionString);\n                connection.Open();\n\n            }\n            return connection;\n        }\n    }\n\n\n    //形成记录集\n\n    public static DataTable GetDataSet(String sql)\n    {\n        SqlCommand command = new SqlCommand(sql, Connection); //静态类的方便之处，省去了new\n        DataSet ds = new DataSet();//用DataSet()实例化(new)出1个ds,变量ds就有了内存\n        SqlDataAdapter da = new SqlDataAdapter(command);\n        /*\n         * da负责 ：\n                       1. 按照command指定的数据库连接Connection ；\n                       2. 按照 sql给出的 SQL的脚本要求，\n         *                  从数据库中 查询并且复制 1份数据Fill(注入到ds中)，\n                            并自动解除对数据库的独占，等待程序结束。\n                             比如：\n                                    “确定”按钮的click 事件触发，da把所有更改 写回数据库\n         */\n\n\n        da.Fill(ds); //da把SQL中复制的数据注入到数据库\n        return ds.Tables[0];//ds 类似于 select 后得到的表，所以有Tables属性，返回 ds.Tables[0]即第一个表\n    }\n\n\n    //方法重载 \n    //c#【重载】的好处，避免了名目繁多\n\n    //第一个方法：常用的就是看看数据，select然后GridView到web窗体上\n    //第二个方法：增加了一个数组参数，比如你要删除数据，就拿这个数组来指示你删除哪个。\n    //至于记录集的形成方式，两个一样，发挥关键作用的是那个SqlDataAdapter 类型的 da 对象\n    /*\n     * 真同名，连大小写都一样，\n     *一种东西，两个含义:\n     *     前一个，只有一个string类型的参数 sql，\n     *     后一个有两个参数，除了string类型的参数 sql，\n     *     还有一个SqlParameter[] 类型的参数 sqlparameter\n           增加了这个数组类型的参数，我们就可以一个一个值读，\n     *     如果遍历下去，就不是完成一件事，而是完成了同一操作的若干件事。\n     *     \n   */\n    public static DataTable GetDataSet(String sql, SqlParameter[] sqlparameter)\n    {\n        SqlCommand command = new SqlCommand(sql, Connection);\n        foreach (SqlParameter parameter in sqlparameter)\n        {\n            command.Parameters.Add(parameter); //sqlparameter是一个数组，用来替换command的某一个位置的参数\n        }\n        DataSet ds = new DataSet();\n        SqlDataAdapter da = new SqlDataAdapter(command);\n\n        da.Fill(ds);\n        return ds.Tables[0];\n    }\n\n    public static int ExecuteSql(String sql)\n    {\n        SqlCommand command = new SqlCommand(sql, Connection);\n        return command.ExecuteNonQuery();\n    }\n\n    public static int ExecuteSql(String sql, SqlParameter[] sqlparameter)\n    {\n        SqlCommand command = new SqlCommand(sql, Connection);\n        foreach (SqlParameter parameter in sqlparameter)\n        {\n            command.Parameters.Add(parameter);\n        }\n        return command.ExecuteNonQuery();\n\n    }\n\n    public static int InsertSql(string sql)\n    {\n\n        SqlCommand sc = new SqlCommand(sql,Connection);\n        \n        return sc.ExecuteNonQuery();\n        \n\n    }\n    public static int DeleteSql(string sql)\n    {\n        SqlCommand sc = new SqlCommand(sql, Connection);\n\n        return sc.ExecuteNonQuery();\n    }\n\n    public static int UpdateSql(string sql)\n    {\n        SqlCommand sc = new SqlCommand(sql, Connection);\n\n        return sc.ExecuteNonQuery();\n    }\n    public static bool CloseConn() {\n        connection.Close();\n        return true;\n    }\n\n}\n\t\t\t\t\t\t\t\t\t\n```\n## 10. ADO【数据库操作的驱动】\nasp.net 数据对象【类似 jdbc】\n- JDBC：导入对应的jar包；使用 maven\n- C#：引入 DLL；使用 nuget\n\n### 10.1 ADO 与 JDBC 的对比\n[ADO 与 JDBC 的对比—链接](https://blog.csdn.net/qingming7573/article/details/53143180)\n\n### 10.2 ADO 的几种对象\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208132618212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n","source":"_posts/ASP.NET — 入门笔记.md","raw":"---\ntitle: ASP.NET —— 入门笔记\ntag: C#\ncategories:\n  - [后端,C#]\n  - [后端,ASP.NET]\n---\n\n# ASP.NET-入门笔记\n\n[toc]\n\n## 1. 环境\n### 1.1 工具\n安装顺序：【IIS必须安装在VS前，不然需要在VS的安装路径下找到命令行，注册到 iis】\n- SQL Server2012 \n-  IIS\n-  VS2012 (.NETv2.0) \n\n\n### 1.2 .NET注册IIS【当安装顺序有误时】\n微软官网:`https://www.microsoft.com/en-us/download/`\n[微软官网](https://www.microsoft.com/en-us/download/)\n\n- asp.net4.0注册：\n\n>打开程序-运行-cmd:输入一下命令重新注册IIS\n`C:\\WINDOWS\\Microsoft.NET\\Framework64\\v4.0.30319\\aspnet_regiis.exe -i`\n\n- asp.net2.0注册：\n\n> `C:\\WINDOWS\\Microsoft.NET\\Framework64\\v2.0.50727\\aspnet_regiis.exe -i`\n\n### 1.3 IIS的安装及配置\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208105135509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120810525914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208105342212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208105514125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208105612468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n一路 “下一步”\n### 1.4 配置IIS\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208111241900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n自己建一个应用程序池\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208111513633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208111822740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208111920380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208112047663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208112233269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n默认文档的名字=》设为项目中要作为 首页的页面的文件名\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208112317624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 1.5 使用VS 打开站点，进行编辑代码\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208112846738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208112923434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208113058844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208113141199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208113313339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 2. 添加母版页\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208113534864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208113623603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120811391559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 3. 添加主题、样式、Skin\n一个站点可以有多个主题【但只能应用1个，主题相当于文件夹】，每个主题由 多个css文件和 skin文件构成\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208114303547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208114407482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\ncss文件用于调整 html 标签的样式\n【一般使用**类名**调整**样式**，**ID**供 **后端代码**使用，**skinID**调整**控件样式**】\n【控件要使用css样式，必须使用 CssClass=\"样式名\"】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208114433403.png)\n## 3. 应用主题\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208115644546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n删除原来的页面，添加使用 “主题” 的页面\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208115925372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208115947923.png)\n## 3. 使用母版页创建页面\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120812022881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208120327266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208120423763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 4. 添加站点地图\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120812055265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n叶子节点使用自闭合标签，非叶子节点使用双标签\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208121116863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 5. 网站Logo\n打开 PS,设计Logo,保存为png格式，并放入网站的主题文件夹内  \n-   宽：20cm  ;  \n-  高：2cm  ;  \n-  分辨率：72像素/英寸；  \n-  颜色模式：RGB 8位；  \n\t\t\t\t\t(高度一般为页面的10%，宽度为高度的4~5倍)  \n\t\t\t\t拖入image 控件，设置图片的路径，显示图片\n\n```csharp\n<asp:Image ID=\"Image1\" ImageURL=\"~/App_Themes/主题1/logo.png\" runat=\"server\" />\t  \n```\n## 6. 数据库设置\n 1. 准备好1个数据库 \n 2. 【管理员方式打开数据库DBMS】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208122238288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208122309196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208122332430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208122443767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208122839385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208122920323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208123146273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120812321557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n设置权限\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202012081233217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208123542685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 7. 网站连接数据库\n- 随便在1个页面中 拖入 “数据源控件”\n- 以可视化的方式连接数据库【目的是：在web.cofig中得到数据库的连接字符串】\n- 删除数据源控件\n>\t-  左下角切换到设计视图  \n>\t-  控件右上角的箭头  \n>\t-  配置数据源  \n>\t- 展开+号，可以看到连接数据库的字符串，然后单击新建连接  \n>\t- sqlServer   \n>\t- 服务器名，输入你的数据库所在的实例名  \n>\t-  登录数据库验证方式，有你的数据库创建时的设定来决定  \n>\t-  下方，选择你的数据库，测试一下连接  \n>\t-  多了一个链接字符串  \n>\t- 打上√，这样连接字符串就自动写进了你的web.config中  \n >\t- 【下一步，就建好了连接，并同时进入数据查询界面，\n\t\t\t\t\t为你的数据源控件准备一段查询语句】  \n\n\nweb.config就多了一段sql的相关代码 【Data Source=数据库所在电脑的主机名】 .\n\n```csharp\n <connectionStrings>\n    \t\t <add \tname=\"CompanySalesConnectionString\" \n    \t\t\t\tconnectionString=\"Data Source=WIN-JM8KUC1NODF;\n    \t\t\t\tInitial Catalog=CompanySales;\n    \t\t\t\tIntegrated Security=True\"\n        \t\t\tproviderName=\"System.Data.SqlClient\" />\n </connectionStrings>\n```\n\n\n## 8. 数据库操作类\n数据库访问类的编写步骤：\n\n+   在任一页面放置 数据源控件 ，以可视化的方式创建  **连接字符串**\n+   定义1个私有的静态 SqlConnection  属性，并 编写该属性的getter 访问器\n+   编写 静态 获取数据集的方法【及其重载方法】\n+   编写 静态 执行SQL语句的 方法【及其重载方法】\n+   编写 静态 关闭 sqlConnection 的 方法\n\n```csharp\nusing System;\nusing System.Collections.Generic;\nusing System.Web;\n\n\nusing System.Data;  //针对所有类型的数据库\nusing System.Data.SqlClient;  //针对SQL\nusing System.Configuration;  //针对web.config\n\n\n/// <summary>\n/// DBClass 的摘要说明\n/// </summary>\npublic class DBClass\n{\n    //数据库连接\n    private static SqlConnection connection;\n\n    public static SqlConnection Connection\n    {\n        get\n        {\n            String connectionString = ConfigurationManager.ConnectionStrings[\"SchoolConnectionString\"].ConnectionString;\n\n            if (connection == null || connection.State == ConnectionState.Closed)\n            {\n                connection = new SqlConnection(connectionString);\n                connection.Open();\n\n            }\n            return connection;\n        }\n    }\n\n\n    //形成记录集\n\n    public static DataTable GetDataSet(String sql)\n    {\n        SqlCommand command = new SqlCommand(sql, Connection); //静态类的方便之处，省去了new\n        DataSet ds = new DataSet();//用DataSet()实例化(new)出1个ds,变量ds就有了内存\n        SqlDataAdapter da = new SqlDataAdapter(command);\n        /*\n         * da负责 ：\n                       1. 按照command指定的数据库连接Connection ；\n                       2. 按照 sql给出的 SQL的脚本要求，\n         *                  从数据库中 查询并且复制 1份数据Fill(注入到ds中)，\n                            并自动解除对数据库的独占，等待程序结束。\n                             比如：\n                                    “确定”按钮的click 事件触发，da把所有更改 写回数据库\n         */\n\n\n        da.Fill(ds); //da把SQL中复制的数据注入到数据库\n        return ds.Tables[0];//ds 类似于 select 后得到的表，所以有Tables属性，返回 ds.Tables[0]即第一个表\n    }\n\n\n    //方法重载 \n    //c#【重载】的好处，避免了名目繁多\n\n    //第一个方法：常用的就是看看数据，select然后GridView到web窗体上\n    //第二个方法：增加了一个数组参数，比如你要删除数据，就拿这个数组来指示你删除哪个。\n    //至于记录集的形成方式，两个一样，发挥关键作用的是那个SqlDataAdapter 类型的 da 对象\n    /*\n     * 真同名，连大小写都一样，\n     *一种东西，两个含义:\n     *     前一个，只有一个string类型的参数 sql，\n     *     后一个有两个参数，除了string类型的参数 sql，\n     *     还有一个SqlParameter[] 类型的参数 sqlparameter\n           增加了这个数组类型的参数，我们就可以一个一个值读，\n     *     如果遍历下去，就不是完成一件事，而是完成了同一操作的若干件事。\n     *     \n   */\n    public static DataTable GetDataSet(String sql, SqlParameter[] sqlparameter)\n    {\n        SqlCommand command = new SqlCommand(sql, Connection);\n        foreach (SqlParameter parameter in sqlparameter)\n        {\n            command.Parameters.Add(parameter); //sqlparameter是一个数组，用来替换command的某一个位置的参数\n        }\n        DataSet ds = new DataSet();\n        SqlDataAdapter da = new SqlDataAdapter(command);\n\n        da.Fill(ds);\n        return ds.Tables[0];\n    }\n\n    public static int ExecuteSql(String sql)\n    {\n        SqlCommand command = new SqlCommand(sql, Connection);\n        return command.ExecuteNonQuery();\n    }\n\n    public static int ExecuteSql(String sql, SqlParameter[] sqlparameter)\n    {\n        SqlCommand command = new SqlCommand(sql, Connection);\n        foreach (SqlParameter parameter in sqlparameter)\n        {\n            command.Parameters.Add(parameter);\n        }\n        return command.ExecuteNonQuery();\n\n    }\n\n    public static int InsertSql(string sql)\n    {\n\n        SqlCommand sc = new SqlCommand(sql,Connection);\n        \n        return sc.ExecuteNonQuery();\n        \n\n    }\n    public static int DeleteSql(string sql)\n    {\n        SqlCommand sc = new SqlCommand(sql, Connection);\n\n        return sc.ExecuteNonQuery();\n    }\n\n    public static int UpdateSql(string sql)\n    {\n        SqlCommand sc = new SqlCommand(sql, Connection);\n\n        return sc.ExecuteNonQuery();\n    }\n    public static bool CloseConn() {\n        connection.Close();\n        return true;\n    }\n\n}\n\t\t\t\t\t\t\t\t\t\n```\n## 10. ADO【数据库操作的驱动】\nasp.net 数据对象【类似 jdbc】\n- JDBC：导入对应的jar包；使用 maven\n- C#：引入 DLL；使用 nuget\n\n### 10.1 ADO 与 JDBC 的对比\n[ADO 与 JDBC 的对比—链接](https://blog.csdn.net/qingming7573/article/details/53143180)\n\n### 10.2 ADO 的几种对象\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208132618212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n","slug":"ASP.NET — 入门笔记","published":1,"date":"2021-06-02T02:49:19.198Z","updated":"2021-06-01T10:15:55.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs2g0041lcvdahuf7y8c","content":"<h1 id=\"ASP-NET-入门笔记\"><a href=\"#ASP-NET-入门笔记\" class=\"headerlink\" title=\"ASP.NET-入门笔记\"></a>ASP.NET-入门笔记</h1><p>[toc]</p>\n<h2 id=\"1-环境\"><a href=\"#1-环境\" class=\"headerlink\" title=\"1. 环境\"></a>1. 环境</h2><h3 id=\"1-1-工具\"><a href=\"#1-1-工具\" class=\"headerlink\" title=\"1.1 工具\"></a>1.1 工具</h3><p>安装顺序：【IIS必须安装在VS前，不然需要在VS的安装路径下找到命令行，注册到 iis】</p>\n<ul>\n<li>SQL Server2012 </li>\n<li> IIS</li>\n<li> VS2012 (.NETv2.0) </li>\n</ul>\n<h3 id=\"1-2-NET注册IIS【当安装顺序有误时】\"><a href=\"#1-2-NET注册IIS【当安装顺序有误时】\" class=\"headerlink\" title=\"1.2 .NET注册IIS【当安装顺序有误时】\"></a>1.2 .NET注册IIS【当安装顺序有误时】</h3><p>微软官网:<code>https://www.microsoft.com/en-us/download/</code><br><a href=\"https://www.microsoft.com/en-us/download/\">微软官网</a></p>\n<ul>\n<li>asp.net4.0注册：</li>\n</ul>\n<blockquote>\n<p>打开程序-运行-cmd:输入一下命令重新注册IIS<br><code>C:\\WINDOWS\\Microsoft.NET\\Framework64\\v4.0.30319\\aspnet_regiis.exe -i</code></p>\n</blockquote>\n<ul>\n<li>asp.net2.0注册：</li>\n</ul>\n<blockquote>\n<p><code>C:\\WINDOWS\\Microsoft.NET\\Framework64\\v2.0.50727\\aspnet_regiis.exe -i</code></p>\n</blockquote>\n<h3 id=\"1-3-IIS的安装及配置\"><a href=\"#1-3-IIS的安装及配置\" class=\"headerlink\" title=\"1.3 IIS的安装及配置\"></a>1.3 IIS的安装及配置</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208105135509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020120810525914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208105342212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208105514125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208105612468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>一路 “下一步”</p>\n<h3 id=\"1-4-配置IIS\"><a href=\"#1-4-配置IIS\" class=\"headerlink\" title=\"1.4 配置IIS\"></a>1.4 配置IIS</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208111241900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>自己建一个应用程序池<br><img src=\"https://img-blog.csdnimg.cn/20201208111513633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208111822740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208111920380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208112047663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208112233269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>默认文档的名字=》设为项目中要作为 首页的页面的文件名<br><img src=\"https://img-blog.csdnimg.cn/20201208112317624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-5-使用VS-打开站点，进行编辑代码\"><a href=\"#1-5-使用VS-打开站点，进行编辑代码\" class=\"headerlink\" title=\"1.5 使用VS 打开站点，进行编辑代码\"></a>1.5 使用VS 打开站点，进行编辑代码</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208112846738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208112923434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208113058844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208113141199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208113313339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-添加母版页\"><a href=\"#2-添加母版页\" class=\"headerlink\" title=\"2. 添加母版页\"></a>2. 添加母版页</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208113534864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208113623603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020120811391559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-添加主题、样式、Skin\"><a href=\"#3-添加主题、样式、Skin\" class=\"headerlink\" title=\"3. 添加主题、样式、Skin\"></a>3. 添加主题、样式、Skin</h2><p>一个站点可以有多个主题【但只能应用1个，主题相当于文件夹】，每个主题由 多个css文件和 skin文件构成<br><img src=\"https://img-blog.csdnimg.cn/20201208114303547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208114407482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>css文件用于调整 html 标签的样式<br>【一般使用<strong>类名</strong>调整<strong>样式</strong>，<strong>ID</strong>供 <strong>后端代码</strong>使用，<strong>skinID</strong>调整<strong>控件样式</strong>】<br>【控件要使用css样式，必须使用 CssClass=”样式名”】<br><img src=\"https://img-blog.csdnimg.cn/20201208114433403.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-应用主题\"><a href=\"#3-应用主题\" class=\"headerlink\" title=\"3. 应用主题\"></a>3. 应用主题</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208115644546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>删除原来的页面，添加使用 “主题” 的页面<br><img src=\"https://img-blog.csdnimg.cn/20201208115925372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208115947923.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-使用母版页创建页面\"><a href=\"#3-使用母版页创建页面\" class=\"headerlink\" title=\"3. 使用母版页创建页面\"></a>3. 使用母版页创建页面</h2><p><img src=\"https://img-blog.csdnimg.cn/2020120812022881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208120327266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208120423763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"4-添加站点地图\"><a href=\"#4-添加站点地图\" class=\"headerlink\" title=\"4. 添加站点地图\"></a>4. 添加站点地图</h2><p><img src=\"https://img-blog.csdnimg.cn/2020120812055265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>叶子节点使用自闭合标签，非叶子节点使用双标签<br><img src=\"https://img-blog.csdnimg.cn/20201208121116863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"5-网站Logo\"><a href=\"#5-网站Logo\" class=\"headerlink\" title=\"5. 网站Logo\"></a>5. 网站Logo</h2><p>打开 PS,设计Logo,保存为png格式，并放入网站的主题文件夹内  </p>\n<ul>\n<li>  宽：20cm  ;  </li>\n<li> 高：2cm  ;  </li>\n<li> 分辨率：72像素/英寸；  </li>\n<li>颜色模式：RGB 8位；  <pre><code>              (高度一般为页面的10%，宽度为高度的4~5倍)  \n          拖入image 控件，设置图片的路径，显示图片\n</code></pre>\n</li>\n</ul>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;asp:Image ID=<span class=\"string\">&quot;Image1&quot;</span> ImageURL=<span class=\"string\">&quot;~/App_Themes/主题1/logo.png&quot;</span> runat=<span class=\"string\">&quot;server&quot;</span> /&gt;\t  </span><br></pre></td></tr></table></figure>\n<h2 id=\"6-数据库设置\"><a href=\"#6-数据库设置\" class=\"headerlink\" title=\"6. 数据库设置\"></a>6. 数据库设置</h2><ol>\n<li>准备好1个数据库 </li>\n<li>【管理员方式打开数据库DBMS】<br><img src=\"https://img-blog.csdnimg.cn/20201208122238288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208122309196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208122332430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208122443767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20201208122839385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208122920323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201208123146273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020120812321557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>设置权限<br><img src=\"https://img-blog.csdnimg.cn/202012081233217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208123542685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"7-网站连接数据库\"><a href=\"#7-网站连接数据库\" class=\"headerlink\" title=\"7. 网站连接数据库\"></a>7. 网站连接数据库</h2><ul>\n<li>随便在1个页面中 拖入 “数据源控件”</li>\n<li>以可视化的方式连接数据库【目的是：在web.cofig中得到数据库的连接字符串】</li>\n<li>删除数据源控件<blockquote>\n<ul>\n<li> 左下角切换到设计视图  </li>\n<li> 控件右上角的箭头  </li>\n<li> 配置数据源  </li>\n<li>展开+号，可以看到连接数据库的字符串，然后单击新建连接  </li>\n<li>sqlServer   </li>\n<li>服务器名，输入你的数据库所在的实例名  </li>\n<li> 登录数据库验证方式，有你的数据库创建时的设定来决定  </li>\n<li> 下方，选择你的数据库，测试一下连接  </li>\n<li> 多了一个链接字符串  </li>\n<li>打上√，这样连接字符串就自动写进了你的web.config中  </li>\n<li>【下一步，就建好了连接，并同时进入数据查询界面，<pre><code>         为你的数据源控件准备一段查询语句】  \n</code></pre>\n</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<p>web.config就多了一段sql的相关代码 【Data Source=数据库所在电脑的主机名】 .</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;connectionStrings&gt;</span><br><span class=\"line\">   \t\t &lt;<span class=\"keyword\">add</span> \tname=<span class=\"string\">&quot;CompanySalesConnectionString&quot;</span> </span><br><span class=\"line\">   \t\t\t\tconnectionString=<span class=\"string\">&quot;Data Source=WIN-JM8KUC1NODF;</span></span><br><span class=\"line\"><span class=\"string\">   \t\t\t\tInitial Catalog=CompanySales;</span></span><br><span class=\"line\"><span class=\"string\">   \t\t\t\tIntegrated Security=True&quot;</span></span><br><span class=\"line\">       \t\t\tproviderName=<span class=\"string\">&quot;System.Data.SqlClient&quot;</span> /&gt;</span><br><span class=\"line\">&lt;/connectionStrings&gt;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"8-数据库操作类\"><a href=\"#8-数据库操作类\" class=\"headerlink\" title=\"8. 数据库操作类\"></a>8. 数据库操作类</h2><p>数据库访问类的编写步骤：</p>\n<ul>\n<li>  在任一页面放置 数据源控件 ，以可视化的方式创建  <strong>连接字符串</strong></li>\n<li>  定义1个私有的静态 SqlConnection  属性，并 编写该属性的getter 访问器</li>\n<li>  编写 静态 获取数据集的方法【及其重载方法】</li>\n<li>  编写 静态 执行SQL语句的 方法【及其重载方法】</li>\n<li>  编写 静态 关闭 sqlConnection 的 方法</li>\n</ul>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Web;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Data;  <span class=\"comment\">//针对所有类型的数据库</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Data.SqlClient;  <span class=\"comment\">//针对SQL</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Configuration;  <span class=\"comment\">//针对web.config</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> DBClass 的摘要说明</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">DBClass</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//数据库连接</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> SqlConnection connection;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SqlConnection Connection</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            String connectionString = ConfigurationManager.ConnectionStrings[<span class=\"string\">&quot;SchoolConnectionString&quot;</span>].ConnectionString;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (connection == <span class=\"literal\">null</span> || connection.State == ConnectionState.Closed)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                connection = <span class=\"keyword\">new</span> SqlConnection(connectionString);</span><br><span class=\"line\">                connection.Open();</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> connection;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//形成记录集</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> DataTable <span class=\"title\">GetDataSet</span>(<span class=\"params\">String sql</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SqlCommand command = <span class=\"keyword\">new</span> SqlCommand(sql, Connection); <span class=\"comment\">//静态类的方便之处，省去了new</span></span><br><span class=\"line\">        DataSet ds = <span class=\"keyword\">new</span> DataSet();<span class=\"comment\">//用DataSet()实例化(new)出1个ds,变量ds就有了内存</span></span><br><span class=\"line\">        SqlDataAdapter da = <span class=\"keyword\">new</span> SqlDataAdapter(command);</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * da负责 ：</span></span><br><span class=\"line\"><span class=\"comment\">                       1. 按照command指定的数据库连接Connection ；</span></span><br><span class=\"line\"><span class=\"comment\">                       2. 按照 sql给出的 SQL的脚本要求，</span></span><br><span class=\"line\"><span class=\"comment\">         *                  从数据库中 查询并且复制 1份数据Fill(注入到ds中)，</span></span><br><span class=\"line\"><span class=\"comment\">                            并自动解除对数据库的独占，等待程序结束。</span></span><br><span class=\"line\"><span class=\"comment\">                             比如：</span></span><br><span class=\"line\"><span class=\"comment\">                                    “确定”按钮的click 事件触发，da把所有更改 写回数据库</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        da.Fill(ds); <span class=\"comment\">//da把SQL中复制的数据注入到数据库</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ds.Tables[<span class=\"number\">0</span>];<span class=\"comment\">//ds 类似于 select 后得到的表，所以有Tables属性，返回 ds.Tables[0]即第一个表</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//方法重载 </span></span><br><span class=\"line\">    <span class=\"comment\">//c#【重载】的好处，避免了名目繁多</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//第一个方法：常用的就是看看数据，select然后GridView到web窗体上</span></span><br><span class=\"line\">    <span class=\"comment\">//第二个方法：增加了一个数组参数，比如你要删除数据，就拿这个数组来指示你删除哪个。</span></span><br><span class=\"line\">    <span class=\"comment\">//至于记录集的形成方式，两个一样，发挥关键作用的是那个SqlDataAdapter 类型的 da 对象</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * 真同名，连大小写都一样，</span></span><br><span class=\"line\"><span class=\"comment\">     *一种东西，两个含义:</span></span><br><span class=\"line\"><span class=\"comment\">     *     前一个，只有一个string类型的参数 sql，</span></span><br><span class=\"line\"><span class=\"comment\">     *     后一个有两个参数，除了string类型的参数 sql，</span></span><br><span class=\"line\"><span class=\"comment\">     *     还有一个SqlParameter[] 类型的参数 sqlparameter</span></span><br><span class=\"line\"><span class=\"comment\">           增加了这个数组类型的参数，我们就可以一个一个值读，</span></span><br><span class=\"line\"><span class=\"comment\">     *     如果遍历下去，就不是完成一件事，而是完成了同一操作的若干件事。</span></span><br><span class=\"line\"><span class=\"comment\">     *     </span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> DataTable <span class=\"title\">GetDataSet</span>(<span class=\"params\">String sql, SqlParameter[] sqlparameter</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SqlCommand command = <span class=\"keyword\">new</span> SqlCommand(sql, Connection);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (SqlParameter parameter <span class=\"keyword\">in</span> sqlparameter)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            command.Parameters.Add(parameter); <span class=\"comment\">//sqlparameter是一个数组，用来替换command的某一个位置的参数</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        DataSet ds = <span class=\"keyword\">new</span> DataSet();</span><br><span class=\"line\">        SqlDataAdapter da = <span class=\"keyword\">new</span> SqlDataAdapter(command);</span><br><span class=\"line\"></span><br><span class=\"line\">        da.Fill(ds);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ds.Tables[<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> <span class=\"title\">ExecuteSql</span>(<span class=\"params\">String sql</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SqlCommand command = <span class=\"keyword\">new</span> SqlCommand(sql, Connection);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> command.ExecuteNonQuery();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> <span class=\"title\">ExecuteSql</span>(<span class=\"params\">String sql, SqlParameter[] sqlparameter</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SqlCommand command = <span class=\"keyword\">new</span> SqlCommand(sql, Connection);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (SqlParameter parameter <span class=\"keyword\">in</span> sqlparameter)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            command.Parameters.Add(parameter);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> command.ExecuteNonQuery();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> <span class=\"title\">InsertSql</span>(<span class=\"params\"><span class=\"built_in\">string</span> sql</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        SqlCommand sc = <span class=\"keyword\">new</span> SqlCommand(sql,Connection);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> sc.ExecuteNonQuery();</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> <span class=\"title\">DeleteSql</span>(<span class=\"params\"><span class=\"built_in\">string</span> sql</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SqlCommand sc = <span class=\"keyword\">new</span> SqlCommand(sql, Connection);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sc.ExecuteNonQuery();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> <span class=\"title\">UpdateSql</span>(<span class=\"params\"><span class=\"built_in\">string</span> sql</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SqlCommand sc = <span class=\"keyword\">new</span> SqlCommand(sql, Connection);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sc.ExecuteNonQuery();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> <span class=\"title\">CloseConn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        connection.Close();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-ADO【数据库操作的驱动】\"><a href=\"#10-ADO【数据库操作的驱动】\" class=\"headerlink\" title=\"10. ADO【数据库操作的驱动】\"></a>10. ADO【数据库操作的驱动】</h2><p>asp.net 数据对象【类似 jdbc】</p>\n<ul>\n<li>JDBC：导入对应的jar包；使用 maven</li>\n<li>C#：引入 DLL；使用 nuget</li>\n</ul>\n<h3 id=\"10-1-ADO-与-JDBC-的对比\"><a href=\"#10-1-ADO-与-JDBC-的对比\" class=\"headerlink\" title=\"10.1 ADO 与 JDBC 的对比\"></a>10.1 ADO 与 JDBC 的对比</h3><p><a href=\"https://blog.csdn.net/qingming7573/article/details/53143180\">ADO 与 JDBC 的对比—链接</a></p>\n<h3 id=\"10-2-ADO-的几种对象\"><a href=\"#10-2-ADO-的几种对象\" class=\"headerlink\" title=\"10.2 ADO 的几种对象\"></a>10.2 ADO 的几种对象</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208132618212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"ASP-NET-入门笔记\"><a href=\"#ASP-NET-入门笔记\" class=\"headerlink\" title=\"ASP.NET-入门笔记\"></a>ASP.NET-入门笔记</h1><p>[toc]</p>\n<h2 id=\"1-环境\"><a href=\"#1-环境\" class=\"headerlink\" title=\"1. 环境\"></a>1. 环境</h2><h3 id=\"1-1-工具\"><a href=\"#1-1-工具\" class=\"headerlink\" title=\"1.1 工具\"></a>1.1 工具</h3><p>安装顺序：【IIS必须安装在VS前，不然需要在VS的安装路径下找到命令行，注册到 iis】</p>\n<ul>\n<li>SQL Server2012 </li>\n<li> IIS</li>\n<li> VS2012 (.NETv2.0) </li>\n</ul>\n<h3 id=\"1-2-NET注册IIS【当安装顺序有误时】\"><a href=\"#1-2-NET注册IIS【当安装顺序有误时】\" class=\"headerlink\" title=\"1.2 .NET注册IIS【当安装顺序有误时】\"></a>1.2 .NET注册IIS【当安装顺序有误时】</h3><p>微软官网:<code>https://www.microsoft.com/en-us/download/</code><br><a href=\"https://www.microsoft.com/en-us/download/\">微软官网</a></p>\n<ul>\n<li>asp.net4.0注册：</li>\n</ul>\n<blockquote>\n<p>打开程序-运行-cmd:输入一下命令重新注册IIS<br><code>C:\\WINDOWS\\Microsoft.NET\\Framework64\\v4.0.30319\\aspnet_regiis.exe -i</code></p>\n</blockquote>\n<ul>\n<li>asp.net2.0注册：</li>\n</ul>\n<blockquote>\n<p><code>C:\\WINDOWS\\Microsoft.NET\\Framework64\\v2.0.50727\\aspnet_regiis.exe -i</code></p>\n</blockquote>\n<h3 id=\"1-3-IIS的安装及配置\"><a href=\"#1-3-IIS的安装及配置\" class=\"headerlink\" title=\"1.3 IIS的安装及配置\"></a>1.3 IIS的安装及配置</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208105135509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020120810525914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208105342212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208105514125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208105612468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>一路 “下一步”</p>\n<h3 id=\"1-4-配置IIS\"><a href=\"#1-4-配置IIS\" class=\"headerlink\" title=\"1.4 配置IIS\"></a>1.4 配置IIS</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208111241900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>自己建一个应用程序池<br><img src=\"https://img-blog.csdnimg.cn/20201208111513633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208111822740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208111920380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208112047663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208112233269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>默认文档的名字=》设为项目中要作为 首页的页面的文件名<br><img src=\"https://img-blog.csdnimg.cn/20201208112317624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-5-使用VS-打开站点，进行编辑代码\"><a href=\"#1-5-使用VS-打开站点，进行编辑代码\" class=\"headerlink\" title=\"1.5 使用VS 打开站点，进行编辑代码\"></a>1.5 使用VS 打开站点，进行编辑代码</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208112846738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208112923434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208113058844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208113141199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208113313339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-添加母版页\"><a href=\"#2-添加母版页\" class=\"headerlink\" title=\"2. 添加母版页\"></a>2. 添加母版页</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208113534864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208113623603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020120811391559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-添加主题、样式、Skin\"><a href=\"#3-添加主题、样式、Skin\" class=\"headerlink\" title=\"3. 添加主题、样式、Skin\"></a>3. 添加主题、样式、Skin</h2><p>一个站点可以有多个主题【但只能应用1个，主题相当于文件夹】，每个主题由 多个css文件和 skin文件构成<br><img src=\"https://img-blog.csdnimg.cn/20201208114303547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208114407482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>css文件用于调整 html 标签的样式<br>【一般使用<strong>类名</strong>调整<strong>样式</strong>，<strong>ID</strong>供 <strong>后端代码</strong>使用，<strong>skinID</strong>调整<strong>控件样式</strong>】<br>【控件要使用css样式，必须使用 CssClass=”样式名”】<br><img src=\"https://img-blog.csdnimg.cn/20201208114433403.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-应用主题\"><a href=\"#3-应用主题\" class=\"headerlink\" title=\"3. 应用主题\"></a>3. 应用主题</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208115644546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>删除原来的页面，添加使用 “主题” 的页面<br><img src=\"https://img-blog.csdnimg.cn/20201208115925372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208115947923.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-使用母版页创建页面\"><a href=\"#3-使用母版页创建页面\" class=\"headerlink\" title=\"3. 使用母版页创建页面\"></a>3. 使用母版页创建页面</h2><p><img src=\"https://img-blog.csdnimg.cn/2020120812022881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208120327266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208120423763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"4-添加站点地图\"><a href=\"#4-添加站点地图\" class=\"headerlink\" title=\"4. 添加站点地图\"></a>4. 添加站点地图</h2><p><img src=\"https://img-blog.csdnimg.cn/2020120812055265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>叶子节点使用自闭合标签，非叶子节点使用双标签<br><img src=\"https://img-blog.csdnimg.cn/20201208121116863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"5-网站Logo\"><a href=\"#5-网站Logo\" class=\"headerlink\" title=\"5. 网站Logo\"></a>5. 网站Logo</h2><p>打开 PS,设计Logo,保存为png格式，并放入网站的主题文件夹内  </p>\n<ul>\n<li>  宽：20cm  ;  </li>\n<li> 高：2cm  ;  </li>\n<li> 分辨率：72像素/英寸；  </li>\n<li>颜色模式：RGB 8位；  <pre><code>              (高度一般为页面的10%，宽度为高度的4~5倍)  \n          拖入image 控件，设置图片的路径，显示图片\n</code></pre>\n</li>\n</ul>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;asp:Image ID=<span class=\"string\">&quot;Image1&quot;</span> ImageURL=<span class=\"string\">&quot;~/App_Themes/主题1/logo.png&quot;</span> runat=<span class=\"string\">&quot;server&quot;</span> /&gt;\t  </span><br></pre></td></tr></table></figure>\n<h2 id=\"6-数据库设置\"><a href=\"#6-数据库设置\" class=\"headerlink\" title=\"6. 数据库设置\"></a>6. 数据库设置</h2><ol>\n<li>准备好1个数据库 </li>\n<li>【管理员方式打开数据库DBMS】<br><img src=\"https://img-blog.csdnimg.cn/20201208122238288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208122309196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208122332430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208122443767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20201208122839385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208122920323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201208123146273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020120812321557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>设置权限<br><img src=\"https://img-blog.csdnimg.cn/202012081233217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20201208123542685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"7-网站连接数据库\"><a href=\"#7-网站连接数据库\" class=\"headerlink\" title=\"7. 网站连接数据库\"></a>7. 网站连接数据库</h2><ul>\n<li>随便在1个页面中 拖入 “数据源控件”</li>\n<li>以可视化的方式连接数据库【目的是：在web.cofig中得到数据库的连接字符串】</li>\n<li>删除数据源控件<blockquote>\n<ul>\n<li> 左下角切换到设计视图  </li>\n<li> 控件右上角的箭头  </li>\n<li> 配置数据源  </li>\n<li>展开+号，可以看到连接数据库的字符串，然后单击新建连接  </li>\n<li>sqlServer   </li>\n<li>服务器名，输入你的数据库所在的实例名  </li>\n<li> 登录数据库验证方式，有你的数据库创建时的设定来决定  </li>\n<li> 下方，选择你的数据库，测试一下连接  </li>\n<li> 多了一个链接字符串  </li>\n<li>打上√，这样连接字符串就自动写进了你的web.config中  </li>\n<li>【下一步，就建好了连接，并同时进入数据查询界面，<pre><code>         为你的数据源控件准备一段查询语句】  \n</code></pre>\n</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<p>web.config就多了一段sql的相关代码 【Data Source=数据库所在电脑的主机名】 .</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;connectionStrings&gt;</span><br><span class=\"line\">   \t\t &lt;<span class=\"keyword\">add</span> \tname=<span class=\"string\">&quot;CompanySalesConnectionString&quot;</span> </span><br><span class=\"line\">   \t\t\t\tconnectionString=<span class=\"string\">&quot;Data Source=WIN-JM8KUC1NODF;</span></span><br><span class=\"line\"><span class=\"string\">   \t\t\t\tInitial Catalog=CompanySales;</span></span><br><span class=\"line\"><span class=\"string\">   \t\t\t\tIntegrated Security=True&quot;</span></span><br><span class=\"line\">       \t\t\tproviderName=<span class=\"string\">&quot;System.Data.SqlClient&quot;</span> /&gt;</span><br><span class=\"line\">&lt;/connectionStrings&gt;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"8-数据库操作类\"><a href=\"#8-数据库操作类\" class=\"headerlink\" title=\"8. 数据库操作类\"></a>8. 数据库操作类</h2><p>数据库访问类的编写步骤：</p>\n<ul>\n<li>  在任一页面放置 数据源控件 ，以可视化的方式创建  <strong>连接字符串</strong></li>\n<li>  定义1个私有的静态 SqlConnection  属性，并 编写该属性的getter 访问器</li>\n<li>  编写 静态 获取数据集的方法【及其重载方法】</li>\n<li>  编写 静态 执行SQL语句的 方法【及其重载方法】</li>\n<li>  编写 静态 关闭 sqlConnection 的 方法</li>\n</ul>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Web;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Data;  <span class=\"comment\">//针对所有类型的数据库</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Data.SqlClient;  <span class=\"comment\">//针对SQL</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Configuration;  <span class=\"comment\">//针对web.config</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> DBClass 的摘要说明</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">DBClass</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//数据库连接</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> SqlConnection connection;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SqlConnection Connection</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            String connectionString = ConfigurationManager.ConnectionStrings[<span class=\"string\">&quot;SchoolConnectionString&quot;</span>].ConnectionString;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (connection == <span class=\"literal\">null</span> || connection.State == ConnectionState.Closed)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                connection = <span class=\"keyword\">new</span> SqlConnection(connectionString);</span><br><span class=\"line\">                connection.Open();</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> connection;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//形成记录集</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> DataTable <span class=\"title\">GetDataSet</span>(<span class=\"params\">String sql</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SqlCommand command = <span class=\"keyword\">new</span> SqlCommand(sql, Connection); <span class=\"comment\">//静态类的方便之处，省去了new</span></span><br><span class=\"line\">        DataSet ds = <span class=\"keyword\">new</span> DataSet();<span class=\"comment\">//用DataSet()实例化(new)出1个ds,变量ds就有了内存</span></span><br><span class=\"line\">        SqlDataAdapter da = <span class=\"keyword\">new</span> SqlDataAdapter(command);</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * da负责 ：</span></span><br><span class=\"line\"><span class=\"comment\">                       1. 按照command指定的数据库连接Connection ；</span></span><br><span class=\"line\"><span class=\"comment\">                       2. 按照 sql给出的 SQL的脚本要求，</span></span><br><span class=\"line\"><span class=\"comment\">         *                  从数据库中 查询并且复制 1份数据Fill(注入到ds中)，</span></span><br><span class=\"line\"><span class=\"comment\">                            并自动解除对数据库的独占，等待程序结束。</span></span><br><span class=\"line\"><span class=\"comment\">                             比如：</span></span><br><span class=\"line\"><span class=\"comment\">                                    “确定”按钮的click 事件触发，da把所有更改 写回数据库</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        da.Fill(ds); <span class=\"comment\">//da把SQL中复制的数据注入到数据库</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ds.Tables[<span class=\"number\">0</span>];<span class=\"comment\">//ds 类似于 select 后得到的表，所以有Tables属性，返回 ds.Tables[0]即第一个表</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//方法重载 </span></span><br><span class=\"line\">    <span class=\"comment\">//c#【重载】的好处，避免了名目繁多</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//第一个方法：常用的就是看看数据，select然后GridView到web窗体上</span></span><br><span class=\"line\">    <span class=\"comment\">//第二个方法：增加了一个数组参数，比如你要删除数据，就拿这个数组来指示你删除哪个。</span></span><br><span class=\"line\">    <span class=\"comment\">//至于记录集的形成方式，两个一样，发挥关键作用的是那个SqlDataAdapter 类型的 da 对象</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * 真同名，连大小写都一样，</span></span><br><span class=\"line\"><span class=\"comment\">     *一种东西，两个含义:</span></span><br><span class=\"line\"><span class=\"comment\">     *     前一个，只有一个string类型的参数 sql，</span></span><br><span class=\"line\"><span class=\"comment\">     *     后一个有两个参数，除了string类型的参数 sql，</span></span><br><span class=\"line\"><span class=\"comment\">     *     还有一个SqlParameter[] 类型的参数 sqlparameter</span></span><br><span class=\"line\"><span class=\"comment\">           增加了这个数组类型的参数，我们就可以一个一个值读，</span></span><br><span class=\"line\"><span class=\"comment\">     *     如果遍历下去，就不是完成一件事，而是完成了同一操作的若干件事。</span></span><br><span class=\"line\"><span class=\"comment\">     *     </span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> DataTable <span class=\"title\">GetDataSet</span>(<span class=\"params\">String sql, SqlParameter[] sqlparameter</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SqlCommand command = <span class=\"keyword\">new</span> SqlCommand(sql, Connection);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (SqlParameter parameter <span class=\"keyword\">in</span> sqlparameter)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            command.Parameters.Add(parameter); <span class=\"comment\">//sqlparameter是一个数组，用来替换command的某一个位置的参数</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        DataSet ds = <span class=\"keyword\">new</span> DataSet();</span><br><span class=\"line\">        SqlDataAdapter da = <span class=\"keyword\">new</span> SqlDataAdapter(command);</span><br><span class=\"line\"></span><br><span class=\"line\">        da.Fill(ds);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ds.Tables[<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> <span class=\"title\">ExecuteSql</span>(<span class=\"params\">String sql</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SqlCommand command = <span class=\"keyword\">new</span> SqlCommand(sql, Connection);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> command.ExecuteNonQuery();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> <span class=\"title\">ExecuteSql</span>(<span class=\"params\">String sql, SqlParameter[] sqlparameter</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SqlCommand command = <span class=\"keyword\">new</span> SqlCommand(sql, Connection);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (SqlParameter parameter <span class=\"keyword\">in</span> sqlparameter)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            command.Parameters.Add(parameter);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> command.ExecuteNonQuery();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> <span class=\"title\">InsertSql</span>(<span class=\"params\"><span class=\"built_in\">string</span> sql</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        SqlCommand sc = <span class=\"keyword\">new</span> SqlCommand(sql,Connection);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> sc.ExecuteNonQuery();</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> <span class=\"title\">DeleteSql</span>(<span class=\"params\"><span class=\"built_in\">string</span> sql</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SqlCommand sc = <span class=\"keyword\">new</span> SqlCommand(sql, Connection);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sc.ExecuteNonQuery();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> <span class=\"title\">UpdateSql</span>(<span class=\"params\"><span class=\"built_in\">string</span> sql</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SqlCommand sc = <span class=\"keyword\">new</span> SqlCommand(sql, Connection);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sc.ExecuteNonQuery();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> <span class=\"title\">CloseConn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        connection.Close();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-ADO【数据库操作的驱动】\"><a href=\"#10-ADO【数据库操作的驱动】\" class=\"headerlink\" title=\"10. ADO【数据库操作的驱动】\"></a>10. ADO【数据库操作的驱动】</h2><p>asp.net 数据对象【类似 jdbc】</p>\n<ul>\n<li>JDBC：导入对应的jar包；使用 maven</li>\n<li>C#：引入 DLL；使用 nuget</li>\n</ul>\n<h3 id=\"10-1-ADO-与-JDBC-的对比\"><a href=\"#10-1-ADO-与-JDBC-的对比\" class=\"headerlink\" title=\"10.1 ADO 与 JDBC 的对比\"></a>10.1 ADO 与 JDBC 的对比</h3><p><a href=\"https://blog.csdn.net/qingming7573/article/details/53143180\">ADO 与 JDBC 的对比—链接</a></p>\n<h3 id=\"10-2-ADO-的几种对象\"><a href=\"#10-2-ADO-的几种对象\" class=\"headerlink\" title=\"10.2 ADO 的几种对象\"></a>10.2 ADO 的几种对象</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208132618212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"JDBC-笔记","_content":"\n# JDBC-笔记\n\n[toc]\n\n## 1. JDBC-理解\n\n\n\n-   [JDBC-bilibili](https://www.bilibili.com/video/BV1Bt41137iB?p=2)\n\n\n\n\n\n1.  什么是JDBC？\n\n>   JDBC：【Java DataBase Connectivity】\n>\n>   位置：`java.sql.*;`\n\n\n\n2.  JDBC的本质：\n\n>   JDBC是Sun公司提供的一套接口，\n>\n>   接口都有 调用者 和 实现者，\n>\n>   我们面向接口，去`调用、写实现类`,这些都是面向接口的编程。\n\n\n\n3.  为什么要面向接口编程？\n\n>   -   解耦合\n>   -   多态机制\n\n\n\n4.  为什么要制定JDBC接口？\n\n>   因为每种数据库软件在底层的实现原理是不一样的。\n>\n>   为了适配不同的数据库，Sun公司提供了JDBC接口，每种数据库的厂家根据自家的数据库，写JDBC的实现类【一堆` .class文件`】，最后将这些实现类打包（`.jar`），形成`数据库驱动`。\n>\n>   **注意：** 数据库驱动是由各大数据库的厂商提供的，因此应该去厂商官网下载。\n\n\n\n\n\n\n\n## 2. 导入驱动包\n\n驱动：`mysql-connector-java-5.0.4-bin.jar`\n\n\n\n![导入驱动jar包-1](https://z3.ax1x.com/2021/06/01/2mxDQU.png)\n\n\n\n![jdbc-导入jar包-2](https://z3.ax1x.com/2021/06/01/2mxgoR.png)\n\n![jdbc-导入jar包-3](https://z3.ax1x.com/2021/06/01/2mx4SK.png)\n\n\n\n\n\n## 3. JDBC的使用步骤\n\n\n\n-   [狂神说Java-JDBC](https://www.bilibili.com/video/BV1NJ411J79W?p=38)\n\n\n\n\n\n步骤：\n\n1.  注册驱动【需先下载，将文件后缀改为 `.jar`】：告诉Java要用什么牌子的数据库\n\n>   -   新建1个`lib`文件夹，放入`数据库驱动jar包`\n>   -   file -> projectStructure -> lib -> “+” -> 选中 数据库的驱动 -> apply\n>   -   【如果没成功添加驱动，可以点击file -> projectStructure -> module -> 选择要应用到的模块 ->dependencies -> “+”号 -> 选择 驱动jar包】\n>   -   利用反射  找到  驱动中的Driver类\n\n```java\n// mysql 5.5版本，【注意：8.0版本的包名有变化】\n\tClass.forName(\"com.mysql.jdbc.Driver\");\t\n```\n\n\n\n2.  获取连接：JVM和数据库的通道打开，属于进程间的通信，使用完后，一定要手动关闭。\n\n>   -   传入url、用户名、密码\n\n```java\n// 获取连接，传入url、用户名、密码\n//String url = jdbc:mysql://localhost:3306/School_1?serverTimezone=Asia/Shanghai\n//\t\t\t\t\t&useUnicode=true\n//  \t\t\t\t&characterEncoding=utf8\n//      \t\t\t&useSSL=true\n        \n\tString url = \"jdbc:mysql://localhost:3306/myDB?参数\"\t// mysql8.0需要在参数中传入时区\n        \n    String userName = \"javaUser\";\n\n\tString psw = \"javaUser\";\n\t\n\n\tConnection conn = DriverManager.getConnection(url,userName,psw);\n```\n\n\n\n3.  获取数据操作的对象：\n\n```java\n\nStatement statement = conn.createStatement();\n\n```\n\n\n\n\n\n4.  执行SQL语句\n\n```java\n        ResultSet resultSet = statement.executeQuery(sql); // 查询\n\n        // statement.execute(sql);\t// 所有sql\n\n        // int lines = statement.executeUpdate(sql);\t// 执行增、删、改，返回执行的行数\n\n        // int[] counts = statement.executeBatch(sql);\t// 执行批处理\n```\n\n\n\n5.  获取、处理 结果集\n\n```java\n   while(resultSet.next()){\n// 结果集中的数据的获取       \n           resultSet.getObject(列名或索引);\n       \n       \t   // resultSet.getInt(列名或索引);\n       \n       \t   // resultSet.getString(列名或索引);\n       \n       \t   // resultSet.getDouble(列名或索引);\n       \n       \t   // resultSet.getDate(列名或索引);\n  \n       \n// 指针移动：\n       \t\tresultSet.next();\n       \t\t// resultSet.previous();\n       \t\t// resultSet.beforeFirst();\n       \t\t// resultSet.afterLast();\n\t       \t// resultSet.absolute(row);\t// 移动到指定行\n   }\n```\n\n\n\n6.  释放资源\n\n```java\n\tresultSet.close();\n \tstatement.close();\n\tconn.close();\n```\n\n\n\n\n\n\n\n### 2.2 案例-1：\n\n```java\npackage cn.jabc.demo1;\nimport java.sql.*;\npublic class Demo {\n    public static void main(String[] args){\n\n        try {\n\n            // 数据库的用户名；密码\n                String user = \"javaUser\";\n                String psw = \"javaUser\";\n\n            // 数据库的url：jdbc:mysql://ip地址:端口号/数据库名?时区\n                String url = \"jdbc:mysql://127.0.0.1:3306/School_1?serverTimezone=Asia/Shanghai\";\n\n            // 加载驱动\n                Class.forName(\"com.mysql.jdbc.Driver\");\n\n            // 获取连接【conn连接 就代表1个数据库】\n                Connection conn = DriverManager.getConnection(url,user,psw);\n\n                System.out.println(\"=== 数据已连接\");\n\n            // 创建数据操作对象\n                Statement statement = conn.createStatement();\n\n            // 创建SQL语句\n                String sql = \"select * from stu;\";\n\n            // 执行SQL,获取结果集\n                ResultSet resultSet = statement.executeQuery(sql); // 查询\n                statement.execute(sql);\t// 所有sql\n            \tint lines = statement.executeUpdate(sql);\t// 执行增、删、改，返回执行的行数\n                int[] counts = statement.executeBatch(sql);\t// 执行批处理\n\n            // 输出结果\n                while(resultSet.next()){\n                    System.out.print(\"sid:\"+resultSet.getObject(\"sid\"));\n                    System.out.println(\" , sname:\"+resultSet.getObject(\"sname\"));\n                }\n\n            // 关闭资源\n                resultSet.close();\n                statement.close();\n                conn.close();\n                System.out.println(\"=== 连接已关闭\");\n\n\n        } catch(Exception e){\n            e.printStackTrace();\n        }\n\n    }\n}\n\n```\n\n\n\n\n\n### 2.3 封装JDBC的的工具类【初始版】\n\n\n\n1.  编写工具类：【DBUtil】\n\n```java\npackage cn.jdbcUtil;\nimport java.sql.*;\n\npublic class DBUtil {\n    private static String url = \"jdbc:mysql://localhost:3306/School_1\";\n    private static String user = \"javaUser\";\n    private static String psw= \"javaUser\";\n\n\n    static {\n        try {\n            Class.forName(\"com.mysql.jdbc.Driver\");\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n\n\n    public static Connection getConn() throws SQLException {\n        return DriverManager.getConnection(url,user,psw);\n    }\n\n    public static void relaeseConn(Connection conn, Statement st,ResultSet rs){\n\n        try {\n            if(rs!=null) rs.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if(st!=null) st.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if(conn!=null) conn.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n    }\n}\n\n```\n\n2.  使用：\n\n```java\npackage cn.jdbcdemo;\n\nimport cn.jdbcUtil.DBUtil;\n\nimport java.sql.*;\n\n\npublic class Demo {\n    public static void main(String[] args) throws Exception{\n\n        try {\n            Connection conn = DBUtil.getConn();\n            Statement statement = conn.createStatement();\n            ResultSet res = statement.executeQuery(\"select * from stu;\");\n            while(res.next()){\n                System.out.println(res.getString(\"sid\")+\" \"+res.getString(\"sname\"));\n            }\n\n            DBUtil.relaeseConn(conn,statement,res);\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n\n    }\n}\n\n```\n\n\n\n\n\n### 2.4 封装JDBC的的工具类【改进版】\n\n1.  编写：配置文件【`db.properties`】\n\n注意：`配置文件必须是src目录的直接孩子。【不能是孙子】`\n\n```java\ndriver = com.mysql.jdbc.Driver\nurl = jdbc:mysql://localhost:3306/School_1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=true\nuser = javaUser\npsw = javaUser\n```\n\n\n\n2.  编写工具类：【DBUtil_2】\n\n```java\npackage cn.jdbcUtil;\nimport java.io.InputStream;\nimport java.sql.*;\nimport java.util.Properties;\n\npublic class DBUtil_2 {\n    private static String driver = null;\n    private static String url = null;\n    private static String user = null;\n    private static String psw= null;\n\n// 获取配置文件\n    static {\n        try {\n            InputStream is = DBUtil_2.class.getClassLoader().getResourceAsStream(\"db.properties\");\n            \n            Properties properties = new Properties();\n            properties.load(is);\n            \n// 获取配置文件中的4个配置\n            driver = properties.getProperty(\"driver\");\n            url = properties.getProperty(\"url\");\n            user = properties.getProperty(\"user\");\n            psw = properties.getProperty(\"psw\");\n \n// 注册驱动\n            Class.forName(driver);\n\n       \n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n// 获取连接\n    public static Connection getConn() throws SQLException {\n        return DriverManager.getConnection(url,user,psw);\n    }\n \n    \n// 释放资源\n    public static void relaeseConn(Connection conn, Statement st,ResultSet rs){\n\n        try {\n            if(rs!=null) rs.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if(st!=null) st.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if(conn!=null) conn.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n    }\n}\n\n```\n\n\n\n### 2.5 封装JDBC的工具类【最终版】\n\n将`Statement `改为`PreparedStatement`, 更安全。可以防止用户输入SQL语句后，输入的语句 参与到 后端的SQL语句的编译，导致被SQL注入的问题。`PreparedStatement`将用户输入的语句作为字符串，传入后端的SQL语句中进行SQL语句的拼接。\n\n```java\npackage cn.jdbcUtil;\nimport java.io.InputStream;\nimport java.sql.*;\nimport java.util.Properties;\n\npublic class DBUtil_3 {\n    private static String driver = null;\n    private static String url = null;\n    private static String user = null;\n    private static String psw= null;\n\n\n    static {\n        try {\n            InputStream is = DBUtil_3.class.getClassLoader().getResourceAsStream(\"db.properties\");\n            Properties properties = new Properties();\n            properties.load(is);\n\n            driver = properties.getProperty(\"driver\");\n            url = properties.getProperty(\"url\");\n            user = properties.getProperty(\"user\");\n            psw = properties.getProperty(\"psw\");\n\n            Class.forName(driver);\n\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n\n    public static Connection getConn() throws SQLException {\n        return DriverManager.getConnection(url,user,psw);\n    }\n\n    public static void relaeseConn(Connection conn, PreparedStatement ps,ResultSet rs){\n\n        try {\n            if(rs!=null) rs.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if(ps!=null) ps.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if(conn!=null) conn.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n    }\n}\n\n```\n\n\n\n\n\n### 2.6 案例1-改进版：\n\n```java\npackage cn.jdbcdemo;\n\nimport cn.jdbcUtil.DBUtil;\nimport cn.jdbcUtil.DBUtil_2;\n\nimport java.sql.*;\n\n\npublic class Demo {\n    public static void main(String[] args) throws Exception{\n\n\n        try {\n            //Connection conn = DBUtil.getConn();\n            Connection conn = DBUtil_2.getConn();\n            \n            // Statement statement = conn.createStatement();\n            \n            // 要执行的SQL语句\n            String sql = \"select * from stu where sid = ? ;\";\n            \n            \n        \t// 预编译SQL语句，?问号为占位符，\n            // 占位符的内容在执行时，只作为字符串，不会被当作SQL的一部分参与编译\n            // 采用预编译，可以防止：SQL注入\n            PreparedStatement ps = conn.prepareStatement(sql);\n            \n            // 设置占位符的内容，此处表示将第一个占位符的值设为3\n            // 【注意】：JDBC中的下标 从 1 开始计数\n            ps.setInt(1,3);\n\n            ResultSet res = ps.executeQuery();\n            while(res.next()){\n                System.out.println(res.getString(\"sid\")+\" \"+res.getString(\"sname\"));\n            }\n\n            DBUtil.relaeseConn(conn,ps,res);\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n\n    }\n}\n\n\n```\n\n\n\n### 2.7 案例2-登录功能:\n\n注意：使用了`2.5小节中的 DBUtil_3工具类`\n\n```java\npackage cn.jdbcdemo;\n\nimport cn.jdbcUtil.DBUtil_3;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.Scanner;\n\npublic class UserLogin {\n    public static void main(String[] args) {\n\n        Scanner sc = new Scanner(System.in);\n\n        System.out.print(\"请输入用户名：\");\n        String username = sc.nextLine();\n\n\n        System.out.print(\"请输入密码：\");\n        String upsw = sc.nextLine();\n\n        Connection conn=null;\n        PreparedStatement ps=null;\n        ResultSet res = null;\n\n        if(username!=null && upsw!=null){\n\n            try {\n                conn = DBUtil_3.getConn();\n                String sql = \"select * from stu where sname=? and spsw=?\";\n                ps = conn.prepareStatement(sql);\n                ps.setString(1,username);\n                ps.setString(2,upsw);\n\n                res = ps.executeQuery();\n\n                if(res.next()){\n                    System.out.println(\"登录成功\");\n                }else {\n                    System.out.println(\"登录失败\");\n                }\n\n            } catch (SQLException throwables) {\n\n                throwables.printStackTrace();\n            }finally {\n\n                try {\n                    DBUtil_3.relaeseConn(conn,ps,res);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                sc.close();\n            }\n\n        }\n\n    }\n}\n\n```\n\n\n\n\n\n\n\n## 4. IDEA-连接MySQL\n\n\n\n-   选择：数据库的品牌\n\n![idea-连MySQL](https://z3.ax1x.com/2021/06/01/2nuNGT.png)\n\n\n\n\n\n\n\n-   在IDEA中，登录到MySQL\n    -   注意：url在填写时，需要加上`时区`\n\n![idea-连接myql](https://z3.ax1x.com/2021/06/01/2nK51U.png)\n\n\n\n\n\n\n\n-   选择具体要使用的数据库\n\n![idea-连接mysql-3](https://z3.ax1x.com/2021/06/01/2nM4UI.png)\n\n\n\n\n\n\n\n\n\n查看数据库的内容：双击数据库\n\n修改数据库：双击单元格，修改数据，回车，点击提交\n\n![idea中可视化修改数据](https://z3.ax1x.com/2021/06/01/2nlzcT.png)\n\n\n\n\n\n\n\n![idea中直接使用SQL语句](https://z3.ax1x.com/2021/06/01/2n1RrF.png)\n\n\n\n\n\n\n\n## 5. JDBC事务-操作\n\n\n\n```java\npackage cn.jdbcdemo;\n\nimport cn.jdbcUtil.DBUtil_3;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\npublic class Demo02 {\n    public static void main(String[] args) {\n        Connection conn = null;\n        PreparedStatement ps = null;\n        ResultSet rs = null;\n\n        try {\n// 获取连接\n            conn = DBUtil_3.getConn();\n\n// 关闭自动提交 =》开启事务\n            conn.setAutoCommit(false);\n\n// 执行 2个事务\n            String sql1 = \"update account_tb set money = money-500 where userID=2\";\n            ps = conn.prepareStatement(sql1);\n            ps.executeUpdate();\n\n            String sql2 = \"update account_tb set money = money+500 where userID=1\";\n            ps = conn.prepareStatement(sql2);\n            ps.executeUpdate();\n// 提交事务\n            conn.commit();\n            \n// 重新开启事务的自动提交            \n            conn.setAutoCommit(true);\n\n        } catch (SQLException throwables) {\n            try {\n// 回滚事务                \n                conn.rollback();\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n            throwables.printStackTrace();\n        }finally {\n            DBUtil_3.relaeseConn(conn,ps,rs = null);\n        }\n\n\n    }\n}\n\n```\n\n\n\n\n\n\n\n\n\n## 6. 数据库连接池\n\n-   [狂神说-bilibili](https://www.bilibili.com/video/BV1NJ411J79W?p=45)\n-   [DBCP连接池所用到的两个jar包下载地址-CSDN博客](https://blog.csdn.net/ximexi/article/details/112609042)\n\n-   [c3p0-jar包-下载CSDN博客](https://blog.csdn.net/huangyuhua068/article/details/82086259)\n\n\n\n\n\n\n\n\n\n数据库连接过程：\n\n-   连接 -> 执行 -> 释放  【这3个过程，浪费系统资源，开销大】\n\n\n\n池化技术：\n\n>   提前准备好一些连接资源（如：conn对象，preparedStatement对象，ResultSet等），用户用完后，不释放资源，而是将资源重新放回池中。\n\n\n\n-   最小连接数：设为常用的连接数，如：10\n-   最大连接数：如：15\n-   等待超时：如：10 ms\n\n\n\n\n\n编写连接池：实现 DataSource接口【获取连接】\n\n>   开源数据源 实现:\n>\n>   -   DBCP:\n>   -   C3P0：\n>   -   Druid：阿里\n\n使用以上的数据库连接池后，无需 再编写 数据库的连接代码。\n\n\n\n\n\n### 6.1 DBCP:\n\n需要导入的包\n\n-   `commons-dbcp-1.4.jar`\n-   `commons-pool-1.6.jar`\n\n\n\n步骤：\n\n-   编写`DBCP.properties` 配置文件,放在模块`src目录下的第一层`\n-   导入Jar包：\n    -   `commons-dbcp-1.4.jar`\n    -   `commons-pool-1.6.jar`\n    -   `mysql-connector-java-5.0.4-bin.jar`\n-   编写工具类【在工具类中创建数据源，返回连接】\n-   获取连接，执行语句，处理数据，释放资源。\n\n\n\n\n\nDBCP-properties配置：\n\n```java\n#连接设置\ndriverClassName=com.mysql.jdbc.Driver\nurl=jdbc:mysql://localhost:3306/School_1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=true\nusername=root\npassword=root\n\n#!-- 初始化连接 --\ninitialSize=10\n\n#最大连接数量\nmaxActive=50\n\n#!-- 最大空闲连接 --\nmaxIdle=20\n\n#!-- 最小空闲连接 --\nminIdle=5\n\n#!-- 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 --\nmaxWait=60000\n#JDBC驱动建立连接时附带的连接属性属性的格式必须为这样：【属性名=property;】\n#注意：user 与 password 两个属性会被明确地传递，因此这里不需要包含他们。\nconnectionProperties=useUnicode=true;characterEncoding=UTF8\n\n#指定由连接池所创建的连接的自动提交（auto-commit）状态。\ndefaultAutoCommit=true\n\n#driver default 指定由连接池所创建的连接的只读（read-only）状态。\n#如果没有设置该值，则“setReadOnly”方法将不被调用。（某些驱动并不支持只读模式，如：Informix）\ndefaultReadOnly=\n\n#driver default 指定由连接池所创建的连接的事务级别（TransactionIsolation）。\n#可用值为下列之一：（详情可见javadoc。）NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE\ndefaultTransactionIsolation=READ_UNCOMMITTED\n```\n\n\n\n\n\nDBCPUtil.class\n\n```java\npackage cn.DBCP_demo;\n\n\nimport org.apache.commons.dbcp.BasicDataSourceFactory;\nimport javax.sql.DataSource;\nimport java.io.InputStream;\nimport java.sql.*;\nimport java.util.Properties;\n\npublic class DBCPUtil {\n\n\n    private static DataSource dataSource = null;\n\n    static {\n        try {\n            InputStream is = DBCPUtil.class.getClassLoader().getResourceAsStream(\"dbcpConfig.properties\");\n            Properties properties = new Properties();\n            properties.load(is);\n\n// 创建数据源\n            dataSource = BasicDataSourceFactory.createDataSource(properties);\n\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n\n    public static Connection getConn() throws SQLException {\n// 从数据源获取连接\n        return dataSource.getConnection();\n    }\n\n    public static void relaeseConn(Connection conn, PreparedStatement ps, ResultSet rs) {\n\n        try {\n            if (rs != null) rs.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if (ps != null) ps.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if (conn != null) conn.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n    }\n}\n\n\n```\n\n\n\n\n\n演示：\n\n```java\npackage cn.DBCP_demo;\n\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\npublic class Demo {\n\n    public static void main(String[] args) {\n        try {\n// 利用工具类获取连接\n            Connection conn = DBCPUtil.getConn();\n\n\n            String sql = \"select * from stu where sid = ? ;\";\n\n\n            PreparedStatement ps = conn.prepareStatement(sql);\n\n\n            ps.setInt(1,3);\n\n            ResultSet res = ps.executeQuery();\n            while(res.next()){\n                System.out.println(res.getString(\"sid\")+\" \"+res.getString(\"sname\"));\n            }\n\n            DBCPUtil.relaeseConn(conn,ps,res);\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n\n    }\n}\n\n```\n\n\n\n### 6.2 c3p0：【存疑】\n\n【注意：此小节的配置还未调试成功】\n\n\n\n使用`XML`作为`配置文件`的格式\n\n\n\n需要导入的Jar包：\n\n-   `mchange-commons-java-0.2.12.jar`\n-   `c3p0-0.9.5.2.jar`\n\n\n\nxml配置文件：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<c3p0-config>\n  <default-config>\n    <property name=\"driverClass\">com.mysql.jdbc.Driver</property>\n    <property name=\"jdbcUrl\">jdbc:mysql://localhost:3306/School_1</property>\n    <property name=\"user\">javaUser</property>\n    <property name=\"password\">javaUser</property>\n    \n    <property name=\"initialPoolSize\">5</property>\n    <property name=\"maxPoolSize\">10</property>\n    <property name=\"checkoutTimeout\">3000</property>\n  </default-config>\n\n  <named-config name=\"otherc3p0\"> \n  </named-config>\n</c3p0-config>\n```\n\n\n\n\n\njava工具类：\n\n```java\npackage cn.c3p0Demo;\n\n\nimport com.mchange.v2.c3p0.ComboPooledDataSource;\n\nimport javax.sql.DataSource;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\npublic class C3P0Util {\n\n\n    private static DataSource dataSource = null;\n\n    static {\n        try {\n\n            dataSource = new ComboPooledDataSource();\n\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n\n    public static Connection getConn() throws SQLException {\n        // 从数据源获取连接\n        return dataSource.getConnection();\n    }\n\n    public static void relaeseConn(Connection conn, PreparedStatement ps, ResultSet rs) {\n\n        try {\n            if (rs != null) rs.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if (ps != null) ps.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if (conn != null) conn.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n    }\n}\n\n```\n\n\n\n演示：\n\n```java\npackage cn.c3p0Demo;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\npublic class Demo {\n    public static void main(String[] args) {\n        try {\n            Connection conn = C3P0Util.getConn();\n\n            String sql = \"select * from stu where sid = ? ;\";\n            PreparedStatement ps = conn.prepareStatement(sql);\n\n\n            ps.setInt(1,3);\n\n            ResultSet res = ps.executeQuery();\n            while(res.next()){\n                System.out.println(res.getString(\"sid\")+\" \"+res.getString(\"sname\"));\n            }\n\n            C3P0Util.relaeseConn(conn,ps,res);\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        } finally {\n        }\n    }\n}\n\n```\n\n","source":"_posts/JDBC-笔记.md","raw":"---\ntitle: JDBC-笔记\ntag: JDBC\ncategories:\n  - [后端,Java,JDBC]\n  - [SQL,MySQL]\n---\n\n# JDBC-笔记\n\n[toc]\n\n## 1. JDBC-理解\n\n\n\n-   [JDBC-bilibili](https://www.bilibili.com/video/BV1Bt41137iB?p=2)\n\n\n\n\n\n1.  什么是JDBC？\n\n>   JDBC：【Java DataBase Connectivity】\n>\n>   位置：`java.sql.*;`\n\n\n\n2.  JDBC的本质：\n\n>   JDBC是Sun公司提供的一套接口，\n>\n>   接口都有 调用者 和 实现者，\n>\n>   我们面向接口，去`调用、写实现类`,这些都是面向接口的编程。\n\n\n\n3.  为什么要面向接口编程？\n\n>   -   解耦合\n>   -   多态机制\n\n\n\n4.  为什么要制定JDBC接口？\n\n>   因为每种数据库软件在底层的实现原理是不一样的。\n>\n>   为了适配不同的数据库，Sun公司提供了JDBC接口，每种数据库的厂家根据自家的数据库，写JDBC的实现类【一堆` .class文件`】，最后将这些实现类打包（`.jar`），形成`数据库驱动`。\n>\n>   **注意：** 数据库驱动是由各大数据库的厂商提供的，因此应该去厂商官网下载。\n\n\n\n\n\n\n\n## 2. 导入驱动包\n\n驱动：`mysql-connector-java-5.0.4-bin.jar`\n\n\n\n![导入驱动jar包-1](https://z3.ax1x.com/2021/06/01/2mxDQU.png)\n\n\n\n![jdbc-导入jar包-2](https://z3.ax1x.com/2021/06/01/2mxgoR.png)\n\n![jdbc-导入jar包-3](https://z3.ax1x.com/2021/06/01/2mx4SK.png)\n\n\n\n\n\n## 3. JDBC的使用步骤\n\n\n\n-   [狂神说Java-JDBC](https://www.bilibili.com/video/BV1NJ411J79W?p=38)\n\n\n\n\n\n步骤：\n\n1.  注册驱动【需先下载，将文件后缀改为 `.jar`】：告诉Java要用什么牌子的数据库\n\n>   -   新建1个`lib`文件夹，放入`数据库驱动jar包`\n>   -   file -> projectStructure -> lib -> “+” -> 选中 数据库的驱动 -> apply\n>   -   【如果没成功添加驱动，可以点击file -> projectStructure -> module -> 选择要应用到的模块 ->dependencies -> “+”号 -> 选择 驱动jar包】\n>   -   利用反射  找到  驱动中的Driver类\n\n```java\n// mysql 5.5版本，【注意：8.0版本的包名有变化】\n\tClass.forName(\"com.mysql.jdbc.Driver\");\t\n```\n\n\n\n2.  获取连接：JVM和数据库的通道打开，属于进程间的通信，使用完后，一定要手动关闭。\n\n>   -   传入url、用户名、密码\n\n```java\n// 获取连接，传入url、用户名、密码\n//String url = jdbc:mysql://localhost:3306/School_1?serverTimezone=Asia/Shanghai\n//\t\t\t\t\t&useUnicode=true\n//  \t\t\t\t&characterEncoding=utf8\n//      \t\t\t&useSSL=true\n        \n\tString url = \"jdbc:mysql://localhost:3306/myDB?参数\"\t// mysql8.0需要在参数中传入时区\n        \n    String userName = \"javaUser\";\n\n\tString psw = \"javaUser\";\n\t\n\n\tConnection conn = DriverManager.getConnection(url,userName,psw);\n```\n\n\n\n3.  获取数据操作的对象：\n\n```java\n\nStatement statement = conn.createStatement();\n\n```\n\n\n\n\n\n4.  执行SQL语句\n\n```java\n        ResultSet resultSet = statement.executeQuery(sql); // 查询\n\n        // statement.execute(sql);\t// 所有sql\n\n        // int lines = statement.executeUpdate(sql);\t// 执行增、删、改，返回执行的行数\n\n        // int[] counts = statement.executeBatch(sql);\t// 执行批处理\n```\n\n\n\n5.  获取、处理 结果集\n\n```java\n   while(resultSet.next()){\n// 结果集中的数据的获取       \n           resultSet.getObject(列名或索引);\n       \n       \t   // resultSet.getInt(列名或索引);\n       \n       \t   // resultSet.getString(列名或索引);\n       \n       \t   // resultSet.getDouble(列名或索引);\n       \n       \t   // resultSet.getDate(列名或索引);\n  \n       \n// 指针移动：\n       \t\tresultSet.next();\n       \t\t// resultSet.previous();\n       \t\t// resultSet.beforeFirst();\n       \t\t// resultSet.afterLast();\n\t       \t// resultSet.absolute(row);\t// 移动到指定行\n   }\n```\n\n\n\n6.  释放资源\n\n```java\n\tresultSet.close();\n \tstatement.close();\n\tconn.close();\n```\n\n\n\n\n\n\n\n### 2.2 案例-1：\n\n```java\npackage cn.jabc.demo1;\nimport java.sql.*;\npublic class Demo {\n    public static void main(String[] args){\n\n        try {\n\n            // 数据库的用户名；密码\n                String user = \"javaUser\";\n                String psw = \"javaUser\";\n\n            // 数据库的url：jdbc:mysql://ip地址:端口号/数据库名?时区\n                String url = \"jdbc:mysql://127.0.0.1:3306/School_1?serverTimezone=Asia/Shanghai\";\n\n            // 加载驱动\n                Class.forName(\"com.mysql.jdbc.Driver\");\n\n            // 获取连接【conn连接 就代表1个数据库】\n                Connection conn = DriverManager.getConnection(url,user,psw);\n\n                System.out.println(\"=== 数据已连接\");\n\n            // 创建数据操作对象\n                Statement statement = conn.createStatement();\n\n            // 创建SQL语句\n                String sql = \"select * from stu;\";\n\n            // 执行SQL,获取结果集\n                ResultSet resultSet = statement.executeQuery(sql); // 查询\n                statement.execute(sql);\t// 所有sql\n            \tint lines = statement.executeUpdate(sql);\t// 执行增、删、改，返回执行的行数\n                int[] counts = statement.executeBatch(sql);\t// 执行批处理\n\n            // 输出结果\n                while(resultSet.next()){\n                    System.out.print(\"sid:\"+resultSet.getObject(\"sid\"));\n                    System.out.println(\" , sname:\"+resultSet.getObject(\"sname\"));\n                }\n\n            // 关闭资源\n                resultSet.close();\n                statement.close();\n                conn.close();\n                System.out.println(\"=== 连接已关闭\");\n\n\n        } catch(Exception e){\n            e.printStackTrace();\n        }\n\n    }\n}\n\n```\n\n\n\n\n\n### 2.3 封装JDBC的的工具类【初始版】\n\n\n\n1.  编写工具类：【DBUtil】\n\n```java\npackage cn.jdbcUtil;\nimport java.sql.*;\n\npublic class DBUtil {\n    private static String url = \"jdbc:mysql://localhost:3306/School_1\";\n    private static String user = \"javaUser\";\n    private static String psw= \"javaUser\";\n\n\n    static {\n        try {\n            Class.forName(\"com.mysql.jdbc.Driver\");\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n\n\n    public static Connection getConn() throws SQLException {\n        return DriverManager.getConnection(url,user,psw);\n    }\n\n    public static void relaeseConn(Connection conn, Statement st,ResultSet rs){\n\n        try {\n            if(rs!=null) rs.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if(st!=null) st.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if(conn!=null) conn.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n    }\n}\n\n```\n\n2.  使用：\n\n```java\npackage cn.jdbcdemo;\n\nimport cn.jdbcUtil.DBUtil;\n\nimport java.sql.*;\n\n\npublic class Demo {\n    public static void main(String[] args) throws Exception{\n\n        try {\n            Connection conn = DBUtil.getConn();\n            Statement statement = conn.createStatement();\n            ResultSet res = statement.executeQuery(\"select * from stu;\");\n            while(res.next()){\n                System.out.println(res.getString(\"sid\")+\" \"+res.getString(\"sname\"));\n            }\n\n            DBUtil.relaeseConn(conn,statement,res);\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n\n    }\n}\n\n```\n\n\n\n\n\n### 2.4 封装JDBC的的工具类【改进版】\n\n1.  编写：配置文件【`db.properties`】\n\n注意：`配置文件必须是src目录的直接孩子。【不能是孙子】`\n\n```java\ndriver = com.mysql.jdbc.Driver\nurl = jdbc:mysql://localhost:3306/School_1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=true\nuser = javaUser\npsw = javaUser\n```\n\n\n\n2.  编写工具类：【DBUtil_2】\n\n```java\npackage cn.jdbcUtil;\nimport java.io.InputStream;\nimport java.sql.*;\nimport java.util.Properties;\n\npublic class DBUtil_2 {\n    private static String driver = null;\n    private static String url = null;\n    private static String user = null;\n    private static String psw= null;\n\n// 获取配置文件\n    static {\n        try {\n            InputStream is = DBUtil_2.class.getClassLoader().getResourceAsStream(\"db.properties\");\n            \n            Properties properties = new Properties();\n            properties.load(is);\n            \n// 获取配置文件中的4个配置\n            driver = properties.getProperty(\"driver\");\n            url = properties.getProperty(\"url\");\n            user = properties.getProperty(\"user\");\n            psw = properties.getProperty(\"psw\");\n \n// 注册驱动\n            Class.forName(driver);\n\n       \n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n// 获取连接\n    public static Connection getConn() throws SQLException {\n        return DriverManager.getConnection(url,user,psw);\n    }\n \n    \n// 释放资源\n    public static void relaeseConn(Connection conn, Statement st,ResultSet rs){\n\n        try {\n            if(rs!=null) rs.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if(st!=null) st.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if(conn!=null) conn.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n    }\n}\n\n```\n\n\n\n### 2.5 封装JDBC的工具类【最终版】\n\n将`Statement `改为`PreparedStatement`, 更安全。可以防止用户输入SQL语句后，输入的语句 参与到 后端的SQL语句的编译，导致被SQL注入的问题。`PreparedStatement`将用户输入的语句作为字符串，传入后端的SQL语句中进行SQL语句的拼接。\n\n```java\npackage cn.jdbcUtil;\nimport java.io.InputStream;\nimport java.sql.*;\nimport java.util.Properties;\n\npublic class DBUtil_3 {\n    private static String driver = null;\n    private static String url = null;\n    private static String user = null;\n    private static String psw= null;\n\n\n    static {\n        try {\n            InputStream is = DBUtil_3.class.getClassLoader().getResourceAsStream(\"db.properties\");\n            Properties properties = new Properties();\n            properties.load(is);\n\n            driver = properties.getProperty(\"driver\");\n            url = properties.getProperty(\"url\");\n            user = properties.getProperty(\"user\");\n            psw = properties.getProperty(\"psw\");\n\n            Class.forName(driver);\n\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n\n    public static Connection getConn() throws SQLException {\n        return DriverManager.getConnection(url,user,psw);\n    }\n\n    public static void relaeseConn(Connection conn, PreparedStatement ps,ResultSet rs){\n\n        try {\n            if(rs!=null) rs.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if(ps!=null) ps.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if(conn!=null) conn.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n    }\n}\n\n```\n\n\n\n\n\n### 2.6 案例1-改进版：\n\n```java\npackage cn.jdbcdemo;\n\nimport cn.jdbcUtil.DBUtil;\nimport cn.jdbcUtil.DBUtil_2;\n\nimport java.sql.*;\n\n\npublic class Demo {\n    public static void main(String[] args) throws Exception{\n\n\n        try {\n            //Connection conn = DBUtil.getConn();\n            Connection conn = DBUtil_2.getConn();\n            \n            // Statement statement = conn.createStatement();\n            \n            // 要执行的SQL语句\n            String sql = \"select * from stu where sid = ? ;\";\n            \n            \n        \t// 预编译SQL语句，?问号为占位符，\n            // 占位符的内容在执行时，只作为字符串，不会被当作SQL的一部分参与编译\n            // 采用预编译，可以防止：SQL注入\n            PreparedStatement ps = conn.prepareStatement(sql);\n            \n            // 设置占位符的内容，此处表示将第一个占位符的值设为3\n            // 【注意】：JDBC中的下标 从 1 开始计数\n            ps.setInt(1,3);\n\n            ResultSet res = ps.executeQuery();\n            while(res.next()){\n                System.out.println(res.getString(\"sid\")+\" \"+res.getString(\"sname\"));\n            }\n\n            DBUtil.relaeseConn(conn,ps,res);\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n\n    }\n}\n\n\n```\n\n\n\n### 2.7 案例2-登录功能:\n\n注意：使用了`2.5小节中的 DBUtil_3工具类`\n\n```java\npackage cn.jdbcdemo;\n\nimport cn.jdbcUtil.DBUtil_3;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.Scanner;\n\npublic class UserLogin {\n    public static void main(String[] args) {\n\n        Scanner sc = new Scanner(System.in);\n\n        System.out.print(\"请输入用户名：\");\n        String username = sc.nextLine();\n\n\n        System.out.print(\"请输入密码：\");\n        String upsw = sc.nextLine();\n\n        Connection conn=null;\n        PreparedStatement ps=null;\n        ResultSet res = null;\n\n        if(username!=null && upsw!=null){\n\n            try {\n                conn = DBUtil_3.getConn();\n                String sql = \"select * from stu where sname=? and spsw=?\";\n                ps = conn.prepareStatement(sql);\n                ps.setString(1,username);\n                ps.setString(2,upsw);\n\n                res = ps.executeQuery();\n\n                if(res.next()){\n                    System.out.println(\"登录成功\");\n                }else {\n                    System.out.println(\"登录失败\");\n                }\n\n            } catch (SQLException throwables) {\n\n                throwables.printStackTrace();\n            }finally {\n\n                try {\n                    DBUtil_3.relaeseConn(conn,ps,res);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                sc.close();\n            }\n\n        }\n\n    }\n}\n\n```\n\n\n\n\n\n\n\n## 4. IDEA-连接MySQL\n\n\n\n-   选择：数据库的品牌\n\n![idea-连MySQL](https://z3.ax1x.com/2021/06/01/2nuNGT.png)\n\n\n\n\n\n\n\n-   在IDEA中，登录到MySQL\n    -   注意：url在填写时，需要加上`时区`\n\n![idea-连接myql](https://z3.ax1x.com/2021/06/01/2nK51U.png)\n\n\n\n\n\n\n\n-   选择具体要使用的数据库\n\n![idea-连接mysql-3](https://z3.ax1x.com/2021/06/01/2nM4UI.png)\n\n\n\n\n\n\n\n\n\n查看数据库的内容：双击数据库\n\n修改数据库：双击单元格，修改数据，回车，点击提交\n\n![idea中可视化修改数据](https://z3.ax1x.com/2021/06/01/2nlzcT.png)\n\n\n\n\n\n\n\n![idea中直接使用SQL语句](https://z3.ax1x.com/2021/06/01/2n1RrF.png)\n\n\n\n\n\n\n\n## 5. JDBC事务-操作\n\n\n\n```java\npackage cn.jdbcdemo;\n\nimport cn.jdbcUtil.DBUtil_3;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\npublic class Demo02 {\n    public static void main(String[] args) {\n        Connection conn = null;\n        PreparedStatement ps = null;\n        ResultSet rs = null;\n\n        try {\n// 获取连接\n            conn = DBUtil_3.getConn();\n\n// 关闭自动提交 =》开启事务\n            conn.setAutoCommit(false);\n\n// 执行 2个事务\n            String sql1 = \"update account_tb set money = money-500 where userID=2\";\n            ps = conn.prepareStatement(sql1);\n            ps.executeUpdate();\n\n            String sql2 = \"update account_tb set money = money+500 where userID=1\";\n            ps = conn.prepareStatement(sql2);\n            ps.executeUpdate();\n// 提交事务\n            conn.commit();\n            \n// 重新开启事务的自动提交            \n            conn.setAutoCommit(true);\n\n        } catch (SQLException throwables) {\n            try {\n// 回滚事务                \n                conn.rollback();\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n            throwables.printStackTrace();\n        }finally {\n            DBUtil_3.relaeseConn(conn,ps,rs = null);\n        }\n\n\n    }\n}\n\n```\n\n\n\n\n\n\n\n\n\n## 6. 数据库连接池\n\n-   [狂神说-bilibili](https://www.bilibili.com/video/BV1NJ411J79W?p=45)\n-   [DBCP连接池所用到的两个jar包下载地址-CSDN博客](https://blog.csdn.net/ximexi/article/details/112609042)\n\n-   [c3p0-jar包-下载CSDN博客](https://blog.csdn.net/huangyuhua068/article/details/82086259)\n\n\n\n\n\n\n\n\n\n数据库连接过程：\n\n-   连接 -> 执行 -> 释放  【这3个过程，浪费系统资源，开销大】\n\n\n\n池化技术：\n\n>   提前准备好一些连接资源（如：conn对象，preparedStatement对象，ResultSet等），用户用完后，不释放资源，而是将资源重新放回池中。\n\n\n\n-   最小连接数：设为常用的连接数，如：10\n-   最大连接数：如：15\n-   等待超时：如：10 ms\n\n\n\n\n\n编写连接池：实现 DataSource接口【获取连接】\n\n>   开源数据源 实现:\n>\n>   -   DBCP:\n>   -   C3P0：\n>   -   Druid：阿里\n\n使用以上的数据库连接池后，无需 再编写 数据库的连接代码。\n\n\n\n\n\n### 6.1 DBCP:\n\n需要导入的包\n\n-   `commons-dbcp-1.4.jar`\n-   `commons-pool-1.6.jar`\n\n\n\n步骤：\n\n-   编写`DBCP.properties` 配置文件,放在模块`src目录下的第一层`\n-   导入Jar包：\n    -   `commons-dbcp-1.4.jar`\n    -   `commons-pool-1.6.jar`\n    -   `mysql-connector-java-5.0.4-bin.jar`\n-   编写工具类【在工具类中创建数据源，返回连接】\n-   获取连接，执行语句，处理数据，释放资源。\n\n\n\n\n\nDBCP-properties配置：\n\n```java\n#连接设置\ndriverClassName=com.mysql.jdbc.Driver\nurl=jdbc:mysql://localhost:3306/School_1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=true\nusername=root\npassword=root\n\n#!-- 初始化连接 --\ninitialSize=10\n\n#最大连接数量\nmaxActive=50\n\n#!-- 最大空闲连接 --\nmaxIdle=20\n\n#!-- 最小空闲连接 --\nminIdle=5\n\n#!-- 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 --\nmaxWait=60000\n#JDBC驱动建立连接时附带的连接属性属性的格式必须为这样：【属性名=property;】\n#注意：user 与 password 两个属性会被明确地传递，因此这里不需要包含他们。\nconnectionProperties=useUnicode=true;characterEncoding=UTF8\n\n#指定由连接池所创建的连接的自动提交（auto-commit）状态。\ndefaultAutoCommit=true\n\n#driver default 指定由连接池所创建的连接的只读（read-only）状态。\n#如果没有设置该值，则“setReadOnly”方法将不被调用。（某些驱动并不支持只读模式，如：Informix）\ndefaultReadOnly=\n\n#driver default 指定由连接池所创建的连接的事务级别（TransactionIsolation）。\n#可用值为下列之一：（详情可见javadoc。）NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE\ndefaultTransactionIsolation=READ_UNCOMMITTED\n```\n\n\n\n\n\nDBCPUtil.class\n\n```java\npackage cn.DBCP_demo;\n\n\nimport org.apache.commons.dbcp.BasicDataSourceFactory;\nimport javax.sql.DataSource;\nimport java.io.InputStream;\nimport java.sql.*;\nimport java.util.Properties;\n\npublic class DBCPUtil {\n\n\n    private static DataSource dataSource = null;\n\n    static {\n        try {\n            InputStream is = DBCPUtil.class.getClassLoader().getResourceAsStream(\"dbcpConfig.properties\");\n            Properties properties = new Properties();\n            properties.load(is);\n\n// 创建数据源\n            dataSource = BasicDataSourceFactory.createDataSource(properties);\n\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n\n    public static Connection getConn() throws SQLException {\n// 从数据源获取连接\n        return dataSource.getConnection();\n    }\n\n    public static void relaeseConn(Connection conn, PreparedStatement ps, ResultSet rs) {\n\n        try {\n            if (rs != null) rs.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if (ps != null) ps.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if (conn != null) conn.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n    }\n}\n\n\n```\n\n\n\n\n\n演示：\n\n```java\npackage cn.DBCP_demo;\n\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\npublic class Demo {\n\n    public static void main(String[] args) {\n        try {\n// 利用工具类获取连接\n            Connection conn = DBCPUtil.getConn();\n\n\n            String sql = \"select * from stu where sid = ? ;\";\n\n\n            PreparedStatement ps = conn.prepareStatement(sql);\n\n\n            ps.setInt(1,3);\n\n            ResultSet res = ps.executeQuery();\n            while(res.next()){\n                System.out.println(res.getString(\"sid\")+\" \"+res.getString(\"sname\"));\n            }\n\n            DBCPUtil.relaeseConn(conn,ps,res);\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n\n    }\n}\n\n```\n\n\n\n### 6.2 c3p0：【存疑】\n\n【注意：此小节的配置还未调试成功】\n\n\n\n使用`XML`作为`配置文件`的格式\n\n\n\n需要导入的Jar包：\n\n-   `mchange-commons-java-0.2.12.jar`\n-   `c3p0-0.9.5.2.jar`\n\n\n\nxml配置文件：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<c3p0-config>\n  <default-config>\n    <property name=\"driverClass\">com.mysql.jdbc.Driver</property>\n    <property name=\"jdbcUrl\">jdbc:mysql://localhost:3306/School_1</property>\n    <property name=\"user\">javaUser</property>\n    <property name=\"password\">javaUser</property>\n    \n    <property name=\"initialPoolSize\">5</property>\n    <property name=\"maxPoolSize\">10</property>\n    <property name=\"checkoutTimeout\">3000</property>\n  </default-config>\n\n  <named-config name=\"otherc3p0\"> \n  </named-config>\n</c3p0-config>\n```\n\n\n\n\n\njava工具类：\n\n```java\npackage cn.c3p0Demo;\n\n\nimport com.mchange.v2.c3p0.ComboPooledDataSource;\n\nimport javax.sql.DataSource;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\npublic class C3P0Util {\n\n\n    private static DataSource dataSource = null;\n\n    static {\n        try {\n\n            dataSource = new ComboPooledDataSource();\n\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n\n    public static Connection getConn() throws SQLException {\n        // 从数据源获取连接\n        return dataSource.getConnection();\n    }\n\n    public static void relaeseConn(Connection conn, PreparedStatement ps, ResultSet rs) {\n\n        try {\n            if (rs != null) rs.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if (ps != null) ps.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        try {\n            if (conn != null) conn.close();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n\n    }\n}\n\n```\n\n\n\n演示：\n\n```java\npackage cn.c3p0Demo;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\npublic class Demo {\n    public static void main(String[] args) {\n        try {\n            Connection conn = C3P0Util.getConn();\n\n            String sql = \"select * from stu where sid = ? ;\";\n            PreparedStatement ps = conn.prepareStatement(sql);\n\n\n            ps.setInt(1,3);\n\n            ResultSet res = ps.executeQuery();\n            while(res.next()){\n                System.out.println(res.getString(\"sid\")+\" \"+res.getString(\"sname\"));\n            }\n\n            C3P0Util.relaeseConn(conn,ps,res);\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        } finally {\n        }\n    }\n}\n\n```\n\n","slug":"JDBC-笔记","published":1,"date":"2021-06-02T02:49:19.129Z","updated":"2021-06-01T07:36:09.360Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs2g0042lcvdcpoafx10","content":"<h1 id=\"JDBC-笔记\"><a href=\"#JDBC-笔记\" class=\"headerlink\" title=\"JDBC-笔记\"></a>JDBC-笔记</h1><p>[toc]</p>\n<h2 id=\"1-JDBC-理解\"><a href=\"#1-JDBC-理解\" class=\"headerlink\" title=\"1. JDBC-理解\"></a>1. JDBC-理解</h2><ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1Bt41137iB?p=2\">JDBC-bilibili</a></li>\n</ul>\n<ol>\n<li> 什么是JDBC？</li>\n</ol>\n<blockquote>\n<p>  JDBC：【Java DataBase Connectivity】</p>\n<p>  位置：<code>java.sql.*;</code></p>\n</blockquote>\n<ol start=\"2\">\n<li> JDBC的本质：</li>\n</ol>\n<blockquote>\n<p>  JDBC是Sun公司提供的一套接口，</p>\n<p>  接口都有 调用者 和 实现者，</p>\n<p>  我们面向接口，去<code>调用、写实现类</code>,这些都是面向接口的编程。</p>\n</blockquote>\n<ol start=\"3\">\n<li> 为什么要面向接口编程？</li>\n</ol>\n<blockquote>\n<ul>\n<li>  解耦合</li>\n<li>  多态机制</li>\n</ul>\n</blockquote>\n<ol start=\"4\">\n<li> 为什么要制定JDBC接口？</li>\n</ol>\n<blockquote>\n<p>  因为每种数据库软件在底层的实现原理是不一样的。</p>\n<p>  为了适配不同的数据库，Sun公司提供了JDBC接口，每种数据库的厂家根据自家的数据库，写JDBC的实现类【一堆<code> .class文件</code>】，最后将这些实现类打包（<code>.jar</code>），形成<code>数据库驱动</code>。</p>\n<p>  <strong>注意：</strong> 数据库驱动是由各大数据库的厂商提供的，因此应该去厂商官网下载。</p>\n</blockquote>\n<h2 id=\"2-导入驱动包\"><a href=\"#2-导入驱动包\" class=\"headerlink\" title=\"2. 导入驱动包\"></a>2. 导入驱动包</h2><p>驱动：<code>mysql-connector-java-5.0.4-bin.jar</code></p>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2mxDQU.png\" alt=\"导入驱动jar包-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2mxgoR.png\" alt=\"jdbc-导入jar包-2\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2mx4SK.png\" alt=\"jdbc-导入jar包-3\"></p>\n<h2 id=\"3-JDBC的使用步骤\"><a href=\"#3-JDBC的使用步骤\" class=\"headerlink\" title=\"3. JDBC的使用步骤\"></a>3. JDBC的使用步骤</h2><ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1NJ411J79W?p=38\">狂神说Java-JDBC</a></li>\n</ul>\n<p>步骤：</p>\n<ol>\n<li> 注册驱动【需先下载，将文件后缀改为 <code>.jar</code>】：告诉Java要用什么牌子的数据库</li>\n</ol>\n<blockquote>\n<ul>\n<li>  新建1个<code>lib</code>文件夹，放入<code>数据库驱动jar包</code></li>\n<li>  file -&gt; projectStructure -&gt; lib -&gt; “+” -&gt; 选中 数据库的驱动 -&gt; apply</li>\n<li>  【如果没成功添加驱动，可以点击file -&gt; projectStructure -&gt; module -&gt; 选择要应用到的模块 -&gt;dependencies -&gt; “+”号 -&gt; 选择 驱动jar包】</li>\n<li>  利用反射  找到  驱动中的Driver类</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// mysql 5.5版本，【注意：8.0版本的包名有变化】</span></span><br><span class=\"line\">\tClass.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);\t</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"2\">\n<li> 获取连接：JVM和数据库的通道打开，属于进程间的通信，使用完后，一定要手动关闭。</li>\n</ol>\n<blockquote>\n<ul>\n<li>  传入url、用户名、密码</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取连接，传入url、用户名、密码</span></span><br><span class=\"line\"><span class=\"comment\">//String url = jdbc:mysql://localhost:3306/School_1?serverTimezone=Asia/Shanghai</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t\t\t&amp;useUnicode=true</span></span><br><span class=\"line\"><span class=\"comment\">//  \t\t\t\t&amp;characterEncoding=utf8</span></span><br><span class=\"line\"><span class=\"comment\">//      \t\t\t&amp;useSSL=true</span></span><br><span class=\"line\">        </span><br><span class=\"line\">\tString url = <span class=\"string\">&quot;jdbc:mysql://localhost:3306/myDB?参数&quot;</span>\t<span class=\"comment\">// mysql8.0需要在参数中传入时区</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    String userName = <span class=\"string\">&quot;javaUser&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tString psw = <span class=\"string\">&quot;javaUser&quot;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\tConnection conn = DriverManager.getConnection(url,userName,psw);</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"3\">\n<li> 获取数据操作的对象：</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Statement statement = conn.createStatement();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<ol start=\"4\">\n<li> 执行SQL语句</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ResultSet resultSet = statement.executeQuery(sql); <span class=\"comment\">// 查询</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// statement.execute(sql);\t// 所有sql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// int lines = statement.executeUpdate(sql);\t// 执行增、删、改，返回执行的行数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// int[] counts = statement.executeBatch(sql);\t// 执行批处理</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"5\">\n<li> 获取、处理 结果集</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">while</span>(resultSet.next())&#123;</span><br><span class=\"line\"><span class=\"comment\">// 结果集中的数据的获取       </span></span><br><span class=\"line\">           resultSet.getObject(列名或索引);</span><br><span class=\"line\">       </span><br><span class=\"line\">       \t   <span class=\"comment\">// resultSet.getInt(列名或索引);</span></span><br><span class=\"line\">       </span><br><span class=\"line\">       \t   <span class=\"comment\">// resultSet.getString(列名或索引);</span></span><br><span class=\"line\">       </span><br><span class=\"line\">       \t   <span class=\"comment\">// resultSet.getDouble(列名或索引);</span></span><br><span class=\"line\">       </span><br><span class=\"line\">       \t   <span class=\"comment\">// resultSet.getDate(列名或索引);</span></span><br><span class=\"line\">  </span><br><span class=\"line\">       </span><br><span class=\"line\"><span class=\"comment\">// 指针移动：</span></span><br><span class=\"line\">       \t\tresultSet.next();</span><br><span class=\"line\">       \t\t<span class=\"comment\">// resultSet.previous();</span></span><br><span class=\"line\">       \t\t<span class=\"comment\">// resultSet.beforeFirst();</span></span><br><span class=\"line\">       \t\t<span class=\"comment\">// resultSet.afterLast();</span></span><br><span class=\"line\">\t       \t<span class=\"comment\">// resultSet.absolute(row);\t// 移动到指定行</span></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"6\">\n<li> 释放资源</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resultSet.close();</span><br><span class=\"line\">\tstatement.close();</span><br><span class=\"line\">conn.close();</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"2-2-案例-1：\"><a href=\"#2-2-案例-1：\" class=\"headerlink\" title=\"2.2 案例-1：\"></a>2.2 案例-1：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jabc.demo1;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 数据库的用户名；密码</span></span><br><span class=\"line\">                String user = <span class=\"string\">&quot;javaUser&quot;</span>;</span><br><span class=\"line\">                String psw = <span class=\"string\">&quot;javaUser&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 数据库的url：jdbc:mysql://ip地址:端口号/数据库名?时区</span></span><br><span class=\"line\">                String url = <span class=\"string\">&quot;jdbc:mysql://127.0.0.1:3306/School_1?serverTimezone=Asia/Shanghai&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 加载驱动</span></span><br><span class=\"line\">                Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 获取连接【conn连接 就代表1个数据库】</span></span><br><span class=\"line\">                Connection conn = DriverManager.getConnection(url,user,psw);</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;=== 数据已连接&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 创建数据操作对象</span></span><br><span class=\"line\">                Statement statement = conn.createStatement();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 创建SQL语句</span></span><br><span class=\"line\">                String sql = <span class=\"string\">&quot;select * from stu;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 执行SQL,获取结果集</span></span><br><span class=\"line\">                ResultSet resultSet = statement.executeQuery(sql); <span class=\"comment\">// 查询</span></span><br><span class=\"line\">                statement.execute(sql);\t<span class=\"comment\">// 所有sql</span></span><br><span class=\"line\">            \t<span class=\"keyword\">int</span> lines = statement.executeUpdate(sql);\t<span class=\"comment\">// 执行增、删、改，返回执行的行数</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span>[] counts = statement.executeBatch(sql);\t<span class=\"comment\">// 执行批处理</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 输出结果</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span>(resultSet.next())&#123;</span><br><span class=\"line\">                    System.out.print(<span class=\"string\">&quot;sid:&quot;</span>+resultSet.getObject(<span class=\"string\">&quot;sid&quot;</span>));</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot; , sname:&quot;</span>+resultSet.getObject(<span class=\"string\">&quot;sname&quot;</span>));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">                resultSet.close();</span><br><span class=\"line\">                statement.close();</span><br><span class=\"line\">                conn.close();</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;=== 连接已关闭&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"2-3-封装JDBC的的工具类【初始版】\"><a href=\"#2-3-封装JDBC的的工具类【初始版】\" class=\"headerlink\" title=\"2.3 封装JDBC的的工具类【初始版】\"></a>2.3 封装JDBC的的工具类【初始版】</h3><ol>\n<li> 编写工具类：【DBUtil】</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DBUtil</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String url = <span class=\"string\">&quot;jdbc:mysql://localhost:3306/School_1&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String user = <span class=\"string\">&quot;javaUser&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String psw= <span class=\"string\">&quot;javaUser&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConn</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> DriverManager.getConnection(url,user,psw);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">relaeseConn</span><span class=\"params\">(Connection conn, Statement st,ResultSet rs)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(rs!=<span class=\"keyword\">null</span>) rs.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(st!=<span class=\"keyword\">null</span>) st.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(conn!=<span class=\"keyword\">null</span>) conn.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li> 使用：</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcdemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.jdbcUtil.DBUtil;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Connection conn = DBUtil.getConn();</span><br><span class=\"line\">            Statement statement = conn.createStatement();</span><br><span class=\"line\">            ResultSet res = statement.executeQuery(<span class=\"string\">&quot;select * from stu;&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(res.next())&#123;</span><br><span class=\"line\">                System.out.println(res.getString(<span class=\"string\">&quot;sid&quot;</span>)+<span class=\"string\">&quot; &quot;</span>+res.getString(<span class=\"string\">&quot;sname&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            DBUtil.relaeseConn(conn,statement,res);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"2-4-封装JDBC的的工具类【改进版】\"><a href=\"#2-4-封装JDBC的的工具类【改进版】\" class=\"headerlink\" title=\"2.4 封装JDBC的的工具类【改进版】\"></a>2.4 封装JDBC的的工具类【改进版】</h3><ol>\n<li> 编写：配置文件【<code>db.properties</code>】</li>\n</ol>\n<p>注意：<code>配置文件必须是src目录的直接孩子。【不能是孙子】</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">driver = com.mysql.jdbc.Driver</span><br><span class=\"line\">url = jdbc:mysql:<span class=\"comment\">//localhost:3306/School_1?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class=\"line\">user = javaUser</span><br><span class=\"line\">psw = javaUser</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"2\">\n<li> 编写工具类：【DBUtil_2】</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DBUtil_2</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String driver = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String url = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String user = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String psw= <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取配置文件</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            InputStream is = DBUtil_2.class.getClassLoader().getResourceAsStream(<span class=\"string\">&quot;db.properties&quot;</span>);</span><br><span class=\"line\">            </span><br><span class=\"line\">            Properties properties = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">            properties.load(is);</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 获取配置文件中的4个配置</span></span><br><span class=\"line\">            driver = properties.getProperty(<span class=\"string\">&quot;driver&quot;</span>);</span><br><span class=\"line\">            url = properties.getProperty(<span class=\"string\">&quot;url&quot;</span>);</span><br><span class=\"line\">            user = properties.getProperty(<span class=\"string\">&quot;user&quot;</span>);</span><br><span class=\"line\">            psw = properties.getProperty(<span class=\"string\">&quot;psw&quot;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 注册驱动</span></span><br><span class=\"line\">            Class.forName(driver);</span><br><span class=\"line\"></span><br><span class=\"line\">       </span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取连接</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConn</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> DriverManager.getConnection(url,user,psw);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 释放资源</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">relaeseConn</span><span class=\"params\">(Connection conn, Statement st,ResultSet rs)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(rs!=<span class=\"keyword\">null</span>) rs.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(st!=<span class=\"keyword\">null</span>) st.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(conn!=<span class=\"keyword\">null</span>) conn.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-5-封装JDBC的工具类【最终版】\"><a href=\"#2-5-封装JDBC的工具类【最终版】\" class=\"headerlink\" title=\"2.5 封装JDBC的工具类【最终版】\"></a>2.5 封装JDBC的工具类【最终版】</h3><p>将<code>Statement </code>改为<code>PreparedStatement</code>, 更安全。可以防止用户输入SQL语句后，输入的语句 参与到 后端的SQL语句的编译，导致被SQL注入的问题。<code>PreparedStatement</code>将用户输入的语句作为字符串，传入后端的SQL语句中进行SQL语句的拼接。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DBUtil_3</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String driver = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String url = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String user = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String psw= <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            InputStream is = DBUtil_3.class.getClassLoader().getResourceAsStream(<span class=\"string\">&quot;db.properties&quot;</span>);</span><br><span class=\"line\">            Properties properties = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">            properties.load(is);</span><br><span class=\"line\"></span><br><span class=\"line\">            driver = properties.getProperty(<span class=\"string\">&quot;driver&quot;</span>);</span><br><span class=\"line\">            url = properties.getProperty(<span class=\"string\">&quot;url&quot;</span>);</span><br><span class=\"line\">            user = properties.getProperty(<span class=\"string\">&quot;user&quot;</span>);</span><br><span class=\"line\">            psw = properties.getProperty(<span class=\"string\">&quot;psw&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            Class.forName(driver);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConn</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> DriverManager.getConnection(url,user,psw);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">relaeseConn</span><span class=\"params\">(Connection conn, PreparedStatement ps,ResultSet rs)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(rs!=<span class=\"keyword\">null</span>) rs.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ps!=<span class=\"keyword\">null</span>) ps.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(conn!=<span class=\"keyword\">null</span>) conn.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"2-6-案例1-改进版：\"><a href=\"#2-6-案例1-改进版：\" class=\"headerlink\" title=\"2.6 案例1-改进版：\"></a>2.6 案例1-改进版：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcdemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.jdbcUtil.DBUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.jdbcUtil.DBUtil_2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//Connection conn = DBUtil.getConn();</span></span><br><span class=\"line\">            Connection conn = DBUtil_2.getConn();</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// Statement statement = conn.createStatement();</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 要执行的SQL语句</span></span><br><span class=\"line\">            String sql = <span class=\"string\">&quot;select * from stu where sid = ? ;&quot;</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">        \t<span class=\"comment\">// 预编译SQL语句，?问号为占位符，</span></span><br><span class=\"line\">            <span class=\"comment\">// 占位符的内容在执行时，只作为字符串，不会被当作SQL的一部分参与编译</span></span><br><span class=\"line\">            <span class=\"comment\">// 采用预编译，可以防止：SQL注入</span></span><br><span class=\"line\">            PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 设置占位符的内容，此处表示将第一个占位符的值设为3</span></span><br><span class=\"line\">            <span class=\"comment\">// 【注意】：JDBC中的下标 从 1 开始计数</span></span><br><span class=\"line\">            ps.setInt(<span class=\"number\">1</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            ResultSet res = ps.executeQuery();</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(res.next())&#123;</span><br><span class=\"line\">                System.out.println(res.getString(<span class=\"string\">&quot;sid&quot;</span>)+<span class=\"string\">&quot; &quot;</span>+res.getString(<span class=\"string\">&quot;sname&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            DBUtil.relaeseConn(conn,ps,res);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-7-案例2-登录功能\"><a href=\"#2-7-案例2-登录功能\" class=\"headerlink\" title=\"2.7 案例2-登录功能:\"></a>2.7 案例2-登录功能:</h3><p>注意：使用了<code>2.5小节中的 DBUtil_3工具类</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcdemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.jdbcUtil.DBUtil_3;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserLogin</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;请输入用户名：&quot;</span>);</span><br><span class=\"line\">        String username = sc.nextLine();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;请输入密码：&quot;</span>);</span><br><span class=\"line\">        String upsw = sc.nextLine();</span><br><span class=\"line\"></span><br><span class=\"line\">        Connection conn=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">        PreparedStatement ps=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">        ResultSet res = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(username!=<span class=\"keyword\">null</span> &amp;&amp; upsw!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                conn = DBUtil_3.getConn();</span><br><span class=\"line\">                String sql = <span class=\"string\">&quot;select * from stu where sname=? and spsw=?&quot;</span>;</span><br><span class=\"line\">                ps = conn.prepareStatement(sql);</span><br><span class=\"line\">                ps.setString(<span class=\"number\">1</span>,username);</span><br><span class=\"line\">                ps.setString(<span class=\"number\">2</span>,upsw);</span><br><span class=\"line\"></span><br><span class=\"line\">                res = ps.executeQuery();</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(res.next())&#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;登录成功&quot;</span>);</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;登录失败&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                throwables.printStackTrace();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    DBUtil_3.relaeseConn(conn,ps,res);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                sc.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"4-IDEA-连接MySQL\"><a href=\"#4-IDEA-连接MySQL\" class=\"headerlink\" title=\"4. IDEA-连接MySQL\"></a>4. IDEA-连接MySQL</h2><ul>\n<li>  选择：数据库的品牌</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2nuNGT.png\" alt=\"idea-连MySQL\"></p>\n<ul>\n<li>在IDEA中，登录到MySQL<ul>\n<li>  注意：url在填写时，需要加上<code>时区</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2nK51U.png\" alt=\"idea-连接myql\"></p>\n<ul>\n<li>  选择具体要使用的数据库</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2nM4UI.png\" alt=\"idea-连接mysql-3\"></p>\n<p>查看数据库的内容：双击数据库</p>\n<p>修改数据库：双击单元格，修改数据，回车，点击提交</p>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2nlzcT.png\" alt=\"idea中可视化修改数据\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2n1RrF.png\" alt=\"idea中直接使用SQL语句\"></p>\n<h2 id=\"5-JDBC事务-操作\"><a href=\"#5-JDBC事务-操作\" class=\"headerlink\" title=\"5. JDBC事务-操作\"></a>5. JDBC事务-操作</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcdemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.jdbcUtil.DBUtil_3;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo02</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Connection conn = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        PreparedStatement ps = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        ResultSet rs = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">// 获取连接</span></span><br><span class=\"line\">            conn = DBUtil_3.getConn();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 关闭自动提交 =》开启事务</span></span><br><span class=\"line\">            conn.setAutoCommit(<span class=\"keyword\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行 2个事务</span></span><br><span class=\"line\">            String sql1 = <span class=\"string\">&quot;update account_tb set money = money-500 where userID=2&quot;</span>;</span><br><span class=\"line\">            ps = conn.prepareStatement(sql1);</span><br><span class=\"line\">            ps.executeUpdate();</span><br><span class=\"line\"></span><br><span class=\"line\">            String sql2 = <span class=\"string\">&quot;update account_tb set money = money+500 where userID=1&quot;</span>;</span><br><span class=\"line\">            ps = conn.prepareStatement(sql2);</span><br><span class=\"line\">            ps.executeUpdate();</span><br><span class=\"line\"><span class=\"comment\">// 提交事务</span></span><br><span class=\"line\">            conn.commit();</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 重新开启事务的自动提交            </span></span><br><span class=\"line\">            conn.setAutoCommit(<span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">// 回滚事务                </span></span><br><span class=\"line\">                conn.rollback();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            DBUtil_3.relaeseConn(conn,ps,rs = <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h2 id=\"6-数据库连接池\"><a href=\"#6-数据库连接池\" class=\"headerlink\" title=\"6. 数据库连接池\"></a>6. 数据库连接池</h2><ul>\n<li><p>  <a href=\"https://www.bilibili.com/video/BV1NJ411J79W?p=45\">狂神说-bilibili</a></p>\n</li>\n<li><p>  <a href=\"https://blog.csdn.net/ximexi/article/details/112609042\">DBCP连接池所用到的两个jar包下载地址-CSDN博客</a></p>\n</li>\n<li><p>  <a href=\"https://blog.csdn.net/huangyuhua068/article/details/82086259\">c3p0-jar包-下载CSDN博客</a></p>\n</li>\n</ul>\n<p>数据库连接过程：</p>\n<ul>\n<li>  连接 -&gt; 执行 -&gt; 释放  【这3个过程，浪费系统资源，开销大】</li>\n</ul>\n<p>池化技术：</p>\n<blockquote>\n<p>  提前准备好一些连接资源（如：conn对象，preparedStatement对象，ResultSet等），用户用完后，不释放资源，而是将资源重新放回池中。</p>\n</blockquote>\n<ul>\n<li>  最小连接数：设为常用的连接数，如：10</li>\n<li>  最大连接数：如：15</li>\n<li>  等待超时：如：10 ms</li>\n</ul>\n<p>编写连接池：实现 DataSource接口【获取连接】</p>\n<blockquote>\n<p>  开源数据源 实现:</p>\n<ul>\n<li>  DBCP:</li>\n<li>  C3P0：</li>\n<li>  Druid：阿里</li>\n</ul>\n</blockquote>\n<p>使用以上的数据库连接池后，无需 再编写 数据库的连接代码。</p>\n<h3 id=\"6-1-DBCP\"><a href=\"#6-1-DBCP\" class=\"headerlink\" title=\"6.1 DBCP:\"></a>6.1 DBCP:</h3><p>需要导入的包</p>\n<ul>\n<li>  <code>commons-dbcp-1.4.jar</code></li>\n<li>  <code>commons-pool-1.6.jar</code></li>\n</ul>\n<p>步骤：</p>\n<ul>\n<li>  编写<code>DBCP.properties</code> 配置文件,放在模块<code>src目录下的第一层</code></li>\n<li>导入Jar包：<ul>\n<li>  <code>commons-dbcp-1.4.jar</code></li>\n<li>  <code>commons-pool-1.6.jar</code></li>\n<li>  <code>mysql-connector-java-5.0.4-bin.jar</code></li>\n</ul>\n</li>\n<li>  编写工具类【在工具类中创建数据源，返回连接】</li>\n<li>  获取连接，执行语句，处理数据，释放资源。</li>\n</ul>\n<p>DBCP-properties配置：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#连接设置</span><br><span class=\"line\">driverClassName=com.mysql.jdbc.Driver</span><br><span class=\"line\">url=jdbc:mysql:<span class=\"comment\">//localhost:3306/School_1?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class=\"line\">username=root</span><br><span class=\"line\">password=root</span><br><span class=\"line\"></span><br><span class=\"line\">#!-- 初始化连接 --</span><br><span class=\"line\">initialSize=<span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">#最大连接数量</span><br><span class=\"line\">maxActive=<span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\">#!-- 最大空闲连接 --</span><br><span class=\"line\">maxIdle=<span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\">#!-- 最小空闲连接 --</span><br><span class=\"line\">minIdle=<span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\">#!-- 超时等待时间以毫秒为单位 <span class=\"number\">6000</span>毫秒/<span class=\"number\">1000</span>等于<span class=\"number\">60</span>秒 --</span><br><span class=\"line\">maxWait=<span class=\"number\">60000</span></span><br><span class=\"line\">#JDBC驱动建立连接时附带的连接属性属性的格式必须为这样：【属性名=property;】</span><br><span class=\"line\">#注意：user 与 password 两个属性会被明确地传递，因此这里不需要包含他们。</span><br><span class=\"line\">connectionProperties=useUnicode=<span class=\"keyword\">true</span>;characterEncoding=UTF8</span><br><span class=\"line\"></span><br><span class=\"line\">#指定由连接池所创建的连接的自动提交（auto-commit）状态。</span><br><span class=\"line\">defaultAutoCommit=<span class=\"keyword\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">#driver <span class=\"keyword\">default</span> 指定由连接池所创建的连接的只读（read-only）状态。</span><br><span class=\"line\">#如果没有设置该值，则“setReadOnly”方法将不被调用。（某些驱动并不支持只读模式，如：Informix）</span><br><span class=\"line\">defaultReadOnly=</span><br><span class=\"line\"></span><br><span class=\"line\">#driver <span class=\"keyword\">default</span> 指定由连接池所创建的连接的事务级别（TransactionIsolation）。</span><br><span class=\"line\">#可用值为下列之一：（详情可见javadoc。）NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE</span><br><span class=\"line\">defaultTransactionIsolation=READ_UNCOMMITTED</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>DBCPUtil.class</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.DBCP_demo;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.dbcp.BasicDataSourceFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.sql.DataSource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DBCPUtil</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> DataSource dataSource = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            InputStream is = DBCPUtil.class.getClassLoader().getResourceAsStream(<span class=\"string\">&quot;dbcpConfig.properties&quot;</span>);</span><br><span class=\"line\">            Properties properties = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">            properties.load(is);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建数据源</span></span><br><span class=\"line\">            dataSource = BasicDataSourceFactory.createDataSource(properties);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConn</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">// 从数据源获取连接</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> dataSource.getConnection();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">relaeseConn</span><span class=\"params\">(Connection conn, PreparedStatement ps, ResultSet rs)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (rs != <span class=\"keyword\">null</span>) rs.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ps != <span class=\"keyword\">null</span>) ps.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (conn != <span class=\"keyword\">null</span>) conn.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>演示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.DBCP_demo;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">// 利用工具类获取连接</span></span><br><span class=\"line\">            Connection conn = DBCPUtil.getConn();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            String sql = <span class=\"string\">&quot;select * from stu where sid = ? ;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            ps.setInt(<span class=\"number\">1</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            ResultSet res = ps.executeQuery();</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(res.next())&#123;</span><br><span class=\"line\">                System.out.println(res.getString(<span class=\"string\">&quot;sid&quot;</span>)+<span class=\"string\">&quot; &quot;</span>+res.getString(<span class=\"string\">&quot;sname&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            DBCPUtil.relaeseConn(conn,ps,res);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"6-2-c3p0：【存疑】\"><a href=\"#6-2-c3p0：【存疑】\" class=\"headerlink\" title=\"6.2 c3p0：【存疑】\"></a>6.2 c3p0：【存疑】</h3><p>【注意：此小节的配置还未调试成功】</p>\n<p>使用<code>XML</code>作为<code>配置文件</code>的格式</p>\n<p>需要导入的Jar包：</p>\n<ul>\n<li>  <code>mchange-commons-java-0.2.12.jar</code></li>\n<li>  <code>c3p0-0.9.5.2.jar</code></li>\n</ul>\n<p>xml配置文件：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">c3p0-config</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">default-config</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://localhost:3306/School_1<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;user&quot;</span>&gt;</span>javaUser<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span>javaUser<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;maxPoolSize&quot;</span>&gt;</span>10<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;checkoutTimeout&quot;</span>&gt;</span>3000<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">default-config</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">named-config</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;otherc3p0&quot;</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">named-config</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>java工具类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.c3p0Demo;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.sql.DataSource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C3P0Util</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> DataSource dataSource = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            dataSource = <span class=\"keyword\">new</span> ComboPooledDataSource();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConn</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 从数据源获取连接</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> dataSource.getConnection();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">relaeseConn</span><span class=\"params\">(Connection conn, PreparedStatement ps, ResultSet rs)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (rs != <span class=\"keyword\">null</span>) rs.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ps != <span class=\"keyword\">null</span>) ps.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (conn != <span class=\"keyword\">null</span>) conn.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>演示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.c3p0Demo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Connection conn = C3P0Util.getConn();</span><br><span class=\"line\"></span><br><span class=\"line\">            String sql = <span class=\"string\">&quot;select * from stu where sid = ? ;&quot;</span>;</span><br><span class=\"line\">            PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            ps.setInt(<span class=\"number\">1</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            ResultSet res = ps.executeQuery();</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(res.next())&#123;</span><br><span class=\"line\">                System.out.println(res.getString(<span class=\"string\">&quot;sid&quot;</span>)+<span class=\"string\">&quot; &quot;</span>+res.getString(<span class=\"string\">&quot;sname&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            C3P0Util.relaeseConn(conn,ps,res);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"JDBC-笔记\"><a href=\"#JDBC-笔记\" class=\"headerlink\" title=\"JDBC-笔记\"></a>JDBC-笔记</h1><p>[toc]</p>\n<h2 id=\"1-JDBC-理解\"><a href=\"#1-JDBC-理解\" class=\"headerlink\" title=\"1. JDBC-理解\"></a>1. JDBC-理解</h2><ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1Bt41137iB?p=2\">JDBC-bilibili</a></li>\n</ul>\n<ol>\n<li> 什么是JDBC？</li>\n</ol>\n<blockquote>\n<p>  JDBC：【Java DataBase Connectivity】</p>\n<p>  位置：<code>java.sql.*;</code></p>\n</blockquote>\n<ol start=\"2\">\n<li> JDBC的本质：</li>\n</ol>\n<blockquote>\n<p>  JDBC是Sun公司提供的一套接口，</p>\n<p>  接口都有 调用者 和 实现者，</p>\n<p>  我们面向接口，去<code>调用、写实现类</code>,这些都是面向接口的编程。</p>\n</blockquote>\n<ol start=\"3\">\n<li> 为什么要面向接口编程？</li>\n</ol>\n<blockquote>\n<ul>\n<li>  解耦合</li>\n<li>  多态机制</li>\n</ul>\n</blockquote>\n<ol start=\"4\">\n<li> 为什么要制定JDBC接口？</li>\n</ol>\n<blockquote>\n<p>  因为每种数据库软件在底层的实现原理是不一样的。</p>\n<p>  为了适配不同的数据库，Sun公司提供了JDBC接口，每种数据库的厂家根据自家的数据库，写JDBC的实现类【一堆<code> .class文件</code>】，最后将这些实现类打包（<code>.jar</code>），形成<code>数据库驱动</code>。</p>\n<p>  <strong>注意：</strong> 数据库驱动是由各大数据库的厂商提供的，因此应该去厂商官网下载。</p>\n</blockquote>\n<h2 id=\"2-导入驱动包\"><a href=\"#2-导入驱动包\" class=\"headerlink\" title=\"2. 导入驱动包\"></a>2. 导入驱动包</h2><p>驱动：<code>mysql-connector-java-5.0.4-bin.jar</code></p>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2mxDQU.png\" alt=\"导入驱动jar包-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2mxgoR.png\" alt=\"jdbc-导入jar包-2\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2mx4SK.png\" alt=\"jdbc-导入jar包-3\"></p>\n<h2 id=\"3-JDBC的使用步骤\"><a href=\"#3-JDBC的使用步骤\" class=\"headerlink\" title=\"3. JDBC的使用步骤\"></a>3. JDBC的使用步骤</h2><ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1NJ411J79W?p=38\">狂神说Java-JDBC</a></li>\n</ul>\n<p>步骤：</p>\n<ol>\n<li> 注册驱动【需先下载，将文件后缀改为 <code>.jar</code>】：告诉Java要用什么牌子的数据库</li>\n</ol>\n<blockquote>\n<ul>\n<li>  新建1个<code>lib</code>文件夹，放入<code>数据库驱动jar包</code></li>\n<li>  file -&gt; projectStructure -&gt; lib -&gt; “+” -&gt; 选中 数据库的驱动 -&gt; apply</li>\n<li>  【如果没成功添加驱动，可以点击file -&gt; projectStructure -&gt; module -&gt; 选择要应用到的模块 -&gt;dependencies -&gt; “+”号 -&gt; 选择 驱动jar包】</li>\n<li>  利用反射  找到  驱动中的Driver类</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// mysql 5.5版本，【注意：8.0版本的包名有变化】</span></span><br><span class=\"line\">\tClass.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);\t</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"2\">\n<li> 获取连接：JVM和数据库的通道打开，属于进程间的通信，使用完后，一定要手动关闭。</li>\n</ol>\n<blockquote>\n<ul>\n<li>  传入url、用户名、密码</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取连接，传入url、用户名、密码</span></span><br><span class=\"line\"><span class=\"comment\">//String url = jdbc:mysql://localhost:3306/School_1?serverTimezone=Asia/Shanghai</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t\t\t&amp;useUnicode=true</span></span><br><span class=\"line\"><span class=\"comment\">//  \t\t\t\t&amp;characterEncoding=utf8</span></span><br><span class=\"line\"><span class=\"comment\">//      \t\t\t&amp;useSSL=true</span></span><br><span class=\"line\">        </span><br><span class=\"line\">\tString url = <span class=\"string\">&quot;jdbc:mysql://localhost:3306/myDB?参数&quot;</span>\t<span class=\"comment\">// mysql8.0需要在参数中传入时区</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    String userName = <span class=\"string\">&quot;javaUser&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tString psw = <span class=\"string\">&quot;javaUser&quot;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\tConnection conn = DriverManager.getConnection(url,userName,psw);</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"3\">\n<li> 获取数据操作的对象：</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Statement statement = conn.createStatement();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<ol start=\"4\">\n<li> 执行SQL语句</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ResultSet resultSet = statement.executeQuery(sql); <span class=\"comment\">// 查询</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// statement.execute(sql);\t// 所有sql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// int lines = statement.executeUpdate(sql);\t// 执行增、删、改，返回执行的行数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// int[] counts = statement.executeBatch(sql);\t// 执行批处理</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"5\">\n<li> 获取、处理 结果集</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">while</span>(resultSet.next())&#123;</span><br><span class=\"line\"><span class=\"comment\">// 结果集中的数据的获取       </span></span><br><span class=\"line\">           resultSet.getObject(列名或索引);</span><br><span class=\"line\">       </span><br><span class=\"line\">       \t   <span class=\"comment\">// resultSet.getInt(列名或索引);</span></span><br><span class=\"line\">       </span><br><span class=\"line\">       \t   <span class=\"comment\">// resultSet.getString(列名或索引);</span></span><br><span class=\"line\">       </span><br><span class=\"line\">       \t   <span class=\"comment\">// resultSet.getDouble(列名或索引);</span></span><br><span class=\"line\">       </span><br><span class=\"line\">       \t   <span class=\"comment\">// resultSet.getDate(列名或索引);</span></span><br><span class=\"line\">  </span><br><span class=\"line\">       </span><br><span class=\"line\"><span class=\"comment\">// 指针移动：</span></span><br><span class=\"line\">       \t\tresultSet.next();</span><br><span class=\"line\">       \t\t<span class=\"comment\">// resultSet.previous();</span></span><br><span class=\"line\">       \t\t<span class=\"comment\">// resultSet.beforeFirst();</span></span><br><span class=\"line\">       \t\t<span class=\"comment\">// resultSet.afterLast();</span></span><br><span class=\"line\">\t       \t<span class=\"comment\">// resultSet.absolute(row);\t// 移动到指定行</span></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"6\">\n<li> 释放资源</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resultSet.close();</span><br><span class=\"line\">\tstatement.close();</span><br><span class=\"line\">conn.close();</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"2-2-案例-1：\"><a href=\"#2-2-案例-1：\" class=\"headerlink\" title=\"2.2 案例-1：\"></a>2.2 案例-1：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jabc.demo1;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 数据库的用户名；密码</span></span><br><span class=\"line\">                String user = <span class=\"string\">&quot;javaUser&quot;</span>;</span><br><span class=\"line\">                String psw = <span class=\"string\">&quot;javaUser&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 数据库的url：jdbc:mysql://ip地址:端口号/数据库名?时区</span></span><br><span class=\"line\">                String url = <span class=\"string\">&quot;jdbc:mysql://127.0.0.1:3306/School_1?serverTimezone=Asia/Shanghai&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 加载驱动</span></span><br><span class=\"line\">                Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 获取连接【conn连接 就代表1个数据库】</span></span><br><span class=\"line\">                Connection conn = DriverManager.getConnection(url,user,psw);</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;=== 数据已连接&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 创建数据操作对象</span></span><br><span class=\"line\">                Statement statement = conn.createStatement();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 创建SQL语句</span></span><br><span class=\"line\">                String sql = <span class=\"string\">&quot;select * from stu;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 执行SQL,获取结果集</span></span><br><span class=\"line\">                ResultSet resultSet = statement.executeQuery(sql); <span class=\"comment\">// 查询</span></span><br><span class=\"line\">                statement.execute(sql);\t<span class=\"comment\">// 所有sql</span></span><br><span class=\"line\">            \t<span class=\"keyword\">int</span> lines = statement.executeUpdate(sql);\t<span class=\"comment\">// 执行增、删、改，返回执行的行数</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span>[] counts = statement.executeBatch(sql);\t<span class=\"comment\">// 执行批处理</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 输出结果</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span>(resultSet.next())&#123;</span><br><span class=\"line\">                    System.out.print(<span class=\"string\">&quot;sid:&quot;</span>+resultSet.getObject(<span class=\"string\">&quot;sid&quot;</span>));</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot; , sname:&quot;</span>+resultSet.getObject(<span class=\"string\">&quot;sname&quot;</span>));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">                resultSet.close();</span><br><span class=\"line\">                statement.close();</span><br><span class=\"line\">                conn.close();</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;=== 连接已关闭&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"2-3-封装JDBC的的工具类【初始版】\"><a href=\"#2-3-封装JDBC的的工具类【初始版】\" class=\"headerlink\" title=\"2.3 封装JDBC的的工具类【初始版】\"></a>2.3 封装JDBC的的工具类【初始版】</h3><ol>\n<li> 编写工具类：【DBUtil】</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DBUtil</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String url = <span class=\"string\">&quot;jdbc:mysql://localhost:3306/School_1&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String user = <span class=\"string\">&quot;javaUser&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String psw= <span class=\"string\">&quot;javaUser&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConn</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> DriverManager.getConnection(url,user,psw);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">relaeseConn</span><span class=\"params\">(Connection conn, Statement st,ResultSet rs)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(rs!=<span class=\"keyword\">null</span>) rs.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(st!=<span class=\"keyword\">null</span>) st.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(conn!=<span class=\"keyword\">null</span>) conn.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li> 使用：</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcdemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.jdbcUtil.DBUtil;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Connection conn = DBUtil.getConn();</span><br><span class=\"line\">            Statement statement = conn.createStatement();</span><br><span class=\"line\">            ResultSet res = statement.executeQuery(<span class=\"string\">&quot;select * from stu;&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(res.next())&#123;</span><br><span class=\"line\">                System.out.println(res.getString(<span class=\"string\">&quot;sid&quot;</span>)+<span class=\"string\">&quot; &quot;</span>+res.getString(<span class=\"string\">&quot;sname&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            DBUtil.relaeseConn(conn,statement,res);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"2-4-封装JDBC的的工具类【改进版】\"><a href=\"#2-4-封装JDBC的的工具类【改进版】\" class=\"headerlink\" title=\"2.4 封装JDBC的的工具类【改进版】\"></a>2.4 封装JDBC的的工具类【改进版】</h3><ol>\n<li> 编写：配置文件【<code>db.properties</code>】</li>\n</ol>\n<p>注意：<code>配置文件必须是src目录的直接孩子。【不能是孙子】</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">driver = com.mysql.jdbc.Driver</span><br><span class=\"line\">url = jdbc:mysql:<span class=\"comment\">//localhost:3306/School_1?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class=\"line\">user = javaUser</span><br><span class=\"line\">psw = javaUser</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"2\">\n<li> 编写工具类：【DBUtil_2】</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DBUtil_2</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String driver = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String url = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String user = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String psw= <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取配置文件</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            InputStream is = DBUtil_2.class.getClassLoader().getResourceAsStream(<span class=\"string\">&quot;db.properties&quot;</span>);</span><br><span class=\"line\">            </span><br><span class=\"line\">            Properties properties = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">            properties.load(is);</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 获取配置文件中的4个配置</span></span><br><span class=\"line\">            driver = properties.getProperty(<span class=\"string\">&quot;driver&quot;</span>);</span><br><span class=\"line\">            url = properties.getProperty(<span class=\"string\">&quot;url&quot;</span>);</span><br><span class=\"line\">            user = properties.getProperty(<span class=\"string\">&quot;user&quot;</span>);</span><br><span class=\"line\">            psw = properties.getProperty(<span class=\"string\">&quot;psw&quot;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 注册驱动</span></span><br><span class=\"line\">            Class.forName(driver);</span><br><span class=\"line\"></span><br><span class=\"line\">       </span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取连接</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConn</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> DriverManager.getConnection(url,user,psw);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 释放资源</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">relaeseConn</span><span class=\"params\">(Connection conn, Statement st,ResultSet rs)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(rs!=<span class=\"keyword\">null</span>) rs.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(st!=<span class=\"keyword\">null</span>) st.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(conn!=<span class=\"keyword\">null</span>) conn.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-5-封装JDBC的工具类【最终版】\"><a href=\"#2-5-封装JDBC的工具类【最终版】\" class=\"headerlink\" title=\"2.5 封装JDBC的工具类【最终版】\"></a>2.5 封装JDBC的工具类【最终版】</h3><p>将<code>Statement </code>改为<code>PreparedStatement</code>, 更安全。可以防止用户输入SQL语句后，输入的语句 参与到 后端的SQL语句的编译，导致被SQL注入的问题。<code>PreparedStatement</code>将用户输入的语句作为字符串，传入后端的SQL语句中进行SQL语句的拼接。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DBUtil_3</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String driver = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String url = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String user = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String psw= <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            InputStream is = DBUtil_3.class.getClassLoader().getResourceAsStream(<span class=\"string\">&quot;db.properties&quot;</span>);</span><br><span class=\"line\">            Properties properties = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">            properties.load(is);</span><br><span class=\"line\"></span><br><span class=\"line\">            driver = properties.getProperty(<span class=\"string\">&quot;driver&quot;</span>);</span><br><span class=\"line\">            url = properties.getProperty(<span class=\"string\">&quot;url&quot;</span>);</span><br><span class=\"line\">            user = properties.getProperty(<span class=\"string\">&quot;user&quot;</span>);</span><br><span class=\"line\">            psw = properties.getProperty(<span class=\"string\">&quot;psw&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            Class.forName(driver);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConn</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> DriverManager.getConnection(url,user,psw);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">relaeseConn</span><span class=\"params\">(Connection conn, PreparedStatement ps,ResultSet rs)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(rs!=<span class=\"keyword\">null</span>) rs.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ps!=<span class=\"keyword\">null</span>) ps.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(conn!=<span class=\"keyword\">null</span>) conn.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"2-6-案例1-改进版：\"><a href=\"#2-6-案例1-改进版：\" class=\"headerlink\" title=\"2.6 案例1-改进版：\"></a>2.6 案例1-改进版：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcdemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.jdbcUtil.DBUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.jdbcUtil.DBUtil_2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//Connection conn = DBUtil.getConn();</span></span><br><span class=\"line\">            Connection conn = DBUtil_2.getConn();</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// Statement statement = conn.createStatement();</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 要执行的SQL语句</span></span><br><span class=\"line\">            String sql = <span class=\"string\">&quot;select * from stu where sid = ? ;&quot;</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">        \t<span class=\"comment\">// 预编译SQL语句，?问号为占位符，</span></span><br><span class=\"line\">            <span class=\"comment\">// 占位符的内容在执行时，只作为字符串，不会被当作SQL的一部分参与编译</span></span><br><span class=\"line\">            <span class=\"comment\">// 采用预编译，可以防止：SQL注入</span></span><br><span class=\"line\">            PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 设置占位符的内容，此处表示将第一个占位符的值设为3</span></span><br><span class=\"line\">            <span class=\"comment\">// 【注意】：JDBC中的下标 从 1 开始计数</span></span><br><span class=\"line\">            ps.setInt(<span class=\"number\">1</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            ResultSet res = ps.executeQuery();</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(res.next())&#123;</span><br><span class=\"line\">                System.out.println(res.getString(<span class=\"string\">&quot;sid&quot;</span>)+<span class=\"string\">&quot; &quot;</span>+res.getString(<span class=\"string\">&quot;sname&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            DBUtil.relaeseConn(conn,ps,res);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-7-案例2-登录功能\"><a href=\"#2-7-案例2-登录功能\" class=\"headerlink\" title=\"2.7 案例2-登录功能:\"></a>2.7 案例2-登录功能:</h3><p>注意：使用了<code>2.5小节中的 DBUtil_3工具类</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcdemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.jdbcUtil.DBUtil_3;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserLogin</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;请输入用户名：&quot;</span>);</span><br><span class=\"line\">        String username = sc.nextLine();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;请输入密码：&quot;</span>);</span><br><span class=\"line\">        String upsw = sc.nextLine();</span><br><span class=\"line\"></span><br><span class=\"line\">        Connection conn=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">        PreparedStatement ps=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">        ResultSet res = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(username!=<span class=\"keyword\">null</span> &amp;&amp; upsw!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                conn = DBUtil_3.getConn();</span><br><span class=\"line\">                String sql = <span class=\"string\">&quot;select * from stu where sname=? and spsw=?&quot;</span>;</span><br><span class=\"line\">                ps = conn.prepareStatement(sql);</span><br><span class=\"line\">                ps.setString(<span class=\"number\">1</span>,username);</span><br><span class=\"line\">                ps.setString(<span class=\"number\">2</span>,upsw);</span><br><span class=\"line\"></span><br><span class=\"line\">                res = ps.executeQuery();</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(res.next())&#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;登录成功&quot;</span>);</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;登录失败&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                throwables.printStackTrace();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    DBUtil_3.relaeseConn(conn,ps,res);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                sc.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"4-IDEA-连接MySQL\"><a href=\"#4-IDEA-连接MySQL\" class=\"headerlink\" title=\"4. IDEA-连接MySQL\"></a>4. IDEA-连接MySQL</h2><ul>\n<li>  选择：数据库的品牌</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2nuNGT.png\" alt=\"idea-连MySQL\"></p>\n<ul>\n<li>在IDEA中，登录到MySQL<ul>\n<li>  注意：url在填写时，需要加上<code>时区</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2nK51U.png\" alt=\"idea-连接myql\"></p>\n<ul>\n<li>  选择具体要使用的数据库</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2nM4UI.png\" alt=\"idea-连接mysql-3\"></p>\n<p>查看数据库的内容：双击数据库</p>\n<p>修改数据库：双击单元格，修改数据，回车，点击提交</p>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2nlzcT.png\" alt=\"idea中可视化修改数据\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/06/01/2n1RrF.png\" alt=\"idea中直接使用SQL语句\"></p>\n<h2 id=\"5-JDBC事务-操作\"><a href=\"#5-JDBC事务-操作\" class=\"headerlink\" title=\"5. JDBC事务-操作\"></a>5. JDBC事务-操作</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.jdbcdemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.jdbcUtil.DBUtil_3;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo02</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Connection conn = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        PreparedStatement ps = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        ResultSet rs = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">// 获取连接</span></span><br><span class=\"line\">            conn = DBUtil_3.getConn();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 关闭自动提交 =》开启事务</span></span><br><span class=\"line\">            conn.setAutoCommit(<span class=\"keyword\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行 2个事务</span></span><br><span class=\"line\">            String sql1 = <span class=\"string\">&quot;update account_tb set money = money-500 where userID=2&quot;</span>;</span><br><span class=\"line\">            ps = conn.prepareStatement(sql1);</span><br><span class=\"line\">            ps.executeUpdate();</span><br><span class=\"line\"></span><br><span class=\"line\">            String sql2 = <span class=\"string\">&quot;update account_tb set money = money+500 where userID=1&quot;</span>;</span><br><span class=\"line\">            ps = conn.prepareStatement(sql2);</span><br><span class=\"line\">            ps.executeUpdate();</span><br><span class=\"line\"><span class=\"comment\">// 提交事务</span></span><br><span class=\"line\">            conn.commit();</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 重新开启事务的自动提交            </span></span><br><span class=\"line\">            conn.setAutoCommit(<span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">// 回滚事务                </span></span><br><span class=\"line\">                conn.rollback();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            DBUtil_3.relaeseConn(conn,ps,rs = <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h2 id=\"6-数据库连接池\"><a href=\"#6-数据库连接池\" class=\"headerlink\" title=\"6. 数据库连接池\"></a>6. 数据库连接池</h2><ul>\n<li><p>  <a href=\"https://www.bilibili.com/video/BV1NJ411J79W?p=45\">狂神说-bilibili</a></p>\n</li>\n<li><p>  <a href=\"https://blog.csdn.net/ximexi/article/details/112609042\">DBCP连接池所用到的两个jar包下载地址-CSDN博客</a></p>\n</li>\n<li><p>  <a href=\"https://blog.csdn.net/huangyuhua068/article/details/82086259\">c3p0-jar包-下载CSDN博客</a></p>\n</li>\n</ul>\n<p>数据库连接过程：</p>\n<ul>\n<li>  连接 -&gt; 执行 -&gt; 释放  【这3个过程，浪费系统资源，开销大】</li>\n</ul>\n<p>池化技术：</p>\n<blockquote>\n<p>  提前准备好一些连接资源（如：conn对象，preparedStatement对象，ResultSet等），用户用完后，不释放资源，而是将资源重新放回池中。</p>\n</blockquote>\n<ul>\n<li>  最小连接数：设为常用的连接数，如：10</li>\n<li>  最大连接数：如：15</li>\n<li>  等待超时：如：10 ms</li>\n</ul>\n<p>编写连接池：实现 DataSource接口【获取连接】</p>\n<blockquote>\n<p>  开源数据源 实现:</p>\n<ul>\n<li>  DBCP:</li>\n<li>  C3P0：</li>\n<li>  Druid：阿里</li>\n</ul>\n</blockquote>\n<p>使用以上的数据库连接池后，无需 再编写 数据库的连接代码。</p>\n<h3 id=\"6-1-DBCP\"><a href=\"#6-1-DBCP\" class=\"headerlink\" title=\"6.1 DBCP:\"></a>6.1 DBCP:</h3><p>需要导入的包</p>\n<ul>\n<li>  <code>commons-dbcp-1.4.jar</code></li>\n<li>  <code>commons-pool-1.6.jar</code></li>\n</ul>\n<p>步骤：</p>\n<ul>\n<li>  编写<code>DBCP.properties</code> 配置文件,放在模块<code>src目录下的第一层</code></li>\n<li>导入Jar包：<ul>\n<li>  <code>commons-dbcp-1.4.jar</code></li>\n<li>  <code>commons-pool-1.6.jar</code></li>\n<li>  <code>mysql-connector-java-5.0.4-bin.jar</code></li>\n</ul>\n</li>\n<li>  编写工具类【在工具类中创建数据源，返回连接】</li>\n<li>  获取连接，执行语句，处理数据，释放资源。</li>\n</ul>\n<p>DBCP-properties配置：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#连接设置</span><br><span class=\"line\">driverClassName=com.mysql.jdbc.Driver</span><br><span class=\"line\">url=jdbc:mysql:<span class=\"comment\">//localhost:3306/School_1?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class=\"line\">username=root</span><br><span class=\"line\">password=root</span><br><span class=\"line\"></span><br><span class=\"line\">#!-- 初始化连接 --</span><br><span class=\"line\">initialSize=<span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">#最大连接数量</span><br><span class=\"line\">maxActive=<span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\">#!-- 最大空闲连接 --</span><br><span class=\"line\">maxIdle=<span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\">#!-- 最小空闲连接 --</span><br><span class=\"line\">minIdle=<span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\">#!-- 超时等待时间以毫秒为单位 <span class=\"number\">6000</span>毫秒/<span class=\"number\">1000</span>等于<span class=\"number\">60</span>秒 --</span><br><span class=\"line\">maxWait=<span class=\"number\">60000</span></span><br><span class=\"line\">#JDBC驱动建立连接时附带的连接属性属性的格式必须为这样：【属性名=property;】</span><br><span class=\"line\">#注意：user 与 password 两个属性会被明确地传递，因此这里不需要包含他们。</span><br><span class=\"line\">connectionProperties=useUnicode=<span class=\"keyword\">true</span>;characterEncoding=UTF8</span><br><span class=\"line\"></span><br><span class=\"line\">#指定由连接池所创建的连接的自动提交（auto-commit）状态。</span><br><span class=\"line\">defaultAutoCommit=<span class=\"keyword\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">#driver <span class=\"keyword\">default</span> 指定由连接池所创建的连接的只读（read-only）状态。</span><br><span class=\"line\">#如果没有设置该值，则“setReadOnly”方法将不被调用。（某些驱动并不支持只读模式，如：Informix）</span><br><span class=\"line\">defaultReadOnly=</span><br><span class=\"line\"></span><br><span class=\"line\">#driver <span class=\"keyword\">default</span> 指定由连接池所创建的连接的事务级别（TransactionIsolation）。</span><br><span class=\"line\">#可用值为下列之一：（详情可见javadoc。）NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE</span><br><span class=\"line\">defaultTransactionIsolation=READ_UNCOMMITTED</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>DBCPUtil.class</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.DBCP_demo;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.dbcp.BasicDataSourceFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.sql.DataSource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DBCPUtil</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> DataSource dataSource = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            InputStream is = DBCPUtil.class.getClassLoader().getResourceAsStream(<span class=\"string\">&quot;dbcpConfig.properties&quot;</span>);</span><br><span class=\"line\">            Properties properties = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">            properties.load(is);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建数据源</span></span><br><span class=\"line\">            dataSource = BasicDataSourceFactory.createDataSource(properties);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConn</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">// 从数据源获取连接</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> dataSource.getConnection();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">relaeseConn</span><span class=\"params\">(Connection conn, PreparedStatement ps, ResultSet rs)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (rs != <span class=\"keyword\">null</span>) rs.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ps != <span class=\"keyword\">null</span>) ps.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (conn != <span class=\"keyword\">null</span>) conn.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>演示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.DBCP_demo;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">// 利用工具类获取连接</span></span><br><span class=\"line\">            Connection conn = DBCPUtil.getConn();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            String sql = <span class=\"string\">&quot;select * from stu where sid = ? ;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            ps.setInt(<span class=\"number\">1</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            ResultSet res = ps.executeQuery();</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(res.next())&#123;</span><br><span class=\"line\">                System.out.println(res.getString(<span class=\"string\">&quot;sid&quot;</span>)+<span class=\"string\">&quot; &quot;</span>+res.getString(<span class=\"string\">&quot;sname&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            DBCPUtil.relaeseConn(conn,ps,res);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"6-2-c3p0：【存疑】\"><a href=\"#6-2-c3p0：【存疑】\" class=\"headerlink\" title=\"6.2 c3p0：【存疑】\"></a>6.2 c3p0：【存疑】</h3><p>【注意：此小节的配置还未调试成功】</p>\n<p>使用<code>XML</code>作为<code>配置文件</code>的格式</p>\n<p>需要导入的Jar包：</p>\n<ul>\n<li>  <code>mchange-commons-java-0.2.12.jar</code></li>\n<li>  <code>c3p0-0.9.5.2.jar</code></li>\n</ul>\n<p>xml配置文件：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">c3p0-config</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">default-config</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://localhost:3306/School_1<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;user&quot;</span>&gt;</span>javaUser<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span>javaUser<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;maxPoolSize&quot;</span>&gt;</span>10<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;checkoutTimeout&quot;</span>&gt;</span>3000<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">default-config</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">named-config</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;otherc3p0&quot;</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">named-config</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>java工具类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.c3p0Demo;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.sql.DataSource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C3P0Util</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> DataSource dataSource = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            dataSource = <span class=\"keyword\">new</span> ComboPooledDataSource();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConn</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 从数据源获取连接</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> dataSource.getConnection();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">relaeseConn</span><span class=\"params\">(Connection conn, PreparedStatement ps, ResultSet rs)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (rs != <span class=\"keyword\">null</span>) rs.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ps != <span class=\"keyword\">null</span>) ps.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (conn != <span class=\"keyword\">null</span>) conn.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>演示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.c3p0Demo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Connection conn = C3P0Util.getConn();</span><br><span class=\"line\"></span><br><span class=\"line\">            String sql = <span class=\"string\">&quot;select * from stu where sid = ? ;&quot;</span>;</span><br><span class=\"line\">            PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            ps.setInt(<span class=\"number\">1</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            ResultSet res = ps.executeQuery();</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(res.next())&#123;</span><br><span class=\"line\">                System.out.println(res.getString(<span class=\"string\">&quot;sid&quot;</span>)+<span class=\"string\">&quot; &quot;</span>+res.getString(<span class=\"string\">&quot;sname&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            C3P0Util.relaeseConn(conn,ps,res);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">            throwables.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"MySQL-入门笔记","_content":"\n\n\n# MySQL-入门笔记【5.6版本】\n\n[toc]\n\n## 1. 概述\n\n### 1.1 MySQL的 安装 + 配置\n\n-   [mysql-笔记-网传](https://blog.csdn.net/dzg_chat/article/details/88619120)\n\n-   [MySQL-学习视频-b站](https://www.bilibili.com/video/BV1BX4y1G7cn)\n\n-   [MySQL下载地址](https://downloads.mysql.com/archives/community/)\n\n-   [MySQL（5.5）安装+配置](https://blog.csdn.net/CharmJay/article/details/94330268)\n-   [Navicat 15.x for MySQL激活教程](https://www.jianshu.com/p/70143ef3d4a3)\n-   [50道SQL练习题 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/32137597)\n\n\n\n安装、配置完毕后，查看端口是否打开：\n\n-   win + R\n-   `services.msc`\n\n\n\n\n\n### 1.2 命令行-连接MySQL\n\n进入MySQL，查看当前MySQL中所有的数据库:\n\n-   打开cmd\n-   输入：`mysql -uroot -p`，回车\n-   输入密码【刚才安装时，密码设为了：root】\n-   `show databases;`【注意：mysql 中所有语句结束，必须在后面加 分号 来表示】\n\n\n\n\n\n\n\n### 1.3 Navicat 连接 MySQL\n\n-   点击 `连接` =》 `MySQL`\n-   输入`连接名`【自定义的名字】，主机【ip地址】，端口【默认：3306】，用户名/密码【安装时设置的】\n-   双击打开 `连接`\n\n\n\n\n\n### 1.4 执行SQL\n\n-   选中 `连接名` =》 右键 =》`新建查询`【或 直接点击工具栏的 `新建查询`】\n-   编写SQL语句\n-   点击 `运行`\n-   右键`表` =》 `刷新`\n\n\n\n### 1.5 导出数据表的SQL\n\n-   选中 数据表\n-   右键 =》 转储SQL文件  =》 结构和数据\n-   选择保存的位置\n\n\n\n## 2. select 查询-DQL\n\n[练习-数据](https://note.youdao.com/ynoteshare1/index.html?id=45d4298f42397bd52ccf6fc716e27ee9&type=note#/)\n\n\n\n```sql\n-- 查询 student表的 所有内容\nselect * \nfrom student;\n\n\n\n-- student表的 Sname列\nselect Sname \nfrom student;\n\n\n```\n\n**注意：** \n\n-   所有关键字最好大写，以便 与用户的数据部分 区分开\n\n-   任意数据与null一起运算，结果都为 null 。\n\n【由此可知：数据表在设计时，若某列需要参与计算，则最好不要允许插入null】\n\n\n\n\n\n### 2.1 as 别名 ：\n\n```sql\n\n-- name 作为 Sname列 的别名，其中 as关键字 可以省略\nselect Sname as name \nfrom student;\n\n\n-- 别名 中包含 空格 时，需要使用 反引号\nselect Sname as `name 1` \nfrom student;\n\n\nselect SId as `学号`,Sname as `姓名`, Ssex as `性别` \nfrom student;\n\n```\n\n\n\n\n\n\n\n### 2.2 distinct 关键字：\n\n```sql\nselect distinct Sname  as `name 1` \nfrom student;\n```\n\n\n\n\n\n\n\n### 2.3 where 关键字\n\n```sql\nselect SId as `学号`,Sname as `姓名`, Ssex as `性别` \nfrom student\nwhere SId =\"01\";\t\t-- 找学号为01的学生\n\n\n\nselect SId as `学号`,Sname as `姓名`, Ssex as `性别` \nfrom student\nwhere SId != \"01\";\t-- 找学号不是01的学生\n\n\n\nselect SId as `学号`,Sname as `姓名`, Ssex as `性别` \nfrom student\nwhere SId != \"01\" and SId != \"02\"; \t-- 找学号 不是01，也不是02 的学生\n```\n\n### 2.4 between 关键字\n\n```sql\nSELECT * FROM `sc`\nwhere \n\tscore >= 80 and score <=90;\n\n\n\n-- 等价于\n\nSELECT * FROM `sc`\nwhere score between 80 and 90;\n\n\n\n```\n\n### 2.5 in 关键字\n\n```sql\nSELECT * FROM `sc`\nwhere score in (70,80,90);\t\t-- 找出 分数在 集合(70,80,90) 内的记录\n```\n\n\n\n### 2.6 like 关键字\n\nlike + %或者_ ，可以匹配字符串：【%多个字符，_1个字符】\n\n-   like  “%雷%”：找出所有名字中有“雷”的人\n-   like “吴_”：找出姓吴，且名字是2个字的人\n\n\n\n```sql\nSELECT * \n\nFROM `s_c_t_sc_view`\n\nwhere Sname like \"吴%\";\t\t-- 找出姓吴的人\n\n```\n\n### 2.7 order by 关键字\n\n```sql\nSELECT * \t\nFROM `s_c_t_sc_view` \t\nORDER BY \n\tCId ASC , score DESC; -- cid升序，score降序\n\t\t\n\t\t\t\t\t\t\t--【desc降序 / asc升序】,【不指定des时，默认升序】\n\n```\n\n\n\n\n\n### 2.8 group by  + having 条件\n\n```sql\n-- 无条件的分组\n\tselect SId,Sname \t\n\tfrom `s_c_t_sc_view`\t\n\tgroup by SId\t\t\t--按学号分组\n\n\n\tselect SId,Sname,max(score)\t\n\tfrom `s_c_t_sc_view`\t\n\tgroup by SId\t\t\t--按学号分组,找出每个人的每个科目的最高分\n\n-------------------------------------------------------------------\n\n-- 有条件的分组\n\tSELECT \tSId,max( score ) AS max_score \n\tFROM `sc` \t\n\tGROUP BY sid\t\n\tHAVING max_score >= 60\t\t-- 按学号分组后，找出最高成绩 > 60 的学生的学号和最高分数\n\n\n```\n\n\n\n\n\n### 2.9 子查询\n\n```sql\nselect Sname,max_score\n\nfrom student as s\n\tjoin\n\t\t(\n            select\tSId,max(score) as max_score from `sc` group by sid\n        ) as t\n\ton s.SId = t.SId\n \t\n-- 先 按学号分组 并进行 子查询，找出每个学生所有课程的最高成绩；\n-- 然后 将子查询的结果作为一张表连接到 学生表\n-- 最后找出 学生姓名+最高个人的成绩\n```\n\n\n\n\n\n\n\n### 2.10 常用函数\n\n| 函数                                          | 效果                |\n| --------------------------------------------- | ------------------- |\n| select     upper(\"aaa\") as `str1`;            | “AAA”               |\n| select     lower( “AAA”)                      | “aaa”               |\n| select     concat('abcdefg','123') as `str1`; | `www-baidu-com`     |\n| select     char_length(\"aaa\") as `str1`;      | 3                   |\n| select     substring('123456',1,3) as `str1`; | “123”               |\n| select     ltrim('   abc   ') as `str1`;      | “abc   ”            |\n| select     rtrim('   abc   ') as `str1`;      | “   abc”            |\n| select     trim('   abc   ') as `str1`;       | “abc”               |\n| select     abs(- 4.2) as `num1`;              | 4.2                 |\n| select    ceil(- 4.21) as `num1`;             | -4                  |\n| select    floor(- 4.21) as `num1`;            | -5                  |\n| select   round(- 4.2138 , 3) as `num1`;       | -4.214              |\n| select  curtime( ) as `now_time`;             | 11:59               |\n| select  now( ) as `now`;                      | 2021-05-08 12:00:03 |\n| select  year(now( )) as `now`;                | 2021                |\n| select month(curdate( )) as `now`;            | 5                   |\n|                                               |                     |\n| count( 属性名 )                               |                     |\n| count( * )                                    |                     |\n| sum( 属性名)                                  |                     |\n| avg( 属性名 )                                 |                     |\n| min( 属性名)                                  |                     |\n| max( 属性名)                                  |                     |\n|                                               |                     |\n\n\n\n## 3. 基本表-DDL\n\n### 3.1 创建基本表 + 插入数据\n\n[练习-数据](https://note.youdao.com/ynoteshare1/index.html?id=45d4298f42397bd52ccf6fc716e27ee9&type=note#/)\n\n```sql\ncreate table Student(\n    SId varchar(10),\n    Sname varchar(10),\n    Sage datetime,\n    Ssex varchar(10)，\n    primary key (SId)\n)engine=InnoDB default charset=utf8;\n\n-- 插入 数据\ninsert into Student values('01' , '赵雷' , '1990-01-01' , '男');\ninsert into Student values('02' , '钱电' , '1990-12-21' , '男');\ninsert into Student values('03' , '孙风' , '1990-05-20' , '男');\ninsert into Student values('04' , '李云' , '1990-08-06' , '男');\ninsert into Student values('05' , '周梅' , '1991-12-01' , '女');\ninsert into Student values('06' , '吴兰' , '1992-03-01' , '女');\ninsert into Student values('07' , '郑竹' , '1989-07-01' , '女');\ninsert into Student values('09' , '张三' , '2017-12-20' , '女');\ninsert into Student values('10' , '李四' , '2017-12-25' , '女');\ninsert into Student values('11' , '李四' , '2017-12-30' , '女');\ninsert into Student values('12' , '赵六' , '2017-01-01' , '女');\ninsert into Student values('13' , '孙七' , '2018-01-01' , '女');\n\n\n```\n\n#### 3.1.1 常见约束\n\n【主要用于 表的定义阶段】\n\n-   主键：primary key( 属性名)   =》 `primary key (SId,CId)`【SC表】\n-   外键： foreign key 外键名(属性名) references  表名 (属性名)  =》 `foreign key fk_cid(cid) references Course(CId)`\n-   空/非空：null/not null  【判断：is null , is  not null】=》 `Sname char(10) not null`\n-   唯一：unique =》`CardID char(10) unique `\n-   自定义：check(条件) =》 `age int check(age >=0 and age <=150 )`\n-   默认值：default 默认值 =》`age int default 20 `\n-   自增：auto_increment =》`id int primary key auto_increment`【不允许手动插入，插的时候填null】\n\n\n\n外键实例：\n\n```sql\ncreate table sc(\n\tsid int ,\n    cid int,\n    score varchar(20),\n    foreign key fk_sid(sid) references s(Sid),\n    foreign key fk_cid(cid) references c(Cid),\n    primary key (sid,cid)\n);\n```\n\n\n\n\n\n\n\n自增实例：\n\n```sql\n-- 自增实例:\ncreate table person(\n\tid int primary key auto_increment,\n    name varchar(20)   \t\n)\n\n\n--自定义自增的初始值\ncreate table person(\n\tid int primary key,\n    name varchar(20)   \t\n) auto_increment=100\t\t--自增初始值为100\n```\n\n\n\n\n\n### 3.2 删除基本表-数据\n\n```sql\ndrop table student;\n\n```\n\n\n\n### 3.3 修改基本表-数据\n\n```sql\nupdate student \n\tset student.Sname=\"aaa\" \n\twhere student.SId = \"01\";\n\n```\n### 3.4 查询基本表-数据\n\n```sql\nselect * from student;\n```\n\n\n\n## 4.视图\n\n### 4.1 创建视图\n\n```sql\ncreate view s_c_t_sc_View\nas\nselect  student.SId,student.Sage,student.Sname,student.Ssex,\t--学生表\n\t\tcourse.CId,course.Cname,\t\t\t\t\t\t\t\t--课程表\n\t\tteacher.TId,teacher.Tname,\t\t\t\t\t\t\t\t--教师表\n\t\tsc.score\t\t\t\t\t\t\t\t\t\t\t\t--成绩表\n\nfrom  student,course,teacher,sc\nwhere student.SId = sc.SId \n\tand course.CId = sc.CId\n\tand course.TId  = teacher.TId;\n\n\n\n\n\n```\n\n### 4.2 删除视图\n\n```sql\ndrop view s_c_t_sc_View;\n```\n\n\n\n## 5. 分页查询\n\nlimt  start，单个分页长度offset\n\n初始下标start：从0开始\n\n终点下标：(start + offset - 1)\n\n偏移量offset：分页大小（分页后的记录条数）\n\n```sql\nSELECT * \nFROM `s_c_t_sc_view`\norder by score desc\nlimit 5;\t\t\t-- 分页，每页5条数据【前5条，从0开始数】\n\n\n\nSELECT * \nFROM `s_c_t_sc_view`\norder by score desc\nlimit 5,5;\t\t\t-- 分页，每页5条数据，第一个5是 起点的下标，第二个5是 偏移量【第5条~第10条记录】\n\t\t\t\t\t-- 初始下标：5，分页长度5，终点下标：9\n```\n\n\n\n\n\n## 6. 索引\n\n索引：在1列或几列，建立索引，可以提高查询速度，相当于给数据表加了个目录。【适合调优】\n\n\n\n索引建立后，可以在 “设计表” 界面下的 “索引” 中查看\n\n\n\n常用的索引：\n\n-   B -Tree【实际上是B+树】\n-   Hash【innoDB引擎 不支持 Hash索引】\n\n\n\n索引的 创建、删除：\n\n```sql\n-- 创建索引\ncreate index idx_sname \non student(Sname);\n\n\n\n-- 删除索引\ndrop index idx_sname \non student\n```\n\n\n\n\n\n\n\n## 7. 事务\n\n### 7.1 事务的定义：\n\n事务：【Trans action】\n\n>   一组 要么 全执行成功，要么全执行失败的SQL操作。\n>\n>   【`默认`：1个**DML**语句(数据的增、删、改)，就是1个**事务**】\n>\n>   \n>\n>   事务由 DBMS 中的事务处理子系统控制。\n>\n>    \n>\n>   常见的 存储引擎：InnoDB【5.5版本后默认，支持事务】，myISAM【不支持 事务】\n\n\n\n### 7.2 事务的特点：【ACID】\n\n-   **原子性** ：事务中所有不可再分的操作，要么全成功，要么全失败\n-   **一致性** ：从一个一致的状态  =到=》另一个一致的状态\n-   **隔离性** ：多个事务之间 互不干扰\n-   **持久性** ：一旦提交，永久存储\n\n\n\n### 7.3 事务-实例1：\n\n事务-实例：\n\n```sql\nupdate account set balance= balance - 200 where id=1;\nupdate account set balance= balance + 200 where id=3;\t--以上是2个事务\n\n\n--------------------------------------------------------\n\n--手动开启事务，将上面两条SQL语句放在1个事务里【回滚/提交前,数据是在缓存中修改】\n\tstart transaction;\n\n\tupdate account set balance= balance - 200 where id=1;\n\tupdate account set balance= balance + 200 where id=3;\n\n--手动回滚\n\trollback;\n\t\n--手动提交\n\tcommit;\n\n\n--------------------------------------------------------\n\n【案例】：\n\t-- 关闭自动提交\n        set autocommit = 0;\t\n        start transaction;\t-- 开启事务\n\n   --  更改数据\n        update account set money = money - 100 where `name` = 'A';\n        update account set money = money + 100 where `name` = 'B';\n  \n  --\t成功->提交\n        commit;\n        \n  --   失败-> 回滚       \n        rollback;\n        \n  --   重新打开事务的自动提交\n        set autocommit = 1;\n\n\n\n```\n\n### 7.4 事务的并发：\n\n\n\n#### 7.4.1 脏读：\n\n>   `事务A` 读取了 `事务B`  **尚未提交** 的数据，导致2次读取的数据的不一致。\n>\n>   \n>\n>   【读取未提交的数据】\n\n\n\n#### 7.4.2 不可重复读：\n\n>   `事务A`  多次读取了数据，在读取还没结束时, `事务B`  修改数据，导致2次读取的数据的不一致。\n>\n>   \n>\n>   【数据**更新**导致的 =》多次读取的数据不一致】  \n>\n>   =》**解决方案**：锁 1行 记录\n\n\n\n#### 7.4.3 幻读\n\n>   `事务A` 读取数据后，`事务B` 插入数据，`事务A` 再次读取数据时，两次数据不一致.\n>\n>    \n>\n>   【数据**插入**导致的 =》多次读取的数据不一致】\n>\n>    \n>\n>   =》**解决方案**：锁 1张 表\n\n\n\n### 7.5 事务的隔离级别\n\n\n\n 隔离级别：为解决并发问题。\n\n\n\n-   读 未提交 ( read uncommited)：会出现 =》脏读+不可重复读+幻读\n-   读 已提交 ( read commited)：     会出现 =》不可重复读+幻读\n-   可重复读  ( repeatable read)：   会出现 =》幻读\n-   序列化      ( serializable )：\n\n\n\n\n\n```sql\n-- 查看默认的事务隔离级别，MySQL默认的隔离级别：可重复读\n\tselect @@transaction_isolation;\n\t\n\n-- 设置事务的隔离级别\n\tset session transation isolation level read uncommited;\n\tset session transation isolation level read commited;\n\tset session transation isolation level repeatable read; -- MySQL默认的隔离级别\n\tset session transaction isolation level serializable;\n```\n\n\n\n\n\n\n\n\n\n\n\n## 8. 存储过程\n\n\n\n存储过程：相互之间有关联、可以使用流程控制的SQL语句的集合【类似：批处理语句】\n\n\n\n使用 `存储过程` 的优点:\n\n-   **提高性能**。每一次执行SQL都要进行语法分析、编译、执行。而**使用存储过程后**，只需进行1次语法分析、编译、执行。\n-   **减轻负担**。使用存储过程后，只需client向server传递参数，无需传递SQL语句。\n-   **将数据库的处理黑盒化** 。应用程序**无需在意 存储过程内部** 的详细处理。\n\n\n\n```sql\n-- 定义：1个 无返回值 的存储过程\n\n\tselect * from emp where ename like \"%诸葛%\";\n\t\n\tcreate procudure myPro01(name varchar(20))\n\tbegin \n\t\tif name is null or name =\"\" then\n\t\t\tselect * from emp;\n        else\n        \tselect * from emp where ename like concat(\"%\",name,\"%\");\n        endif;\n\tend;\n\t\n\t\n-- 删除 储过程\n\tdrop procudure myPro01;\n\t\n\t\n\t\n--调用 存储过程\n\tcall myPro01(null);\n\tcall myPro01(\"孔明\");\n\t\n\t\n\t\n-----------------------------------------------------------\t\t\n-----------------------------------------------------------\n\n\n-- 定义：1个 有返回值 的存储过程\n\tselect * from emp where ename like \"%诸葛%\";\n\t\n\t-- in可省略，out修饰返回值\n\tcreate procudure myPro02(in name varchar(20),out num int(3)) \n\tbegin \n\t\n\t\tif name is null or name =\"\" then\n\t\t\tselect * from emp;\n        else\n        \tselect * from emp where ename like concat(\"%\",name,\"%\");\n        endif;\n        \n        \n        --found_rows()是MySQL中 返回查询结果的条数的函数\n        select found_rows() into num;\t\n\tend;\n\t\n\t\n\t\n-- 调用 存储过程\n\tcall myPro02(\"张\",@num);\n\tselect @num;\n\n```\n\n\n\n## 9. 数据控制语言-DCL\n\n\n\n回顾：\n\n-   DDL：数据定义语言  =》create、alter、drop\n-   DML：数据操纵语言 =》insert，delete，update\n-   DQL：数据查询语言 =》select\n-   DCL：数据控制语言 =》grant、revoke\n\n\n\n\n\nDCL：数据控制语言\n\n\n\nDCL的功能：\n\n>   -   管理用户：添加用户、删除用户、修改用户密码、查询用户\n>   -   授予用户权限：\n\n\n\n用户信息：\n\n>   存储在 `mysql_db -> user表`\n\n### 9.1 管理用户\n\n```sql\n// 步骤：\n//\t1. 切换到mysql数据库\n//\t2. 查询user表\n\nuse mysql;\n\n- 查询用户\n\tselect * from user; \n\t\n\t\n- 创建用户【主机名可以用%,表示所有主机】\n\tcreate user '用户名'@'主机名' identified by '密码';\n\t\n\t\n\t\n- 删除用户\n\tdrop user '用户名'@'主机名';\n\t\n\n- 修改用户密码【方式-1】\t\n\tupdate user set password = password('新密码') where user = '用户名'; \n\t\n- 修改用户密码【方式-2】\t\n\tupdate password for '用户名'@'主机名' = password('新密码'); \t\n\t\n\n\n```\n\n\n\n### 9.2 授予权限：\n\n```sql\n- 查看权限\n\tshow grants for '用户名'@'主机名';\n\t\t\n\t\t例如：\n\t\t\tshow grants for 'lisi'@'%';\n\t\n\t\n\t\n- 授予权限\n\tgrant 权限列表 on 数据库名.表名 to '用户名'@'主机名';\n\t\n\t\t\t例如：\n\t\t\t\tgrant select,update on school.stu to 'user_1'@'localhost';\n\t\t\t\t\n\t\t\t\t// 给用户zhangsan授予所有库的所有权限\n\t\t\t\tgrant all on *.* to 'zhangsan'@'localhost';\n\t\t\n\t\n\t\t\n\t\n- 撤销权限\n\trevoke 权限列表 on 数据库名.表名 from '用户名'@'主机名';\n\t\n\t\t\t例如：\n\t\t\t\trevoke insert,update on school.stu from 'lisi'@'localhost';\n\t\n```\n\n\n\n\n\n### 9.3 解决：忘记Root用户密码的问题：\n\n```sql\n- 解决忘记Root用户密码的问题【步骤】：\n        1. 管理员身份运行-cmd : 输入 net stop mysql\n\n        2. 以无验证的方式启动 mysql : 输入 mysqld --skip-grant-tables\n\n        3. 再启动1个新的cmd窗口：输入 mysql\n\n        4. 改密码：\n                use mysql;\n                update password for '用户名'@'主机名' = password('新密码');\n\n        5. 任务管理器 => 关闭 mysqld进程\t\n        \n        6. 重新启动mysql服务：net start mysql\n```\n\n\n\n\n\n\n\n\n\n## 10. 面试题：\n\n\n\n### 10.1 比较效率：\n\n```sql\nselect * from emp where deptNo=10 and eName like \"%A%\"\n\nselect * from emp where eName like \"%A%\"and  deptNo=10\n```\n\n解答：\n\n>   理论上，第一条语句的效率更好，因为查询 数字 比 查询 字符串 速度更快。\n>\n>   实际上，数据库会对SQL语句进行优化\n\n\n\n\n\n### 10.2 主从复制的延迟问题：\n\n主从复制的延迟问题 =》 涉及到MySQL集群\n\n\n\nMySQL集群：\n\n-   =》主从复制 \n-    =》读写分离【部分DB专门用于‘读’，剩余的DB负责‘写’】 => 需要保持：数据一致\n-   =》分库分表\n\n\n\n\n\nDB 性能 取决于：\n\n-   内存\n-   CPU\n-   磁盘\n-   带宽\n\n\n\nDB的优化：\n\n-   监控 SQL\n-   查看 连接数\n-   设计 数据表时，选择合适的数据类型\n-   建立 索引\n-   设置 MySQL 参数\n-   建立 分布式集群\n\n\n\n\n\n日志：\n\n-   bin log       =属于=》 mysql 服务\t\t\n-   undo log   =属于=》 innodb存储引擎\n-   redo log    =属于=》 innodb存储引擎\n\n\n\n主从复制的过程：\n\n-   client 对 **master DB** 进行 DML 后，产生**bin log**。\n\n-   bin log 在主从复制时，通过**IO线程**，被 **slave DB**借鉴，在slave上进行**持久化存储**，产生 **中继日志 relay log** 。【效率较高的阶段，顺序读写】\n\n-   通过 **sql 线程** 对 relay log 进行重放【效率较低的阶段，随机读写】，可以在 slave 上恢复 master 的 bin log。\n\n【binlog  需要手动开启】\n\n\n\n\n\n粒度：【粒度越小，效率越高】\n\n-   库【5.6以上版本支持】\n-   表\n-   行\n\n\n\n\n\n主从复制中的延时问题：\n\n>   延时 主要发生在 sql 线程运行阶段【MTS：muti-thread salve】\n\n","source":"_posts/MySQL-入门笔记.md","raw":"---\ntitle: MySQL-入门笔记\ntag: MySQL\ncategories:\n  - SQL\n  - MySQL\n---\n\n\n\n# MySQL-入门笔记【5.6版本】\n\n[toc]\n\n## 1. 概述\n\n### 1.1 MySQL的 安装 + 配置\n\n-   [mysql-笔记-网传](https://blog.csdn.net/dzg_chat/article/details/88619120)\n\n-   [MySQL-学习视频-b站](https://www.bilibili.com/video/BV1BX4y1G7cn)\n\n-   [MySQL下载地址](https://downloads.mysql.com/archives/community/)\n\n-   [MySQL（5.5）安装+配置](https://blog.csdn.net/CharmJay/article/details/94330268)\n-   [Navicat 15.x for MySQL激活教程](https://www.jianshu.com/p/70143ef3d4a3)\n-   [50道SQL练习题 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/32137597)\n\n\n\n安装、配置完毕后，查看端口是否打开：\n\n-   win + R\n-   `services.msc`\n\n\n\n\n\n### 1.2 命令行-连接MySQL\n\n进入MySQL，查看当前MySQL中所有的数据库:\n\n-   打开cmd\n-   输入：`mysql -uroot -p`，回车\n-   输入密码【刚才安装时，密码设为了：root】\n-   `show databases;`【注意：mysql 中所有语句结束，必须在后面加 分号 来表示】\n\n\n\n\n\n\n\n### 1.3 Navicat 连接 MySQL\n\n-   点击 `连接` =》 `MySQL`\n-   输入`连接名`【自定义的名字】，主机【ip地址】，端口【默认：3306】，用户名/密码【安装时设置的】\n-   双击打开 `连接`\n\n\n\n\n\n### 1.4 执行SQL\n\n-   选中 `连接名` =》 右键 =》`新建查询`【或 直接点击工具栏的 `新建查询`】\n-   编写SQL语句\n-   点击 `运行`\n-   右键`表` =》 `刷新`\n\n\n\n### 1.5 导出数据表的SQL\n\n-   选中 数据表\n-   右键 =》 转储SQL文件  =》 结构和数据\n-   选择保存的位置\n\n\n\n## 2. select 查询-DQL\n\n[练习-数据](https://note.youdao.com/ynoteshare1/index.html?id=45d4298f42397bd52ccf6fc716e27ee9&type=note#/)\n\n\n\n```sql\n-- 查询 student表的 所有内容\nselect * \nfrom student;\n\n\n\n-- student表的 Sname列\nselect Sname \nfrom student;\n\n\n```\n\n**注意：** \n\n-   所有关键字最好大写，以便 与用户的数据部分 区分开\n\n-   任意数据与null一起运算，结果都为 null 。\n\n【由此可知：数据表在设计时，若某列需要参与计算，则最好不要允许插入null】\n\n\n\n\n\n### 2.1 as 别名 ：\n\n```sql\n\n-- name 作为 Sname列 的别名，其中 as关键字 可以省略\nselect Sname as name \nfrom student;\n\n\n-- 别名 中包含 空格 时，需要使用 反引号\nselect Sname as `name 1` \nfrom student;\n\n\nselect SId as `学号`,Sname as `姓名`, Ssex as `性别` \nfrom student;\n\n```\n\n\n\n\n\n\n\n### 2.2 distinct 关键字：\n\n```sql\nselect distinct Sname  as `name 1` \nfrom student;\n```\n\n\n\n\n\n\n\n### 2.3 where 关键字\n\n```sql\nselect SId as `学号`,Sname as `姓名`, Ssex as `性别` \nfrom student\nwhere SId =\"01\";\t\t-- 找学号为01的学生\n\n\n\nselect SId as `学号`,Sname as `姓名`, Ssex as `性别` \nfrom student\nwhere SId != \"01\";\t-- 找学号不是01的学生\n\n\n\nselect SId as `学号`,Sname as `姓名`, Ssex as `性别` \nfrom student\nwhere SId != \"01\" and SId != \"02\"; \t-- 找学号 不是01，也不是02 的学生\n```\n\n### 2.4 between 关键字\n\n```sql\nSELECT * FROM `sc`\nwhere \n\tscore >= 80 and score <=90;\n\n\n\n-- 等价于\n\nSELECT * FROM `sc`\nwhere score between 80 and 90;\n\n\n\n```\n\n### 2.5 in 关键字\n\n```sql\nSELECT * FROM `sc`\nwhere score in (70,80,90);\t\t-- 找出 分数在 集合(70,80,90) 内的记录\n```\n\n\n\n### 2.6 like 关键字\n\nlike + %或者_ ，可以匹配字符串：【%多个字符，_1个字符】\n\n-   like  “%雷%”：找出所有名字中有“雷”的人\n-   like “吴_”：找出姓吴，且名字是2个字的人\n\n\n\n```sql\nSELECT * \n\nFROM `s_c_t_sc_view`\n\nwhere Sname like \"吴%\";\t\t-- 找出姓吴的人\n\n```\n\n### 2.7 order by 关键字\n\n```sql\nSELECT * \t\nFROM `s_c_t_sc_view` \t\nORDER BY \n\tCId ASC , score DESC; -- cid升序，score降序\n\t\t\n\t\t\t\t\t\t\t--【desc降序 / asc升序】,【不指定des时，默认升序】\n\n```\n\n\n\n\n\n### 2.8 group by  + having 条件\n\n```sql\n-- 无条件的分组\n\tselect SId,Sname \t\n\tfrom `s_c_t_sc_view`\t\n\tgroup by SId\t\t\t--按学号分组\n\n\n\tselect SId,Sname,max(score)\t\n\tfrom `s_c_t_sc_view`\t\n\tgroup by SId\t\t\t--按学号分组,找出每个人的每个科目的最高分\n\n-------------------------------------------------------------------\n\n-- 有条件的分组\n\tSELECT \tSId,max( score ) AS max_score \n\tFROM `sc` \t\n\tGROUP BY sid\t\n\tHAVING max_score >= 60\t\t-- 按学号分组后，找出最高成绩 > 60 的学生的学号和最高分数\n\n\n```\n\n\n\n\n\n### 2.9 子查询\n\n```sql\nselect Sname,max_score\n\nfrom student as s\n\tjoin\n\t\t(\n            select\tSId,max(score) as max_score from `sc` group by sid\n        ) as t\n\ton s.SId = t.SId\n \t\n-- 先 按学号分组 并进行 子查询，找出每个学生所有课程的最高成绩；\n-- 然后 将子查询的结果作为一张表连接到 学生表\n-- 最后找出 学生姓名+最高个人的成绩\n```\n\n\n\n\n\n\n\n### 2.10 常用函数\n\n| 函数                                          | 效果                |\n| --------------------------------------------- | ------------------- |\n| select     upper(\"aaa\") as `str1`;            | “AAA”               |\n| select     lower( “AAA”)                      | “aaa”               |\n| select     concat('abcdefg','123') as `str1`; | `www-baidu-com`     |\n| select     char_length(\"aaa\") as `str1`;      | 3                   |\n| select     substring('123456',1,3) as `str1`; | “123”               |\n| select     ltrim('   abc   ') as `str1`;      | “abc   ”            |\n| select     rtrim('   abc   ') as `str1`;      | “   abc”            |\n| select     trim('   abc   ') as `str1`;       | “abc”               |\n| select     abs(- 4.2) as `num1`;              | 4.2                 |\n| select    ceil(- 4.21) as `num1`;             | -4                  |\n| select    floor(- 4.21) as `num1`;            | -5                  |\n| select   round(- 4.2138 , 3) as `num1`;       | -4.214              |\n| select  curtime( ) as `now_time`;             | 11:59               |\n| select  now( ) as `now`;                      | 2021-05-08 12:00:03 |\n| select  year(now( )) as `now`;                | 2021                |\n| select month(curdate( )) as `now`;            | 5                   |\n|                                               |                     |\n| count( 属性名 )                               |                     |\n| count( * )                                    |                     |\n| sum( 属性名)                                  |                     |\n| avg( 属性名 )                                 |                     |\n| min( 属性名)                                  |                     |\n| max( 属性名)                                  |                     |\n|                                               |                     |\n\n\n\n## 3. 基本表-DDL\n\n### 3.1 创建基本表 + 插入数据\n\n[练习-数据](https://note.youdao.com/ynoteshare1/index.html?id=45d4298f42397bd52ccf6fc716e27ee9&type=note#/)\n\n```sql\ncreate table Student(\n    SId varchar(10),\n    Sname varchar(10),\n    Sage datetime,\n    Ssex varchar(10)，\n    primary key (SId)\n)engine=InnoDB default charset=utf8;\n\n-- 插入 数据\ninsert into Student values('01' , '赵雷' , '1990-01-01' , '男');\ninsert into Student values('02' , '钱电' , '1990-12-21' , '男');\ninsert into Student values('03' , '孙风' , '1990-05-20' , '男');\ninsert into Student values('04' , '李云' , '1990-08-06' , '男');\ninsert into Student values('05' , '周梅' , '1991-12-01' , '女');\ninsert into Student values('06' , '吴兰' , '1992-03-01' , '女');\ninsert into Student values('07' , '郑竹' , '1989-07-01' , '女');\ninsert into Student values('09' , '张三' , '2017-12-20' , '女');\ninsert into Student values('10' , '李四' , '2017-12-25' , '女');\ninsert into Student values('11' , '李四' , '2017-12-30' , '女');\ninsert into Student values('12' , '赵六' , '2017-01-01' , '女');\ninsert into Student values('13' , '孙七' , '2018-01-01' , '女');\n\n\n```\n\n#### 3.1.1 常见约束\n\n【主要用于 表的定义阶段】\n\n-   主键：primary key( 属性名)   =》 `primary key (SId,CId)`【SC表】\n-   外键： foreign key 外键名(属性名) references  表名 (属性名)  =》 `foreign key fk_cid(cid) references Course(CId)`\n-   空/非空：null/not null  【判断：is null , is  not null】=》 `Sname char(10) not null`\n-   唯一：unique =》`CardID char(10) unique `\n-   自定义：check(条件) =》 `age int check(age >=0 and age <=150 )`\n-   默认值：default 默认值 =》`age int default 20 `\n-   自增：auto_increment =》`id int primary key auto_increment`【不允许手动插入，插的时候填null】\n\n\n\n外键实例：\n\n```sql\ncreate table sc(\n\tsid int ,\n    cid int,\n    score varchar(20),\n    foreign key fk_sid(sid) references s(Sid),\n    foreign key fk_cid(cid) references c(Cid),\n    primary key (sid,cid)\n);\n```\n\n\n\n\n\n\n\n自增实例：\n\n```sql\n-- 自增实例:\ncreate table person(\n\tid int primary key auto_increment,\n    name varchar(20)   \t\n)\n\n\n--自定义自增的初始值\ncreate table person(\n\tid int primary key,\n    name varchar(20)   \t\n) auto_increment=100\t\t--自增初始值为100\n```\n\n\n\n\n\n### 3.2 删除基本表-数据\n\n```sql\ndrop table student;\n\n```\n\n\n\n### 3.3 修改基本表-数据\n\n```sql\nupdate student \n\tset student.Sname=\"aaa\" \n\twhere student.SId = \"01\";\n\n```\n### 3.4 查询基本表-数据\n\n```sql\nselect * from student;\n```\n\n\n\n## 4.视图\n\n### 4.1 创建视图\n\n```sql\ncreate view s_c_t_sc_View\nas\nselect  student.SId,student.Sage,student.Sname,student.Ssex,\t--学生表\n\t\tcourse.CId,course.Cname,\t\t\t\t\t\t\t\t--课程表\n\t\tteacher.TId,teacher.Tname,\t\t\t\t\t\t\t\t--教师表\n\t\tsc.score\t\t\t\t\t\t\t\t\t\t\t\t--成绩表\n\nfrom  student,course,teacher,sc\nwhere student.SId = sc.SId \n\tand course.CId = sc.CId\n\tand course.TId  = teacher.TId;\n\n\n\n\n\n```\n\n### 4.2 删除视图\n\n```sql\ndrop view s_c_t_sc_View;\n```\n\n\n\n## 5. 分页查询\n\nlimt  start，单个分页长度offset\n\n初始下标start：从0开始\n\n终点下标：(start + offset - 1)\n\n偏移量offset：分页大小（分页后的记录条数）\n\n```sql\nSELECT * \nFROM `s_c_t_sc_view`\norder by score desc\nlimit 5;\t\t\t-- 分页，每页5条数据【前5条，从0开始数】\n\n\n\nSELECT * \nFROM `s_c_t_sc_view`\norder by score desc\nlimit 5,5;\t\t\t-- 分页，每页5条数据，第一个5是 起点的下标，第二个5是 偏移量【第5条~第10条记录】\n\t\t\t\t\t-- 初始下标：5，分页长度5，终点下标：9\n```\n\n\n\n\n\n## 6. 索引\n\n索引：在1列或几列，建立索引，可以提高查询速度，相当于给数据表加了个目录。【适合调优】\n\n\n\n索引建立后，可以在 “设计表” 界面下的 “索引” 中查看\n\n\n\n常用的索引：\n\n-   B -Tree【实际上是B+树】\n-   Hash【innoDB引擎 不支持 Hash索引】\n\n\n\n索引的 创建、删除：\n\n```sql\n-- 创建索引\ncreate index idx_sname \non student(Sname);\n\n\n\n-- 删除索引\ndrop index idx_sname \non student\n```\n\n\n\n\n\n\n\n## 7. 事务\n\n### 7.1 事务的定义：\n\n事务：【Trans action】\n\n>   一组 要么 全执行成功，要么全执行失败的SQL操作。\n>\n>   【`默认`：1个**DML**语句(数据的增、删、改)，就是1个**事务**】\n>\n>   \n>\n>   事务由 DBMS 中的事务处理子系统控制。\n>\n>    \n>\n>   常见的 存储引擎：InnoDB【5.5版本后默认，支持事务】，myISAM【不支持 事务】\n\n\n\n### 7.2 事务的特点：【ACID】\n\n-   **原子性** ：事务中所有不可再分的操作，要么全成功，要么全失败\n-   **一致性** ：从一个一致的状态  =到=》另一个一致的状态\n-   **隔离性** ：多个事务之间 互不干扰\n-   **持久性** ：一旦提交，永久存储\n\n\n\n### 7.3 事务-实例1：\n\n事务-实例：\n\n```sql\nupdate account set balance= balance - 200 where id=1;\nupdate account set balance= balance + 200 where id=3;\t--以上是2个事务\n\n\n--------------------------------------------------------\n\n--手动开启事务，将上面两条SQL语句放在1个事务里【回滚/提交前,数据是在缓存中修改】\n\tstart transaction;\n\n\tupdate account set balance= balance - 200 where id=1;\n\tupdate account set balance= balance + 200 where id=3;\n\n--手动回滚\n\trollback;\n\t\n--手动提交\n\tcommit;\n\n\n--------------------------------------------------------\n\n【案例】：\n\t-- 关闭自动提交\n        set autocommit = 0;\t\n        start transaction;\t-- 开启事务\n\n   --  更改数据\n        update account set money = money - 100 where `name` = 'A';\n        update account set money = money + 100 where `name` = 'B';\n  \n  --\t成功->提交\n        commit;\n        \n  --   失败-> 回滚       \n        rollback;\n        \n  --   重新打开事务的自动提交\n        set autocommit = 1;\n\n\n\n```\n\n### 7.4 事务的并发：\n\n\n\n#### 7.4.1 脏读：\n\n>   `事务A` 读取了 `事务B`  **尚未提交** 的数据，导致2次读取的数据的不一致。\n>\n>   \n>\n>   【读取未提交的数据】\n\n\n\n#### 7.4.2 不可重复读：\n\n>   `事务A`  多次读取了数据，在读取还没结束时, `事务B`  修改数据，导致2次读取的数据的不一致。\n>\n>   \n>\n>   【数据**更新**导致的 =》多次读取的数据不一致】  \n>\n>   =》**解决方案**：锁 1行 记录\n\n\n\n#### 7.4.3 幻读\n\n>   `事务A` 读取数据后，`事务B` 插入数据，`事务A` 再次读取数据时，两次数据不一致.\n>\n>    \n>\n>   【数据**插入**导致的 =》多次读取的数据不一致】\n>\n>    \n>\n>   =》**解决方案**：锁 1张 表\n\n\n\n### 7.5 事务的隔离级别\n\n\n\n 隔离级别：为解决并发问题。\n\n\n\n-   读 未提交 ( read uncommited)：会出现 =》脏读+不可重复读+幻读\n-   读 已提交 ( read commited)：     会出现 =》不可重复读+幻读\n-   可重复读  ( repeatable read)：   会出现 =》幻读\n-   序列化      ( serializable )：\n\n\n\n\n\n```sql\n-- 查看默认的事务隔离级别，MySQL默认的隔离级别：可重复读\n\tselect @@transaction_isolation;\n\t\n\n-- 设置事务的隔离级别\n\tset session transation isolation level read uncommited;\n\tset session transation isolation level read commited;\n\tset session transation isolation level repeatable read; -- MySQL默认的隔离级别\n\tset session transaction isolation level serializable;\n```\n\n\n\n\n\n\n\n\n\n\n\n## 8. 存储过程\n\n\n\n存储过程：相互之间有关联、可以使用流程控制的SQL语句的集合【类似：批处理语句】\n\n\n\n使用 `存储过程` 的优点:\n\n-   **提高性能**。每一次执行SQL都要进行语法分析、编译、执行。而**使用存储过程后**，只需进行1次语法分析、编译、执行。\n-   **减轻负担**。使用存储过程后，只需client向server传递参数，无需传递SQL语句。\n-   **将数据库的处理黑盒化** 。应用程序**无需在意 存储过程内部** 的详细处理。\n\n\n\n```sql\n-- 定义：1个 无返回值 的存储过程\n\n\tselect * from emp where ename like \"%诸葛%\";\n\t\n\tcreate procudure myPro01(name varchar(20))\n\tbegin \n\t\tif name is null or name =\"\" then\n\t\t\tselect * from emp;\n        else\n        \tselect * from emp where ename like concat(\"%\",name,\"%\");\n        endif;\n\tend;\n\t\n\t\n-- 删除 储过程\n\tdrop procudure myPro01;\n\t\n\t\n\t\n--调用 存储过程\n\tcall myPro01(null);\n\tcall myPro01(\"孔明\");\n\t\n\t\n\t\n-----------------------------------------------------------\t\t\n-----------------------------------------------------------\n\n\n-- 定义：1个 有返回值 的存储过程\n\tselect * from emp where ename like \"%诸葛%\";\n\t\n\t-- in可省略，out修饰返回值\n\tcreate procudure myPro02(in name varchar(20),out num int(3)) \n\tbegin \n\t\n\t\tif name is null or name =\"\" then\n\t\t\tselect * from emp;\n        else\n        \tselect * from emp where ename like concat(\"%\",name,\"%\");\n        endif;\n        \n        \n        --found_rows()是MySQL中 返回查询结果的条数的函数\n        select found_rows() into num;\t\n\tend;\n\t\n\t\n\t\n-- 调用 存储过程\n\tcall myPro02(\"张\",@num);\n\tselect @num;\n\n```\n\n\n\n## 9. 数据控制语言-DCL\n\n\n\n回顾：\n\n-   DDL：数据定义语言  =》create、alter、drop\n-   DML：数据操纵语言 =》insert，delete，update\n-   DQL：数据查询语言 =》select\n-   DCL：数据控制语言 =》grant、revoke\n\n\n\n\n\nDCL：数据控制语言\n\n\n\nDCL的功能：\n\n>   -   管理用户：添加用户、删除用户、修改用户密码、查询用户\n>   -   授予用户权限：\n\n\n\n用户信息：\n\n>   存储在 `mysql_db -> user表`\n\n### 9.1 管理用户\n\n```sql\n// 步骤：\n//\t1. 切换到mysql数据库\n//\t2. 查询user表\n\nuse mysql;\n\n- 查询用户\n\tselect * from user; \n\t\n\t\n- 创建用户【主机名可以用%,表示所有主机】\n\tcreate user '用户名'@'主机名' identified by '密码';\n\t\n\t\n\t\n- 删除用户\n\tdrop user '用户名'@'主机名';\n\t\n\n- 修改用户密码【方式-1】\t\n\tupdate user set password = password('新密码') where user = '用户名'; \n\t\n- 修改用户密码【方式-2】\t\n\tupdate password for '用户名'@'主机名' = password('新密码'); \t\n\t\n\n\n```\n\n\n\n### 9.2 授予权限：\n\n```sql\n- 查看权限\n\tshow grants for '用户名'@'主机名';\n\t\t\n\t\t例如：\n\t\t\tshow grants for 'lisi'@'%';\n\t\n\t\n\t\n- 授予权限\n\tgrant 权限列表 on 数据库名.表名 to '用户名'@'主机名';\n\t\n\t\t\t例如：\n\t\t\t\tgrant select,update on school.stu to 'user_1'@'localhost';\n\t\t\t\t\n\t\t\t\t// 给用户zhangsan授予所有库的所有权限\n\t\t\t\tgrant all on *.* to 'zhangsan'@'localhost';\n\t\t\n\t\n\t\t\n\t\n- 撤销权限\n\trevoke 权限列表 on 数据库名.表名 from '用户名'@'主机名';\n\t\n\t\t\t例如：\n\t\t\t\trevoke insert,update on school.stu from 'lisi'@'localhost';\n\t\n```\n\n\n\n\n\n### 9.3 解决：忘记Root用户密码的问题：\n\n```sql\n- 解决忘记Root用户密码的问题【步骤】：\n        1. 管理员身份运行-cmd : 输入 net stop mysql\n\n        2. 以无验证的方式启动 mysql : 输入 mysqld --skip-grant-tables\n\n        3. 再启动1个新的cmd窗口：输入 mysql\n\n        4. 改密码：\n                use mysql;\n                update password for '用户名'@'主机名' = password('新密码');\n\n        5. 任务管理器 => 关闭 mysqld进程\t\n        \n        6. 重新启动mysql服务：net start mysql\n```\n\n\n\n\n\n\n\n\n\n## 10. 面试题：\n\n\n\n### 10.1 比较效率：\n\n```sql\nselect * from emp where deptNo=10 and eName like \"%A%\"\n\nselect * from emp where eName like \"%A%\"and  deptNo=10\n```\n\n解答：\n\n>   理论上，第一条语句的效率更好，因为查询 数字 比 查询 字符串 速度更快。\n>\n>   实际上，数据库会对SQL语句进行优化\n\n\n\n\n\n### 10.2 主从复制的延迟问题：\n\n主从复制的延迟问题 =》 涉及到MySQL集群\n\n\n\nMySQL集群：\n\n-   =》主从复制 \n-    =》读写分离【部分DB专门用于‘读’，剩余的DB负责‘写’】 => 需要保持：数据一致\n-   =》分库分表\n\n\n\n\n\nDB 性能 取决于：\n\n-   内存\n-   CPU\n-   磁盘\n-   带宽\n\n\n\nDB的优化：\n\n-   监控 SQL\n-   查看 连接数\n-   设计 数据表时，选择合适的数据类型\n-   建立 索引\n-   设置 MySQL 参数\n-   建立 分布式集群\n\n\n\n\n\n日志：\n\n-   bin log       =属于=》 mysql 服务\t\t\n-   undo log   =属于=》 innodb存储引擎\n-   redo log    =属于=》 innodb存储引擎\n\n\n\n主从复制的过程：\n\n-   client 对 **master DB** 进行 DML 后，产生**bin log**。\n\n-   bin log 在主从复制时，通过**IO线程**，被 **slave DB**借鉴，在slave上进行**持久化存储**，产生 **中继日志 relay log** 。【效率较高的阶段，顺序读写】\n\n-   通过 **sql 线程** 对 relay log 进行重放【效率较低的阶段，随机读写】，可以在 slave 上恢复 master 的 bin log。\n\n【binlog  需要手动开启】\n\n\n\n\n\n粒度：【粒度越小，效率越高】\n\n-   库【5.6以上版本支持】\n-   表\n-   行\n\n\n\n\n\n主从复制中的延时问题：\n\n>   延时 主要发生在 sql 线程运行阶段【MTS：muti-thread salve】\n\n","slug":"MySQL-入门笔记","published":1,"date":"2021-06-02T02:49:19.168Z","updated":"2021-06-01T07:36:09.370Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs2h0044lcvd6edw88es","content":"<h1 id=\"MySQL-入门笔记【5-6版本】\"><a href=\"#MySQL-入门笔记【5-6版本】\" class=\"headerlink\" title=\"MySQL-入门笔记【5.6版本】\"></a>MySQL-入门笔记【5.6版本】</h1><p>[toc]</p>\n<h2 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h2><h3 id=\"1-1-MySQL的-安装-配置\"><a href=\"#1-1-MySQL的-安装-配置\" class=\"headerlink\" title=\"1.1 MySQL的 安装 + 配置\"></a>1.1 MySQL的 安装 + 配置</h3><ul>\n<li><p>  <a href=\"https://blog.csdn.net/dzg_chat/article/details/88619120\">mysql-笔记-网传</a></p>\n</li>\n<li><p>  <a href=\"https://www.bilibili.com/video/BV1BX4y1G7cn\">MySQL-学习视频-b站</a></p>\n</li>\n<li><p>  <a href=\"https://downloads.mysql.com/archives/community/\">MySQL下载地址</a></p>\n</li>\n<li><p>  <a href=\"https://blog.csdn.net/CharmJay/article/details/94330268\">MySQL（5.5）安装+配置</a></p>\n</li>\n<li><p>  <a href=\"https://www.jianshu.com/p/70143ef3d4a3\">Navicat 15.x for MySQL激活教程</a></p>\n</li>\n<li><p>  <a href=\"https://zhuanlan.zhihu.com/p/32137597\">50道SQL练习题 - 知乎 (zhihu.com)</a></p>\n</li>\n</ul>\n<p>安装、配置完毕后，查看端口是否打开：</p>\n<ul>\n<li>  win + R</li>\n<li>  <code>services.msc</code></li>\n</ul>\n<h3 id=\"1-2-命令行-连接MySQL\"><a href=\"#1-2-命令行-连接MySQL\" class=\"headerlink\" title=\"1.2 命令行-连接MySQL\"></a>1.2 命令行-连接MySQL</h3><p>进入MySQL，查看当前MySQL中所有的数据库:</p>\n<ul>\n<li>  打开cmd</li>\n<li>  输入：<code>mysql -uroot -p</code>，回车</li>\n<li>  输入密码【刚才安装时，密码设为了：root】</li>\n<li>  <code>show databases;</code>【注意：mysql 中所有语句结束，必须在后面加 分号 来表示】</li>\n</ul>\n<h3 id=\"1-3-Navicat-连接-MySQL\"><a href=\"#1-3-Navicat-连接-MySQL\" class=\"headerlink\" title=\"1.3 Navicat 连接 MySQL\"></a>1.3 Navicat 连接 MySQL</h3><ul>\n<li>  点击 <code>连接</code> =》 <code>MySQL</code></li>\n<li>  输入<code>连接名</code>【自定义的名字】，主机【ip地址】，端口【默认：3306】，用户名/密码【安装时设置的】</li>\n<li>  双击打开 <code>连接</code></li>\n</ul>\n<h3 id=\"1-4-执行SQL\"><a href=\"#1-4-执行SQL\" class=\"headerlink\" title=\"1.4 执行SQL\"></a>1.4 执行SQL</h3><ul>\n<li>  选中 <code>连接名</code> =》 右键 =》<code>新建查询</code>【或 直接点击工具栏的 <code>新建查询</code>】</li>\n<li>  编写SQL语句</li>\n<li>  点击 <code>运行</code></li>\n<li>  右键<code>表</code> =》 <code>刷新</code></li>\n</ul>\n<h3 id=\"1-5-导出数据表的SQL\"><a href=\"#1-5-导出数据表的SQL\" class=\"headerlink\" title=\"1.5 导出数据表的SQL\"></a>1.5 导出数据表的SQL</h3><ul>\n<li>  选中 数据表</li>\n<li>  右键 =》 转储SQL文件  =》 结构和数据</li>\n<li>  选择保存的位置</li>\n</ul>\n<h2 id=\"2-select-查询-DQL\"><a href=\"#2-select-查询-DQL\" class=\"headerlink\" title=\"2. select 查询-DQL\"></a>2. select 查询-DQL</h2><p><a href=\"https://note.youdao.com/ynoteshare1/index.html?id=45d4298f42397bd52ccf6fc716e27ee9&type=note#/\">练习-数据</a></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 查询 student表的 所有内容</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> </span><br><span class=\"line\"><span class=\"keyword\">from</span> student;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- student表的 Sname列</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> Sname </span><br><span class=\"line\"><span class=\"keyword\">from</span> student;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：</strong> </p>\n<ul>\n<li><p>  所有关键字最好大写，以便 与用户的数据部分 区分开</p>\n</li>\n<li><p>  任意数据与null一起运算，结果都为 null 。</p>\n</li>\n</ul>\n<p>【由此可知：数据表在设计时，若某列需要参与计算，则最好不要允许插入null】</p>\n<h3 id=\"2-1-as-别名-：\"><a href=\"#2-1-as-别名-：\" class=\"headerlink\" title=\"2.1 as 别名 ：\"></a>2.1 as 别名 ：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- name 作为 Sname列 的别名，其中 as关键字 可以省略</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> Sname <span class=\"keyword\">as</span> name </span><br><span class=\"line\"><span class=\"keyword\">from</span> student;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 别名 中包含 空格 时，需要使用 反引号</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> Sname <span class=\"keyword\">as</span> `name <span class=\"number\">1</span>` </span><br><span class=\"line\"><span class=\"keyword\">from</span> student;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> SId <span class=\"keyword\">as</span> `学号`,Sname <span class=\"keyword\">as</span> `姓名`, Ssex <span class=\"keyword\">as</span> `性别` </span><br><span class=\"line\"><span class=\"keyword\">from</span> student;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"2-2-distinct-关键字：\"><a href=\"#2-2-distinct-关键字：\" class=\"headerlink\" title=\"2.2 distinct 关键字：\"></a>2.2 distinct 关键字：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">distinct</span> Sname  <span class=\"keyword\">as</span> `name <span class=\"number\">1</span>` </span><br><span class=\"line\"><span class=\"keyword\">from</span> student;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"2-3-where-关键字\"><a href=\"#2-3-where-关键字\" class=\"headerlink\" title=\"2.3 where 关键字\"></a>2.3 where 关键字</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> SId <span class=\"keyword\">as</span> `学号`,Sname <span class=\"keyword\">as</span> `姓名`, Ssex <span class=\"keyword\">as</span> `性别` </span><br><span class=\"line\"><span class=\"keyword\">from</span> student</span><br><span class=\"line\"><span class=\"keyword\">where</span> SId <span class=\"operator\">=</span>&quot;01&quot;;\t\t<span class=\"comment\">-- 找学号为01的学生</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> SId <span class=\"keyword\">as</span> `学号`,Sname <span class=\"keyword\">as</span> `姓名`, Ssex <span class=\"keyword\">as</span> `性别` </span><br><span class=\"line\"><span class=\"keyword\">from</span> student</span><br><span class=\"line\"><span class=\"keyword\">where</span> SId <span class=\"operator\">!=</span> &quot;01&quot;;\t<span class=\"comment\">-- 找学号不是01的学生</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> SId <span class=\"keyword\">as</span> `学号`,Sname <span class=\"keyword\">as</span> `姓名`, Ssex <span class=\"keyword\">as</span> `性别` </span><br><span class=\"line\"><span class=\"keyword\">from</span> student</span><br><span class=\"line\"><span class=\"keyword\">where</span> SId <span class=\"operator\">!=</span> &quot;01&quot; <span class=\"keyword\">and</span> SId <span class=\"operator\">!=</span> &quot;02&quot;; \t<span class=\"comment\">-- 找学号 不是01，也不是02 的学生</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-between-关键字\"><a href=\"#2-4-between-关键字\" class=\"headerlink\" title=\"2.4 between 关键字\"></a>2.4 between 关键字</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> `sc`</span><br><span class=\"line\"><span class=\"keyword\">where</span> </span><br><span class=\"line\">\tscore <span class=\"operator\">&gt;=</span> <span class=\"number\">80</span> <span class=\"keyword\">and</span> score <span class=\"operator\">&lt;=</span><span class=\"number\">90</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 等价于</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> `sc`</span><br><span class=\"line\"><span class=\"keyword\">where</span> score <span class=\"keyword\">between</span> <span class=\"number\">80</span> <span class=\"keyword\">and</span> <span class=\"number\">90</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-5-in-关键字\"><a href=\"#2-5-in-关键字\" class=\"headerlink\" title=\"2.5 in 关键字\"></a>2.5 in 关键字</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> `sc`</span><br><span class=\"line\"><span class=\"keyword\">where</span> score <span class=\"keyword\">in</span> (<span class=\"number\">70</span>,<span class=\"number\">80</span>,<span class=\"number\">90</span>);\t\t<span class=\"comment\">-- 找出 分数在 集合(70,80,90) 内的记录</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-6-like-关键字\"><a href=\"#2-6-like-关键字\" class=\"headerlink\" title=\"2.6 like 关键字\"></a>2.6 like 关键字</h3><p>like + %或者_ ，可以匹配字符串：【%多个字符，_1个字符】</p>\n<ul>\n<li>  like  “%雷%”：找出所有名字中有“雷”的人</li>\n<li>  like “吴_”：找出姓吴，且名字是2个字的人</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> `s_c_t_sc_view`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">where</span> Sname <span class=\"keyword\">like</span> &quot;吴%&quot;;\t\t<span class=\"comment\">-- 找出姓吴的人</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-7-order-by-关键字\"><a href=\"#2-7-order-by-关键字\" class=\"headerlink\" title=\"2.7 order by 关键字\"></a>2.7 order by 关键字</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> \t</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> `s_c_t_sc_view` \t</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> </span><br><span class=\"line\">\tCId <span class=\"keyword\">ASC</span> , score <span class=\"keyword\">DESC</span>; <span class=\"comment\">-- cid升序，score降序</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\">--【desc降序 / asc升序】,【不指定des时，默认升序】</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"2-8-group-by-having-条件\"><a href=\"#2-8-group-by-having-条件\" class=\"headerlink\" title=\"2.8 group by  + having 条件\"></a>2.8 group by  + having 条件</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 无条件的分组</span></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> SId,Sname \t</span><br><span class=\"line\">\t<span class=\"keyword\">from</span> `s_c_t_sc_view`\t</span><br><span class=\"line\">\t<span class=\"keyword\">group</span> <span class=\"keyword\">by</span> SId\t\t\t<span class=\"comment\">--按学号分组</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> SId,Sname,<span class=\"built_in\">max</span>(score)\t</span><br><span class=\"line\">\t<span class=\"keyword\">from</span> `s_c_t_sc_view`\t</span><br><span class=\"line\">\t<span class=\"keyword\">group</span> <span class=\"keyword\">by</span> SId\t\t\t<span class=\"comment\">--按学号分组,找出每个人的每个科目的最高分</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-------------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 有条件的分组</span></span><br><span class=\"line\">\t<span class=\"keyword\">SELECT</span> \tSId,<span class=\"built_in\">max</span>( score ) <span class=\"keyword\">AS</span> max_score </span><br><span class=\"line\">\t<span class=\"keyword\">FROM</span> `sc` \t</span><br><span class=\"line\">\t<span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> sid\t</span><br><span class=\"line\">\t<span class=\"keyword\">HAVING</span> max_score <span class=\"operator\">&gt;=</span> <span class=\"number\">60</span>\t\t<span class=\"comment\">-- 按学号分组后，找出最高成绩 &gt; 60 的学生的学号和最高分数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"2-9-子查询\"><a href=\"#2-9-子查询\" class=\"headerlink\" title=\"2.9 子查询\"></a>2.9 子查询</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> Sname,max_score</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> student <span class=\"keyword\">as</span> s</span><br><span class=\"line\">\t<span class=\"keyword\">join</span></span><br><span class=\"line\">\t\t(</span><br><span class=\"line\">            <span class=\"keyword\">select</span>\tSId,<span class=\"built_in\">max</span>(score) <span class=\"keyword\">as</span> max_score <span class=\"keyword\">from</span> `sc` <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> sid</span><br><span class=\"line\">        ) <span class=\"keyword\">as</span> t</span><br><span class=\"line\">\t<span class=\"keyword\">on</span> s.SId <span class=\"operator\">=</span> t.SId</span><br><span class=\"line\"> \t</span><br><span class=\"line\"><span class=\"comment\">-- 先 按学号分组 并进行 子查询，找出每个学生所有课程的最高成绩；</span></span><br><span class=\"line\"><span class=\"comment\">-- 然后 将子查询的结果作为一张表连接到 学生表</span></span><br><span class=\"line\"><span class=\"comment\">-- 最后找出 学生姓名+最高个人的成绩</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"2-10-常用函数\"><a href=\"#2-10-常用函数\" class=\"headerlink\" title=\"2.10 常用函数\"></a>2.10 常用函数</h3><table>\n<thead>\n<tr>\n<th>函数</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>select     upper(“aaa”) as <code>str1</code>;</td>\n<td>“AAA”</td>\n</tr>\n<tr>\n<td>select     lower( “AAA”)</td>\n<td>“aaa”</td>\n</tr>\n<tr>\n<td>select     concat(‘abcdefg’,’123’) as <code>str1</code>;</td>\n<td><code>www-baidu-com</code></td>\n</tr>\n<tr>\n<td>select     char_length(“aaa”) as <code>str1</code>;</td>\n<td>3</td>\n</tr>\n<tr>\n<td>select     substring(‘123456’,1,3) as <code>str1</code>;</td>\n<td>“123”</td>\n</tr>\n<tr>\n<td>select     ltrim(‘   abc   ‘) as <code>str1</code>;</td>\n<td>“abc   ”</td>\n</tr>\n<tr>\n<td>select     rtrim(‘   abc   ‘) as <code>str1</code>;</td>\n<td>“   abc”</td>\n</tr>\n<tr>\n<td>select     trim(‘   abc   ‘) as <code>str1</code>;</td>\n<td>“abc”</td>\n</tr>\n<tr>\n<td>select     abs(- 4.2) as <code>num1</code>;</td>\n<td>4.2</td>\n</tr>\n<tr>\n<td>select    ceil(- 4.21) as <code>num1</code>;</td>\n<td>-4</td>\n</tr>\n<tr>\n<td>select    floor(- 4.21) as <code>num1</code>;</td>\n<td>-5</td>\n</tr>\n<tr>\n<td>select   round(- 4.2138 , 3) as <code>num1</code>;</td>\n<td>-4.214</td>\n</tr>\n<tr>\n<td>select  curtime( ) as <code>now_time</code>;</td>\n<td>11:59</td>\n</tr>\n<tr>\n<td>select  now( ) as <code>now</code>;</td>\n<td>2021-05-08 12:00:03</td>\n</tr>\n<tr>\n<td>select  year(now( )) as <code>now</code>;</td>\n<td>2021</td>\n</tr>\n<tr>\n<td>select month(curdate( )) as <code>now</code>;</td>\n<td>5</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>count( 属性名 )</td>\n<td></td>\n</tr>\n<tr>\n<td>count( * )</td>\n<td></td>\n</tr>\n<tr>\n<td>sum( 属性名)</td>\n<td></td>\n</tr>\n<tr>\n<td>avg( 属性名 )</td>\n<td></td>\n</tr>\n<tr>\n<td>min( 属性名)</td>\n<td></td>\n</tr>\n<tr>\n<td>max( 属性名)</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"3-基本表-DDL\"><a href=\"#3-基本表-DDL\" class=\"headerlink\" title=\"3. 基本表-DDL\"></a>3. 基本表-DDL</h2><h3 id=\"3-1-创建基本表-插入数据\"><a href=\"#3-1-创建基本表-插入数据\" class=\"headerlink\" title=\"3.1 创建基本表 + 插入数据\"></a>3.1 创建基本表 + 插入数据</h3><p><a href=\"https://note.youdao.com/ynoteshare1/index.html?id=45d4298f42397bd52ccf6fc716e27ee9&type=note#/\">练习-数据</a></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> Student(</span><br><span class=\"line\">    SId <span class=\"type\">varchar</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\">    Sname <span class=\"type\">varchar</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\">    Sage datetime,</span><br><span class=\"line\">    Ssex <span class=\"type\">varchar</span>(<span class=\"number\">10</span>)，</span><br><span class=\"line\">    <span class=\"keyword\">primary</span> key (SId)</span><br><span class=\"line\">)engine<span class=\"operator\">=</span>InnoDB <span class=\"keyword\">default</span> charset<span class=\"operator\">=</span>utf8;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 插入 数据</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;01&#x27;</span> , <span class=\"string\">&#x27;赵雷&#x27;</span> , <span class=\"string\">&#x27;1990-01-01&#x27;</span> , <span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;02&#x27;</span> , <span class=\"string\">&#x27;钱电&#x27;</span> , <span class=\"string\">&#x27;1990-12-21&#x27;</span> , <span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;03&#x27;</span> , <span class=\"string\">&#x27;孙风&#x27;</span> , <span class=\"string\">&#x27;1990-05-20&#x27;</span> , <span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;04&#x27;</span> , <span class=\"string\">&#x27;李云&#x27;</span> , <span class=\"string\">&#x27;1990-08-06&#x27;</span> , <span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;05&#x27;</span> , <span class=\"string\">&#x27;周梅&#x27;</span> , <span class=\"string\">&#x27;1991-12-01&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;06&#x27;</span> , <span class=\"string\">&#x27;吴兰&#x27;</span> , <span class=\"string\">&#x27;1992-03-01&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;07&#x27;</span> , <span class=\"string\">&#x27;郑竹&#x27;</span> , <span class=\"string\">&#x27;1989-07-01&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;09&#x27;</span> , <span class=\"string\">&#x27;张三&#x27;</span> , <span class=\"string\">&#x27;2017-12-20&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;10&#x27;</span> , <span class=\"string\">&#x27;李四&#x27;</span> , <span class=\"string\">&#x27;2017-12-25&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;11&#x27;</span> , <span class=\"string\">&#x27;李四&#x27;</span> , <span class=\"string\">&#x27;2017-12-30&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;12&#x27;</span> , <span class=\"string\">&#x27;赵六&#x27;</span> , <span class=\"string\">&#x27;2017-01-01&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;13&#x27;</span> , <span class=\"string\">&#x27;孙七&#x27;</span> , <span class=\"string\">&#x27;2018-01-01&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-1-1-常见约束\"><a href=\"#3-1-1-常见约束\" class=\"headerlink\" title=\"3.1.1 常见约束\"></a>3.1.1 常见约束</h4><p>【主要用于 表的定义阶段】</p>\n<ul>\n<li>  主键：primary key( 属性名)   =》 <code>primary key (SId,CId)</code>【SC表】</li>\n<li>  外键： foreign key 外键名(属性名) references  表名 (属性名)  =》 <code>foreign key fk_cid(cid) references Course(CId)</code></li>\n<li>  空/非空：null/not null  【判断：is null , is  not null】=》 <code>Sname char(10) not null</code></li>\n<li>  唯一：unique =》<code>CardID char(10) unique </code></li>\n<li>  自定义：check(条件) =》 <code>age int check(age &gt;=0 and age &lt;=150 )</code></li>\n<li>  默认值：default 默认值 =》<code>age int default 20 </code></li>\n<li>  自增：auto_increment =》<code>id int primary key auto_increment</code>【不允许手动插入，插的时候填null】</li>\n</ul>\n<p>外键实例：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> sc(</span><br><span class=\"line\">\tsid <span class=\"type\">int</span> ,</span><br><span class=\"line\">    cid <span class=\"type\">int</span>,</span><br><span class=\"line\">    score <span class=\"type\">varchar</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"keyword\">foreign</span> key fk_sid(sid) <span class=\"keyword\">references</span> s(Sid),</span><br><span class=\"line\">    <span class=\"keyword\">foreign</span> key fk_cid(cid) <span class=\"keyword\">references</span> c(Cid),</span><br><span class=\"line\">    <span class=\"keyword\">primary</span> key (sid,cid)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<p>自增实例：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 自增实例:</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> person(</span><br><span class=\"line\">\tid <span class=\"type\">int</span> <span class=\"keyword\">primary</span> key auto_increment,</span><br><span class=\"line\">    name <span class=\"type\">varchar</span>(<span class=\"number\">20</span>)   \t</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--自定义自增的初始值</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> person(</span><br><span class=\"line\">\tid <span class=\"type\">int</span> <span class=\"keyword\">primary</span> key,</span><br><span class=\"line\">    name <span class=\"type\">varchar</span>(<span class=\"number\">20</span>)   \t</span><br><span class=\"line\">) auto_increment<span class=\"operator\">=</span><span class=\"number\">100</span>\t\t<span class=\"comment\">--自增初始值为100</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"3-2-删除基本表-数据\"><a href=\"#3-2-删除基本表-数据\" class=\"headerlink\" title=\"3.2 删除基本表-数据\"></a>3.2 删除基本表-数据</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> student;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-3-修改基本表-数据\"><a href=\"#3-3-修改基本表-数据\" class=\"headerlink\" title=\"3.3 修改基本表-数据\"></a>3.3 修改基本表-数据</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update student </span><br><span class=\"line\">\t<span class=\"keyword\">set</span> student.Sname<span class=\"operator\">=</span>&quot;aaa&quot; </span><br><span class=\"line\">\t<span class=\"keyword\">where</span> student.SId <span class=\"operator\">=</span> &quot;01&quot;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-4-查询基本表-数据\"><a href=\"#3-4-查询基本表-数据\" class=\"headerlink\" title=\"3.4 查询基本表-数据\"></a>3.4 查询基本表-数据</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> student;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-视图\"><a href=\"#4-视图\" class=\"headerlink\" title=\"4.视图\"></a>4.视图</h2><h3 id=\"4-1-创建视图\"><a href=\"#4-1-创建视图\" class=\"headerlink\" title=\"4.1 创建视图\"></a>4.1 创建视图</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">view</span> s_c_t_sc_View</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span>  student.SId,student.Sage,student.Sname,student.Ssex,\t<span class=\"comment\">--学生表</span></span><br><span class=\"line\">\t\tcourse.CId,course.Cname,\t\t\t\t\t\t\t\t<span class=\"comment\">--课程表</span></span><br><span class=\"line\">\t\tteacher.TId,teacher.Tname,\t\t\t\t\t\t\t\t<span class=\"comment\">--教师表</span></span><br><span class=\"line\">\t\tsc.score\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">--成绩表</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span>  student,course,teacher,sc</span><br><span class=\"line\"><span class=\"keyword\">where</span> student.SId <span class=\"operator\">=</span> sc.SId </span><br><span class=\"line\">\t<span class=\"keyword\">and</span> course.CId <span class=\"operator\">=</span> sc.CId</span><br><span class=\"line\">\t<span class=\"keyword\">and</span> course.TId  <span class=\"operator\">=</span> teacher.TId;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-删除视图\"><a href=\"#4-2-删除视图\" class=\"headerlink\" title=\"4.2 删除视图\"></a>4.2 删除视图</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">view</span> s_c_t_sc_View;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"5-分页查询\"><a href=\"#5-分页查询\" class=\"headerlink\" title=\"5. 分页查询\"></a>5. 分页查询</h2><p>limt  start，单个分页长度offset</p>\n<p>初始下标start：从0开始</p>\n<p>终点下标：(start + offset - 1)</p>\n<p>偏移量offset：分页大小（分页后的记录条数）</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> `s_c_t_sc_view`</span><br><span class=\"line\"><span class=\"keyword\">order</span> <span class=\"keyword\">by</span> score <span class=\"keyword\">desc</span></span><br><span class=\"line\">limit <span class=\"number\">5</span>;\t\t\t<span class=\"comment\">-- 分页，每页5条数据【前5条，从0开始数】</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> `s_c_t_sc_view`</span><br><span class=\"line\"><span class=\"keyword\">order</span> <span class=\"keyword\">by</span> score <span class=\"keyword\">desc</span></span><br><span class=\"line\">limit <span class=\"number\">5</span>,<span class=\"number\">5</span>;\t\t\t<span class=\"comment\">-- 分页，每页5条数据，第一个5是 起点的下标，第二个5是 偏移量【第5条~第10条记录】</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">-- 初始下标：5，分页长度5，终点下标：9</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"6-索引\"><a href=\"#6-索引\" class=\"headerlink\" title=\"6. 索引\"></a>6. 索引</h2><p>索引：在1列或几列，建立索引，可以提高查询速度，相当于给数据表加了个目录。【适合调优】</p>\n<p>索引建立后，可以在 “设计表” 界面下的 “索引” 中查看</p>\n<p>常用的索引：</p>\n<ul>\n<li>  B -Tree【实际上是B+树】</li>\n<li>  Hash【innoDB引擎 不支持 Hash索引】</li>\n</ul>\n<p>索引的 创建、删除：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 创建索引</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> index idx_sname </span><br><span class=\"line\"><span class=\"keyword\">on</span> student(Sname);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 删除索引</span></span><br><span class=\"line\"><span class=\"keyword\">drop</span> index idx_sname </span><br><span class=\"line\"><span class=\"keyword\">on</span> student</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"7-事务\"><a href=\"#7-事务\" class=\"headerlink\" title=\"7. 事务\"></a>7. 事务</h2><h3 id=\"7-1-事务的定义：\"><a href=\"#7-1-事务的定义：\" class=\"headerlink\" title=\"7.1 事务的定义：\"></a>7.1 事务的定义：</h3><p>事务：【Trans action】</p>\n<blockquote>\n<p>  一组 要么 全执行成功，要么全执行失败的SQL操作。</p>\n<p>  【<code>默认</code>：1个<strong>DML</strong>语句(数据的增、删、改)，就是1个<strong>事务</strong>】</p>\n<p>  事务由 DBMS 中的事务处理子系统控制。</p>\n<p>  常见的 存储引擎：InnoDB【5.5版本后默认，支持事务】，myISAM【不支持 事务】</p>\n</blockquote>\n<h3 id=\"7-2-事务的特点：【ACID】\"><a href=\"#7-2-事务的特点：【ACID】\" class=\"headerlink\" title=\"7.2 事务的特点：【ACID】\"></a>7.2 事务的特点：【ACID】</h3><ul>\n<li>  <strong>原子性</strong> ：事务中所有不可再分的操作，要么全成功，要么全失败</li>\n<li>  <strong>一致性</strong> ：从一个一致的状态  =到=》另一个一致的状态</li>\n<li>  <strong>隔离性</strong> ：多个事务之间 互不干扰</li>\n<li>  <strong>持久性</strong> ：一旦提交，永久存储</li>\n</ul>\n<h3 id=\"7-3-事务-实例1：\"><a href=\"#7-3-事务-实例1：\" class=\"headerlink\" title=\"7.3 事务-实例1：\"></a>7.3 事务-实例1：</h3><p>事务-实例：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update account <span class=\"keyword\">set</span> balance<span class=\"operator\">=</span> balance <span class=\"operator\">-</span> <span class=\"number\">200</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\">update account <span class=\"keyword\">set</span> balance<span class=\"operator\">=</span> balance <span class=\"operator\">+</span> <span class=\"number\">200</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">3</span>;\t<span class=\"comment\">--以上是2个事务</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--手动开启事务，将上面两条SQL语句放在1个事务里【回滚/提交前,数据是在缓存中修改】</span></span><br><span class=\"line\">\t<span class=\"keyword\">start</span> transaction;</span><br><span class=\"line\"></span><br><span class=\"line\">\tupdate account <span class=\"keyword\">set</span> balance<span class=\"operator\">=</span> balance <span class=\"operator\">-</span> <span class=\"number\">200</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\">\tupdate account <span class=\"keyword\">set</span> balance<span class=\"operator\">=</span> balance <span class=\"operator\">+</span> <span class=\"number\">200</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--手动回滚</span></span><br><span class=\"line\">\t<span class=\"keyword\">rollback</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">--手动提交</span></span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">【案例】：</span><br><span class=\"line\">\t<span class=\"comment\">-- 关闭自动提交</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> autocommit <span class=\"operator\">=</span> <span class=\"number\">0</span>;\t</span><br><span class=\"line\">        <span class=\"keyword\">start</span> transaction;\t<span class=\"comment\">-- 开启事务</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">--  更改数据</span></span><br><span class=\"line\">        update account <span class=\"keyword\">set</span> money <span class=\"operator\">=</span> money <span class=\"operator\">-</span> <span class=\"number\">100</span> <span class=\"keyword\">where</span> `name` <span class=\"operator\">=</span> <span class=\"string\">&#x27;A&#x27;</span>;</span><br><span class=\"line\">        update account <span class=\"keyword\">set</span> money <span class=\"operator\">=</span> money <span class=\"operator\">+</span> <span class=\"number\">100</span> <span class=\"keyword\">where</span> `name` <span class=\"operator\">=</span> <span class=\"string\">&#x27;B&#x27;</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">--\t成功-&gt;提交</span></span><br><span class=\"line\">        <span class=\"keyword\">commit</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">  <span class=\"comment\">--   失败-&gt; 回滚       </span></span><br><span class=\"line\">        <span class=\"keyword\">rollback</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">  <span class=\"comment\">--   重新打开事务的自动提交</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> autocommit <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-4-事务的并发：\"><a href=\"#7-4-事务的并发：\" class=\"headerlink\" title=\"7.4 事务的并发：\"></a>7.4 事务的并发：</h3><h4 id=\"7-4-1-脏读：\"><a href=\"#7-4-1-脏读：\" class=\"headerlink\" title=\"7.4.1 脏读：\"></a>7.4.1 脏读：</h4><blockquote>\n<p>  <code>事务A</code> 读取了 <code>事务B</code>  <strong>尚未提交</strong> 的数据，导致2次读取的数据的不一致。</p>\n<p>  【读取未提交的数据】</p>\n</blockquote>\n<h4 id=\"7-4-2-不可重复读：\"><a href=\"#7-4-2-不可重复读：\" class=\"headerlink\" title=\"7.4.2 不可重复读：\"></a>7.4.2 不可重复读：</h4><blockquote>\n<p>  <code>事务A</code>  多次读取了数据，在读取还没结束时, <code>事务B</code>  修改数据，导致2次读取的数据的不一致。</p>\n<p>  【数据<strong>更新</strong>导致的 =》多次读取的数据不一致】  </p>\n<p>  =》<strong>解决方案</strong>：锁 1行 记录</p>\n</blockquote>\n<h4 id=\"7-4-3-幻读\"><a href=\"#7-4-3-幻读\" class=\"headerlink\" title=\"7.4.3 幻读\"></a>7.4.3 幻读</h4><blockquote>\n<p>  <code>事务A</code> 读取数据后，<code>事务B</code> 插入数据，<code>事务A</code> 再次读取数据时，两次数据不一致.</p>\n<p>  【数据<strong>插入</strong>导致的 =》多次读取的数据不一致】</p>\n<p>  =》<strong>解决方案</strong>：锁 1张 表</p>\n</blockquote>\n<h3 id=\"7-5-事务的隔离级别\"><a href=\"#7-5-事务的隔离级别\" class=\"headerlink\" title=\"7.5 事务的隔离级别\"></a>7.5 事务的隔离级别</h3><p> 隔离级别：为解决并发问题。</p>\n<ul>\n<li>  读 未提交 ( read uncommited)：会出现 =》脏读+不可重复读+幻读</li>\n<li>  读 已提交 ( read commited)：     会出现 =》不可重复读+幻读</li>\n<li>  可重复读  ( repeatable read)：   会出现 =》幻读</li>\n<li>  序列化      ( serializable )：</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 查看默认的事务隔离级别，MySQL默认的隔离级别：可重复读</span></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> @<span class=\"variable\">@transaction</span>_isolation;</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 设置事务的隔离级别</span></span><br><span class=\"line\">\t<span class=\"keyword\">set</span> session transation isolation level read uncommited;</span><br><span class=\"line\">\t<span class=\"keyword\">set</span> session transation isolation level read commited;</span><br><span class=\"line\">\t<span class=\"keyword\">set</span> session transation isolation level repeatable read; <span class=\"comment\">-- MySQL默认的隔离级别</span></span><br><span class=\"line\">\t<span class=\"keyword\">set</span> session transaction isolation level serializable;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"8-存储过程\"><a href=\"#8-存储过程\" class=\"headerlink\" title=\"8. 存储过程\"></a>8. 存储过程</h2><p>存储过程：相互之间有关联、可以使用流程控制的SQL语句的集合【类似：批处理语句】</p>\n<p>使用 <code>存储过程</code> 的优点:</p>\n<ul>\n<li>  <strong>提高性能</strong>。每一次执行SQL都要进行语法分析、编译、执行。而<strong>使用存储过程后</strong>，只需进行1次语法分析、编译、执行。</li>\n<li>  <strong>减轻负担</strong>。使用存储过程后，只需client向server传递参数，无需传递SQL语句。</li>\n<li>  <strong>将数据库的处理黑盒化</strong> 。应用程序<strong>无需在意 存储过程内部</strong> 的详细处理。</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 定义：1个 无返回值 的存储过程</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> ename <span class=\"keyword\">like</span> &quot;%诸葛%&quot;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">create</span> procudure myPro01(name <span class=\"type\">varchar</span>(<span class=\"number\">20</span>))</span><br><span class=\"line\">\t<span class=\"keyword\">begin</span> </span><br><span class=\"line\">\t\tif name <span class=\"keyword\">is</span> <span class=\"keyword\">null</span> <span class=\"keyword\">or</span> name <span class=\"operator\">=</span>&quot;&quot; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        \t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> ename <span class=\"keyword\">like</span> concat(&quot;%&quot;,name,&quot;%&quot;);</span><br><span class=\"line\">        endif;</span><br><span class=\"line\">\t<span class=\"keyword\">end</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">-- 删除 储过程</span></span><br><span class=\"line\">\t<span class=\"keyword\">drop</span> procudure myPro01;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">--调用 存储过程</span></span><br><span class=\"line\">\t<span class=\"keyword\">call</span> myPro01(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">call</span> myPro01(&quot;孔明&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">-----------------------------------------------------------\t\t</span></span><br><span class=\"line\"><span class=\"comment\">-----------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 定义：1个 有返回值 的存储过程</span></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> ename <span class=\"keyword\">like</span> &quot;%诸葛%&quot;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">-- in可省略，out修饰返回值</span></span><br><span class=\"line\">\t<span class=\"keyword\">create</span> procudure myPro02(<span class=\"keyword\">in</span> name <span class=\"type\">varchar</span>(<span class=\"number\">20</span>),<span class=\"keyword\">out</span> num <span class=\"type\">int</span>(<span class=\"number\">3</span>)) </span><br><span class=\"line\">\t<span class=\"keyword\">begin</span> </span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\tif name <span class=\"keyword\">is</span> <span class=\"keyword\">null</span> <span class=\"keyword\">or</span> name <span class=\"operator\">=</span>&quot;&quot; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        \t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> ename <span class=\"keyword\">like</span> concat(&quot;%&quot;,name,&quot;%&quot;);</span><br><span class=\"line\">        endif;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">--found_rows()是MySQL中 返回查询结果的条数的函数</span></span><br><span class=\"line\">        <span class=\"keyword\">select</span> found_rows() <span class=\"keyword\">into</span> num;\t</span><br><span class=\"line\">\t<span class=\"keyword\">end</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">-- 调用 存储过程</span></span><br><span class=\"line\">\t<span class=\"keyword\">call</span> myPro02(&quot;张&quot;,<span class=\"variable\">@num</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"variable\">@num</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"9-数据控制语言-DCL\"><a href=\"#9-数据控制语言-DCL\" class=\"headerlink\" title=\"9. 数据控制语言-DCL\"></a>9. 数据控制语言-DCL</h2><p>回顾：</p>\n<ul>\n<li>  DDL：数据定义语言  =》create、alter、drop</li>\n<li>  DML：数据操纵语言 =》insert，delete，update</li>\n<li>  DQL：数据查询语言 =》select</li>\n<li>  DCL：数据控制语言 =》grant、revoke</li>\n</ul>\n<p>DCL：数据控制语言</p>\n<p>DCL的功能：</p>\n<blockquote>\n<ul>\n<li>  管理用户：添加用户、删除用户、修改用户密码、查询用户</li>\n<li>  授予用户权限：</li>\n</ul>\n</blockquote>\n<p>用户信息：</p>\n<blockquote>\n<p>  存储在 <code>mysql_db -&gt; user表</code></p>\n</blockquote>\n<h3 id=\"9-1-管理用户\"><a href=\"#9-1-管理用户\" class=\"headerlink\" title=\"9.1 管理用户\"></a>9.1 管理用户</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span> 步骤：</span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span>\t<span class=\"number\">1.</span> 切换到mysql数据库</span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span>\t<span class=\"number\">2.</span> 查询<span class=\"keyword\">user</span>表</span><br><span class=\"line\"></span><br><span class=\"line\">use mysql;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">-</span> 查询用户</span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span>; </span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"operator\">-</span> 创建用户【主机名可以用<span class=\"operator\">%</span>,表示所有主机】</span><br><span class=\"line\">\t<span class=\"keyword\">create</span> <span class=\"keyword\">user</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span> identified <span class=\"keyword\">by</span> <span class=\"string\">&#x27;密码&#x27;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"operator\">-</span> 删除用户</span><br><span class=\"line\">\t<span class=\"keyword\">drop</span> <span class=\"keyword\">user</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">-</span> 修改用户密码【方式<span class=\"number\">-1</span>】\t</span><br><span class=\"line\">\tupdate <span class=\"keyword\">user</span> <span class=\"keyword\">set</span> password <span class=\"operator\">=</span> password(<span class=\"string\">&#x27;新密码&#x27;</span>) <span class=\"keyword\">where</span> <span class=\"keyword\">user</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;用户名&#x27;</span>; </span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"operator\">-</span> 修改用户密码【方式<span class=\"number\">-2</span>】\t</span><br><span class=\"line\">\tupdate password <span class=\"keyword\">for</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span> <span class=\"operator\">=</span> password(<span class=\"string\">&#x27;新密码&#x27;</span>); \t</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"9-2-授予权限：\"><a href=\"#9-2-授予权限：\" class=\"headerlink\" title=\"9.2 授予权限：\"></a>9.2 授予权限：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">-</span> 查看权限</span><br><span class=\"line\">\t<span class=\"keyword\">show</span> grants <span class=\"keyword\">for</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t例如：</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">show</span> grants <span class=\"keyword\">for</span> <span class=\"string\">&#x27;lisi&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"operator\">-</span> 授予权限</span><br><span class=\"line\">\t<span class=\"keyword\">grant</span> 权限列表 <span class=\"keyword\">on</span> 数据库名.表名 <span class=\"keyword\">to</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t\t例如：</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">grant</span> <span class=\"keyword\">select</span>,update <span class=\"keyword\">on</span> school.stu <span class=\"keyword\">to</span> <span class=\"string\">&#x27;user_1&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\t<span class=\"operator\">/</span><span class=\"operator\">/</span> 给用户zhangsan授予所有库的所有权限</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">grant</span> <span class=\"keyword\">all</span> <span class=\"keyword\">on</span> <span class=\"operator\">*</span>.<span class=\"operator\">*</span> <span class=\"keyword\">to</span> <span class=\"string\">&#x27;zhangsan&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"operator\">-</span> 撤销权限</span><br><span class=\"line\">\t<span class=\"keyword\">revoke</span> 权限列表 <span class=\"keyword\">on</span> 数据库名.表名 <span class=\"keyword\">from</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t\t例如：</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">revoke</span> <span class=\"keyword\">insert</span>,update <span class=\"keyword\">on</span> school.stu <span class=\"keyword\">from</span> <span class=\"string\">&#x27;lisi&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span>;</span><br><span class=\"line\">\t</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"9-3-解决：忘记Root用户密码的问题：\"><a href=\"#9-3-解决：忘记Root用户密码的问题：\" class=\"headerlink\" title=\"9.3 解决：忘记Root用户密码的问题：\"></a>9.3 解决：忘记Root用户密码的问题：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">-</span> 解决忘记Root用户密码的问题【步骤】：</span><br><span class=\"line\">        <span class=\"number\">1.</span> 管理员身份运行<span class=\"operator\">-</span>cmd : 输入 net stop mysql</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"number\">2.</span> 以无验证的方式启动 mysql : 输入 mysqld <span class=\"comment\">--skip-grant-tables</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"number\">3.</span> 再启动<span class=\"number\">1</span>个新的cmd窗口：输入 mysql</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"number\">4.</span> 改密码：</span><br><span class=\"line\">                use mysql;</span><br><span class=\"line\">                update password <span class=\"keyword\">for</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span> <span class=\"operator\">=</span> password(<span class=\"string\">&#x27;新密码&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"number\">5.</span> 任务管理器 <span class=\"operator\">=</span><span class=\"operator\">&gt;</span> 关闭 mysqld进程\t</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"number\">6.</span> 重新启动mysql服务：net <span class=\"keyword\">start</span> mysql</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h2 id=\"10-面试题：\"><a href=\"#10-面试题：\" class=\"headerlink\" title=\"10. 面试题：\"></a>10. 面试题：</h2><h3 id=\"10-1-比较效率：\"><a href=\"#10-1-比较效率：\" class=\"headerlink\" title=\"10.1 比较效率：\"></a>10.1 比较效率：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> deptNo<span class=\"operator\">=</span><span class=\"number\">10</span> <span class=\"keyword\">and</span> eName <span class=\"keyword\">like</span> &quot;%A%&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> eName <span class=\"keyword\">like</span> &quot;%A%&quot;<span class=\"keyword\">and</span>  deptNo<span class=\"operator\">=</span><span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n<p>解答：</p>\n<blockquote>\n<p>  理论上，第一条语句的效率更好，因为查询 数字 比 查询 字符串 速度更快。</p>\n<p>  实际上，数据库会对SQL语句进行优化</p>\n</blockquote>\n<h3 id=\"10-2-主从复制的延迟问题：\"><a href=\"#10-2-主从复制的延迟问题：\" class=\"headerlink\" title=\"10.2 主从复制的延迟问题：\"></a>10.2 主从复制的延迟问题：</h3><p>主从复制的延迟问题 =》 涉及到MySQL集群</p>\n<p>MySQL集群：</p>\n<ul>\n<li>  =》主从复制 </li>\n<li>   =》读写分离【部分DB专门用于‘读’，剩余的DB负责‘写’】 =&gt; 需要保持：数据一致</li>\n<li>  =》分库分表</li>\n</ul>\n<p>DB 性能 取决于：</p>\n<ul>\n<li>  内存</li>\n<li>  CPU</li>\n<li>  磁盘</li>\n<li>  带宽</li>\n</ul>\n<p>DB的优化：</p>\n<ul>\n<li>  监控 SQL</li>\n<li>  查看 连接数</li>\n<li>  设计 数据表时，选择合适的数据类型</li>\n<li>  建立 索引</li>\n<li>  设置 MySQL 参数</li>\n<li>  建立 分布式集群</li>\n</ul>\n<p>日志：</p>\n<ul>\n<li>  bin log       =属于=》 mysql 服务        </li>\n<li>  undo log   =属于=》 innodb存储引擎</li>\n<li>  redo log    =属于=》 innodb存储引擎</li>\n</ul>\n<p>主从复制的过程：</p>\n<ul>\n<li><p>  client 对 <strong>master DB</strong> 进行 DML 后，产生<strong>bin log</strong>。</p>\n</li>\n<li><p>  bin log 在主从复制时，通过<strong>IO线程</strong>，被 <strong>slave DB</strong>借鉴，在slave上进行<strong>持久化存储</strong>，产生 <strong>中继日志 relay log</strong> 。【效率较高的阶段，顺序读写】</p>\n</li>\n<li><p>  通过 <strong>sql 线程</strong> 对 relay log 进行重放【效率较低的阶段，随机读写】，可以在 slave 上恢复 master 的 bin log。</p>\n</li>\n</ul>\n<p>【binlog  需要手动开启】</p>\n<p>粒度：【粒度越小，效率越高】</p>\n<ul>\n<li>  库【5.6以上版本支持】</li>\n<li>  表</li>\n<li>  行</li>\n</ul>\n<p>主从复制中的延时问题：</p>\n<blockquote>\n<p>  延时 主要发生在 sql 线程运行阶段【MTS：muti-thread salve】</p>\n</blockquote>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"MySQL-入门笔记【5-6版本】\"><a href=\"#MySQL-入门笔记【5-6版本】\" class=\"headerlink\" title=\"MySQL-入门笔记【5.6版本】\"></a>MySQL-入门笔记【5.6版本】</h1><p>[toc]</p>\n<h2 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h2><h3 id=\"1-1-MySQL的-安装-配置\"><a href=\"#1-1-MySQL的-安装-配置\" class=\"headerlink\" title=\"1.1 MySQL的 安装 + 配置\"></a>1.1 MySQL的 安装 + 配置</h3><ul>\n<li><p>  <a href=\"https://blog.csdn.net/dzg_chat/article/details/88619120\">mysql-笔记-网传</a></p>\n</li>\n<li><p>  <a href=\"https://www.bilibili.com/video/BV1BX4y1G7cn\">MySQL-学习视频-b站</a></p>\n</li>\n<li><p>  <a href=\"https://downloads.mysql.com/archives/community/\">MySQL下载地址</a></p>\n</li>\n<li><p>  <a href=\"https://blog.csdn.net/CharmJay/article/details/94330268\">MySQL（5.5）安装+配置</a></p>\n</li>\n<li><p>  <a href=\"https://www.jianshu.com/p/70143ef3d4a3\">Navicat 15.x for MySQL激活教程</a></p>\n</li>\n<li><p>  <a href=\"https://zhuanlan.zhihu.com/p/32137597\">50道SQL练习题 - 知乎 (zhihu.com)</a></p>\n</li>\n</ul>\n<p>安装、配置完毕后，查看端口是否打开：</p>\n<ul>\n<li>  win + R</li>\n<li>  <code>services.msc</code></li>\n</ul>\n<h3 id=\"1-2-命令行-连接MySQL\"><a href=\"#1-2-命令行-连接MySQL\" class=\"headerlink\" title=\"1.2 命令行-连接MySQL\"></a>1.2 命令行-连接MySQL</h3><p>进入MySQL，查看当前MySQL中所有的数据库:</p>\n<ul>\n<li>  打开cmd</li>\n<li>  输入：<code>mysql -uroot -p</code>，回车</li>\n<li>  输入密码【刚才安装时，密码设为了：root】</li>\n<li>  <code>show databases;</code>【注意：mysql 中所有语句结束，必须在后面加 分号 来表示】</li>\n</ul>\n<h3 id=\"1-3-Navicat-连接-MySQL\"><a href=\"#1-3-Navicat-连接-MySQL\" class=\"headerlink\" title=\"1.3 Navicat 连接 MySQL\"></a>1.3 Navicat 连接 MySQL</h3><ul>\n<li>  点击 <code>连接</code> =》 <code>MySQL</code></li>\n<li>  输入<code>连接名</code>【自定义的名字】，主机【ip地址】，端口【默认：3306】，用户名/密码【安装时设置的】</li>\n<li>  双击打开 <code>连接</code></li>\n</ul>\n<h3 id=\"1-4-执行SQL\"><a href=\"#1-4-执行SQL\" class=\"headerlink\" title=\"1.4 执行SQL\"></a>1.4 执行SQL</h3><ul>\n<li>  选中 <code>连接名</code> =》 右键 =》<code>新建查询</code>【或 直接点击工具栏的 <code>新建查询</code>】</li>\n<li>  编写SQL语句</li>\n<li>  点击 <code>运行</code></li>\n<li>  右键<code>表</code> =》 <code>刷新</code></li>\n</ul>\n<h3 id=\"1-5-导出数据表的SQL\"><a href=\"#1-5-导出数据表的SQL\" class=\"headerlink\" title=\"1.5 导出数据表的SQL\"></a>1.5 导出数据表的SQL</h3><ul>\n<li>  选中 数据表</li>\n<li>  右键 =》 转储SQL文件  =》 结构和数据</li>\n<li>  选择保存的位置</li>\n</ul>\n<h2 id=\"2-select-查询-DQL\"><a href=\"#2-select-查询-DQL\" class=\"headerlink\" title=\"2. select 查询-DQL\"></a>2. select 查询-DQL</h2><p><a href=\"https://note.youdao.com/ynoteshare1/index.html?id=45d4298f42397bd52ccf6fc716e27ee9&type=note#/\">练习-数据</a></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 查询 student表的 所有内容</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> </span><br><span class=\"line\"><span class=\"keyword\">from</span> student;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- student表的 Sname列</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> Sname </span><br><span class=\"line\"><span class=\"keyword\">from</span> student;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：</strong> </p>\n<ul>\n<li><p>  所有关键字最好大写，以便 与用户的数据部分 区分开</p>\n</li>\n<li><p>  任意数据与null一起运算，结果都为 null 。</p>\n</li>\n</ul>\n<p>【由此可知：数据表在设计时，若某列需要参与计算，则最好不要允许插入null】</p>\n<h3 id=\"2-1-as-别名-：\"><a href=\"#2-1-as-别名-：\" class=\"headerlink\" title=\"2.1 as 别名 ：\"></a>2.1 as 别名 ：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- name 作为 Sname列 的别名，其中 as关键字 可以省略</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> Sname <span class=\"keyword\">as</span> name </span><br><span class=\"line\"><span class=\"keyword\">from</span> student;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 别名 中包含 空格 时，需要使用 反引号</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> Sname <span class=\"keyword\">as</span> `name <span class=\"number\">1</span>` </span><br><span class=\"line\"><span class=\"keyword\">from</span> student;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> SId <span class=\"keyword\">as</span> `学号`,Sname <span class=\"keyword\">as</span> `姓名`, Ssex <span class=\"keyword\">as</span> `性别` </span><br><span class=\"line\"><span class=\"keyword\">from</span> student;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"2-2-distinct-关键字：\"><a href=\"#2-2-distinct-关键字：\" class=\"headerlink\" title=\"2.2 distinct 关键字：\"></a>2.2 distinct 关键字：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">distinct</span> Sname  <span class=\"keyword\">as</span> `name <span class=\"number\">1</span>` </span><br><span class=\"line\"><span class=\"keyword\">from</span> student;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"2-3-where-关键字\"><a href=\"#2-3-where-关键字\" class=\"headerlink\" title=\"2.3 where 关键字\"></a>2.3 where 关键字</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> SId <span class=\"keyword\">as</span> `学号`,Sname <span class=\"keyword\">as</span> `姓名`, Ssex <span class=\"keyword\">as</span> `性别` </span><br><span class=\"line\"><span class=\"keyword\">from</span> student</span><br><span class=\"line\"><span class=\"keyword\">where</span> SId <span class=\"operator\">=</span>&quot;01&quot;;\t\t<span class=\"comment\">-- 找学号为01的学生</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> SId <span class=\"keyword\">as</span> `学号`,Sname <span class=\"keyword\">as</span> `姓名`, Ssex <span class=\"keyword\">as</span> `性别` </span><br><span class=\"line\"><span class=\"keyword\">from</span> student</span><br><span class=\"line\"><span class=\"keyword\">where</span> SId <span class=\"operator\">!=</span> &quot;01&quot;;\t<span class=\"comment\">-- 找学号不是01的学生</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> SId <span class=\"keyword\">as</span> `学号`,Sname <span class=\"keyword\">as</span> `姓名`, Ssex <span class=\"keyword\">as</span> `性别` </span><br><span class=\"line\"><span class=\"keyword\">from</span> student</span><br><span class=\"line\"><span class=\"keyword\">where</span> SId <span class=\"operator\">!=</span> &quot;01&quot; <span class=\"keyword\">and</span> SId <span class=\"operator\">!=</span> &quot;02&quot;; \t<span class=\"comment\">-- 找学号 不是01，也不是02 的学生</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-between-关键字\"><a href=\"#2-4-between-关键字\" class=\"headerlink\" title=\"2.4 between 关键字\"></a>2.4 between 关键字</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> `sc`</span><br><span class=\"line\"><span class=\"keyword\">where</span> </span><br><span class=\"line\">\tscore <span class=\"operator\">&gt;=</span> <span class=\"number\">80</span> <span class=\"keyword\">and</span> score <span class=\"operator\">&lt;=</span><span class=\"number\">90</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 等价于</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> `sc`</span><br><span class=\"line\"><span class=\"keyword\">where</span> score <span class=\"keyword\">between</span> <span class=\"number\">80</span> <span class=\"keyword\">and</span> <span class=\"number\">90</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-5-in-关键字\"><a href=\"#2-5-in-关键字\" class=\"headerlink\" title=\"2.5 in 关键字\"></a>2.5 in 关键字</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> `sc`</span><br><span class=\"line\"><span class=\"keyword\">where</span> score <span class=\"keyword\">in</span> (<span class=\"number\">70</span>,<span class=\"number\">80</span>,<span class=\"number\">90</span>);\t\t<span class=\"comment\">-- 找出 分数在 集合(70,80,90) 内的记录</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-6-like-关键字\"><a href=\"#2-6-like-关键字\" class=\"headerlink\" title=\"2.6 like 关键字\"></a>2.6 like 关键字</h3><p>like + %或者_ ，可以匹配字符串：【%多个字符，_1个字符】</p>\n<ul>\n<li>  like  “%雷%”：找出所有名字中有“雷”的人</li>\n<li>  like “吴_”：找出姓吴，且名字是2个字的人</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> `s_c_t_sc_view`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">where</span> Sname <span class=\"keyword\">like</span> &quot;吴%&quot;;\t\t<span class=\"comment\">-- 找出姓吴的人</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-7-order-by-关键字\"><a href=\"#2-7-order-by-关键字\" class=\"headerlink\" title=\"2.7 order by 关键字\"></a>2.7 order by 关键字</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> \t</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> `s_c_t_sc_view` \t</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> </span><br><span class=\"line\">\tCId <span class=\"keyword\">ASC</span> , score <span class=\"keyword\">DESC</span>; <span class=\"comment\">-- cid升序，score降序</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\">--【desc降序 / asc升序】,【不指定des时，默认升序】</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"2-8-group-by-having-条件\"><a href=\"#2-8-group-by-having-条件\" class=\"headerlink\" title=\"2.8 group by  + having 条件\"></a>2.8 group by  + having 条件</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 无条件的分组</span></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> SId,Sname \t</span><br><span class=\"line\">\t<span class=\"keyword\">from</span> `s_c_t_sc_view`\t</span><br><span class=\"line\">\t<span class=\"keyword\">group</span> <span class=\"keyword\">by</span> SId\t\t\t<span class=\"comment\">--按学号分组</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> SId,Sname,<span class=\"built_in\">max</span>(score)\t</span><br><span class=\"line\">\t<span class=\"keyword\">from</span> `s_c_t_sc_view`\t</span><br><span class=\"line\">\t<span class=\"keyword\">group</span> <span class=\"keyword\">by</span> SId\t\t\t<span class=\"comment\">--按学号分组,找出每个人的每个科目的最高分</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-------------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 有条件的分组</span></span><br><span class=\"line\">\t<span class=\"keyword\">SELECT</span> \tSId,<span class=\"built_in\">max</span>( score ) <span class=\"keyword\">AS</span> max_score </span><br><span class=\"line\">\t<span class=\"keyword\">FROM</span> `sc` \t</span><br><span class=\"line\">\t<span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> sid\t</span><br><span class=\"line\">\t<span class=\"keyword\">HAVING</span> max_score <span class=\"operator\">&gt;=</span> <span class=\"number\">60</span>\t\t<span class=\"comment\">-- 按学号分组后，找出最高成绩 &gt; 60 的学生的学号和最高分数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"2-9-子查询\"><a href=\"#2-9-子查询\" class=\"headerlink\" title=\"2.9 子查询\"></a>2.9 子查询</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> Sname,max_score</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> student <span class=\"keyword\">as</span> s</span><br><span class=\"line\">\t<span class=\"keyword\">join</span></span><br><span class=\"line\">\t\t(</span><br><span class=\"line\">            <span class=\"keyword\">select</span>\tSId,<span class=\"built_in\">max</span>(score) <span class=\"keyword\">as</span> max_score <span class=\"keyword\">from</span> `sc` <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> sid</span><br><span class=\"line\">        ) <span class=\"keyword\">as</span> t</span><br><span class=\"line\">\t<span class=\"keyword\">on</span> s.SId <span class=\"operator\">=</span> t.SId</span><br><span class=\"line\"> \t</span><br><span class=\"line\"><span class=\"comment\">-- 先 按学号分组 并进行 子查询，找出每个学生所有课程的最高成绩；</span></span><br><span class=\"line\"><span class=\"comment\">-- 然后 将子查询的结果作为一张表连接到 学生表</span></span><br><span class=\"line\"><span class=\"comment\">-- 最后找出 学生姓名+最高个人的成绩</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"2-10-常用函数\"><a href=\"#2-10-常用函数\" class=\"headerlink\" title=\"2.10 常用函数\"></a>2.10 常用函数</h3><table>\n<thead>\n<tr>\n<th>函数</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>select     upper(“aaa”) as <code>str1</code>;</td>\n<td>“AAA”</td>\n</tr>\n<tr>\n<td>select     lower( “AAA”)</td>\n<td>“aaa”</td>\n</tr>\n<tr>\n<td>select     concat(‘abcdefg’,’123’) as <code>str1</code>;</td>\n<td><code>www-baidu-com</code></td>\n</tr>\n<tr>\n<td>select     char_length(“aaa”) as <code>str1</code>;</td>\n<td>3</td>\n</tr>\n<tr>\n<td>select     substring(‘123456’,1,3) as <code>str1</code>;</td>\n<td>“123”</td>\n</tr>\n<tr>\n<td>select     ltrim(‘   abc   ‘) as <code>str1</code>;</td>\n<td>“abc   ”</td>\n</tr>\n<tr>\n<td>select     rtrim(‘   abc   ‘) as <code>str1</code>;</td>\n<td>“   abc”</td>\n</tr>\n<tr>\n<td>select     trim(‘   abc   ‘) as <code>str1</code>;</td>\n<td>“abc”</td>\n</tr>\n<tr>\n<td>select     abs(- 4.2) as <code>num1</code>;</td>\n<td>4.2</td>\n</tr>\n<tr>\n<td>select    ceil(- 4.21) as <code>num1</code>;</td>\n<td>-4</td>\n</tr>\n<tr>\n<td>select    floor(- 4.21) as <code>num1</code>;</td>\n<td>-5</td>\n</tr>\n<tr>\n<td>select   round(- 4.2138 , 3) as <code>num1</code>;</td>\n<td>-4.214</td>\n</tr>\n<tr>\n<td>select  curtime( ) as <code>now_time</code>;</td>\n<td>11:59</td>\n</tr>\n<tr>\n<td>select  now( ) as <code>now</code>;</td>\n<td>2021-05-08 12:00:03</td>\n</tr>\n<tr>\n<td>select  year(now( )) as <code>now</code>;</td>\n<td>2021</td>\n</tr>\n<tr>\n<td>select month(curdate( )) as <code>now</code>;</td>\n<td>5</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>count( 属性名 )</td>\n<td></td>\n</tr>\n<tr>\n<td>count( * )</td>\n<td></td>\n</tr>\n<tr>\n<td>sum( 属性名)</td>\n<td></td>\n</tr>\n<tr>\n<td>avg( 属性名 )</td>\n<td></td>\n</tr>\n<tr>\n<td>min( 属性名)</td>\n<td></td>\n</tr>\n<tr>\n<td>max( 属性名)</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"3-基本表-DDL\"><a href=\"#3-基本表-DDL\" class=\"headerlink\" title=\"3. 基本表-DDL\"></a>3. 基本表-DDL</h2><h3 id=\"3-1-创建基本表-插入数据\"><a href=\"#3-1-创建基本表-插入数据\" class=\"headerlink\" title=\"3.1 创建基本表 + 插入数据\"></a>3.1 创建基本表 + 插入数据</h3><p><a href=\"https://note.youdao.com/ynoteshare1/index.html?id=45d4298f42397bd52ccf6fc716e27ee9&type=note#/\">练习-数据</a></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> Student(</span><br><span class=\"line\">    SId <span class=\"type\">varchar</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\">    Sname <span class=\"type\">varchar</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\">    Sage datetime,</span><br><span class=\"line\">    Ssex <span class=\"type\">varchar</span>(<span class=\"number\">10</span>)，</span><br><span class=\"line\">    <span class=\"keyword\">primary</span> key (SId)</span><br><span class=\"line\">)engine<span class=\"operator\">=</span>InnoDB <span class=\"keyword\">default</span> charset<span class=\"operator\">=</span>utf8;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 插入 数据</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;01&#x27;</span> , <span class=\"string\">&#x27;赵雷&#x27;</span> , <span class=\"string\">&#x27;1990-01-01&#x27;</span> , <span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;02&#x27;</span> , <span class=\"string\">&#x27;钱电&#x27;</span> , <span class=\"string\">&#x27;1990-12-21&#x27;</span> , <span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;03&#x27;</span> , <span class=\"string\">&#x27;孙风&#x27;</span> , <span class=\"string\">&#x27;1990-05-20&#x27;</span> , <span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;04&#x27;</span> , <span class=\"string\">&#x27;李云&#x27;</span> , <span class=\"string\">&#x27;1990-08-06&#x27;</span> , <span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;05&#x27;</span> , <span class=\"string\">&#x27;周梅&#x27;</span> , <span class=\"string\">&#x27;1991-12-01&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;06&#x27;</span> , <span class=\"string\">&#x27;吴兰&#x27;</span> , <span class=\"string\">&#x27;1992-03-01&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;07&#x27;</span> , <span class=\"string\">&#x27;郑竹&#x27;</span> , <span class=\"string\">&#x27;1989-07-01&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;09&#x27;</span> , <span class=\"string\">&#x27;张三&#x27;</span> , <span class=\"string\">&#x27;2017-12-20&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;10&#x27;</span> , <span class=\"string\">&#x27;李四&#x27;</span> , <span class=\"string\">&#x27;2017-12-25&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;11&#x27;</span> , <span class=\"string\">&#x27;李四&#x27;</span> , <span class=\"string\">&#x27;2017-12-30&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;12&#x27;</span> , <span class=\"string\">&#x27;赵六&#x27;</span> , <span class=\"string\">&#x27;2017-01-01&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Student <span class=\"keyword\">values</span>(<span class=\"string\">&#x27;13&#x27;</span> , <span class=\"string\">&#x27;孙七&#x27;</span> , <span class=\"string\">&#x27;2018-01-01&#x27;</span> , <span class=\"string\">&#x27;女&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-1-1-常见约束\"><a href=\"#3-1-1-常见约束\" class=\"headerlink\" title=\"3.1.1 常见约束\"></a>3.1.1 常见约束</h4><p>【主要用于 表的定义阶段】</p>\n<ul>\n<li>  主键：primary key( 属性名)   =》 <code>primary key (SId,CId)</code>【SC表】</li>\n<li>  外键： foreign key 外键名(属性名) references  表名 (属性名)  =》 <code>foreign key fk_cid(cid) references Course(CId)</code></li>\n<li>  空/非空：null/not null  【判断：is null , is  not null】=》 <code>Sname char(10) not null</code></li>\n<li>  唯一：unique =》<code>CardID char(10) unique </code></li>\n<li>  自定义：check(条件) =》 <code>age int check(age &gt;=0 and age &lt;=150 )</code></li>\n<li>  默认值：default 默认值 =》<code>age int default 20 </code></li>\n<li>  自增：auto_increment =》<code>id int primary key auto_increment</code>【不允许手动插入，插的时候填null】</li>\n</ul>\n<p>外键实例：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> sc(</span><br><span class=\"line\">\tsid <span class=\"type\">int</span> ,</span><br><span class=\"line\">    cid <span class=\"type\">int</span>,</span><br><span class=\"line\">    score <span class=\"type\">varchar</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"keyword\">foreign</span> key fk_sid(sid) <span class=\"keyword\">references</span> s(Sid),</span><br><span class=\"line\">    <span class=\"keyword\">foreign</span> key fk_cid(cid) <span class=\"keyword\">references</span> c(Cid),</span><br><span class=\"line\">    <span class=\"keyword\">primary</span> key (sid,cid)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<p>自增实例：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 自增实例:</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> person(</span><br><span class=\"line\">\tid <span class=\"type\">int</span> <span class=\"keyword\">primary</span> key auto_increment,</span><br><span class=\"line\">    name <span class=\"type\">varchar</span>(<span class=\"number\">20</span>)   \t</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--自定义自增的初始值</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> person(</span><br><span class=\"line\">\tid <span class=\"type\">int</span> <span class=\"keyword\">primary</span> key,</span><br><span class=\"line\">    name <span class=\"type\">varchar</span>(<span class=\"number\">20</span>)   \t</span><br><span class=\"line\">) auto_increment<span class=\"operator\">=</span><span class=\"number\">100</span>\t\t<span class=\"comment\">--自增初始值为100</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"3-2-删除基本表-数据\"><a href=\"#3-2-删除基本表-数据\" class=\"headerlink\" title=\"3.2 删除基本表-数据\"></a>3.2 删除基本表-数据</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> student;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-3-修改基本表-数据\"><a href=\"#3-3-修改基本表-数据\" class=\"headerlink\" title=\"3.3 修改基本表-数据\"></a>3.3 修改基本表-数据</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update student </span><br><span class=\"line\">\t<span class=\"keyword\">set</span> student.Sname<span class=\"operator\">=</span>&quot;aaa&quot; </span><br><span class=\"line\">\t<span class=\"keyword\">where</span> student.SId <span class=\"operator\">=</span> &quot;01&quot;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-4-查询基本表-数据\"><a href=\"#3-4-查询基本表-数据\" class=\"headerlink\" title=\"3.4 查询基本表-数据\"></a>3.4 查询基本表-数据</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> student;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-视图\"><a href=\"#4-视图\" class=\"headerlink\" title=\"4.视图\"></a>4.视图</h2><h3 id=\"4-1-创建视图\"><a href=\"#4-1-创建视图\" class=\"headerlink\" title=\"4.1 创建视图\"></a>4.1 创建视图</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">view</span> s_c_t_sc_View</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span>  student.SId,student.Sage,student.Sname,student.Ssex,\t<span class=\"comment\">--学生表</span></span><br><span class=\"line\">\t\tcourse.CId,course.Cname,\t\t\t\t\t\t\t\t<span class=\"comment\">--课程表</span></span><br><span class=\"line\">\t\tteacher.TId,teacher.Tname,\t\t\t\t\t\t\t\t<span class=\"comment\">--教师表</span></span><br><span class=\"line\">\t\tsc.score\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">--成绩表</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span>  student,course,teacher,sc</span><br><span class=\"line\"><span class=\"keyword\">where</span> student.SId <span class=\"operator\">=</span> sc.SId </span><br><span class=\"line\">\t<span class=\"keyword\">and</span> course.CId <span class=\"operator\">=</span> sc.CId</span><br><span class=\"line\">\t<span class=\"keyword\">and</span> course.TId  <span class=\"operator\">=</span> teacher.TId;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-删除视图\"><a href=\"#4-2-删除视图\" class=\"headerlink\" title=\"4.2 删除视图\"></a>4.2 删除视图</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">view</span> s_c_t_sc_View;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"5-分页查询\"><a href=\"#5-分页查询\" class=\"headerlink\" title=\"5. 分页查询\"></a>5. 分页查询</h2><p>limt  start，单个分页长度offset</p>\n<p>初始下标start：从0开始</p>\n<p>终点下标：(start + offset - 1)</p>\n<p>偏移量offset：分页大小（分页后的记录条数）</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> `s_c_t_sc_view`</span><br><span class=\"line\"><span class=\"keyword\">order</span> <span class=\"keyword\">by</span> score <span class=\"keyword\">desc</span></span><br><span class=\"line\">limit <span class=\"number\">5</span>;\t\t\t<span class=\"comment\">-- 分页，每页5条数据【前5条，从0开始数】</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> `s_c_t_sc_view`</span><br><span class=\"line\"><span class=\"keyword\">order</span> <span class=\"keyword\">by</span> score <span class=\"keyword\">desc</span></span><br><span class=\"line\">limit <span class=\"number\">5</span>,<span class=\"number\">5</span>;\t\t\t<span class=\"comment\">-- 分页，每页5条数据，第一个5是 起点的下标，第二个5是 偏移量【第5条~第10条记录】</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">-- 初始下标：5，分页长度5，终点下标：9</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"6-索引\"><a href=\"#6-索引\" class=\"headerlink\" title=\"6. 索引\"></a>6. 索引</h2><p>索引：在1列或几列，建立索引，可以提高查询速度，相当于给数据表加了个目录。【适合调优】</p>\n<p>索引建立后，可以在 “设计表” 界面下的 “索引” 中查看</p>\n<p>常用的索引：</p>\n<ul>\n<li>  B -Tree【实际上是B+树】</li>\n<li>  Hash【innoDB引擎 不支持 Hash索引】</li>\n</ul>\n<p>索引的 创建、删除：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 创建索引</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> index idx_sname </span><br><span class=\"line\"><span class=\"keyword\">on</span> student(Sname);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 删除索引</span></span><br><span class=\"line\"><span class=\"keyword\">drop</span> index idx_sname </span><br><span class=\"line\"><span class=\"keyword\">on</span> student</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"7-事务\"><a href=\"#7-事务\" class=\"headerlink\" title=\"7. 事务\"></a>7. 事务</h2><h3 id=\"7-1-事务的定义：\"><a href=\"#7-1-事务的定义：\" class=\"headerlink\" title=\"7.1 事务的定义：\"></a>7.1 事务的定义：</h3><p>事务：【Trans action】</p>\n<blockquote>\n<p>  一组 要么 全执行成功，要么全执行失败的SQL操作。</p>\n<p>  【<code>默认</code>：1个<strong>DML</strong>语句(数据的增、删、改)，就是1个<strong>事务</strong>】</p>\n<p>  事务由 DBMS 中的事务处理子系统控制。</p>\n<p>  常见的 存储引擎：InnoDB【5.5版本后默认，支持事务】，myISAM【不支持 事务】</p>\n</blockquote>\n<h3 id=\"7-2-事务的特点：【ACID】\"><a href=\"#7-2-事务的特点：【ACID】\" class=\"headerlink\" title=\"7.2 事务的特点：【ACID】\"></a>7.2 事务的特点：【ACID】</h3><ul>\n<li>  <strong>原子性</strong> ：事务中所有不可再分的操作，要么全成功，要么全失败</li>\n<li>  <strong>一致性</strong> ：从一个一致的状态  =到=》另一个一致的状态</li>\n<li>  <strong>隔离性</strong> ：多个事务之间 互不干扰</li>\n<li>  <strong>持久性</strong> ：一旦提交，永久存储</li>\n</ul>\n<h3 id=\"7-3-事务-实例1：\"><a href=\"#7-3-事务-实例1：\" class=\"headerlink\" title=\"7.3 事务-实例1：\"></a>7.3 事务-实例1：</h3><p>事务-实例：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update account <span class=\"keyword\">set</span> balance<span class=\"operator\">=</span> balance <span class=\"operator\">-</span> <span class=\"number\">200</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\">update account <span class=\"keyword\">set</span> balance<span class=\"operator\">=</span> balance <span class=\"operator\">+</span> <span class=\"number\">200</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">3</span>;\t<span class=\"comment\">--以上是2个事务</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--手动开启事务，将上面两条SQL语句放在1个事务里【回滚/提交前,数据是在缓存中修改】</span></span><br><span class=\"line\">\t<span class=\"keyword\">start</span> transaction;</span><br><span class=\"line\"></span><br><span class=\"line\">\tupdate account <span class=\"keyword\">set</span> balance<span class=\"operator\">=</span> balance <span class=\"operator\">-</span> <span class=\"number\">200</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\">\tupdate account <span class=\"keyword\">set</span> balance<span class=\"operator\">=</span> balance <span class=\"operator\">+</span> <span class=\"number\">200</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--手动回滚</span></span><br><span class=\"line\">\t<span class=\"keyword\">rollback</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">--手动提交</span></span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">【案例】：</span><br><span class=\"line\">\t<span class=\"comment\">-- 关闭自动提交</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> autocommit <span class=\"operator\">=</span> <span class=\"number\">0</span>;\t</span><br><span class=\"line\">        <span class=\"keyword\">start</span> transaction;\t<span class=\"comment\">-- 开启事务</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">--  更改数据</span></span><br><span class=\"line\">        update account <span class=\"keyword\">set</span> money <span class=\"operator\">=</span> money <span class=\"operator\">-</span> <span class=\"number\">100</span> <span class=\"keyword\">where</span> `name` <span class=\"operator\">=</span> <span class=\"string\">&#x27;A&#x27;</span>;</span><br><span class=\"line\">        update account <span class=\"keyword\">set</span> money <span class=\"operator\">=</span> money <span class=\"operator\">+</span> <span class=\"number\">100</span> <span class=\"keyword\">where</span> `name` <span class=\"operator\">=</span> <span class=\"string\">&#x27;B&#x27;</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">--\t成功-&gt;提交</span></span><br><span class=\"line\">        <span class=\"keyword\">commit</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">  <span class=\"comment\">--   失败-&gt; 回滚       </span></span><br><span class=\"line\">        <span class=\"keyword\">rollback</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">  <span class=\"comment\">--   重新打开事务的自动提交</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> autocommit <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-4-事务的并发：\"><a href=\"#7-4-事务的并发：\" class=\"headerlink\" title=\"7.4 事务的并发：\"></a>7.4 事务的并发：</h3><h4 id=\"7-4-1-脏读：\"><a href=\"#7-4-1-脏读：\" class=\"headerlink\" title=\"7.4.1 脏读：\"></a>7.4.1 脏读：</h4><blockquote>\n<p>  <code>事务A</code> 读取了 <code>事务B</code>  <strong>尚未提交</strong> 的数据，导致2次读取的数据的不一致。</p>\n<p>  【读取未提交的数据】</p>\n</blockquote>\n<h4 id=\"7-4-2-不可重复读：\"><a href=\"#7-4-2-不可重复读：\" class=\"headerlink\" title=\"7.4.2 不可重复读：\"></a>7.4.2 不可重复读：</h4><blockquote>\n<p>  <code>事务A</code>  多次读取了数据，在读取还没结束时, <code>事务B</code>  修改数据，导致2次读取的数据的不一致。</p>\n<p>  【数据<strong>更新</strong>导致的 =》多次读取的数据不一致】  </p>\n<p>  =》<strong>解决方案</strong>：锁 1行 记录</p>\n</blockquote>\n<h4 id=\"7-4-3-幻读\"><a href=\"#7-4-3-幻读\" class=\"headerlink\" title=\"7.4.3 幻读\"></a>7.4.3 幻读</h4><blockquote>\n<p>  <code>事务A</code> 读取数据后，<code>事务B</code> 插入数据，<code>事务A</code> 再次读取数据时，两次数据不一致.</p>\n<p>  【数据<strong>插入</strong>导致的 =》多次读取的数据不一致】</p>\n<p>  =》<strong>解决方案</strong>：锁 1张 表</p>\n</blockquote>\n<h3 id=\"7-5-事务的隔离级别\"><a href=\"#7-5-事务的隔离级别\" class=\"headerlink\" title=\"7.5 事务的隔离级别\"></a>7.5 事务的隔离级别</h3><p> 隔离级别：为解决并发问题。</p>\n<ul>\n<li>  读 未提交 ( read uncommited)：会出现 =》脏读+不可重复读+幻读</li>\n<li>  读 已提交 ( read commited)：     会出现 =》不可重复读+幻读</li>\n<li>  可重复读  ( repeatable read)：   会出现 =》幻读</li>\n<li>  序列化      ( serializable )：</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 查看默认的事务隔离级别，MySQL默认的隔离级别：可重复读</span></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> @<span class=\"variable\">@transaction</span>_isolation;</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 设置事务的隔离级别</span></span><br><span class=\"line\">\t<span class=\"keyword\">set</span> session transation isolation level read uncommited;</span><br><span class=\"line\">\t<span class=\"keyword\">set</span> session transation isolation level read commited;</span><br><span class=\"line\">\t<span class=\"keyword\">set</span> session transation isolation level repeatable read; <span class=\"comment\">-- MySQL默认的隔离级别</span></span><br><span class=\"line\">\t<span class=\"keyword\">set</span> session transaction isolation level serializable;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"8-存储过程\"><a href=\"#8-存储过程\" class=\"headerlink\" title=\"8. 存储过程\"></a>8. 存储过程</h2><p>存储过程：相互之间有关联、可以使用流程控制的SQL语句的集合【类似：批处理语句】</p>\n<p>使用 <code>存储过程</code> 的优点:</p>\n<ul>\n<li>  <strong>提高性能</strong>。每一次执行SQL都要进行语法分析、编译、执行。而<strong>使用存储过程后</strong>，只需进行1次语法分析、编译、执行。</li>\n<li>  <strong>减轻负担</strong>。使用存储过程后，只需client向server传递参数，无需传递SQL语句。</li>\n<li>  <strong>将数据库的处理黑盒化</strong> 。应用程序<strong>无需在意 存储过程内部</strong> 的详细处理。</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 定义：1个 无返回值 的存储过程</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> ename <span class=\"keyword\">like</span> &quot;%诸葛%&quot;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">create</span> procudure myPro01(name <span class=\"type\">varchar</span>(<span class=\"number\">20</span>))</span><br><span class=\"line\">\t<span class=\"keyword\">begin</span> </span><br><span class=\"line\">\t\tif name <span class=\"keyword\">is</span> <span class=\"keyword\">null</span> <span class=\"keyword\">or</span> name <span class=\"operator\">=</span>&quot;&quot; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        \t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> ename <span class=\"keyword\">like</span> concat(&quot;%&quot;,name,&quot;%&quot;);</span><br><span class=\"line\">        endif;</span><br><span class=\"line\">\t<span class=\"keyword\">end</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">-- 删除 储过程</span></span><br><span class=\"line\">\t<span class=\"keyword\">drop</span> procudure myPro01;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">--调用 存储过程</span></span><br><span class=\"line\">\t<span class=\"keyword\">call</span> myPro01(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">call</span> myPro01(&quot;孔明&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">-----------------------------------------------------------\t\t</span></span><br><span class=\"line\"><span class=\"comment\">-----------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 定义：1个 有返回值 的存储过程</span></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> ename <span class=\"keyword\">like</span> &quot;%诸葛%&quot;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">-- in可省略，out修饰返回值</span></span><br><span class=\"line\">\t<span class=\"keyword\">create</span> procudure myPro02(<span class=\"keyword\">in</span> name <span class=\"type\">varchar</span>(<span class=\"number\">20</span>),<span class=\"keyword\">out</span> num <span class=\"type\">int</span>(<span class=\"number\">3</span>)) </span><br><span class=\"line\">\t<span class=\"keyword\">begin</span> </span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\tif name <span class=\"keyword\">is</span> <span class=\"keyword\">null</span> <span class=\"keyword\">or</span> name <span class=\"operator\">=</span>&quot;&quot; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        \t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> ename <span class=\"keyword\">like</span> concat(&quot;%&quot;,name,&quot;%&quot;);</span><br><span class=\"line\">        endif;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">--found_rows()是MySQL中 返回查询结果的条数的函数</span></span><br><span class=\"line\">        <span class=\"keyword\">select</span> found_rows() <span class=\"keyword\">into</span> num;\t</span><br><span class=\"line\">\t<span class=\"keyword\">end</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">-- 调用 存储过程</span></span><br><span class=\"line\">\t<span class=\"keyword\">call</span> myPro02(&quot;张&quot;,<span class=\"variable\">@num</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"variable\">@num</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"9-数据控制语言-DCL\"><a href=\"#9-数据控制语言-DCL\" class=\"headerlink\" title=\"9. 数据控制语言-DCL\"></a>9. 数据控制语言-DCL</h2><p>回顾：</p>\n<ul>\n<li>  DDL：数据定义语言  =》create、alter、drop</li>\n<li>  DML：数据操纵语言 =》insert，delete，update</li>\n<li>  DQL：数据查询语言 =》select</li>\n<li>  DCL：数据控制语言 =》grant、revoke</li>\n</ul>\n<p>DCL：数据控制语言</p>\n<p>DCL的功能：</p>\n<blockquote>\n<ul>\n<li>  管理用户：添加用户、删除用户、修改用户密码、查询用户</li>\n<li>  授予用户权限：</li>\n</ul>\n</blockquote>\n<p>用户信息：</p>\n<blockquote>\n<p>  存储在 <code>mysql_db -&gt; user表</code></p>\n</blockquote>\n<h3 id=\"9-1-管理用户\"><a href=\"#9-1-管理用户\" class=\"headerlink\" title=\"9.1 管理用户\"></a>9.1 管理用户</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span> 步骤：</span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span>\t<span class=\"number\">1.</span> 切换到mysql数据库</span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span>\t<span class=\"number\">2.</span> 查询<span class=\"keyword\">user</span>表</span><br><span class=\"line\"></span><br><span class=\"line\">use mysql;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">-</span> 查询用户</span><br><span class=\"line\">\t<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span>; </span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"operator\">-</span> 创建用户【主机名可以用<span class=\"operator\">%</span>,表示所有主机】</span><br><span class=\"line\">\t<span class=\"keyword\">create</span> <span class=\"keyword\">user</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span> identified <span class=\"keyword\">by</span> <span class=\"string\">&#x27;密码&#x27;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"operator\">-</span> 删除用户</span><br><span class=\"line\">\t<span class=\"keyword\">drop</span> <span class=\"keyword\">user</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">-</span> 修改用户密码【方式<span class=\"number\">-1</span>】\t</span><br><span class=\"line\">\tupdate <span class=\"keyword\">user</span> <span class=\"keyword\">set</span> password <span class=\"operator\">=</span> password(<span class=\"string\">&#x27;新密码&#x27;</span>) <span class=\"keyword\">where</span> <span class=\"keyword\">user</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;用户名&#x27;</span>; </span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"operator\">-</span> 修改用户密码【方式<span class=\"number\">-2</span>】\t</span><br><span class=\"line\">\tupdate password <span class=\"keyword\">for</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span> <span class=\"operator\">=</span> password(<span class=\"string\">&#x27;新密码&#x27;</span>); \t</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"9-2-授予权限：\"><a href=\"#9-2-授予权限：\" class=\"headerlink\" title=\"9.2 授予权限：\"></a>9.2 授予权限：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">-</span> 查看权限</span><br><span class=\"line\">\t<span class=\"keyword\">show</span> grants <span class=\"keyword\">for</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t例如：</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">show</span> grants <span class=\"keyword\">for</span> <span class=\"string\">&#x27;lisi&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"operator\">-</span> 授予权限</span><br><span class=\"line\">\t<span class=\"keyword\">grant</span> 权限列表 <span class=\"keyword\">on</span> 数据库名.表名 <span class=\"keyword\">to</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t\t例如：</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">grant</span> <span class=\"keyword\">select</span>,update <span class=\"keyword\">on</span> school.stu <span class=\"keyword\">to</span> <span class=\"string\">&#x27;user_1&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\t<span class=\"operator\">/</span><span class=\"operator\">/</span> 给用户zhangsan授予所有库的所有权限</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">grant</span> <span class=\"keyword\">all</span> <span class=\"keyword\">on</span> <span class=\"operator\">*</span>.<span class=\"operator\">*</span> <span class=\"keyword\">to</span> <span class=\"string\">&#x27;zhangsan&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"operator\">-</span> 撤销权限</span><br><span class=\"line\">\t<span class=\"keyword\">revoke</span> 权限列表 <span class=\"keyword\">on</span> 数据库名.表名 <span class=\"keyword\">from</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t\t例如：</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">revoke</span> <span class=\"keyword\">insert</span>,update <span class=\"keyword\">on</span> school.stu <span class=\"keyword\">from</span> <span class=\"string\">&#x27;lisi&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span>;</span><br><span class=\"line\">\t</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"9-3-解决：忘记Root用户密码的问题：\"><a href=\"#9-3-解决：忘记Root用户密码的问题：\" class=\"headerlink\" title=\"9.3 解决：忘记Root用户密码的问题：\"></a>9.3 解决：忘记Root用户密码的问题：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">-</span> 解决忘记Root用户密码的问题【步骤】：</span><br><span class=\"line\">        <span class=\"number\">1.</span> 管理员身份运行<span class=\"operator\">-</span>cmd : 输入 net stop mysql</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"number\">2.</span> 以无验证的方式启动 mysql : 输入 mysqld <span class=\"comment\">--skip-grant-tables</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"number\">3.</span> 再启动<span class=\"number\">1</span>个新的cmd窗口：输入 mysql</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"number\">4.</span> 改密码：</span><br><span class=\"line\">                use mysql;</span><br><span class=\"line\">                update password <span class=\"keyword\">for</span> <span class=\"string\">&#x27;用户名&#x27;</span>@<span class=\"string\">&#x27;主机名&#x27;</span> <span class=\"operator\">=</span> password(<span class=\"string\">&#x27;新密码&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"number\">5.</span> 任务管理器 <span class=\"operator\">=</span><span class=\"operator\">&gt;</span> 关闭 mysqld进程\t</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"number\">6.</span> 重新启动mysql服务：net <span class=\"keyword\">start</span> mysql</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h2 id=\"10-面试题：\"><a href=\"#10-面试题：\" class=\"headerlink\" title=\"10. 面试题：\"></a>10. 面试题：</h2><h3 id=\"10-1-比较效率：\"><a href=\"#10-1-比较效率：\" class=\"headerlink\" title=\"10.1 比较效率：\"></a>10.1 比较效率：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> deptNo<span class=\"operator\">=</span><span class=\"number\">10</span> <span class=\"keyword\">and</span> eName <span class=\"keyword\">like</span> &quot;%A%&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> eName <span class=\"keyword\">like</span> &quot;%A%&quot;<span class=\"keyword\">and</span>  deptNo<span class=\"operator\">=</span><span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n<p>解答：</p>\n<blockquote>\n<p>  理论上，第一条语句的效率更好，因为查询 数字 比 查询 字符串 速度更快。</p>\n<p>  实际上，数据库会对SQL语句进行优化</p>\n</blockquote>\n<h3 id=\"10-2-主从复制的延迟问题：\"><a href=\"#10-2-主从复制的延迟问题：\" class=\"headerlink\" title=\"10.2 主从复制的延迟问题：\"></a>10.2 主从复制的延迟问题：</h3><p>主从复制的延迟问题 =》 涉及到MySQL集群</p>\n<p>MySQL集群：</p>\n<ul>\n<li>  =》主从复制 </li>\n<li>   =》读写分离【部分DB专门用于‘读’，剩余的DB负责‘写’】 =&gt; 需要保持：数据一致</li>\n<li>  =》分库分表</li>\n</ul>\n<p>DB 性能 取决于：</p>\n<ul>\n<li>  内存</li>\n<li>  CPU</li>\n<li>  磁盘</li>\n<li>  带宽</li>\n</ul>\n<p>DB的优化：</p>\n<ul>\n<li>  监控 SQL</li>\n<li>  查看 连接数</li>\n<li>  设计 数据表时，选择合适的数据类型</li>\n<li>  建立 索引</li>\n<li>  设置 MySQL 参数</li>\n<li>  建立 分布式集群</li>\n</ul>\n<p>日志：</p>\n<ul>\n<li>  bin log       =属于=》 mysql 服务        </li>\n<li>  undo log   =属于=》 innodb存储引擎</li>\n<li>  redo log    =属于=》 innodb存储引擎</li>\n</ul>\n<p>主从复制的过程：</p>\n<ul>\n<li><p>  client 对 <strong>master DB</strong> 进行 DML 后，产生<strong>bin log</strong>。</p>\n</li>\n<li><p>  bin log 在主从复制时，通过<strong>IO线程</strong>，被 <strong>slave DB</strong>借鉴，在slave上进行<strong>持久化存储</strong>，产生 <strong>中继日志 relay log</strong> 。【效率较高的阶段，顺序读写】</p>\n</li>\n<li><p>  通过 <strong>sql 线程</strong> 对 relay log 进行重放【效率较低的阶段，随机读写】，可以在 slave 上恢复 master 的 bin log。</p>\n</li>\n</ul>\n<p>【binlog  需要手动开启】</p>\n<p>粒度：【粒度越小，效率越高】</p>\n<ul>\n<li>  库【5.6以上版本支持】</li>\n<li>  表</li>\n<li>  行</li>\n</ul>\n<p>主从复制中的延时问题：</p>\n<blockquote>\n<p>  延时 主要发生在 sql 线程运行阶段【MTS：muti-thread salve】</p>\n</blockquote>\n"},{"title":"Python3—笔记","_content":"\n# Python3—笔记\n部分内容来自知乎和中国大学mooc\n\n[toc]\n\n## 1. Python概述\n### 1.1 代码编写方式：\n- 交互式\n- 全部编辑好后运行\n\n### 1.2 作用域\n- 默认使用 ‘缩进’ 来区分代码 属于哪部分\n\n### 1.3 注释\n- 单行 <kbd># 注释内容</kbd>\n- 多行 <kbd>\\''’  注释内容\\''’</kbd>\n\n```python\n# 这是单行注释\n\n'''\n\t这是多行注释，实际上是一个字符串\n'''\n```\n### 1.4 输入——input()\n\n```python\n# 括号内为提示信息，输入的信息存储在变量 name 中\n#注意：input（）输入的实际上是字符串，若要输入数字进行运算，可以使用强制转换  \n\tname = input('请输入你的姓名')\n\n# 强制转换:\n\t#第1种方法（适用于所有类型）：    \n           age  = input('输入年龄')\n           newAge = int(age)+1\n            \n            \n    #第2种方法（适用于数值类型,eval()实际上是将字符串强行作为数字使用，相当于去掉引号）：    \t\t\n          age  = input('输入年龄')\n          newAge = eval(age)+1\n```\n\n### 1.5 输出——print()\n\n```python\n#单个字符串\nprint(\"hello world\")\n\n\n#多个字符串，print()会依次打印每个字符串，遇到逗号“,”会输出一个空格\nprint('The quick brown fox', 'jumps over', 'the lazy dog')\n\n\n#输出 计算结果\nprint(100 + 200)\n```\n### 1.6 数据类型\n>  **注意：**   *整数* 和 *浮点数* 在计算机内部存储的方式是不同的，*整数* 运算永远是精确的（除法也是精确的），而*浮点数* 运算则可能会有四舍五入的误差。\n\n#### 1.6.1 int\n\n```python\n#十进制\n\t123，-123，200\n#十六进制  用0x前缀和0-9，a-f表示\n\t0xff00，0xa5b4c3d2\n\n#对于很大的数，例如10000000000，很难数清楚0的个数。Python允许在数字中间以_分隔，因此，写成10_000_000_000和10000000000是完全一样的。十六进制数也可以写成0xa1b2_c3d4\n```\n\n#### 1.6.2  float\n\n```python\n#对于很大或很小的浮点数，就必须用科学计数法表示，把10用e替代，\n\t1.23x10^9    就是   1.23e9，\n    \n\t12.3e8  ，0.000012   可以写成   1.2e-5\n```\n#### 1.6.3  str\n\n```python\n#使用单引号或者双引号包裹\n\t\t'你好'\n    \t\"你好\"\n# 如果字符串内需要有单引号:外面用双引号\n\t\t\" I'm a boy \"\n# 如果字符串内需要有双引号:外面用单引号  \n\t\t' I am a \"boy\" '\n#  如果字符串内需要有 单引号和双引号 ：使用转移字符\\\n\t\t'  I\\'m \\\"OK\\\"!   '   表示 I'm \"OK\"!\n\n#如果字符串很长，需要换行：使用三引号\n\t\tprint('''line1\n\t\tline2\n\t\tline3''')\n```\n#### 1.6.4  bool \n\n```python\n#布尔值只有True、False两种值,布尔值可以用and、or和not运算\n>>> True and True\nTrue\n>>> True and False\nFalse\n>>> False and False\nFalse\n>>> 5 > 3 and 3 > 1\nTrue\n```\n#### 1.6.5  None 空值\n#### 1.6.6  list (有序列表)\n\n```python\n'''\nlist有以下几个特点：\n\t\t\t查找和插入的时间随着元素的增加而增加；\n\t\t\t占用空间小，浪费内存很少。\n\n'''\n\n\n# list的格式（list中的元素的 数据类型 可以不同，甚至可以是1个list)\n>>> classmates = ['Michael', 'Bob', 'Tracy']\n>>> classmates\n['Michael', 'Bob', 'Tracy']\n\n\n# 使用len() 获取list长度\n>>> len(classmates)\n3\n\n\n# 使用index 访问list中的元素（index的范围为：0 ~ len-1  ），当索引超出了范围时，Python会报一个IndexError错误\n>>> classmates[0]\n'Michael'\n\n# list 的最后一个元素的两种表示方法\n>>> classmates[len(classmates) - 1]\n>>> classmates[-1]\n\n##############   插入相关的方法 ########################\n\n# 向list的末尾追加1个元素 append()\n>>> classmates.append('Adam')\n>>> classmates\n['Michael', 'Bob', 'Tracy', 'Adam']\n\n\n# 在指定位置前 插入1个元素\n>>> classmates.insert(1, 'Jack')\n>>> classmates\n['Michael', 'Jack', 'Bob', 'Tracy', 'Adam']\n\n\n##############   删除相关的方法 ########################\n\n# 删除 最后1个元素\n>>> classmates.pop()\n'Adam'\n\n\n# 删除 指定元素\n>>> classmates.pop(1)\n'Jack'\n>>> classmates\n['Michael', 'Bob', 'Tracy']\n\n\n##############  替换相关的方法 ########################\n\n>>> classmates[1] = 'Sarah'\n>>> classmates\n['Michael', 'Sarah', 'Tracy']\n```\n#### 1.6.7 tuple (元组)\n>  一种内部元素不可更改的list ， 相较于 list 更安全\n\n```python\n############# tuple 的定义 ###############\n\n>>> t = (1, 2)\n>>> t\n(1, 2)\n\n\n# 定义一个只有1个元素的tuple，\n# 后面加逗号是为了避免被直接当成内部元素\n\n>>> t = (1,)\n>>> t\n(1,)\n```\n#### 1.6.8  dict (字典)\n> 字典： 内部为键值对，键 在该字典中必须唯一 ,字典是无序的\n\n```python\n'''\ndict有以下几个特点：\n\n\t\t查找和插入的速度极快，不会随着key的增加而变慢；\n\t\t需要占用大量的内存，内存浪费多。\n\t\tkey 不可变，因为用key查找value时，必须依靠key进行 hash运算\n\n'''\n\n############## dict的定义 ###############\n>>> d = {'Michael': 95, 'Bob': 75, 'Tracy': 85}\n>>> d['Michael']\n95\n\n\n# 放入元素\n>>> d['Adam'] = 67\n>>> d['Adam']\n67\n\n\n# 获取元素方法 get(键，当键不存在时的返回值【默认为None】)\n>>> d.get('Thomas')\nNone\n>>> d.get('Thomas', -1)\n-1\n\n# 删除某个键时，该键的值也会删除\n>>> d.pop('Bob')\n75\n>>> d\n{'Michael': 95, 'Tracy': 85}\n```\n#### 1.6.9  set  (集合)\n> 集合类型 ： 要创建一个set，需要提供一个list作为输入集合， set是无序的， 重复元素在set中自动被过滤 ，与dict一样内部元素不可变\n\n```python\n\n>>> s = set([1, 2, 3])\n>>> s\n{1, 2, 3}\n\n\n>>> s = set([1, 1, 2, 2, 3, 3])\n>>> s\n{1, 2, 3}\n\n############ 添加 set的元素 ########\n\n# 添加set的元素 add( )\n>>> s.add(4)\n>>> s\n{1, 2, 3, 4}\n\n>>> s.add(4)\n>>> s\n{1, 2, 3, 4}\n\n\n# 删除元素 remove( )\n>>> s.remove(4)\n>>> s\n{1, 2, 3}\n\n\n########### 集合set 之间的运算  ########### \n\n>>> s1 = set([1, 2, 3])\n>>> s2 = set([2, 3, 4])\n\n# 并集\n>>> s1 & s2\n{2, 3}\n\n#交集\n>>> s1 | s2\n{1, 2, 3, 4}\n```\n\n### 1.7 运算符\n\n```python\n# +\n\t\ta = 1+2\n\n# - \n\t\ta= 3-1    \n    \n# *    \n\t\ta= 3*2\n    \n# / 除法结果一定是小数\n\t\ta= 2/3\t# 0.66666666\n    \tb= 6/2\n\n# // 整除\n\t\ta= 6//5 # 1\n    \n    \n# % 取余数    \n\t\ta = 7 % 5  # 2\n```\n### 1.8 条件判断\n\n```python\n'''\nif语句执行有个特点，它是从上往下判断，如果在某个判断上是True，把该判断对应的语句执行后，就忽略掉剩下的elif和else\n'''\n\n\n# 格式\nage = 3\nif age >= 18:\n    print('adult')\nelif age >= 6:\n    print('teenager')\nelse:\n    print('kid')\n    \n\n    \n# 简写，其中 x 只要为 非零数值、非空字符串、非空list等，就判断为True，否则为False\nif x:\n    print('True')\n```\n\n### 1.9 循环\n\n```python\n#################  for 循环 ######################\n\n\n# for...in 循环\nnames = ['Michael', 'Bob', 'Tracy']\nfor name in names:\n    print(name)\n\n    \n    \n# range（a,b）函数 的范围是[a,b) \n# 例如：结果=5050   即：0-100\nsum = 0\nfor x in range(101):\n    sum = sum + x\nprint(sum) \n\n\n#################  while循环 ########################\n\n# 在循环内部变量n不断自减，直到变为-1时，不再满足while条件，循环退出\nsum = 0\nn = 99\nwhile n > 0:\n    sum = sum + n\n    n = n - 2\nprint(sum)\n\n\n#################### break关键字 #################### \nn = 1\nwhile n <= 100:\n    if n > 10: # 当n = 11时，条件满足，执行break语句\n        break # break语句会结束循环\n    print(n)\n    n = n + 1\nprint('END')\n\n\n#################### continue关键字 #################### \nn = 0\nwhile n < 10:\n    n = n + 1\n    if n % 2 == 0: # 如果n是偶数，执行continue语句\n        continue # continue语句会直接继续下一轮循环，后续的print()语句不会执行\n    print(n)\n\n```\n### 1.10 编码： Unicode  ，ASCII ，UTF-8\n- ASCII编码和Unicode编码的区别：\n> 1. **ASCII编码** 是 **1个字节**，而 **Unicode编码** 通常是**2个字节**。\n>  2. 文本上**全部**是**英文**时，**Unicode 编码** 比 **ASCII 编码** 需要多一倍的存储空间，在存储和传输上就十分不划算。\n>  3. 把**Unicode编码**转化为“可变长编码”的 **UTF-8编码**。**UTF-8编码**把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的**英文字母**被编码成**1个字节**，**汉字**通常是**3个字节**，只有很**生僻的字符**才会被编码成**4-6个字节**。\n>  4. 传输的文本包含大量英文字符时，用 **UTF-8编码** 更节省空间 。 \n\n### 1.11  函数\n#### 1.11.1 内置函数 速查表\n官网： `https://docs.python.org/3/library/functions.html `\n![内置函数表](https://img-blog.csdnimg.cn/20201207202023696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 1.11.2 自定义函数\n\n```python\n'''\n 调用函数的时候，如果传入的参数数量不对，会报`TypeError`的错误 \n 数据类型检查可以用内置函数isinstance()实现\n'''\n\n\n###################### 自定义 函数  ###################### \n\n#如果没有return语句，函数执行完毕后也会返回结果，只是结果为None。return None可以简写为return\ndef my_abs(x):\n    if x >= 0:\n        return x\n    else:\n        return -x\n\n    \n    \n    \n#定义一个什么事也不做的空函数，使用pass 来充当占位符\ndef nop():\n    pass\n\n\n\n\n#  数据类型检查可以用内置函数isinstance()实现\n# isinstance(参数1，参数2) 如果参数1（object）的类型 与 参数二的类型（classinfo）相同则返回 True，否则返回 False\ndef my_abs(x):\n    if not isinstance(x, (int, float)):\n        raise TypeError('bad operand type')\n    if x >= 0:\n        return x\n    else:\n        return -x\n    \n    \n    \n# 返回多个值的函数（实际上返回的是1个 tuple）\nimport math\n\ndef move(x, y, step, angle=0):\t#实际上 move( )返回的是1个 tuple\n    nx = x + step * math.cos(angle)\n    ny = y - step * math.sin(angle)\n    return nx, ny\n\n>>> x, y = move(100, 100, 60, math.pi / 6)\n>>> print(x, y)\n151.96152422706632 70.0\n```\n#### 1.11.3 函数参数\n 1. 默认参数：\n> 默认参数必须指向 不可变的对象【如： str , tuple等】\n如果默认参数为一个 list，则每次调用会记住上次调用的操作，造成结果不对\n\n```python\n############### 默认参数 ###############\n\n# 例如 以下的 n=2 就是默认参数\n\t# 当我们调用power(5)时，相当于调用power(5, 2)\n\t# 而对于n > 2的其他情况，就必须明确地传入n，比如power(5, 3)\n\t\ndef power(x, n=2):\n    s = 1\n    while n > 0:\n        n = n - 1\n        s = s * x\n    return s\n```\n\n 2. 可变参数（即：参数前加*）：\n> 允许传入**0个或任意个**参数，这些可变参数在函数调用时自动组装为一个tuple\n\n```python\n############### 可变参数 ###############\n\n# 在函数内部，参数numbers接收到的是一个tuple，\n# 因此，函数代码完全不变。但是，调用该函数时，可以传入任意个参数，\n# 包括0个参数，即：在普通的参数前加上*\ndef calc(*numbers):\n    sum = 0\n    for n in numbers:\n        sum = sum + n * n\n    return sum\n\n>>> calc(1, 2)\n5\n>>> calc()\n0\n```\n\n 3. 关键字参数（即：参数前加2个星号`*`）：\n> 允许你传入**0个或任意个**含参数名的参数，这些关键字参数在函数内部自动组装为一个dict\n\n```python\n############### 关键字参数 ###############\n\n# 关键字参数 允许你传入0个或任意个含参数名的参数，\n# 这些关键字参数在函数内部自动组装为一个dict\n\ndef person(name, age, **kw):\n    print('name:', name, 'age:', age, 'other:', kw)\n    \n    \n# 只传入必选参数时\n>>> person('Michael', 30)\nname: Michael age: 30 other: {}   \n    \n    \n# 传入任意个数的关键字参数时           \n>>> person('Adam', 45, gender='M', job='Engineer')\nname: Adam age: 45 other: {'gender': 'M', 'job': 'Engineer'}    \n```\n\n 4. 命名关键字参数：\n> **限制**关键字**参数的名字**，命名关键字参数需要一个`特殊的分隔符*`，后面的参数被视为命名关键字参数，如果函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了。**命名关键字参数必须传入参数名**。\n\n```python\n#########  命名关键字参数  ################\n\n# 命名关键字参数：限制关键字参数的名字\n#命名关键字参数需要一个特殊分隔符*，*后面的参数被视为命名关键字参数\n\ndef person(name, age, *, city, job):\n    print(name, age, city, job)\n    \n# 如果函数定义中已经有了一个可变参数，\n# 后面跟着的命名关键字参数就不再需要一个特殊分隔符*了 \ndef person(name, age, *args, city, job):\n    print(name, age, args, city, job)\n    \n#命名关键字参数 （调用时）必须连同 参数名 一起传入【有默认值时除外】   \nperson('Jack', 24, city='Beijing', job='Engineer')\n```\n## 2. Python 自动化办公\n### 2.1 Excel 速查表\n![excel速查表](https://img-blog.csdnimg.cn/20201207203552904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 3. Python 爬虫\n### 3.1 常用的爬虫库\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207203715257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 3.2 requests 库\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207203809826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 3.2.1 案例1\t 京东商品详情页\n\n```python\n#实例1：爬取京东商品详情页\nimport requests\nurl='http://item.jd.com/2967929.html'\ntry:\n    r=requests.get(url)\n    \n    #检查Response状态码,若不是200则产生HttpError异常\n    r.raise_for_status()  \n\t\n\t# 将编码设 utf-8 \n    r.encoding=r.apparent_encoding\n    \n    # 截取页面前1000行\n    print(r.text[:1000])\nexcept:\n    print(\"爬取失败\")\n```\n#### 3.2.2 案例2 亚马逊商品详情页\n\n```python\n#实例2：爬取亚马逊商品详情页————协议头\nurl='https://www.amazon.cn/dp/B076YGLN6G?smid=A3CQWPW49OI3BQ&ref_=Oct_CBBBCard_dsk_asin2&pf_rd_r=X83064H6KVVDTZ4WWDFB&pf_rd_p=5a0738df-7719-4914-81ee-278221dce082&pf_rd_m=A1AJ19PSB66TGU&pf_rd_s=desktop-3'\ntry:\n    res = requests.get(url)\n    res.raise_for_status()        #503\n    res.encoding=r.apparent_encoding   #'ISO-8859-1'\n    print(res.text[:1000])\nexcept:\n    print(\"爬取错误\")\n\n'''\nres.request.headers\n输出：\n{'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}\n'''\n\ntry:\n    kv={'user-agent':'Mozilla/5.0'}  #浏览器身份标识的字段\n    r=requests.get(url,headers=kv)\n    r.raise_for_status()  #r.status_code   200\n    r.encoding=r.apparent_encoding\n    print(r.text[1000:3000])\nexcept:\n    print(\"爬取失败\")\n```\n#### 3.2.3 案例3 百度/360搜索关键字\n\n```python\n#实例3：爬取搜索页面\nimport requests\ntry:\n    kw={'wd':'python'}\n    r=requests.get('https://www.baidu.com/s',params=kw)\n    r.raise_for_status()\n    r.encoding=r.apparent_encoding\n    print(len(r.text))\n    #r.request.url  返回的是百度安全验证的链接？\nexcept:\n    print(\"爬取失败\")\n\n\nimport requests\ntry:\n    kw={'q':'python'}  #360搜索的关键字的键为q\n    r=requests.get('https://www.so.com/s',params=kw)\n    r.raise_for_status()\n    r.encoding=r.apparent_encoding\n    print(len(r.text))  #257468\nexcept:\n    print(\"爬取失败\")\n```\n#### 3.2.4 案例4\t 网络图片爬取及存储\n\n```python\n#实例4：爬取图片\n'''r.content  #表示返回内容的二进制格式'''\nimport requests\nimport os\nroot='./Pic/'\npath=root+url.split('/')[-1].split('@')[0]\nurl='http://img0.dili360.com/ga/M00/02/AB/wKgBzFQ26i2AWujSAA_-xvEYLbU441.jpg@!rw9'\ntry:\n    if not os.path.exists(root):\n        os.mkdir(root)  #创建根目录\n    if not os.path.exists(path):\n\n        r=requests.get(url)\n        # 如何将二进制转化为图片保存\n        with open(path, 'wb') as f:\n            f.write(r.content)\n            f.close()\n            print('图片保存成功')\n    else:\n        print('文件已存在')\nexcept:\n    print(\"爬取失败\")\n```\n#### 3.2.5 案例5\t IP地址归属地查询\n\n```python\n#实例5：IP地址归属地查询\nimport requests\nurl='http://www.ip138.com/iplookup.asp?ip='\ntry:\n    r=requests.get(url+'183.216.163.144',headers=kv)\n    r.raise_for_status()\n    r.encoding=r.apparent_encoding\n    print(r.text[:-500])\nexcept:\n    print('爬取失败')\n```\n### 3.3 urllib库\n特点：不用安装，python自带\n#### 3.3.1 urllib基础：\n\n```python\n# 将网页保存到本地，参数为抓取的网址和保存网页的文件路径\n\turllib.request.urlretrieve(url,file)\n\n# 将urlretrieve产生的缓存清除\n\turllib.request.urlcleanup()\n\n# 爬取网页   \n\tfile=urllib.request.urlopen(url)\n\n# 获取header的信息  \n\tfile.info()\n\n# 获取爬取网页的状态码（200,403,404等）    \n\tfile.getcode() \n\n# 获取目前爬取的网址  \n\tfile.geturl()     \n```\n#### 3.3.2 urllib 库超时设置\n根据 **网速** 和 **对方服务器响应** 的快慢设置相应的超时设置\n```python\nfor i in range(0,100):\n    try:\n        file=urllib.request.urlopen(\"http://www.baidu.com\",timeout=2)\n        data=file.read()\n        print(i,len(data))\n    except Exception as e:\n        print(\"出现异常\"+str(e))\n```\n#### 3.3.3 自动模拟http请求：\n##### 3.3.3.1 get\n常用于：搜索关键词，获得搜索界面\n```python\n#get请求\n\nkeywd=\"Python\"\nurl=\"http://www.baidu.com/s?wd=\"+keywd  #网址构造\nprint(url)\nreq=urllib.request.Request(url) #以请求的方式获取,网址\ndata=urllib.request.urlopen(req).read()\n\nfh=open(\"C:/Users/admin/Desktop/a.html\",\"wb\") #以二进制写入html文件\nfh.write(data)\nfh.close()\n\n#若搜索关键词为中文\nkeywd1=\"亚马逊\"\nkeywd1=urllib.request.quote(keywd1)  #利用quote对中文进行编码\nurl1=\"http://www.baidu.com/s?wd=\"+keywd1\nreq=urllib.request.Request(url1)\ndata=urllib.request.urlopen(req).read()\n\nfh=open(\"C:/Users/admin/Desktop/a.html\",\"wb\") #二进制\nfh.write(data)\nfh.close()\n```\n##### 3.3.3.2 post\n常用于：登录某些网站\n\n```python\n#post请求\nimport urllib.request\nimport urllib.parse\n\nurl=\"https://www.iqianyue.com/mypost/\"  #地址\nlogin=urllib.parse.urlencode(\n    {\"name\":\"1121640425@qq.com\",\"pass\":\"123\"}\n).encode(\"utf-8\")  #登录数据\nreq=urllib.request.Request(url,login)\n\ndata=urllib.request.urlopen(req).read()\n\nfh=open(\"C:/Users/admin/Desktop/a.html\",\"wb\")\nfh.write(data)\nfh.close()\n```\n### 3.4 bs4\n来自：`https://blog.csdn.net/qq_35490191/article/details/80598620`\n[来源博客](https://blog.csdn.net/qq_35490191/article/details/80598620)\n\n**功能：** 解析、遍历、维护标签树。\n\n例如：`<p class='title'>...</p>`\n\n+ 标签名 p\n+ 属性名称 class\n+ 属性值 title\n#### 3.4.1  bs4 的解析器对比\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207205934178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n**具体用法：** `soup=BeautifulSoup(markup,from_encoding=\"编码方式\") `\n\n```python\nhtml = \"\"\"\n<html><head><title>The Dormouse's story</title></head>\n<body>\n<p class=\"title\" name=\"dromouse\"><b>The Dormouse's story</b></p>\n<p class=\"story\">Once upon a time there were three little sisters; and their names were\n<a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\"><span> Elsie </span></a>,\n<a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and\n<a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>;\nand they lived at the bottom of a well.</p>\n<p class=\"story\">...</p>\n</body>\n\"\"\"\n#######################################################################\n\nfrom bs4 import BeautifulSoup\nsoup = BeautifulSoup(html, 'lxml')\nprint(soup.prettify()) #输出清晰的树形结构\n```\n**Beautifu Soup**将复杂的**HTML文档**转化为**树形结构**，每个**节点**都是**Python对象**：\n\n+ Tag：标签；\n+ NavigableString：被包裹在tag内的字符串；\n+ BeautifulSoup：表示一个文档的全部内容，大部分时候可以看做一个tag对象，支持遍历文档树和搜索文档树的方法；\n+ Comment：特殊NavigableString，会以特殊格式输出，比如注释类型。\n#### 3.4.2  bs4 基本用法\n>  **搜索文档树**：***soup.tag.property*** 按顺序获得第一个标签 \n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207210350414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n> **获取所有 ? 标签**： soup.find_all( tag )    // 返回1个list\n> \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207210447518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n> 将tag的**子节点**以**列表**方式输出  ： ***tag.contents*** \n> \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207210519210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n> - 对tag的**子节点** 进行 **循环** ：  **tag.children** \n > - 对tag的**子孙节点** 进行 **循环** ： ***tag.descendants*** \n > \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207210743907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n > 获取tag（只有一个子节点）下所有的文本内容 ： ***tag.string***\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207210819127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n>  从文档中获取**所有的文字内容** ：***soup.get_text( )***\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207210859608.png)\n\n#### 3.4.3 bs4 用法  思维导图\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207211020405.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 4.正则表达式【用于提取信息】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208100448613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 4.1 正则表达式—思维导图\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120810080011.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n ### 4.2 常见的**原子类型**-正则表达式最基本的单位\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208103436181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n ### 4.3  元字符-正则表达式中具有特殊含义的字符\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208103636986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n ### 4.4 模式修正符-在不改变正则表达式的前提下，调整匹配结果\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120810371828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 4.5 贪婪模式和懒惰模式\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208103827958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 4.6 正则表达式函数\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208103901541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 4.7 练习题：\n` https://zhuanlan.zhihu.com/p/91689180?utm_source=qq&utm_medium=social&utm_oi=772119850515431424 `\n[正则表达式-练习题](https://zhuanlan.zhihu.com/p/91689180?utm_source=qq&utm_medium=social&utm_oi=772119850515431424)","source":"_posts/Python3—笔记.md","raw":"---\ntitle: Python3—笔记\ntag: Python3\ncategories:\n  - 后端\n  - Python3\n---\n\n# Python3—笔记\n部分内容来自知乎和中国大学mooc\n\n[toc]\n\n## 1. Python概述\n### 1.1 代码编写方式：\n- 交互式\n- 全部编辑好后运行\n\n### 1.2 作用域\n- 默认使用 ‘缩进’ 来区分代码 属于哪部分\n\n### 1.3 注释\n- 单行 <kbd># 注释内容</kbd>\n- 多行 <kbd>\\''’  注释内容\\''’</kbd>\n\n```python\n# 这是单行注释\n\n'''\n\t这是多行注释，实际上是一个字符串\n'''\n```\n### 1.4 输入——input()\n\n```python\n# 括号内为提示信息，输入的信息存储在变量 name 中\n#注意：input（）输入的实际上是字符串，若要输入数字进行运算，可以使用强制转换  \n\tname = input('请输入你的姓名')\n\n# 强制转换:\n\t#第1种方法（适用于所有类型）：    \n           age  = input('输入年龄')\n           newAge = int(age)+1\n            \n            \n    #第2种方法（适用于数值类型,eval()实际上是将字符串强行作为数字使用，相当于去掉引号）：    \t\t\n          age  = input('输入年龄')\n          newAge = eval(age)+1\n```\n\n### 1.5 输出——print()\n\n```python\n#单个字符串\nprint(\"hello world\")\n\n\n#多个字符串，print()会依次打印每个字符串，遇到逗号“,”会输出一个空格\nprint('The quick brown fox', 'jumps over', 'the lazy dog')\n\n\n#输出 计算结果\nprint(100 + 200)\n```\n### 1.6 数据类型\n>  **注意：**   *整数* 和 *浮点数* 在计算机内部存储的方式是不同的，*整数* 运算永远是精确的（除法也是精确的），而*浮点数* 运算则可能会有四舍五入的误差。\n\n#### 1.6.1 int\n\n```python\n#十进制\n\t123，-123，200\n#十六进制  用0x前缀和0-9，a-f表示\n\t0xff00，0xa5b4c3d2\n\n#对于很大的数，例如10000000000，很难数清楚0的个数。Python允许在数字中间以_分隔，因此，写成10_000_000_000和10000000000是完全一样的。十六进制数也可以写成0xa1b2_c3d4\n```\n\n#### 1.6.2  float\n\n```python\n#对于很大或很小的浮点数，就必须用科学计数法表示，把10用e替代，\n\t1.23x10^9    就是   1.23e9，\n    \n\t12.3e8  ，0.000012   可以写成   1.2e-5\n```\n#### 1.6.3  str\n\n```python\n#使用单引号或者双引号包裹\n\t\t'你好'\n    \t\"你好\"\n# 如果字符串内需要有单引号:外面用双引号\n\t\t\" I'm a boy \"\n# 如果字符串内需要有双引号:外面用单引号  \n\t\t' I am a \"boy\" '\n#  如果字符串内需要有 单引号和双引号 ：使用转移字符\\\n\t\t'  I\\'m \\\"OK\\\"!   '   表示 I'm \"OK\"!\n\n#如果字符串很长，需要换行：使用三引号\n\t\tprint('''line1\n\t\tline2\n\t\tline3''')\n```\n#### 1.6.4  bool \n\n```python\n#布尔值只有True、False两种值,布尔值可以用and、or和not运算\n>>> True and True\nTrue\n>>> True and False\nFalse\n>>> False and False\nFalse\n>>> 5 > 3 and 3 > 1\nTrue\n```\n#### 1.6.5  None 空值\n#### 1.6.6  list (有序列表)\n\n```python\n'''\nlist有以下几个特点：\n\t\t\t查找和插入的时间随着元素的增加而增加；\n\t\t\t占用空间小，浪费内存很少。\n\n'''\n\n\n# list的格式（list中的元素的 数据类型 可以不同，甚至可以是1个list)\n>>> classmates = ['Michael', 'Bob', 'Tracy']\n>>> classmates\n['Michael', 'Bob', 'Tracy']\n\n\n# 使用len() 获取list长度\n>>> len(classmates)\n3\n\n\n# 使用index 访问list中的元素（index的范围为：0 ~ len-1  ），当索引超出了范围时，Python会报一个IndexError错误\n>>> classmates[0]\n'Michael'\n\n# list 的最后一个元素的两种表示方法\n>>> classmates[len(classmates) - 1]\n>>> classmates[-1]\n\n##############   插入相关的方法 ########################\n\n# 向list的末尾追加1个元素 append()\n>>> classmates.append('Adam')\n>>> classmates\n['Michael', 'Bob', 'Tracy', 'Adam']\n\n\n# 在指定位置前 插入1个元素\n>>> classmates.insert(1, 'Jack')\n>>> classmates\n['Michael', 'Jack', 'Bob', 'Tracy', 'Adam']\n\n\n##############   删除相关的方法 ########################\n\n# 删除 最后1个元素\n>>> classmates.pop()\n'Adam'\n\n\n# 删除 指定元素\n>>> classmates.pop(1)\n'Jack'\n>>> classmates\n['Michael', 'Bob', 'Tracy']\n\n\n##############  替换相关的方法 ########################\n\n>>> classmates[1] = 'Sarah'\n>>> classmates\n['Michael', 'Sarah', 'Tracy']\n```\n#### 1.6.7 tuple (元组)\n>  一种内部元素不可更改的list ， 相较于 list 更安全\n\n```python\n############# tuple 的定义 ###############\n\n>>> t = (1, 2)\n>>> t\n(1, 2)\n\n\n# 定义一个只有1个元素的tuple，\n# 后面加逗号是为了避免被直接当成内部元素\n\n>>> t = (1,)\n>>> t\n(1,)\n```\n#### 1.6.8  dict (字典)\n> 字典： 内部为键值对，键 在该字典中必须唯一 ,字典是无序的\n\n```python\n'''\ndict有以下几个特点：\n\n\t\t查找和插入的速度极快，不会随着key的增加而变慢；\n\t\t需要占用大量的内存，内存浪费多。\n\t\tkey 不可变，因为用key查找value时，必须依靠key进行 hash运算\n\n'''\n\n############## dict的定义 ###############\n>>> d = {'Michael': 95, 'Bob': 75, 'Tracy': 85}\n>>> d['Michael']\n95\n\n\n# 放入元素\n>>> d['Adam'] = 67\n>>> d['Adam']\n67\n\n\n# 获取元素方法 get(键，当键不存在时的返回值【默认为None】)\n>>> d.get('Thomas')\nNone\n>>> d.get('Thomas', -1)\n-1\n\n# 删除某个键时，该键的值也会删除\n>>> d.pop('Bob')\n75\n>>> d\n{'Michael': 95, 'Tracy': 85}\n```\n#### 1.6.9  set  (集合)\n> 集合类型 ： 要创建一个set，需要提供一个list作为输入集合， set是无序的， 重复元素在set中自动被过滤 ，与dict一样内部元素不可变\n\n```python\n\n>>> s = set([1, 2, 3])\n>>> s\n{1, 2, 3}\n\n\n>>> s = set([1, 1, 2, 2, 3, 3])\n>>> s\n{1, 2, 3}\n\n############ 添加 set的元素 ########\n\n# 添加set的元素 add( )\n>>> s.add(4)\n>>> s\n{1, 2, 3, 4}\n\n>>> s.add(4)\n>>> s\n{1, 2, 3, 4}\n\n\n# 删除元素 remove( )\n>>> s.remove(4)\n>>> s\n{1, 2, 3}\n\n\n########### 集合set 之间的运算  ########### \n\n>>> s1 = set([1, 2, 3])\n>>> s2 = set([2, 3, 4])\n\n# 并集\n>>> s1 & s2\n{2, 3}\n\n#交集\n>>> s1 | s2\n{1, 2, 3, 4}\n```\n\n### 1.7 运算符\n\n```python\n# +\n\t\ta = 1+2\n\n# - \n\t\ta= 3-1    \n    \n# *    \n\t\ta= 3*2\n    \n# / 除法结果一定是小数\n\t\ta= 2/3\t# 0.66666666\n    \tb= 6/2\n\n# // 整除\n\t\ta= 6//5 # 1\n    \n    \n# % 取余数    \n\t\ta = 7 % 5  # 2\n```\n### 1.8 条件判断\n\n```python\n'''\nif语句执行有个特点，它是从上往下判断，如果在某个判断上是True，把该判断对应的语句执行后，就忽略掉剩下的elif和else\n'''\n\n\n# 格式\nage = 3\nif age >= 18:\n    print('adult')\nelif age >= 6:\n    print('teenager')\nelse:\n    print('kid')\n    \n\n    \n# 简写，其中 x 只要为 非零数值、非空字符串、非空list等，就判断为True，否则为False\nif x:\n    print('True')\n```\n\n### 1.9 循环\n\n```python\n#################  for 循环 ######################\n\n\n# for...in 循环\nnames = ['Michael', 'Bob', 'Tracy']\nfor name in names:\n    print(name)\n\n    \n    \n# range（a,b）函数 的范围是[a,b) \n# 例如：结果=5050   即：0-100\nsum = 0\nfor x in range(101):\n    sum = sum + x\nprint(sum) \n\n\n#################  while循环 ########################\n\n# 在循环内部变量n不断自减，直到变为-1时，不再满足while条件，循环退出\nsum = 0\nn = 99\nwhile n > 0:\n    sum = sum + n\n    n = n - 2\nprint(sum)\n\n\n#################### break关键字 #################### \nn = 1\nwhile n <= 100:\n    if n > 10: # 当n = 11时，条件满足，执行break语句\n        break # break语句会结束循环\n    print(n)\n    n = n + 1\nprint('END')\n\n\n#################### continue关键字 #################### \nn = 0\nwhile n < 10:\n    n = n + 1\n    if n % 2 == 0: # 如果n是偶数，执行continue语句\n        continue # continue语句会直接继续下一轮循环，后续的print()语句不会执行\n    print(n)\n\n```\n### 1.10 编码： Unicode  ，ASCII ，UTF-8\n- ASCII编码和Unicode编码的区别：\n> 1. **ASCII编码** 是 **1个字节**，而 **Unicode编码** 通常是**2个字节**。\n>  2. 文本上**全部**是**英文**时，**Unicode 编码** 比 **ASCII 编码** 需要多一倍的存储空间，在存储和传输上就十分不划算。\n>  3. 把**Unicode编码**转化为“可变长编码”的 **UTF-8编码**。**UTF-8编码**把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的**英文字母**被编码成**1个字节**，**汉字**通常是**3个字节**，只有很**生僻的字符**才会被编码成**4-6个字节**。\n>  4. 传输的文本包含大量英文字符时，用 **UTF-8编码** 更节省空间 。 \n\n### 1.11  函数\n#### 1.11.1 内置函数 速查表\n官网： `https://docs.python.org/3/library/functions.html `\n![内置函数表](https://img-blog.csdnimg.cn/20201207202023696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 1.11.2 自定义函数\n\n```python\n'''\n 调用函数的时候，如果传入的参数数量不对，会报`TypeError`的错误 \n 数据类型检查可以用内置函数isinstance()实现\n'''\n\n\n###################### 自定义 函数  ###################### \n\n#如果没有return语句，函数执行完毕后也会返回结果，只是结果为None。return None可以简写为return\ndef my_abs(x):\n    if x >= 0:\n        return x\n    else:\n        return -x\n\n    \n    \n    \n#定义一个什么事也不做的空函数，使用pass 来充当占位符\ndef nop():\n    pass\n\n\n\n\n#  数据类型检查可以用内置函数isinstance()实现\n# isinstance(参数1，参数2) 如果参数1（object）的类型 与 参数二的类型（classinfo）相同则返回 True，否则返回 False\ndef my_abs(x):\n    if not isinstance(x, (int, float)):\n        raise TypeError('bad operand type')\n    if x >= 0:\n        return x\n    else:\n        return -x\n    \n    \n    \n# 返回多个值的函数（实际上返回的是1个 tuple）\nimport math\n\ndef move(x, y, step, angle=0):\t#实际上 move( )返回的是1个 tuple\n    nx = x + step * math.cos(angle)\n    ny = y - step * math.sin(angle)\n    return nx, ny\n\n>>> x, y = move(100, 100, 60, math.pi / 6)\n>>> print(x, y)\n151.96152422706632 70.0\n```\n#### 1.11.3 函数参数\n 1. 默认参数：\n> 默认参数必须指向 不可变的对象【如： str , tuple等】\n如果默认参数为一个 list，则每次调用会记住上次调用的操作，造成结果不对\n\n```python\n############### 默认参数 ###############\n\n# 例如 以下的 n=2 就是默认参数\n\t# 当我们调用power(5)时，相当于调用power(5, 2)\n\t# 而对于n > 2的其他情况，就必须明确地传入n，比如power(5, 3)\n\t\ndef power(x, n=2):\n    s = 1\n    while n > 0:\n        n = n - 1\n        s = s * x\n    return s\n```\n\n 2. 可变参数（即：参数前加*）：\n> 允许传入**0个或任意个**参数，这些可变参数在函数调用时自动组装为一个tuple\n\n```python\n############### 可变参数 ###############\n\n# 在函数内部，参数numbers接收到的是一个tuple，\n# 因此，函数代码完全不变。但是，调用该函数时，可以传入任意个参数，\n# 包括0个参数，即：在普通的参数前加上*\ndef calc(*numbers):\n    sum = 0\n    for n in numbers:\n        sum = sum + n * n\n    return sum\n\n>>> calc(1, 2)\n5\n>>> calc()\n0\n```\n\n 3. 关键字参数（即：参数前加2个星号`*`）：\n> 允许你传入**0个或任意个**含参数名的参数，这些关键字参数在函数内部自动组装为一个dict\n\n```python\n############### 关键字参数 ###############\n\n# 关键字参数 允许你传入0个或任意个含参数名的参数，\n# 这些关键字参数在函数内部自动组装为一个dict\n\ndef person(name, age, **kw):\n    print('name:', name, 'age:', age, 'other:', kw)\n    \n    \n# 只传入必选参数时\n>>> person('Michael', 30)\nname: Michael age: 30 other: {}   \n    \n    \n# 传入任意个数的关键字参数时           \n>>> person('Adam', 45, gender='M', job='Engineer')\nname: Adam age: 45 other: {'gender': 'M', 'job': 'Engineer'}    \n```\n\n 4. 命名关键字参数：\n> **限制**关键字**参数的名字**，命名关键字参数需要一个`特殊的分隔符*`，后面的参数被视为命名关键字参数，如果函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了。**命名关键字参数必须传入参数名**。\n\n```python\n#########  命名关键字参数  ################\n\n# 命名关键字参数：限制关键字参数的名字\n#命名关键字参数需要一个特殊分隔符*，*后面的参数被视为命名关键字参数\n\ndef person(name, age, *, city, job):\n    print(name, age, city, job)\n    \n# 如果函数定义中已经有了一个可变参数，\n# 后面跟着的命名关键字参数就不再需要一个特殊分隔符*了 \ndef person(name, age, *args, city, job):\n    print(name, age, args, city, job)\n    \n#命名关键字参数 （调用时）必须连同 参数名 一起传入【有默认值时除外】   \nperson('Jack', 24, city='Beijing', job='Engineer')\n```\n## 2. Python 自动化办公\n### 2.1 Excel 速查表\n![excel速查表](https://img-blog.csdnimg.cn/20201207203552904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 3. Python 爬虫\n### 3.1 常用的爬虫库\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207203715257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n\n### 3.2 requests 库\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207203809826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n#### 3.2.1 案例1\t 京东商品详情页\n\n```python\n#实例1：爬取京东商品详情页\nimport requests\nurl='http://item.jd.com/2967929.html'\ntry:\n    r=requests.get(url)\n    \n    #检查Response状态码,若不是200则产生HttpError异常\n    r.raise_for_status()  \n\t\n\t# 将编码设 utf-8 \n    r.encoding=r.apparent_encoding\n    \n    # 截取页面前1000行\n    print(r.text[:1000])\nexcept:\n    print(\"爬取失败\")\n```\n#### 3.2.2 案例2 亚马逊商品详情页\n\n```python\n#实例2：爬取亚马逊商品详情页————协议头\nurl='https://www.amazon.cn/dp/B076YGLN6G?smid=A3CQWPW49OI3BQ&ref_=Oct_CBBBCard_dsk_asin2&pf_rd_r=X83064H6KVVDTZ4WWDFB&pf_rd_p=5a0738df-7719-4914-81ee-278221dce082&pf_rd_m=A1AJ19PSB66TGU&pf_rd_s=desktop-3'\ntry:\n    res = requests.get(url)\n    res.raise_for_status()        #503\n    res.encoding=r.apparent_encoding   #'ISO-8859-1'\n    print(res.text[:1000])\nexcept:\n    print(\"爬取错误\")\n\n'''\nres.request.headers\n输出：\n{'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}\n'''\n\ntry:\n    kv={'user-agent':'Mozilla/5.0'}  #浏览器身份标识的字段\n    r=requests.get(url,headers=kv)\n    r.raise_for_status()  #r.status_code   200\n    r.encoding=r.apparent_encoding\n    print(r.text[1000:3000])\nexcept:\n    print(\"爬取失败\")\n```\n#### 3.2.3 案例3 百度/360搜索关键字\n\n```python\n#实例3：爬取搜索页面\nimport requests\ntry:\n    kw={'wd':'python'}\n    r=requests.get('https://www.baidu.com/s',params=kw)\n    r.raise_for_status()\n    r.encoding=r.apparent_encoding\n    print(len(r.text))\n    #r.request.url  返回的是百度安全验证的链接？\nexcept:\n    print(\"爬取失败\")\n\n\nimport requests\ntry:\n    kw={'q':'python'}  #360搜索的关键字的键为q\n    r=requests.get('https://www.so.com/s',params=kw)\n    r.raise_for_status()\n    r.encoding=r.apparent_encoding\n    print(len(r.text))  #257468\nexcept:\n    print(\"爬取失败\")\n```\n#### 3.2.4 案例4\t 网络图片爬取及存储\n\n```python\n#实例4：爬取图片\n'''r.content  #表示返回内容的二进制格式'''\nimport requests\nimport os\nroot='./Pic/'\npath=root+url.split('/')[-1].split('@')[0]\nurl='http://img0.dili360.com/ga/M00/02/AB/wKgBzFQ26i2AWujSAA_-xvEYLbU441.jpg@!rw9'\ntry:\n    if not os.path.exists(root):\n        os.mkdir(root)  #创建根目录\n    if not os.path.exists(path):\n\n        r=requests.get(url)\n        # 如何将二进制转化为图片保存\n        with open(path, 'wb') as f:\n            f.write(r.content)\n            f.close()\n            print('图片保存成功')\n    else:\n        print('文件已存在')\nexcept:\n    print(\"爬取失败\")\n```\n#### 3.2.5 案例5\t IP地址归属地查询\n\n```python\n#实例5：IP地址归属地查询\nimport requests\nurl='http://www.ip138.com/iplookup.asp?ip='\ntry:\n    r=requests.get(url+'183.216.163.144',headers=kv)\n    r.raise_for_status()\n    r.encoding=r.apparent_encoding\n    print(r.text[:-500])\nexcept:\n    print('爬取失败')\n```\n### 3.3 urllib库\n特点：不用安装，python自带\n#### 3.3.1 urllib基础：\n\n```python\n# 将网页保存到本地，参数为抓取的网址和保存网页的文件路径\n\turllib.request.urlretrieve(url,file)\n\n# 将urlretrieve产生的缓存清除\n\turllib.request.urlcleanup()\n\n# 爬取网页   \n\tfile=urllib.request.urlopen(url)\n\n# 获取header的信息  \n\tfile.info()\n\n# 获取爬取网页的状态码（200,403,404等）    \n\tfile.getcode() \n\n# 获取目前爬取的网址  \n\tfile.geturl()     \n```\n#### 3.3.2 urllib 库超时设置\n根据 **网速** 和 **对方服务器响应** 的快慢设置相应的超时设置\n```python\nfor i in range(0,100):\n    try:\n        file=urllib.request.urlopen(\"http://www.baidu.com\",timeout=2)\n        data=file.read()\n        print(i,len(data))\n    except Exception as e:\n        print(\"出现异常\"+str(e))\n```\n#### 3.3.3 自动模拟http请求：\n##### 3.3.3.1 get\n常用于：搜索关键词，获得搜索界面\n```python\n#get请求\n\nkeywd=\"Python\"\nurl=\"http://www.baidu.com/s?wd=\"+keywd  #网址构造\nprint(url)\nreq=urllib.request.Request(url) #以请求的方式获取,网址\ndata=urllib.request.urlopen(req).read()\n\nfh=open(\"C:/Users/admin/Desktop/a.html\",\"wb\") #以二进制写入html文件\nfh.write(data)\nfh.close()\n\n#若搜索关键词为中文\nkeywd1=\"亚马逊\"\nkeywd1=urllib.request.quote(keywd1)  #利用quote对中文进行编码\nurl1=\"http://www.baidu.com/s?wd=\"+keywd1\nreq=urllib.request.Request(url1)\ndata=urllib.request.urlopen(req).read()\n\nfh=open(\"C:/Users/admin/Desktop/a.html\",\"wb\") #二进制\nfh.write(data)\nfh.close()\n```\n##### 3.3.3.2 post\n常用于：登录某些网站\n\n```python\n#post请求\nimport urllib.request\nimport urllib.parse\n\nurl=\"https://www.iqianyue.com/mypost/\"  #地址\nlogin=urllib.parse.urlencode(\n    {\"name\":\"1121640425@qq.com\",\"pass\":\"123\"}\n).encode(\"utf-8\")  #登录数据\nreq=urllib.request.Request(url,login)\n\ndata=urllib.request.urlopen(req).read()\n\nfh=open(\"C:/Users/admin/Desktop/a.html\",\"wb\")\nfh.write(data)\nfh.close()\n```\n### 3.4 bs4\n来自：`https://blog.csdn.net/qq_35490191/article/details/80598620`\n[来源博客](https://blog.csdn.net/qq_35490191/article/details/80598620)\n\n**功能：** 解析、遍历、维护标签树。\n\n例如：`<p class='title'>...</p>`\n\n+ 标签名 p\n+ 属性名称 class\n+ 属性值 title\n#### 3.4.1  bs4 的解析器对比\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207205934178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n**具体用法：** `soup=BeautifulSoup(markup,from_encoding=\"编码方式\") `\n\n```python\nhtml = \"\"\"\n<html><head><title>The Dormouse's story</title></head>\n<body>\n<p class=\"title\" name=\"dromouse\"><b>The Dormouse's story</b></p>\n<p class=\"story\">Once upon a time there were three little sisters; and their names were\n<a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\"><span> Elsie </span></a>,\n<a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and\n<a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>;\nand they lived at the bottom of a well.</p>\n<p class=\"story\">...</p>\n</body>\n\"\"\"\n#######################################################################\n\nfrom bs4 import BeautifulSoup\nsoup = BeautifulSoup(html, 'lxml')\nprint(soup.prettify()) #输出清晰的树形结构\n```\n**Beautifu Soup**将复杂的**HTML文档**转化为**树形结构**，每个**节点**都是**Python对象**：\n\n+ Tag：标签；\n+ NavigableString：被包裹在tag内的字符串；\n+ BeautifulSoup：表示一个文档的全部内容，大部分时候可以看做一个tag对象，支持遍历文档树和搜索文档树的方法；\n+ Comment：特殊NavigableString，会以特殊格式输出，比如注释类型。\n#### 3.4.2  bs4 基本用法\n>  **搜索文档树**：***soup.tag.property*** 按顺序获得第一个标签 \n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207210350414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n> **获取所有 ? 标签**： soup.find_all( tag )    // 返回1个list\n> \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207210447518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n> 将tag的**子节点**以**列表**方式输出  ： ***tag.contents*** \n> \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207210519210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n> - 对tag的**子节点** 进行 **循环** ：  **tag.children** \n > - 对tag的**子孙节点** 进行 **循环** ： ***tag.descendants*** \n > \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207210743907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n > 获取tag（只有一个子节点）下所有的文本内容 ： ***tag.string***\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207210819127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n>  从文档中获取**所有的文字内容** ：***soup.get_text( )***\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207210859608.png)\n\n#### 3.4.3 bs4 用法  思维导图\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201207211020405.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n## 4.正则表达式【用于提取信息】\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208100448613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 4.1 正则表达式—思维导图\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120810080011.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n ### 4.2 常见的**原子类型**-正则表达式最基本的单位\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208103436181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n ### 4.3  元字符-正则表达式中具有特殊含义的字符\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208103636986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n ### 4.4 模式修正符-在不改变正则表达式的前提下，调整匹配结果\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020120810371828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 4.5 贪婪模式和懒惰模式\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208103827958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 4.6 正则表达式函数\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201208103901541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70)\n### 4.7 练习题：\n` https://zhuanlan.zhihu.com/p/91689180?utm_source=qq&utm_medium=social&utm_oi=772119850515431424 `\n[正则表达式-练习题](https://zhuanlan.zhihu.com/p/91689180?utm_source=qq&utm_medium=social&utm_oi=772119850515431424)","slug":"Python3—笔记","published":1,"date":"2021-06-02T02:49:19.173Z","updated":"2021-06-01T07:36:09.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs2i0046lcvda6io3oer","content":"<h1 id=\"Python3—笔记\"><a href=\"#Python3—笔记\" class=\"headerlink\" title=\"Python3—笔记\"></a>Python3—笔记</h1><p>部分内容来自知乎和中国大学mooc</p>\n<p>[toc]</p>\n<h2 id=\"1-Python概述\"><a href=\"#1-Python概述\" class=\"headerlink\" title=\"1. Python概述\"></a>1. Python概述</h2><h3 id=\"1-1-代码编写方式：\"><a href=\"#1-1-代码编写方式：\" class=\"headerlink\" title=\"1.1 代码编写方式：\"></a>1.1 代码编写方式：</h3><ul>\n<li>交互式</li>\n<li>全部编辑好后运行</li>\n</ul>\n<h3 id=\"1-2-作用域\"><a href=\"#1-2-作用域\" class=\"headerlink\" title=\"1.2 作用域\"></a>1.2 作用域</h3><ul>\n<li>默认使用 ‘缩进’ 来区分代码 属于哪部分</li>\n</ul>\n<h3 id=\"1-3-注释\"><a href=\"#1-3-注释\" class=\"headerlink\" title=\"1.3 注释\"></a>1.3 注释</h3><ul>\n<li>单行 <kbd># 注释内容</kbd></li>\n<li>多行 <kbd>&#39;'’  注释内容&#39;'’</kbd></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这是单行注释</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">\t这是多行注释，实际上是一个字符串</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-4-输入——input\"><a href=\"#1-4-输入——input\" class=\"headerlink\" title=\"1.4 输入——input()\"></a>1.4 输入——input()</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 括号内为提示信息，输入的信息存储在变量 name 中</span></span><br><span class=\"line\"><span class=\"comment\">#注意：input（）输入的实际上是字符串，若要输入数字进行运算，可以使用强制转换  </span></span><br><span class=\"line\">\tname = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入你的姓名&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 强制转换:</span></span><br><span class=\"line\">\t<span class=\"comment\">#第1种方法（适用于所有类型）：    </span></span><br><span class=\"line\">           age  = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;输入年龄&#x27;</span>)</span><br><span class=\"line\">           newAge = <span class=\"built_in\">int</span>(age)+<span class=\"number\">1</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"comment\">#第2种方法（适用于数值类型,eval()实际上是将字符串强行作为数字使用，相当于去掉引号）：    \t\t</span></span><br><span class=\"line\">          age  = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;输入年龄&#x27;</span>)</span><br><span class=\"line\">          newAge = <span class=\"built_in\">eval</span>(age)+<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-5-输出——print\"><a href=\"#1-5-输出——print\" class=\"headerlink\" title=\"1.5 输出——print()\"></a>1.5 输出——print()</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单个字符串</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello world&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#多个字符串，print()会依次打印每个字符串，遇到逗号“,”会输出一个空格</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;The quick brown fox&#x27;</span>, <span class=\"string\">&#x27;jumps over&#x27;</span>, <span class=\"string\">&#x27;the lazy dog&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#输出 计算结果</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">100</span> + <span class=\"number\">200</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-6-数据类型\"><a href=\"#1-6-数据类型\" class=\"headerlink\" title=\"1.6 数据类型\"></a>1.6 数据类型</h3><blockquote>\n<p> <strong>注意：</strong>   <em>整数</em> 和 <em>浮点数</em> 在计算机内部存储的方式是不同的，<em>整数</em> 运算永远是精确的（除法也是精确的），而<em>浮点数</em> 运算则可能会有四舍五入的误差。</p>\n</blockquote>\n<h4 id=\"1-6-1-int\"><a href=\"#1-6-1-int\" class=\"headerlink\" title=\"1.6.1 int\"></a>1.6.1 int</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#十进制</span></span><br><span class=\"line\">\t<span class=\"number\">123</span>，-<span class=\"number\">123</span>，<span class=\"number\">200</span></span><br><span class=\"line\"><span class=\"comment\">#十六进制  用0x前缀和0-9，a-f表示</span></span><br><span class=\"line\">\t<span class=\"number\">0xff00</span>，<span class=\"number\">0xa5b4c3d2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#对于很大的数，例如10000000000，很难数清楚0的个数。Python允许在数字中间以_分隔，因此，写成10_000_000_000和10000000000是完全一样的。十六进制数也可以写成0xa1b2_c3d4</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-6-2-float\"><a href=\"#1-6-2-float\" class=\"headerlink\" title=\"1.6.2  float\"></a>1.6.2  float</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#对于很大或很小的浮点数，就必须用科学计数法表示，把10用e替代，</span></span><br><span class=\"line\">\t<span class=\"number\">1.23</span>x10^<span class=\"number\">9</span>    就是   <span class=\"number\">1.23e9</span>，</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"number\">12.3e8</span>  ，<span class=\"number\">0.000012</span>   可以写成   <span class=\"number\">1.2e-5</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"1-6-3-str\"><a href=\"#1-6-3-str\" class=\"headerlink\" title=\"1.6.3  str\"></a>1.6.3  str</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用单引号或者双引号包裹</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;你好&#x27;</span></span><br><span class=\"line\">    \t<span class=\"string\">&quot;你好&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 如果字符串内需要有单引号:外面用双引号</span></span><br><span class=\"line\">\t\t<span class=\"string\">&quot; I&#x27;m a boy &quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 如果字符串内需要有双引号:外面用单引号  </span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27; I am a &quot;boy&quot; &#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#  如果字符串内需要有 单引号和双引号 ：使用转移字符\\</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;  I\\&#x27;m \\&quot;OK\\&quot;!   &#x27;</span>   表示 I<span class=\"string\">&#x27;m &quot;OK&quot;!</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">#如果字符串很长，需要换行：使用三引号</span></span><br><span class=\"line\"><span class=\"string\">\t\tprint(&#x27;</span><span class=\"string\">&#x27;&#x27;</span>line1</span><br><span class=\"line\">\t\tline2</span><br><span class=\"line\">\t\tline3<span class=\"string\">&#x27;&#x27;&#x27;)</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"1-6-4-bool\"><a href=\"#1-6-4-bool\" class=\"headerlink\" title=\"1.6.4  bool\"></a>1.6.4  bool</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#布尔值只有True、False两种值,布尔值可以用and、or和not运算</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"literal\">True</span> <span class=\"keyword\">and</span> <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"literal\">True</span> <span class=\"keyword\">and</span> <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"literal\">False</span> <span class=\"keyword\">and</span> <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"number\">5</span> &gt; <span class=\"number\">3</span> <span class=\"keyword\">and</span> <span class=\"number\">3</span> &gt; <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"1-6-5-None-空值\"><a href=\"#1-6-5-None-空值\" class=\"headerlink\" title=\"1.6.5  None 空值\"></a>1.6.5  None 空值</h4><h4 id=\"1-6-6-list-有序列表\"><a href=\"#1-6-6-list-有序列表\" class=\"headerlink\" title=\"1.6.6  list (有序列表)\"></a>1.6.6  list (有序列表)</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">list有以下几个特点：</span></span><br><span class=\"line\"><span class=\"string\">\t\t\t查找和插入的时间随着元素的增加而增加；</span></span><br><span class=\"line\"><span class=\"string\">\t\t\t占用空间小，浪费内存很少。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># list的格式（list中的元素的 数据类型 可以不同，甚至可以是1个list)</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates = [<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用len() 获取list长度</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">len</span>(classmates)</span><br><span class=\"line\"><span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用index 访问list中的元素（index的范围为：0 ~ len-1  ），当索引超出了范围时，Python会报一个IndexError错误</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"string\">&#x27;Michael&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># list 的最后一个元素的两种表示方法</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates[<span class=\"built_in\">len</span>(classmates) - <span class=\"number\">1</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates[-<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##############   插入相关的方法 ########################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 向list的末尾追加1个元素 append()</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates.append(<span class=\"string\">&#x27;Adam&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>, <span class=\"string\">&#x27;Adam&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在指定位置前 插入1个元素</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates.insert(<span class=\"number\">1</span>, <span class=\"string\">&#x27;Jack&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Jack&#x27;</span>, <span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>, <span class=\"string\">&#x27;Adam&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##############   删除相关的方法 ########################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除 最后1个元素</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates.pop()</span><br><span class=\"line\"><span class=\"string\">&#x27;Adam&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除 指定元素</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates.pop(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"string\">&#x27;Jack&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##############  替换相关的方法 ########################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates[<span class=\"number\">1</span>] = <span class=\"string\">&#x27;Sarah&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Sarah&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-6-7-tuple-元组\"><a href=\"#1-6-7-tuple-元组\" class=\"headerlink\" title=\"1.6.7 tuple (元组)\"></a>1.6.7 tuple (元组)</h4><blockquote>\n<p> 一种内部元素不可更改的list ， 相较于 list 更安全</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">############# tuple 的定义 ###############</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t = (<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t</span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义一个只有1个元素的tuple，</span></span><br><span class=\"line\"><span class=\"comment\"># 后面加逗号是为了避免被直接当成内部元素</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t = (<span class=\"number\">1</span>,)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t</span><br><span class=\"line\">(<span class=\"number\">1</span>,)</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-6-8-dict-字典\"><a href=\"#1-6-8-dict-字典\" class=\"headerlink\" title=\"1.6.8  dict (字典)\"></a>1.6.8  dict (字典)</h4><blockquote>\n<p>字典： 内部为键值对，键 在该字典中必须唯一 ,字典是无序的</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">dict有以下几个特点：</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">\t\t查找和插入的速度极快，不会随着key的增加而变慢；</span></span><br><span class=\"line\"><span class=\"string\">\t\t需要占用大量的内存，内存浪费多。</span></span><br><span class=\"line\"><span class=\"string\">\t\tkey 不可变，因为用key查找value时，必须依靠key进行 hash运算</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">############## dict的定义 ###############</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d = &#123;<span class=\"string\">&#x27;Michael&#x27;</span>: <span class=\"number\">95</span>, <span class=\"string\">&#x27;Bob&#x27;</span>: <span class=\"number\">75</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>: <span class=\"number\">85</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d[<span class=\"string\">&#x27;Michael&#x27;</span>]</span><br><span class=\"line\"><span class=\"number\">95</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 放入元素</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d[<span class=\"string\">&#x27;Adam&#x27;</span>] = <span class=\"number\">67</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d[<span class=\"string\">&#x27;Adam&#x27;</span>]</span><br><span class=\"line\"><span class=\"number\">67</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取元素方法 get(键，当键不存在时的返回值【默认为None】)</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d.get(<span class=\"string\">&#x27;Thomas&#x27;</span>)</span><br><span class=\"line\"><span class=\"literal\">None</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d.get(<span class=\"string\">&#x27;Thomas&#x27;</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\">-<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除某个键时，该键的值也会删除</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d.pop(<span class=\"string\">&#x27;Bob&#x27;</span>)</span><br><span class=\"line\"><span class=\"number\">75</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;Michael&#x27;</span>: <span class=\"number\">95</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>: <span class=\"number\">85</span>&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-6-9-set-集合\"><a href=\"#1-6-9-set-集合\" class=\"headerlink\" title=\"1.6.9  set  (集合)\"></a>1.6.9  set  (集合)</h4><blockquote>\n<p>集合类型 ： 要创建一个set，需要提供一个list作为输入集合， set是无序的， 重复元素在set中自动被过滤 ，与dict一样内部元素不可变</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">############ 添加 set的元素 ########</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加set的元素 add( )</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s.add(<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s.add(<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除元素 remove( )</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s.remove(<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">########### 集合set 之间的运算  ########### </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s1 = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s2 = <span class=\"built_in\">set</span>([<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 并集</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s1 &amp; s2</span><br><span class=\"line\">&#123;<span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#交集</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s1 | s2</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-7-运算符\"><a href=\"#1-7-运算符\" class=\"headerlink\" title=\"1.7 运算符\"></a>1.7 运算符</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># +</span></span><br><span class=\"line\">\t\ta = <span class=\"number\">1</span>+<span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - </span></span><br><span class=\"line\">\t\ta= <span class=\"number\">3</span>-<span class=\"number\">1</span>    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># *    </span></span><br><span class=\"line\">\t\ta= <span class=\"number\">3</span>*<span class=\"number\">2</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># / 除法结果一定是小数</span></span><br><span class=\"line\">\t\ta= <span class=\"number\">2</span>/<span class=\"number\">3</span>\t<span class=\"comment\"># 0.66666666</span></span><br><span class=\"line\">    \tb= <span class=\"number\">6</span>/<span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># // 整除</span></span><br><span class=\"line\">\t\ta= <span class=\"number\">6</span>//<span class=\"number\">5</span> <span class=\"comment\"># 1</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># % 取余数    </span></span><br><span class=\"line\">\t\ta = <span class=\"number\">7</span> % <span class=\"number\">5</span>  <span class=\"comment\"># 2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-8-条件判断\"><a href=\"#1-8-条件判断\" class=\"headerlink\" title=\"1.8 条件判断\"></a>1.8 条件判断</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">if语句执行有个特点，它是从上往下判断，如果在某个判断上是True，把该判断对应的语句执行后，就忽略掉剩下的elif和else</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 格式</span></span><br><span class=\"line\">age = <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> age &gt;= <span class=\"number\">18</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;adult&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> age &gt;= <span class=\"number\">6</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;teenager&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;kid&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 简写，其中 x 只要为 非零数值、非空字符串、非空list等，就判断为True，否则为False</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> x:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;True&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-9-循环\"><a href=\"#1-9-循环\" class=\"headerlink\" title=\"1.9 循环\"></a>1.9 循环</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#################  for 循环 ######################</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for...in 循环</span></span><br><span class=\"line\">names = [<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> names:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name)</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># range（a,b）函数 的范围是[a,b) </span></span><br><span class=\"line\"><span class=\"comment\"># 例如：结果=5050   即：0-100</span></span><br><span class=\"line\"><span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">101</span>):</span><br><span class=\"line\">    <span class=\"built_in\">sum</span> = <span class=\"built_in\">sum</span> + x</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">sum</span>) </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#################  while循环 ########################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在循环内部变量n不断自减，直到变为-1时，不再满足while条件，循环退出</span></span><br><span class=\"line\"><span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\">n = <span class=\"number\">99</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> n &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">    <span class=\"built_in\">sum</span> = <span class=\"built_in\">sum</span> + n</span><br><span class=\"line\">    n = n - <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">sum</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#################### break关键字 #################### </span></span><br><span class=\"line\">n = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> n &lt;= <span class=\"number\">100</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> n &gt; <span class=\"number\">10</span>: <span class=\"comment\"># 当n = 11时，条件满足，执行break语句</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span> <span class=\"comment\"># break语句会结束循环</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(n)</span><br><span class=\"line\">    n = n + <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;END&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#################### continue关键字 #################### </span></span><br><span class=\"line\">n = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> n &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">    n = n + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> n % <span class=\"number\">2</span> == <span class=\"number\">0</span>: <span class=\"comment\"># 如果n是偶数，执行continue语句</span></span><br><span class=\"line\">        <span class=\"keyword\">continue</span> <span class=\"comment\"># continue语句会直接继续下一轮循环，后续的print()语句不会执行</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(n)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-10-编码：-Unicode-，ASCII-，UTF-8\"><a href=\"#1-10-编码：-Unicode-，ASCII-，UTF-8\" class=\"headerlink\" title=\"1.10 编码： Unicode  ，ASCII ，UTF-8\"></a>1.10 编码： Unicode  ，ASCII ，UTF-8</h3><ul>\n<li>ASCII编码和Unicode编码的区别：<blockquote>\n<ol>\n<li><strong>ASCII编码</strong> 是 <strong>1个字节</strong>，而 <strong>Unicode编码</strong> 通常是<strong>2个字节</strong>。</li>\n<li>文本上<strong>全部</strong>是<strong>英文</strong>时，<strong>Unicode 编码</strong> 比 <strong>ASCII 编码</strong> 需要多一倍的存储空间，在存储和传输上就十分不划算。</li>\n<li>把<strong>Unicode编码</strong>转化为“可变长编码”的 <strong>UTF-8编码</strong>。<strong>UTF-8编码</strong>把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的<strong>英文字母</strong>被编码成<strong>1个字节</strong>，<strong>汉字</strong>通常是<strong>3个字节</strong>，只有很<strong>生僻的字符</strong>才会被编码成<strong>4-6个字节</strong>。</li>\n<li>传输的文本包含大量英文字符时，用 <strong>UTF-8编码</strong> 更节省空间 。 </li>\n</ol>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"1-11-函数\"><a href=\"#1-11-函数\" class=\"headerlink\" title=\"1.11  函数\"></a>1.11  函数</h3><h4 id=\"1-11-1-内置函数-速查表\"><a href=\"#1-11-1-内置函数-速查表\" class=\"headerlink\" title=\"1.11.1 内置函数 速查表\"></a>1.11.1 内置函数 速查表</h4><p>官网： <code>https://docs.python.org/3/library/functions.html </code><br><img src=\"https://img-blog.csdnimg.cn/20201207202023696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"内置函数表\"></p>\n<h4 id=\"1-11-2-自定义函数\"><a href=\"#1-11-2-自定义函数\" class=\"headerlink\" title=\"1.11.2 自定义函数\"></a>1.11.2 自定义函数</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\"> 调用函数的时候，如果传入的参数数量不对，会报`TypeError`的错误 </span></span><br><span class=\"line\"><span class=\"string\"> 数据类型检查可以用内置函数isinstance()实现</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################### 自定义 函数  ###################### </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果没有return语句，函数执行完毕后也会返回结果，只是结果为None。return None可以简写为return</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">my_abs</span>(<span class=\"params\">x</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -x</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#定义一个什么事也不做的空函数，使用pass 来充当占位符</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">nop</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#  数据类型检查可以用内置函数isinstance()实现</span></span><br><span class=\"line\"><span class=\"comment\"># isinstance(参数1，参数2) 如果参数1（object）的类型 与 参数二的类型（classinfo）相同则返回 True，否则返回 False</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">my_abs</span>(<span class=\"params\">x</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">isinstance</span>(x, (<span class=\"built_in\">int</span>, <span class=\"built_in\">float</span>)):</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> TypeError(<span class=\"string\">&#x27;bad operand type&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -x</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 返回多个值的函数（实际上返回的是1个 tuple）</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">move</span>(<span class=\"params\">x, y, step, angle=<span class=\"number\">0</span></span>):</span>\t<span class=\"comment\">#实际上 move( )返回的是1个 tuple</span></span><br><span class=\"line\">    nx = x + step * math.cos(angle)</span><br><span class=\"line\">    ny = y - step * math.sin(angle)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nx, ny</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>x, y = move(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">60</span>, math.pi / <span class=\"number\">6</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">print</span>(x, y)</span><br><span class=\"line\"><span class=\"number\">151.96152422706632</span> <span class=\"number\">70.0</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"1-11-3-函数参数\"><a href=\"#1-11-3-函数参数\" class=\"headerlink\" title=\"1.11.3 函数参数\"></a>1.11.3 函数参数</h4><ol>\n<li>默认参数：<blockquote>\n<p>默认参数必须指向 不可变的对象【如： str , tuple等】<br>如果默认参数为一个 list，则每次调用会记住上次调用的操作，造成结果不对</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">############### 默认参数 ###############</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例如 以下的 n=2 就是默认参数</span></span><br><span class=\"line\">\t<span class=\"comment\"># 当我们调用power(5)时，相当于调用power(5, 2)</span></span><br><span class=\"line\">\t<span class=\"comment\"># 而对于n &gt; 2的其他情况，就必须明确地传入n，比如power(5, 3)</span></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">power</span>(<span class=\"params\">x, n=<span class=\"number\">2</span></span>):</span></span><br><span class=\"line\">    s = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> n &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        n = n - <span class=\"number\">1</span></span><br><span class=\"line\">        s = s * x</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>可变参数（即：参数前加*）：<blockquote>\n<p>允许传入<strong>0个或任意个</strong>参数，这些可变参数在函数调用时自动组装为一个tuple</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">############### 可变参数 ###############</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在函数内部，参数numbers接收到的是一个tuple，</span></span><br><span class=\"line\"><span class=\"comment\"># 因此，函数代码完全不变。但是，调用该函数时，可以传入任意个参数，</span></span><br><span class=\"line\"><span class=\"comment\"># 包括0个参数，即：在普通的参数前加上*</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc</span>(<span class=\"params\">*numbers</span>):</span></span><br><span class=\"line\">    <span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">        <span class=\"built_in\">sum</span> = <span class=\"built_in\">sum</span> + n * n</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>calc(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>calc()</span><br><span class=\"line\"><span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>关键字参数（即：参数前加2个星号<code>*</code>）：<blockquote>\n<p>允许你传入<strong>0个或任意个</strong>含参数名的参数，这些关键字参数在函数内部自动组装为一个dict</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">############### 关键字参数 ###############</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关键字参数 允许你传入0个或任意个含参数名的参数，</span></span><br><span class=\"line\"><span class=\"comment\"># 这些关键字参数在函数内部自动组装为一个dict</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">person</span>(<span class=\"params\">name, age, **kw</span>):</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;name:&#x27;</span>, name, <span class=\"string\">&#x27;age:&#x27;</span>, age, <span class=\"string\">&#x27;other:&#x27;</span>, kw)</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 只传入必选参数时</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>person(<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">name: Michael age: <span class=\"number\">30</span> other: &#123;&#125;   </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 传入任意个数的关键字参数时           </span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>person(<span class=\"string\">&#x27;Adam&#x27;</span>, <span class=\"number\">45</span>, gender=<span class=\"string\">&#x27;M&#x27;</span>, job=<span class=\"string\">&#x27;Engineer&#x27;</span>)</span><br><span class=\"line\">name: Adam age: <span class=\"number\">45</span> other: &#123;<span class=\"string\">&#x27;gender&#x27;</span>: <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;job&#x27;</span>: <span class=\"string\">&#x27;Engineer&#x27;</span>&#125;    </span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>命名关键字参数：<blockquote>\n<p><strong>限制</strong>关键字<strong>参数的名字</strong>，命名关键字参数需要一个<code>特殊的分隔符*</code>，后面的参数被视为命名关键字参数，如果函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了。<strong>命名关键字参数必须传入参数名</strong>。</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#########  命名关键字参数  ################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 命名关键字参数：限制关键字参数的名字</span></span><br><span class=\"line\"><span class=\"comment\">#命名关键字参数需要一个特殊分隔符*，*后面的参数被视为命名关键字参数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">person</span>(<span class=\"params\">name, age, *, city, job</span>):</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name, age, city, job)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 如果函数定义中已经有了一个可变参数，</span></span><br><span class=\"line\"><span class=\"comment\"># 后面跟着的命名关键字参数就不再需要一个特殊分隔符*了 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">person</span>(<span class=\"params\">name, age, *args, city, job</span>):</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name, age, args, city, job)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#命名关键字参数 （调用时）必须连同 参数名 一起传入【有默认值时除外】   </span></span><br><span class=\"line\">person(<span class=\"string\">&#x27;Jack&#x27;</span>, <span class=\"number\">24</span>, city=<span class=\"string\">&#x27;Beijing&#x27;</span>, job=<span class=\"string\">&#x27;Engineer&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Python-自动化办公\"><a href=\"#2-Python-自动化办公\" class=\"headerlink\" title=\"2. Python 自动化办公\"></a>2. Python 自动化办公</h2><h3 id=\"2-1-Excel-速查表\"><a href=\"#2-1-Excel-速查表\" class=\"headerlink\" title=\"2.1 Excel 速查表\"></a>2.1 Excel 速查表</h3><p><img src=\"https://img-blog.csdnimg.cn/20201207203552904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"excel速查表\"></p>\n<h2 id=\"3-Python-爬虫\"><a href=\"#3-Python-爬虫\" class=\"headerlink\" title=\"3. Python 爬虫\"></a>3. Python 爬虫</h2><h3 id=\"3-1-常用的爬虫库\"><a href=\"#3-1-常用的爬虫库\" class=\"headerlink\" title=\"3.1 常用的爬虫库\"></a>3.1 常用的爬虫库</h3><p><img src=\"https://img-blog.csdnimg.cn/20201207203715257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-2-requests-库\"><a href=\"#3-2-requests-库\" class=\"headerlink\" title=\"3.2 requests 库\"></a>3.2 requests 库</h3><p><img src=\"https://img-blog.csdnimg.cn/20201207203809826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"3-2-1-案例1-京东商品详情页\"><a href=\"#3-2-1-案例1-京东商品详情页\" class=\"headerlink\" title=\"3.2.1 案例1     京东商品详情页\"></a>3.2.1 案例1     京东商品详情页</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例1：爬取京东商品详情页</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">url=<span class=\"string\">&#x27;http://item.jd.com/2967929.html&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    r=requests.get(url)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#检查Response状态码,若不是200则产生HttpError异常</span></span><br><span class=\"line\">    r.raise_for_status()  </span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\"># 将编码设 utf-8 </span></span><br><span class=\"line\">    r.encoding=r.apparent_encoding</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 截取页面前1000行</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(r.text[:<span class=\"number\">1000</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-2-2-案例2-亚马逊商品详情页\"><a href=\"#3-2-2-案例2-亚马逊商品详情页\" class=\"headerlink\" title=\"3.2.2 案例2 亚马逊商品详情页\"></a>3.2.2 案例2 亚马逊商品详情页</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例2：爬取亚马逊商品详情页————协议头</span></span><br><span class=\"line\">url=<span class=\"string\">&#x27;https://www.amazon.cn/dp/B076YGLN6G?smid=A3CQWPW49OI3BQ&amp;ref_=Oct_CBBBCard_dsk_asin2&amp;pf_rd_r=X83064H6KVVDTZ4WWDFB&amp;pf_rd_p=5a0738df-7719-4914-81ee-278221dce082&amp;pf_rd_m=A1AJ19PSB66TGU&amp;pf_rd_s=desktop-3&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    res = requests.get(url)</span><br><span class=\"line\">    res.raise_for_status()        <span class=\"comment\">#503</span></span><br><span class=\"line\">    res.encoding=r.apparent_encoding   <span class=\"comment\">#&#x27;ISO-8859-1&#x27;</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(res.text[:<span class=\"number\">1000</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取错误&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">res.request.headers</span></span><br><span class=\"line\"><span class=\"string\">输出：</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;User-Agent&#x27;: &#x27;python-requests/2.22.0&#x27;, &#x27;Accept-Encoding&#x27;: &#x27;gzip, deflate&#x27;, &#x27;Accept&#x27;: &#x27;*/*&#x27;, &#x27;Connection&#x27;: &#x27;keep-alive&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    kv=&#123;<span class=\"string\">&#x27;user-agent&#x27;</span>:<span class=\"string\">&#x27;Mozilla/5.0&#x27;</span>&#125;  <span class=\"comment\">#浏览器身份标识的字段</span></span><br><span class=\"line\">    r=requests.get(url,headers=kv)</span><br><span class=\"line\">    r.raise_for_status()  <span class=\"comment\">#r.status_code   200</span></span><br><span class=\"line\">    r.encoding=r.apparent_encoding</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(r.text[<span class=\"number\">1000</span>:<span class=\"number\">3000</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-2-3-案例3-百度-360搜索关键字\"><a href=\"#3-2-3-案例3-百度-360搜索关键字\" class=\"headerlink\" title=\"3.2.3 案例3 百度/360搜索关键字\"></a>3.2.3 案例3 百度/360搜索关键字</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例3：爬取搜索页面</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    kw=&#123;<span class=\"string\">&#x27;wd&#x27;</span>:<span class=\"string\">&#x27;python&#x27;</span>&#125;</span><br><span class=\"line\">    r=requests.get(<span class=\"string\">&#x27;https://www.baidu.com/s&#x27;</span>,params=kw)</span><br><span class=\"line\">    r.raise_for_status()</span><br><span class=\"line\">    r.encoding=r.apparent_encoding</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(r.text))</span><br><span class=\"line\">    <span class=\"comment\">#r.request.url  返回的是百度安全验证的链接？</span></span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取失败&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    kw=&#123;<span class=\"string\">&#x27;q&#x27;</span>:<span class=\"string\">&#x27;python&#x27;</span>&#125;  <span class=\"comment\">#360搜索的关键字的键为q</span></span><br><span class=\"line\">    r=requests.get(<span class=\"string\">&#x27;https://www.so.com/s&#x27;</span>,params=kw)</span><br><span class=\"line\">    r.raise_for_status()</span><br><span class=\"line\">    r.encoding=r.apparent_encoding</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(r.text))  <span class=\"comment\">#257468</span></span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-2-4-案例4-网络图片爬取及存储\"><a href=\"#3-2-4-案例4-网络图片爬取及存储\" class=\"headerlink\" title=\"3.2.4 案例4     网络图片爬取及存储\"></a>3.2.4 案例4     网络图片爬取及存储</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例4：爬取图片</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;r.content  #表示返回内容的二进制格式&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">root=<span class=\"string\">&#x27;./Pic/&#x27;</span></span><br><span class=\"line\">path=root+url.split(<span class=\"string\">&#x27;/&#x27;</span>)[-<span class=\"number\">1</span>].split(<span class=\"string\">&#x27;@&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">url=<span class=\"string\">&#x27;http://img0.dili360.com/ga/M00/02/AB/wKgBzFQ26i2AWujSAA_-xvEYLbU441.jpg@!rw9&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(root):</span><br><span class=\"line\">        os.mkdir(root)  <span class=\"comment\">#创建根目录</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(path):</span><br><span class=\"line\"></span><br><span class=\"line\">        r=requests.get(url)</span><br><span class=\"line\">        <span class=\"comment\"># 如何将二进制转化为图片保存</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(path, <span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(r.content)</span><br><span class=\"line\">            f.close()</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;图片保存成功&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;文件已存在&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-2-5-案例5-IP地址归属地查询\"><a href=\"#3-2-5-案例5-IP地址归属地查询\" class=\"headerlink\" title=\"3.2.5 案例5     IP地址归属地查询\"></a>3.2.5 案例5     IP地址归属地查询</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例5：IP地址归属地查询</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">url=<span class=\"string\">&#x27;http://www.ip138.com/iplookup.asp?ip=&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    r=requests.get(url+<span class=\"string\">&#x27;183.216.163.144&#x27;</span>,headers=kv)</span><br><span class=\"line\">    r.raise_for_status()</span><br><span class=\"line\">    r.encoding=r.apparent_encoding</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(r.text[:-<span class=\"number\">500</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;爬取失败&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-urllib库\"><a href=\"#3-3-urllib库\" class=\"headerlink\" title=\"3.3 urllib库\"></a>3.3 urllib库</h3><p>特点：不用安装，python自带</p>\n<h4 id=\"3-3-1-urllib基础：\"><a href=\"#3-3-1-urllib基础：\" class=\"headerlink\" title=\"3.3.1 urllib基础：\"></a>3.3.1 urllib基础：</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将网页保存到本地，参数为抓取的网址和保存网页的文件路径</span></span><br><span class=\"line\">\turllib.request.urlretrieve(url,file)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将urlretrieve产生的缓存清除</span></span><br><span class=\"line\">\turllib.request.urlcleanup()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 爬取网页   </span></span><br><span class=\"line\">\tfile=urllib.request.urlopen(url)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取header的信息  </span></span><br><span class=\"line\">\tfile.info()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取爬取网页的状态码（200,403,404等）    </span></span><br><span class=\"line\">\tfile.getcode() </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取目前爬取的网址  </span></span><br><span class=\"line\">\tfile.geturl()     </span><br></pre></td></tr></table></figure>\n<h4 id=\"3-3-2-urllib-库超时设置\"><a href=\"#3-3-2-urllib-库超时设置\" class=\"headerlink\" title=\"3.3.2 urllib 库超时设置\"></a>3.3.2 urllib 库超时设置</h4><p>根据 <strong>网速</strong> 和 <strong>对方服务器响应</strong> 的快慢设置相应的超时设置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        file=urllib.request.urlopen(<span class=\"string\">&quot;http://www.baidu.com&quot;</span>,timeout=<span class=\"number\">2</span>)</span><br><span class=\"line\">        data=file.read()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(i,<span class=\"built_in\">len</span>(data))</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;出现异常&quot;</span>+<span class=\"built_in\">str</span>(e))</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-3-3-自动模拟http请求：\"><a href=\"#3-3-3-自动模拟http请求：\" class=\"headerlink\" title=\"3.3.3 自动模拟http请求：\"></a>3.3.3 自动模拟http请求：</h4><h5 id=\"3-3-3-1-get\"><a href=\"#3-3-3-1-get\" class=\"headerlink\" title=\"3.3.3.1 get\"></a>3.3.3.1 get</h5><p>常用于：搜索关键词，获得搜索界面</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#get请求</span></span><br><span class=\"line\"></span><br><span class=\"line\">keywd=<span class=\"string\">&quot;Python&quot;</span></span><br><span class=\"line\">url=<span class=\"string\">&quot;http://www.baidu.com/s?wd=&quot;</span>+keywd  <span class=\"comment\">#网址构造</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(url)</span><br><span class=\"line\">req=urllib.request.Request(url) <span class=\"comment\">#以请求的方式获取,网址</span></span><br><span class=\"line\">data=urllib.request.urlopen(req).read()</span><br><span class=\"line\"></span><br><span class=\"line\">fh=<span class=\"built_in\">open</span>(<span class=\"string\">&quot;C:/Users/admin/Desktop/a.html&quot;</span>,<span class=\"string\">&quot;wb&quot;</span>) <span class=\"comment\">#以二进制写入html文件</span></span><br><span class=\"line\">fh.write(data)</span><br><span class=\"line\">fh.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#若搜索关键词为中文</span></span><br><span class=\"line\">keywd1=<span class=\"string\">&quot;亚马逊&quot;</span></span><br><span class=\"line\">keywd1=urllib.request.quote(keywd1)  <span class=\"comment\">#利用quote对中文进行编码</span></span><br><span class=\"line\">url1=<span class=\"string\">&quot;http://www.baidu.com/s?wd=&quot;</span>+keywd1</span><br><span class=\"line\">req=urllib.request.Request(url1)</span><br><span class=\"line\">data=urllib.request.urlopen(req).read()</span><br><span class=\"line\"></span><br><span class=\"line\">fh=<span class=\"built_in\">open</span>(<span class=\"string\">&quot;C:/Users/admin/Desktop/a.html&quot;</span>,<span class=\"string\">&quot;wb&quot;</span>) <span class=\"comment\">#二进制</span></span><br><span class=\"line\">fh.write(data)</span><br><span class=\"line\">fh.close()</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-3-3-2-post\"><a href=\"#3-3-3-2-post\" class=\"headerlink\" title=\"3.3.3.2 post\"></a>3.3.3.2 post</h5><p>常用于：登录某些网站</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#post请求</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse</span><br><span class=\"line\"></span><br><span class=\"line\">url=<span class=\"string\">&quot;https://www.iqianyue.com/mypost/&quot;</span>  <span class=\"comment\">#地址</span></span><br><span class=\"line\">login=urllib.parse.urlencode(</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&quot;1121640425@qq.com&quot;</span>,<span class=\"string\">&quot;pass&quot;</span>:<span class=\"string\">&quot;123&quot;</span>&#125;</span><br><span class=\"line\">).encode(<span class=\"string\">&quot;utf-8&quot;</span>)  <span class=\"comment\">#登录数据</span></span><br><span class=\"line\">req=urllib.request.Request(url,login)</span><br><span class=\"line\"></span><br><span class=\"line\">data=urllib.request.urlopen(req).read()</span><br><span class=\"line\"></span><br><span class=\"line\">fh=<span class=\"built_in\">open</span>(<span class=\"string\">&quot;C:/Users/admin/Desktop/a.html&quot;</span>,<span class=\"string\">&quot;wb&quot;</span>)</span><br><span class=\"line\">fh.write(data)</span><br><span class=\"line\">fh.close()</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-4-bs4\"><a href=\"#3-4-bs4\" class=\"headerlink\" title=\"3.4 bs4\"></a>3.4 bs4</h3><p>来自：<code>https://blog.csdn.net/qq_35490191/article/details/80598620</code><br><a href=\"https://blog.csdn.net/qq_35490191/article/details/80598620\">来源博客</a></p>\n<p><strong>功能：</strong> 解析、遍历、维护标签树。</p>\n<p>例如：<code>&lt;p class=&#39;title&#39;&gt;...&lt;/p&gt;</code></p>\n<ul>\n<li>标签名 p</li>\n<li>属性名称 class</li>\n<li>属性值 title<h4 id=\"3-4-1-bs4-的解析器对比\"><a href=\"#3-4-1-bs4-的解析器对比\" class=\"headerlink\" title=\"3.4.1  bs4 的解析器对比\"></a>3.4.1  bs4 的解析器对比</h4><img src=\"https://img-blog.csdnimg.cn/20201207205934178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<p><strong>具体用法：</strong> <code>soup=BeautifulSoup(markup,from_encoding=&quot;编码方式&quot;) </code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html = <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class=\"line\"><span class=\"string\">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;span&gt; Elsie &lt;/span&gt;&lt;/a&gt;,</span></span><br><span class=\"line\"><span class=\"string\">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class=\"line\"><span class=\"string\">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class=\"line\"><span class=\"string\">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#######################################################################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\">soup = BeautifulSoup(html, <span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(soup.prettify()) <span class=\"comment\">#输出清晰的树形结构</span></span><br></pre></td></tr></table></figure>\n<p><strong>Beautifu Soup</strong>将复杂的<strong>HTML文档</strong>转化为<strong>树形结构</strong>，每个<strong>节点</strong>都是<strong>Python对象</strong>：</p>\n<ul>\n<li>Tag：标签；</li>\n<li>NavigableString：被包裹在tag内的字符串；</li>\n<li>BeautifulSoup：表示一个文档的全部内容，大部分时候可以看做一个tag对象，支持遍历文档树和搜索文档树的方法；</li>\n<li>Comment：特殊NavigableString，会以特殊格式输出，比如注释类型。<h4 id=\"3-4-2-bs4-基本用法\"><a href=\"#3-4-2-bs4-基本用法\" class=\"headerlink\" title=\"3.4.2  bs4 基本用法\"></a>3.4.2  bs4 基本用法</h4><blockquote>\n<p> <strong>搜索文档树</strong>：<em><strong>soup.tag.property</strong></em> 按顺序获得第一个标签 </p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20201207210350414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p><strong>获取所有 ? 标签</strong>： soup.find_all( tag )    // 返回1个list</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20201207210447518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>将tag的<strong>子节点</strong>以<strong>列表</strong>方式输出  ： <em><strong>tag.contents</strong></em> </p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20201207210519210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<ul>\n<li>对tag的<strong>子节点</strong> 进行 <strong>循环</strong> ：  <strong>tag.children</strong> </li>\n<li>对tag的<strong>子孙节点</strong> 进行 <strong>循环</strong> ： <em><strong>tag.descendants</strong></em> </li>\n</ul>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20201207210743907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>获取tag（只有一个子节点）下所有的文本内容 ： <em><strong>tag.string</strong></em></p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20201207210819127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p> 从文档中获取<strong>所有的文字内容</strong> ：<em><strong>soup.get_text( )</strong></em></p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20201207210859608.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"3-4-3-bs4-用法-思维导图\"><a href=\"#3-4-3-bs4-用法-思维导图\" class=\"headerlink\" title=\"3.4.3 bs4 用法  思维导图\"></a>3.4.3 bs4 用法  思维导图</h4><p><img src=\"https://img-blog.csdnimg.cn/20201207211020405.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"4-正则表达式【用于提取信息】\"><a href=\"#4-正则表达式【用于提取信息】\" class=\"headerlink\" title=\"4.正则表达式【用于提取信息】\"></a>4.正则表达式【用于提取信息】</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208100448613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-1-正则表达式—思维导图\"><a href=\"#4-1-正则表达式—思维导图\" class=\"headerlink\" title=\"4.1 正则表达式—思维导图\"></a>4.1 正则表达式—思维导图</h3><p><img src=\"https://img-blog.csdnimg.cn/2020120810080011.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-2-常见的原子类型-正则表达式最基本的单位\"><a href=\"#4-2-常见的原子类型-正则表达式最基本的单位\" class=\"headerlink\" title=\"4.2 常见的原子类型-正则表达式最基本的单位\"></a>4.2 常见的<strong>原子类型</strong>-正则表达式最基本的单位</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208103436181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-3-元字符-正则表达式中具有特殊含义的字符\"><a href=\"#4-3-元字符-正则表达式中具有特殊含义的字符\" class=\"headerlink\" title=\"4.3  元字符-正则表达式中具有特殊含义的字符\"></a>4.3  元字符-正则表达式中具有特殊含义的字符</h3><p> <img src=\"https://img-blog.csdnimg.cn/20201208103636986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-4-模式修正符-在不改变正则表达式的前提下，调整匹配结果\"><a href=\"#4-4-模式修正符-在不改变正则表达式的前提下，调整匹配结果\" class=\"headerlink\" title=\"4.4 模式修正符-在不改变正则表达式的前提下，调整匹配结果\"></a>4.4 模式修正符-在不改变正则表达式的前提下，调整匹配结果</h3><p><img src=\"https://img-blog.csdnimg.cn/2020120810371828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-5-贪婪模式和懒惰模式\"><a href=\"#4-5-贪婪模式和懒惰模式\" class=\"headerlink\" title=\"4.5 贪婪模式和懒惰模式\"></a>4.5 贪婪模式和懒惰模式</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208103827958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-6-正则表达式函数\"><a href=\"#4-6-正则表达式函数\" class=\"headerlink\" title=\"4.6 正则表达式函数\"></a>4.6 正则表达式函数</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208103901541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-7-练习题：\"><a href=\"#4-7-练习题：\" class=\"headerlink\" title=\"4.7 练习题：\"></a>4.7 练习题：</h3><p><code>https://zhuanlan.zhihu.com/p/91689180?utm_source=qq&amp;utm_medium=social&amp;utm_oi=772119850515431424</code><br><a href=\"https://zhuanlan.zhihu.com/p/91689180?utm_source=qq&utm_medium=social&utm_oi=772119850515431424\">正则表达式-练习题</a></p>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"Python3—笔记\"><a href=\"#Python3—笔记\" class=\"headerlink\" title=\"Python3—笔记\"></a>Python3—笔记</h1><p>部分内容来自知乎和中国大学mooc</p>\n<p>[toc]</p>\n<h2 id=\"1-Python概述\"><a href=\"#1-Python概述\" class=\"headerlink\" title=\"1. Python概述\"></a>1. Python概述</h2><h3 id=\"1-1-代码编写方式：\"><a href=\"#1-1-代码编写方式：\" class=\"headerlink\" title=\"1.1 代码编写方式：\"></a>1.1 代码编写方式：</h3><ul>\n<li>交互式</li>\n<li>全部编辑好后运行</li>\n</ul>\n<h3 id=\"1-2-作用域\"><a href=\"#1-2-作用域\" class=\"headerlink\" title=\"1.2 作用域\"></a>1.2 作用域</h3><ul>\n<li>默认使用 ‘缩进’ 来区分代码 属于哪部分</li>\n</ul>\n<h3 id=\"1-3-注释\"><a href=\"#1-3-注释\" class=\"headerlink\" title=\"1.3 注释\"></a>1.3 注释</h3><ul>\n<li>单行 <kbd># 注释内容</kbd></li>\n<li>多行 <kbd>&#39;'’  注释内容&#39;'’</kbd></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这是单行注释</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">\t这是多行注释，实际上是一个字符串</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-4-输入——input\"><a href=\"#1-4-输入——input\" class=\"headerlink\" title=\"1.4 输入——input()\"></a>1.4 输入——input()</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 括号内为提示信息，输入的信息存储在变量 name 中</span></span><br><span class=\"line\"><span class=\"comment\">#注意：input（）输入的实际上是字符串，若要输入数字进行运算，可以使用强制转换  </span></span><br><span class=\"line\">\tname = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入你的姓名&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 强制转换:</span></span><br><span class=\"line\">\t<span class=\"comment\">#第1种方法（适用于所有类型）：    </span></span><br><span class=\"line\">           age  = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;输入年龄&#x27;</span>)</span><br><span class=\"line\">           newAge = <span class=\"built_in\">int</span>(age)+<span class=\"number\">1</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"comment\">#第2种方法（适用于数值类型,eval()实际上是将字符串强行作为数字使用，相当于去掉引号）：    \t\t</span></span><br><span class=\"line\">          age  = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;输入年龄&#x27;</span>)</span><br><span class=\"line\">          newAge = <span class=\"built_in\">eval</span>(age)+<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-5-输出——print\"><a href=\"#1-5-输出——print\" class=\"headerlink\" title=\"1.5 输出——print()\"></a>1.5 输出——print()</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单个字符串</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello world&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#多个字符串，print()会依次打印每个字符串，遇到逗号“,”会输出一个空格</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;The quick brown fox&#x27;</span>, <span class=\"string\">&#x27;jumps over&#x27;</span>, <span class=\"string\">&#x27;the lazy dog&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#输出 计算结果</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">100</span> + <span class=\"number\">200</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-6-数据类型\"><a href=\"#1-6-数据类型\" class=\"headerlink\" title=\"1.6 数据类型\"></a>1.6 数据类型</h3><blockquote>\n<p> <strong>注意：</strong>   <em>整数</em> 和 <em>浮点数</em> 在计算机内部存储的方式是不同的，<em>整数</em> 运算永远是精确的（除法也是精确的），而<em>浮点数</em> 运算则可能会有四舍五入的误差。</p>\n</blockquote>\n<h4 id=\"1-6-1-int\"><a href=\"#1-6-1-int\" class=\"headerlink\" title=\"1.6.1 int\"></a>1.6.1 int</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#十进制</span></span><br><span class=\"line\">\t<span class=\"number\">123</span>，-<span class=\"number\">123</span>，<span class=\"number\">200</span></span><br><span class=\"line\"><span class=\"comment\">#十六进制  用0x前缀和0-9，a-f表示</span></span><br><span class=\"line\">\t<span class=\"number\">0xff00</span>，<span class=\"number\">0xa5b4c3d2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#对于很大的数，例如10000000000，很难数清楚0的个数。Python允许在数字中间以_分隔，因此，写成10_000_000_000和10000000000是完全一样的。十六进制数也可以写成0xa1b2_c3d4</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-6-2-float\"><a href=\"#1-6-2-float\" class=\"headerlink\" title=\"1.6.2  float\"></a>1.6.2  float</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#对于很大或很小的浮点数，就必须用科学计数法表示，把10用e替代，</span></span><br><span class=\"line\">\t<span class=\"number\">1.23</span>x10^<span class=\"number\">9</span>    就是   <span class=\"number\">1.23e9</span>，</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"number\">12.3e8</span>  ，<span class=\"number\">0.000012</span>   可以写成   <span class=\"number\">1.2e-5</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"1-6-3-str\"><a href=\"#1-6-3-str\" class=\"headerlink\" title=\"1.6.3  str\"></a>1.6.3  str</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用单引号或者双引号包裹</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;你好&#x27;</span></span><br><span class=\"line\">    \t<span class=\"string\">&quot;你好&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 如果字符串内需要有单引号:外面用双引号</span></span><br><span class=\"line\">\t\t<span class=\"string\">&quot; I&#x27;m a boy &quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 如果字符串内需要有双引号:外面用单引号  </span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27; I am a &quot;boy&quot; &#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#  如果字符串内需要有 单引号和双引号 ：使用转移字符\\</span></span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;  I\\&#x27;m \\&quot;OK\\&quot;!   &#x27;</span>   表示 I<span class=\"string\">&#x27;m &quot;OK&quot;!</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">#如果字符串很长，需要换行：使用三引号</span></span><br><span class=\"line\"><span class=\"string\">\t\tprint(&#x27;</span><span class=\"string\">&#x27;&#x27;</span>line1</span><br><span class=\"line\">\t\tline2</span><br><span class=\"line\">\t\tline3<span class=\"string\">&#x27;&#x27;&#x27;)</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"1-6-4-bool\"><a href=\"#1-6-4-bool\" class=\"headerlink\" title=\"1.6.4  bool\"></a>1.6.4  bool</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#布尔值只有True、False两种值,布尔值可以用and、or和not运算</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"literal\">True</span> <span class=\"keyword\">and</span> <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"literal\">True</span> <span class=\"keyword\">and</span> <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"literal\">False</span> <span class=\"keyword\">and</span> <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"number\">5</span> &gt; <span class=\"number\">3</span> <span class=\"keyword\">and</span> <span class=\"number\">3</span> &gt; <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"1-6-5-None-空值\"><a href=\"#1-6-5-None-空值\" class=\"headerlink\" title=\"1.6.5  None 空值\"></a>1.6.5  None 空值</h4><h4 id=\"1-6-6-list-有序列表\"><a href=\"#1-6-6-list-有序列表\" class=\"headerlink\" title=\"1.6.6  list (有序列表)\"></a>1.6.6  list (有序列表)</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">list有以下几个特点：</span></span><br><span class=\"line\"><span class=\"string\">\t\t\t查找和插入的时间随着元素的增加而增加；</span></span><br><span class=\"line\"><span class=\"string\">\t\t\t占用空间小，浪费内存很少。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># list的格式（list中的元素的 数据类型 可以不同，甚至可以是1个list)</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates = [<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用len() 获取list长度</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">len</span>(classmates)</span><br><span class=\"line\"><span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用index 访问list中的元素（index的范围为：0 ~ len-1  ），当索引超出了范围时，Python会报一个IndexError错误</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"string\">&#x27;Michael&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># list 的最后一个元素的两种表示方法</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates[<span class=\"built_in\">len</span>(classmates) - <span class=\"number\">1</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates[-<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##############   插入相关的方法 ########################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 向list的末尾追加1个元素 append()</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates.append(<span class=\"string\">&#x27;Adam&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>, <span class=\"string\">&#x27;Adam&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在指定位置前 插入1个元素</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates.insert(<span class=\"number\">1</span>, <span class=\"string\">&#x27;Jack&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Jack&#x27;</span>, <span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>, <span class=\"string\">&#x27;Adam&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##############   删除相关的方法 ########################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除 最后1个元素</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates.pop()</span><br><span class=\"line\"><span class=\"string\">&#x27;Adam&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除 指定元素</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates.pop(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"string\">&#x27;Jack&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##############  替换相关的方法 ########################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates[<span class=\"number\">1</span>] = <span class=\"string\">&#x27;Sarah&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>classmates</span><br><span class=\"line\">[<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Sarah&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-6-7-tuple-元组\"><a href=\"#1-6-7-tuple-元组\" class=\"headerlink\" title=\"1.6.7 tuple (元组)\"></a>1.6.7 tuple (元组)</h4><blockquote>\n<p> 一种内部元素不可更改的list ， 相较于 list 更安全</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">############# tuple 的定义 ###############</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t = (<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t</span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义一个只有1个元素的tuple，</span></span><br><span class=\"line\"><span class=\"comment\"># 后面加逗号是为了避免被直接当成内部元素</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t = (<span class=\"number\">1</span>,)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>t</span><br><span class=\"line\">(<span class=\"number\">1</span>,)</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-6-8-dict-字典\"><a href=\"#1-6-8-dict-字典\" class=\"headerlink\" title=\"1.6.8  dict (字典)\"></a>1.6.8  dict (字典)</h4><blockquote>\n<p>字典： 内部为键值对，键 在该字典中必须唯一 ,字典是无序的</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">dict有以下几个特点：</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">\t\t查找和插入的速度极快，不会随着key的增加而变慢；</span></span><br><span class=\"line\"><span class=\"string\">\t\t需要占用大量的内存，内存浪费多。</span></span><br><span class=\"line\"><span class=\"string\">\t\tkey 不可变，因为用key查找value时，必须依靠key进行 hash运算</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">############## dict的定义 ###############</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d = &#123;<span class=\"string\">&#x27;Michael&#x27;</span>: <span class=\"number\">95</span>, <span class=\"string\">&#x27;Bob&#x27;</span>: <span class=\"number\">75</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>: <span class=\"number\">85</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d[<span class=\"string\">&#x27;Michael&#x27;</span>]</span><br><span class=\"line\"><span class=\"number\">95</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 放入元素</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d[<span class=\"string\">&#x27;Adam&#x27;</span>] = <span class=\"number\">67</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d[<span class=\"string\">&#x27;Adam&#x27;</span>]</span><br><span class=\"line\"><span class=\"number\">67</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取元素方法 get(键，当键不存在时的返回值【默认为None】)</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d.get(<span class=\"string\">&#x27;Thomas&#x27;</span>)</span><br><span class=\"line\"><span class=\"literal\">None</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d.get(<span class=\"string\">&#x27;Thomas&#x27;</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\">-<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除某个键时，该键的值也会删除</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d.pop(<span class=\"string\">&#x27;Bob&#x27;</span>)</span><br><span class=\"line\"><span class=\"number\">75</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>d</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;Michael&#x27;</span>: <span class=\"number\">95</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>: <span class=\"number\">85</span>&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-6-9-set-集合\"><a href=\"#1-6-9-set-集合\" class=\"headerlink\" title=\"1.6.9  set  (集合)\"></a>1.6.9  set  (集合)</h4><blockquote>\n<p>集合类型 ： 要创建一个set，需要提供一个list作为输入集合， set是无序的， 重复元素在set中自动被过滤 ，与dict一样内部元素不可变</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">############ 添加 set的元素 ########</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加set的元素 add( )</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s.add(<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s.add(<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除元素 remove( )</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s.remove(<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">########### 集合set 之间的运算  ########### </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s1 = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s2 = <span class=\"built_in\">set</span>([<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 并集</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s1 &amp; s2</span><br><span class=\"line\">&#123;<span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#交集</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>s1 | s2</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-7-运算符\"><a href=\"#1-7-运算符\" class=\"headerlink\" title=\"1.7 运算符\"></a>1.7 运算符</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># +</span></span><br><span class=\"line\">\t\ta = <span class=\"number\">1</span>+<span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - </span></span><br><span class=\"line\">\t\ta= <span class=\"number\">3</span>-<span class=\"number\">1</span>    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># *    </span></span><br><span class=\"line\">\t\ta= <span class=\"number\">3</span>*<span class=\"number\">2</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># / 除法结果一定是小数</span></span><br><span class=\"line\">\t\ta= <span class=\"number\">2</span>/<span class=\"number\">3</span>\t<span class=\"comment\"># 0.66666666</span></span><br><span class=\"line\">    \tb= <span class=\"number\">6</span>/<span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># // 整除</span></span><br><span class=\"line\">\t\ta= <span class=\"number\">6</span>//<span class=\"number\">5</span> <span class=\"comment\"># 1</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># % 取余数    </span></span><br><span class=\"line\">\t\ta = <span class=\"number\">7</span> % <span class=\"number\">5</span>  <span class=\"comment\"># 2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-8-条件判断\"><a href=\"#1-8-条件判断\" class=\"headerlink\" title=\"1.8 条件判断\"></a>1.8 条件判断</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">if语句执行有个特点，它是从上往下判断，如果在某个判断上是True，把该判断对应的语句执行后，就忽略掉剩下的elif和else</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 格式</span></span><br><span class=\"line\">age = <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> age &gt;= <span class=\"number\">18</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;adult&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> age &gt;= <span class=\"number\">6</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;teenager&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;kid&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 简写，其中 x 只要为 非零数值、非空字符串、非空list等，就判断为True，否则为False</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> x:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;True&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-9-循环\"><a href=\"#1-9-循环\" class=\"headerlink\" title=\"1.9 循环\"></a>1.9 循环</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#################  for 循环 ######################</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for...in 循环</span></span><br><span class=\"line\">names = [<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Tracy&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> names:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name)</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># range（a,b）函数 的范围是[a,b) </span></span><br><span class=\"line\"><span class=\"comment\"># 例如：结果=5050   即：0-100</span></span><br><span class=\"line\"><span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">101</span>):</span><br><span class=\"line\">    <span class=\"built_in\">sum</span> = <span class=\"built_in\">sum</span> + x</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">sum</span>) </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#################  while循环 ########################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在循环内部变量n不断自减，直到变为-1时，不再满足while条件，循环退出</span></span><br><span class=\"line\"><span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\">n = <span class=\"number\">99</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> n &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">    <span class=\"built_in\">sum</span> = <span class=\"built_in\">sum</span> + n</span><br><span class=\"line\">    n = n - <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">sum</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#################### break关键字 #################### </span></span><br><span class=\"line\">n = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> n &lt;= <span class=\"number\">100</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> n &gt; <span class=\"number\">10</span>: <span class=\"comment\"># 当n = 11时，条件满足，执行break语句</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span> <span class=\"comment\"># break语句会结束循环</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(n)</span><br><span class=\"line\">    n = n + <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;END&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#################### continue关键字 #################### </span></span><br><span class=\"line\">n = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> n &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">    n = n + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> n % <span class=\"number\">2</span> == <span class=\"number\">0</span>: <span class=\"comment\"># 如果n是偶数，执行continue语句</span></span><br><span class=\"line\">        <span class=\"keyword\">continue</span> <span class=\"comment\"># continue语句会直接继续下一轮循环，后续的print()语句不会执行</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(n)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-10-编码：-Unicode-，ASCII-，UTF-8\"><a href=\"#1-10-编码：-Unicode-，ASCII-，UTF-8\" class=\"headerlink\" title=\"1.10 编码： Unicode  ，ASCII ，UTF-8\"></a>1.10 编码： Unicode  ，ASCII ，UTF-8</h3><ul>\n<li>ASCII编码和Unicode编码的区别：<blockquote>\n<ol>\n<li><strong>ASCII编码</strong> 是 <strong>1个字节</strong>，而 <strong>Unicode编码</strong> 通常是<strong>2个字节</strong>。</li>\n<li>文本上<strong>全部</strong>是<strong>英文</strong>时，<strong>Unicode 编码</strong> 比 <strong>ASCII 编码</strong> 需要多一倍的存储空间，在存储和传输上就十分不划算。</li>\n<li>把<strong>Unicode编码</strong>转化为“可变长编码”的 <strong>UTF-8编码</strong>。<strong>UTF-8编码</strong>把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的<strong>英文字母</strong>被编码成<strong>1个字节</strong>，<strong>汉字</strong>通常是<strong>3个字节</strong>，只有很<strong>生僻的字符</strong>才会被编码成<strong>4-6个字节</strong>。</li>\n<li>传输的文本包含大量英文字符时，用 <strong>UTF-8编码</strong> 更节省空间 。 </li>\n</ol>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"1-11-函数\"><a href=\"#1-11-函数\" class=\"headerlink\" title=\"1.11  函数\"></a>1.11  函数</h3><h4 id=\"1-11-1-内置函数-速查表\"><a href=\"#1-11-1-内置函数-速查表\" class=\"headerlink\" title=\"1.11.1 内置函数 速查表\"></a>1.11.1 内置函数 速查表</h4><p>官网： <code>https://docs.python.org/3/library/functions.html </code><br><img src=\"https://img-blog.csdnimg.cn/20201207202023696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"内置函数表\"></p>\n<h4 id=\"1-11-2-自定义函数\"><a href=\"#1-11-2-自定义函数\" class=\"headerlink\" title=\"1.11.2 自定义函数\"></a>1.11.2 自定义函数</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\"> 调用函数的时候，如果传入的参数数量不对，会报`TypeError`的错误 </span></span><br><span class=\"line\"><span class=\"string\"> 数据类型检查可以用内置函数isinstance()实现</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################### 自定义 函数  ###################### </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果没有return语句，函数执行完毕后也会返回结果，只是结果为None。return None可以简写为return</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">my_abs</span>(<span class=\"params\">x</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -x</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#定义一个什么事也不做的空函数，使用pass 来充当占位符</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">nop</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#  数据类型检查可以用内置函数isinstance()实现</span></span><br><span class=\"line\"><span class=\"comment\"># isinstance(参数1，参数2) 如果参数1（object）的类型 与 参数二的类型（classinfo）相同则返回 True，否则返回 False</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">my_abs</span>(<span class=\"params\">x</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">isinstance</span>(x, (<span class=\"built_in\">int</span>, <span class=\"built_in\">float</span>)):</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> TypeError(<span class=\"string\">&#x27;bad operand type&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -x</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 返回多个值的函数（实际上返回的是1个 tuple）</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">move</span>(<span class=\"params\">x, y, step, angle=<span class=\"number\">0</span></span>):</span>\t<span class=\"comment\">#实际上 move( )返回的是1个 tuple</span></span><br><span class=\"line\">    nx = x + step * math.cos(angle)</span><br><span class=\"line\">    ny = y - step * math.sin(angle)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nx, ny</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>x, y = move(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">60</span>, math.pi / <span class=\"number\">6</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">print</span>(x, y)</span><br><span class=\"line\"><span class=\"number\">151.96152422706632</span> <span class=\"number\">70.0</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"1-11-3-函数参数\"><a href=\"#1-11-3-函数参数\" class=\"headerlink\" title=\"1.11.3 函数参数\"></a>1.11.3 函数参数</h4><ol>\n<li>默认参数：<blockquote>\n<p>默认参数必须指向 不可变的对象【如： str , tuple等】<br>如果默认参数为一个 list，则每次调用会记住上次调用的操作，造成结果不对</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">############### 默认参数 ###############</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例如 以下的 n=2 就是默认参数</span></span><br><span class=\"line\">\t<span class=\"comment\"># 当我们调用power(5)时，相当于调用power(5, 2)</span></span><br><span class=\"line\">\t<span class=\"comment\"># 而对于n &gt; 2的其他情况，就必须明确地传入n，比如power(5, 3)</span></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">power</span>(<span class=\"params\">x, n=<span class=\"number\">2</span></span>):</span></span><br><span class=\"line\">    s = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> n &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        n = n - <span class=\"number\">1</span></span><br><span class=\"line\">        s = s * x</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>可变参数（即：参数前加*）：<blockquote>\n<p>允许传入<strong>0个或任意个</strong>参数，这些可变参数在函数调用时自动组装为一个tuple</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">############### 可变参数 ###############</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在函数内部，参数numbers接收到的是一个tuple，</span></span><br><span class=\"line\"><span class=\"comment\"># 因此，函数代码完全不变。但是，调用该函数时，可以传入任意个参数，</span></span><br><span class=\"line\"><span class=\"comment\"># 包括0个参数，即：在普通的参数前加上*</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc</span>(<span class=\"params\">*numbers</span>):</span></span><br><span class=\"line\">    <span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">        <span class=\"built_in\">sum</span> = <span class=\"built_in\">sum</span> + n * n</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>calc(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>calc()</span><br><span class=\"line\"><span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>关键字参数（即：参数前加2个星号<code>*</code>）：<blockquote>\n<p>允许你传入<strong>0个或任意个</strong>含参数名的参数，这些关键字参数在函数内部自动组装为一个dict</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">############### 关键字参数 ###############</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关键字参数 允许你传入0个或任意个含参数名的参数，</span></span><br><span class=\"line\"><span class=\"comment\"># 这些关键字参数在函数内部自动组装为一个dict</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">person</span>(<span class=\"params\">name, age, **kw</span>):</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;name:&#x27;</span>, name, <span class=\"string\">&#x27;age:&#x27;</span>, age, <span class=\"string\">&#x27;other:&#x27;</span>, kw)</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 只传入必选参数时</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>person(<span class=\"string\">&#x27;Michael&#x27;</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">name: Michael age: <span class=\"number\">30</span> other: &#123;&#125;   </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 传入任意个数的关键字参数时           </span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>person(<span class=\"string\">&#x27;Adam&#x27;</span>, <span class=\"number\">45</span>, gender=<span class=\"string\">&#x27;M&#x27;</span>, job=<span class=\"string\">&#x27;Engineer&#x27;</span>)</span><br><span class=\"line\">name: Adam age: <span class=\"number\">45</span> other: &#123;<span class=\"string\">&#x27;gender&#x27;</span>: <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;job&#x27;</span>: <span class=\"string\">&#x27;Engineer&#x27;</span>&#125;    </span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>命名关键字参数：<blockquote>\n<p><strong>限制</strong>关键字<strong>参数的名字</strong>，命名关键字参数需要一个<code>特殊的分隔符*</code>，后面的参数被视为命名关键字参数，如果函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了。<strong>命名关键字参数必须传入参数名</strong>。</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#########  命名关键字参数  ################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 命名关键字参数：限制关键字参数的名字</span></span><br><span class=\"line\"><span class=\"comment\">#命名关键字参数需要一个特殊分隔符*，*后面的参数被视为命名关键字参数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">person</span>(<span class=\"params\">name, age, *, city, job</span>):</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name, age, city, job)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 如果函数定义中已经有了一个可变参数，</span></span><br><span class=\"line\"><span class=\"comment\"># 后面跟着的命名关键字参数就不再需要一个特殊分隔符*了 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">person</span>(<span class=\"params\">name, age, *args, city, job</span>):</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name, age, args, city, job)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#命名关键字参数 （调用时）必须连同 参数名 一起传入【有默认值时除外】   </span></span><br><span class=\"line\">person(<span class=\"string\">&#x27;Jack&#x27;</span>, <span class=\"number\">24</span>, city=<span class=\"string\">&#x27;Beijing&#x27;</span>, job=<span class=\"string\">&#x27;Engineer&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Python-自动化办公\"><a href=\"#2-Python-自动化办公\" class=\"headerlink\" title=\"2. Python 自动化办公\"></a>2. Python 自动化办公</h2><h3 id=\"2-1-Excel-速查表\"><a href=\"#2-1-Excel-速查表\" class=\"headerlink\" title=\"2.1 Excel 速查表\"></a>2.1 Excel 速查表</h3><p><img src=\"https://img-blog.csdnimg.cn/20201207203552904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"excel速查表\"></p>\n<h2 id=\"3-Python-爬虫\"><a href=\"#3-Python-爬虫\" class=\"headerlink\" title=\"3. Python 爬虫\"></a>3. Python 爬虫</h2><h3 id=\"3-1-常用的爬虫库\"><a href=\"#3-1-常用的爬虫库\" class=\"headerlink\" title=\"3.1 常用的爬虫库\"></a>3.1 常用的爬虫库</h3><p><img src=\"https://img-blog.csdnimg.cn/20201207203715257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-2-requests-库\"><a href=\"#3-2-requests-库\" class=\"headerlink\" title=\"3.2 requests 库\"></a>3.2 requests 库</h3><p><img src=\"https://img-blog.csdnimg.cn/20201207203809826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"3-2-1-案例1-京东商品详情页\"><a href=\"#3-2-1-案例1-京东商品详情页\" class=\"headerlink\" title=\"3.2.1 案例1     京东商品详情页\"></a>3.2.1 案例1     京东商品详情页</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例1：爬取京东商品详情页</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">url=<span class=\"string\">&#x27;http://item.jd.com/2967929.html&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    r=requests.get(url)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#检查Response状态码,若不是200则产生HttpError异常</span></span><br><span class=\"line\">    r.raise_for_status()  </span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\"># 将编码设 utf-8 </span></span><br><span class=\"line\">    r.encoding=r.apparent_encoding</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 截取页面前1000行</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(r.text[:<span class=\"number\">1000</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-2-2-案例2-亚马逊商品详情页\"><a href=\"#3-2-2-案例2-亚马逊商品详情页\" class=\"headerlink\" title=\"3.2.2 案例2 亚马逊商品详情页\"></a>3.2.2 案例2 亚马逊商品详情页</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例2：爬取亚马逊商品详情页————协议头</span></span><br><span class=\"line\">url=<span class=\"string\">&#x27;https://www.amazon.cn/dp/B076YGLN6G?smid=A3CQWPW49OI3BQ&amp;ref_=Oct_CBBBCard_dsk_asin2&amp;pf_rd_r=X83064H6KVVDTZ4WWDFB&amp;pf_rd_p=5a0738df-7719-4914-81ee-278221dce082&amp;pf_rd_m=A1AJ19PSB66TGU&amp;pf_rd_s=desktop-3&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    res = requests.get(url)</span><br><span class=\"line\">    res.raise_for_status()        <span class=\"comment\">#503</span></span><br><span class=\"line\">    res.encoding=r.apparent_encoding   <span class=\"comment\">#&#x27;ISO-8859-1&#x27;</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(res.text[:<span class=\"number\">1000</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取错误&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">res.request.headers</span></span><br><span class=\"line\"><span class=\"string\">输出：</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;User-Agent&#x27;: &#x27;python-requests/2.22.0&#x27;, &#x27;Accept-Encoding&#x27;: &#x27;gzip, deflate&#x27;, &#x27;Accept&#x27;: &#x27;*/*&#x27;, &#x27;Connection&#x27;: &#x27;keep-alive&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    kv=&#123;<span class=\"string\">&#x27;user-agent&#x27;</span>:<span class=\"string\">&#x27;Mozilla/5.0&#x27;</span>&#125;  <span class=\"comment\">#浏览器身份标识的字段</span></span><br><span class=\"line\">    r=requests.get(url,headers=kv)</span><br><span class=\"line\">    r.raise_for_status()  <span class=\"comment\">#r.status_code   200</span></span><br><span class=\"line\">    r.encoding=r.apparent_encoding</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(r.text[<span class=\"number\">1000</span>:<span class=\"number\">3000</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-2-3-案例3-百度-360搜索关键字\"><a href=\"#3-2-3-案例3-百度-360搜索关键字\" class=\"headerlink\" title=\"3.2.3 案例3 百度/360搜索关键字\"></a>3.2.3 案例3 百度/360搜索关键字</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例3：爬取搜索页面</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    kw=&#123;<span class=\"string\">&#x27;wd&#x27;</span>:<span class=\"string\">&#x27;python&#x27;</span>&#125;</span><br><span class=\"line\">    r=requests.get(<span class=\"string\">&#x27;https://www.baidu.com/s&#x27;</span>,params=kw)</span><br><span class=\"line\">    r.raise_for_status()</span><br><span class=\"line\">    r.encoding=r.apparent_encoding</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(r.text))</span><br><span class=\"line\">    <span class=\"comment\">#r.request.url  返回的是百度安全验证的链接？</span></span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取失败&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    kw=&#123;<span class=\"string\">&#x27;q&#x27;</span>:<span class=\"string\">&#x27;python&#x27;</span>&#125;  <span class=\"comment\">#360搜索的关键字的键为q</span></span><br><span class=\"line\">    r=requests.get(<span class=\"string\">&#x27;https://www.so.com/s&#x27;</span>,params=kw)</span><br><span class=\"line\">    r.raise_for_status()</span><br><span class=\"line\">    r.encoding=r.apparent_encoding</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(r.text))  <span class=\"comment\">#257468</span></span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-2-4-案例4-网络图片爬取及存储\"><a href=\"#3-2-4-案例4-网络图片爬取及存储\" class=\"headerlink\" title=\"3.2.4 案例4     网络图片爬取及存储\"></a>3.2.4 案例4     网络图片爬取及存储</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例4：爬取图片</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;r.content  #表示返回内容的二进制格式&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">root=<span class=\"string\">&#x27;./Pic/&#x27;</span></span><br><span class=\"line\">path=root+url.split(<span class=\"string\">&#x27;/&#x27;</span>)[-<span class=\"number\">1</span>].split(<span class=\"string\">&#x27;@&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">url=<span class=\"string\">&#x27;http://img0.dili360.com/ga/M00/02/AB/wKgBzFQ26i2AWujSAA_-xvEYLbU441.jpg@!rw9&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(root):</span><br><span class=\"line\">        os.mkdir(root)  <span class=\"comment\">#创建根目录</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(path):</span><br><span class=\"line\"></span><br><span class=\"line\">        r=requests.get(url)</span><br><span class=\"line\">        <span class=\"comment\"># 如何将二进制转化为图片保存</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(path, <span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(r.content)</span><br><span class=\"line\">            f.close()</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;图片保存成功&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;文件已存在&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-2-5-案例5-IP地址归属地查询\"><a href=\"#3-2-5-案例5-IP地址归属地查询\" class=\"headerlink\" title=\"3.2.5 案例5     IP地址归属地查询\"></a>3.2.5 案例5     IP地址归属地查询</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例5：IP地址归属地查询</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">url=<span class=\"string\">&#x27;http://www.ip138.com/iplookup.asp?ip=&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    r=requests.get(url+<span class=\"string\">&#x27;183.216.163.144&#x27;</span>,headers=kv)</span><br><span class=\"line\">    r.raise_for_status()</span><br><span class=\"line\">    r.encoding=r.apparent_encoding</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(r.text[:-<span class=\"number\">500</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;爬取失败&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-urllib库\"><a href=\"#3-3-urllib库\" class=\"headerlink\" title=\"3.3 urllib库\"></a>3.3 urllib库</h3><p>特点：不用安装，python自带</p>\n<h4 id=\"3-3-1-urllib基础：\"><a href=\"#3-3-1-urllib基础：\" class=\"headerlink\" title=\"3.3.1 urllib基础：\"></a>3.3.1 urllib基础：</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将网页保存到本地，参数为抓取的网址和保存网页的文件路径</span></span><br><span class=\"line\">\turllib.request.urlretrieve(url,file)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将urlretrieve产生的缓存清除</span></span><br><span class=\"line\">\turllib.request.urlcleanup()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 爬取网页   </span></span><br><span class=\"line\">\tfile=urllib.request.urlopen(url)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取header的信息  </span></span><br><span class=\"line\">\tfile.info()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取爬取网页的状态码（200,403,404等）    </span></span><br><span class=\"line\">\tfile.getcode() </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取目前爬取的网址  </span></span><br><span class=\"line\">\tfile.geturl()     </span><br></pre></td></tr></table></figure>\n<h4 id=\"3-3-2-urllib-库超时设置\"><a href=\"#3-3-2-urllib-库超时设置\" class=\"headerlink\" title=\"3.3.2 urllib 库超时设置\"></a>3.3.2 urllib 库超时设置</h4><p>根据 <strong>网速</strong> 和 <strong>对方服务器响应</strong> 的快慢设置相应的超时设置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        file=urllib.request.urlopen(<span class=\"string\">&quot;http://www.baidu.com&quot;</span>,timeout=<span class=\"number\">2</span>)</span><br><span class=\"line\">        data=file.read()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(i,<span class=\"built_in\">len</span>(data))</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;出现异常&quot;</span>+<span class=\"built_in\">str</span>(e))</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-3-3-自动模拟http请求：\"><a href=\"#3-3-3-自动模拟http请求：\" class=\"headerlink\" title=\"3.3.3 自动模拟http请求：\"></a>3.3.3 自动模拟http请求：</h4><h5 id=\"3-3-3-1-get\"><a href=\"#3-3-3-1-get\" class=\"headerlink\" title=\"3.3.3.1 get\"></a>3.3.3.1 get</h5><p>常用于：搜索关键词，获得搜索界面</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#get请求</span></span><br><span class=\"line\"></span><br><span class=\"line\">keywd=<span class=\"string\">&quot;Python&quot;</span></span><br><span class=\"line\">url=<span class=\"string\">&quot;http://www.baidu.com/s?wd=&quot;</span>+keywd  <span class=\"comment\">#网址构造</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(url)</span><br><span class=\"line\">req=urllib.request.Request(url) <span class=\"comment\">#以请求的方式获取,网址</span></span><br><span class=\"line\">data=urllib.request.urlopen(req).read()</span><br><span class=\"line\"></span><br><span class=\"line\">fh=<span class=\"built_in\">open</span>(<span class=\"string\">&quot;C:/Users/admin/Desktop/a.html&quot;</span>,<span class=\"string\">&quot;wb&quot;</span>) <span class=\"comment\">#以二进制写入html文件</span></span><br><span class=\"line\">fh.write(data)</span><br><span class=\"line\">fh.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#若搜索关键词为中文</span></span><br><span class=\"line\">keywd1=<span class=\"string\">&quot;亚马逊&quot;</span></span><br><span class=\"line\">keywd1=urllib.request.quote(keywd1)  <span class=\"comment\">#利用quote对中文进行编码</span></span><br><span class=\"line\">url1=<span class=\"string\">&quot;http://www.baidu.com/s?wd=&quot;</span>+keywd1</span><br><span class=\"line\">req=urllib.request.Request(url1)</span><br><span class=\"line\">data=urllib.request.urlopen(req).read()</span><br><span class=\"line\"></span><br><span class=\"line\">fh=<span class=\"built_in\">open</span>(<span class=\"string\">&quot;C:/Users/admin/Desktop/a.html&quot;</span>,<span class=\"string\">&quot;wb&quot;</span>) <span class=\"comment\">#二进制</span></span><br><span class=\"line\">fh.write(data)</span><br><span class=\"line\">fh.close()</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-3-3-2-post\"><a href=\"#3-3-3-2-post\" class=\"headerlink\" title=\"3.3.3.2 post\"></a>3.3.3.2 post</h5><p>常用于：登录某些网站</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#post请求</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse</span><br><span class=\"line\"></span><br><span class=\"line\">url=<span class=\"string\">&quot;https://www.iqianyue.com/mypost/&quot;</span>  <span class=\"comment\">#地址</span></span><br><span class=\"line\">login=urllib.parse.urlencode(</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&quot;1121640425@qq.com&quot;</span>,<span class=\"string\">&quot;pass&quot;</span>:<span class=\"string\">&quot;123&quot;</span>&#125;</span><br><span class=\"line\">).encode(<span class=\"string\">&quot;utf-8&quot;</span>)  <span class=\"comment\">#登录数据</span></span><br><span class=\"line\">req=urllib.request.Request(url,login)</span><br><span class=\"line\"></span><br><span class=\"line\">data=urllib.request.urlopen(req).read()</span><br><span class=\"line\"></span><br><span class=\"line\">fh=<span class=\"built_in\">open</span>(<span class=\"string\">&quot;C:/Users/admin/Desktop/a.html&quot;</span>,<span class=\"string\">&quot;wb&quot;</span>)</span><br><span class=\"line\">fh.write(data)</span><br><span class=\"line\">fh.close()</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-4-bs4\"><a href=\"#3-4-bs4\" class=\"headerlink\" title=\"3.4 bs4\"></a>3.4 bs4</h3><p>来自：<code>https://blog.csdn.net/qq_35490191/article/details/80598620</code><br><a href=\"https://blog.csdn.net/qq_35490191/article/details/80598620\">来源博客</a></p>\n<p><strong>功能：</strong> 解析、遍历、维护标签树。</p>\n<p>例如：<code>&lt;p class=&#39;title&#39;&gt;...&lt;/p&gt;</code></p>\n<ul>\n<li>标签名 p</li>\n<li>属性名称 class</li>\n<li>属性值 title<h4 id=\"3-4-1-bs4-的解析器对比\"><a href=\"#3-4-1-bs4-的解析器对比\" class=\"headerlink\" title=\"3.4.1  bs4 的解析器对比\"></a>3.4.1  bs4 的解析器对比</h4><img src=\"https://img-blog.csdnimg.cn/20201207205934178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<p><strong>具体用法：</strong> <code>soup=BeautifulSoup(markup,from_encoding=&quot;编码方式&quot;) </code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html = <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class=\"line\"><span class=\"string\">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;span&gt; Elsie &lt;/span&gt;&lt;/a&gt;,</span></span><br><span class=\"line\"><span class=\"string\">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class=\"line\"><span class=\"string\">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class=\"line\"><span class=\"string\">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#######################################################################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\">soup = BeautifulSoup(html, <span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(soup.prettify()) <span class=\"comment\">#输出清晰的树形结构</span></span><br></pre></td></tr></table></figure>\n<p><strong>Beautifu Soup</strong>将复杂的<strong>HTML文档</strong>转化为<strong>树形结构</strong>，每个<strong>节点</strong>都是<strong>Python对象</strong>：</p>\n<ul>\n<li>Tag：标签；</li>\n<li>NavigableString：被包裹在tag内的字符串；</li>\n<li>BeautifulSoup：表示一个文档的全部内容，大部分时候可以看做一个tag对象，支持遍历文档树和搜索文档树的方法；</li>\n<li>Comment：特殊NavigableString，会以特殊格式输出，比如注释类型。<h4 id=\"3-4-2-bs4-基本用法\"><a href=\"#3-4-2-bs4-基本用法\" class=\"headerlink\" title=\"3.4.2  bs4 基本用法\"></a>3.4.2  bs4 基本用法</h4><blockquote>\n<p> <strong>搜索文档树</strong>：<em><strong>soup.tag.property</strong></em> 按顺序获得第一个标签 </p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20201207210350414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p><strong>获取所有 ? 标签</strong>： soup.find_all( tag )    // 返回1个list</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20201207210447518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>将tag的<strong>子节点</strong>以<strong>列表</strong>方式输出  ： <em><strong>tag.contents</strong></em> </p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20201207210519210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<ul>\n<li>对tag的<strong>子节点</strong> 进行 <strong>循环</strong> ：  <strong>tag.children</strong> </li>\n<li>对tag的<strong>子孙节点</strong> 进行 <strong>循环</strong> ： <em><strong>tag.descendants</strong></em> </li>\n</ul>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20201207210743907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>获取tag（只有一个子节点）下所有的文本内容 ： <em><strong>tag.string</strong></em></p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20201207210819127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p> 从文档中获取<strong>所有的文字内容</strong> ：<em><strong>soup.get_text( )</strong></em></p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20201207210859608.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"3-4-3-bs4-用法-思维导图\"><a href=\"#3-4-3-bs4-用法-思维导图\" class=\"headerlink\" title=\"3.4.3 bs4 用法  思维导图\"></a>3.4.3 bs4 用法  思维导图</h4><p><img src=\"https://img-blog.csdnimg.cn/20201207211020405.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"4-正则表达式【用于提取信息】\"><a href=\"#4-正则表达式【用于提取信息】\" class=\"headerlink\" title=\"4.正则表达式【用于提取信息】\"></a>4.正则表达式【用于提取信息】</h2><p><img src=\"https://img-blog.csdnimg.cn/20201208100448613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-1-正则表达式—思维导图\"><a href=\"#4-1-正则表达式—思维导图\" class=\"headerlink\" title=\"4.1 正则表达式—思维导图\"></a>4.1 正则表达式—思维导图</h3><p><img src=\"https://img-blog.csdnimg.cn/2020120810080011.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-2-常见的原子类型-正则表达式最基本的单位\"><a href=\"#4-2-常见的原子类型-正则表达式最基本的单位\" class=\"headerlink\" title=\"4.2 常见的原子类型-正则表达式最基本的单位\"></a>4.2 常见的<strong>原子类型</strong>-正则表达式最基本的单位</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208103436181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-3-元字符-正则表达式中具有特殊含义的字符\"><a href=\"#4-3-元字符-正则表达式中具有特殊含义的字符\" class=\"headerlink\" title=\"4.3  元字符-正则表达式中具有特殊含义的字符\"></a>4.3  元字符-正则表达式中具有特殊含义的字符</h3><p> <img src=\"https://img-blog.csdnimg.cn/20201208103636986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-4-模式修正符-在不改变正则表达式的前提下，调整匹配结果\"><a href=\"#4-4-模式修正符-在不改变正则表达式的前提下，调整匹配结果\" class=\"headerlink\" title=\"4.4 模式修正符-在不改变正则表达式的前提下，调整匹配结果\"></a>4.4 模式修正符-在不改变正则表达式的前提下，调整匹配结果</h3><p><img src=\"https://img-blog.csdnimg.cn/2020120810371828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-5-贪婪模式和懒惰模式\"><a href=\"#4-5-贪婪模式和懒惰模式\" class=\"headerlink\" title=\"4.5 贪婪模式和懒惰模式\"></a>4.5 贪婪模式和懒惰模式</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208103827958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-6-正则表达式函数\"><a href=\"#4-6-正则表达式函数\" class=\"headerlink\" title=\"4.6 正则表达式函数\"></a>4.6 正则表达式函数</h3><p><img src=\"https://img-blog.csdnimg.cn/20201208103901541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-7-练习题：\"><a href=\"#4-7-练习题：\" class=\"headerlink\" title=\"4.7 练习题：\"></a>4.7 练习题：</h3><p><code>https://zhuanlan.zhihu.com/p/91689180?utm_source=qq&amp;utm_medium=social&amp;utm_oi=772119850515431424</code><br><a href=\"https://zhuanlan.zhihu.com/p/91689180?utm_source=qq&utm_medium=social&utm_oi=772119850515431424\">正则表达式-练习题</a></p>\n"},{"title":"Windows操作系统使用-笔记","_content":"\n# Windows操作系统使用-笔记\n\n[toc]\n\n## DOS\n[批处理笔记-链接](https://blog.csdn.net/m0_46578592/article/details/110527563)\n#### 1. 更改cmd 的*窗口背景色*及*字体颜色*\n```dos\n  颜色属性由两个十六进制数字指定 --(如： color fc)\n\n\t\t\t  第一个\t 十六进制数字 对应于背景\n\n\t\t\t  第二个    十六进制数字 对应于前景\n\n\n\t  每个数字\n\t\t可以为以下任何值:\n\n\t\t\t\t 0=黑色       8=灰色\n\n\t\t\t  \t 1=蓝色       9=淡蓝色\n\n\t\t\t   \t 2=绿色       A=淡绿色\n\n\t\t\t   \t 3=浅绿色     B=淡浅绿色\n\n\t\t    \t 4=红色       C=淡红色\n\n\t\t    \t 5=紫色       D=淡紫色\n\n\t\t    \t 6=黄色       E=淡黄色\n\n\t\t    \t 7=白色       F=亮白色  \n\n\t\t  \n\n\t如果没有给定任何参数，此命令会将颜色还原到 cmd.exe 启动时的颜色。\n\n\t\t\t这个值来自当前控制台窗口、\n\t\t\t/T 命令行开关,\n\t\t\t或 DefaultColor 注册表\t值。  \n\n\n\n\t\n\t如果尝试使用相同的\t前景和背景颜色  来执行  COLOR 命令，COLOR 命令会将 ERRORLEVEL 设置为 1。  \n\n\n\n \n\t示例: \"COLOR fc\" 在亮白色上产生淡红色\n\n\t\t  color 0a\t\t//第一个对应于背景，第二个对应于前景\t\t    \t \n```\n\n***************\n\n#### 2. ipconfig\n\n ```dos\nipconfig                       ... 显示信息\n\nipconfig /all                  ... 显示详细信息\n\nipconfig /renew                ... 更新所有适配器\n\nipconfig /renew EL*            ... 更新所有名称以 EL 开头的连接\n\nipconfig /release *Con*        ... 释放所有匹配的连接，\n                                         例如“有线以太网连接 1”或\n                                             “有线以太网连接 2”\n                                             \nipconfig /allcompartments /all ... 显示有关所有隔离舱的详细信息                                             \nipconfig /allcompartments      ... 显示有关所有隔离舱的信息\n ```\n\n#### 3. net user(显示所有 网络用户账号)\n\n#### 4. 文件管理\n\n>    文件路径\t\t\t  \t\t\t\t\t\t\t   : `D:\\abc\\1.txt`\n>    列出文件(包括隐藏的)\t\t\t\t\t   : `dir  /a\t`\n>    执行完命令后**不退出cmd**    \t\t\t : `pause `\n>    改变窗口**标题**\t\t  \t\t\t\t\t\t  : `title 想要的标题`\n>    **清屏**\t\t\t\t  \t\t\t\t\t\t\t\t : `cls  `\n>    **读取**文件\t\t\t\t  \t\t\t\t\t\t :` type 文件名`\n>    将**源文件内容**输出到**目标文件**\t    : `copy 源文件 目标文件 `,`例如： copy con ./1.txt`  \n>    **剪切**文件\t\t\t\t\t\t       \t\t: `move  源文件全名 \t目标文件全名`  \n>    设置**隐藏文件**\t\t: `attrib  +/- h   文件名.后缀`   ,其中： `h隐藏文件 , s系统级的文件 ，a追加写`  \n>\n>    **隐藏当前文件夹**内部的所有文件\t: 只输入 attrib \n>\n>    **创建文件**\t\t\t\t\t\t\t\t\t\t  ： `fsutil  file  createnew  文件名   文件大小（单位：字节）` \n>\n>    ```dos\n>    例如：\n>    \t\tfsutil  file  createnew  d:\\system.ini   文件大小(单位：字节)  \n>    \n>    \t\t\t如果配合  attrib +a;+s;+h   就可以减少硬盘存储而找不到原因  \n>    ```\n>\n>    **创建文件夹**\t\t\t\t\t\t\t  : `md 文件夹名`\t\t\n>\n>    **文件/文件夹重命名**\t\t\t\t: `ren  旧名  新名` \n>\n>    **删除文件**\t\t\t\t\t\t\t\t : `del  文件名`\t\t\t\t\t\t\t\t\t\t\t\n>\n>    ```dos\n>    例如：\tdel *.* /s/q  >nul   2>nul    \n>        \n>    \t  //删除所有文件，\n>    \t  \t\t/s 表示递归 ，\n>    \t  \t\t/q表示让系统不再弹出确认的询问信息，\n>    \t  \t\t1>nul 不再弹出正确提示，\n>    \t  \t\t2>nul 不再弹出错误提示\t\n>    ```\n>\n>     **删除文件夹**\t\t\t\t\t\t: `rd  文件夹名\t`\n>\n>     更改**文件关联性** \n>\n>    ```dos\n>    assoc  .txt = exefile\t\t\t\n>    \t\t\t\t\t\t//将txt文件与exe文件关联，让系统认为 txt程序 是 exe程序\n>    \n>    assoc  .txt = txtfile\t\n>    \t\t\t\t\t\t//改回来\n>    ```\n\n#### 5. 杀进程\n\n>`taskkill -im 进程名(如:notepad.exe) /f  >nul 2>nul`\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n>\n>​\t\t\t\t\t\t\t\t\t\t\t表示：杀死进程，强制，不提示正确/错误 信息  \n\n#### 6.关机/重启/注销:\n\n```dos\nshutdown -s -t 时间（秒）\t\t\t\t//关机，；-r 重启；-f 强制执行；-c “ 提示信息xxx”\n\nshutdown -s -f -t  秒数  -c \"文字xxx\"\n\nshutdown -a\t\t\t\t\t\t\t\t// -a 可以取消命令\n\nshutdown -l \t\t\t\t\t\t\t//注销，==logoff\n```\n\n\n\n#### 7. 输出\n\n>    输出空行\t\t\t: `echo.`    \n>\n>    路径提示\t\t\t: \t\n>\n>    ​\t\t\t\t\t\t\t@echo off  \t\t//关掉路径提示信息\n>    ​\t\t\t\t\t\t\t@echo on\t\t//开启路径提示信息  \n\n#### 8.  查看本地开放的所有端口：[1个端口对应1个服务]\n\n>   netstat -an\n\n##  批处理脚本\n\nwin10 启动路径：\n\n+   C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\n\n```\n后缀 \t：  .bat\n\n作用\t：  自上而下，执行命令，直到执行完所有命令（即使中间有命令无法执行，也不会停止）\n\n命令\t：  dos命令\n\n\n\t设置变量： set a=1\n\t取变量\t：  %a%\n\t\n\t由用户输入变量的值： set /p a=\n\t\n\t位置变量(代表参数)： 如 shutdown -s -t %1\n\t\n\t\t\t\t\t0:代表批处理本身\n\t\t\t\t\t1：代表第一个参数\t\n\t\n\t跳转命令：  【  ：和 goto 连用  】\t \n```\n\n## 用户管理\n\n#### 1. SID\n\n在 Windows中 每个登录到系统的用户都有相应的用户ID【UID】\n\n+   用户ID = 系统ID（SID） + 用户编号\n+   用户编号：管理员（500），普通（1000）\n+   账号与密码存放在 【C:\\Windows\\System32\\config\\SAM】，使用哈希算法【不可逆。安全】\n\n#### 2. 系统默认账号【基本的5个】\n\n+   给人使用的：\n    +   administrator:管理员\n    +   guest：来宾【默认禁用】\n+   给计算机使用的：\n    +   system：系统账户，权力最高\n    +   local services：本地服务账户，普通用户\n    +   network services : 网络服务账户，普通用户\n\n#### 3. 每个用户都有自己的home目录【存放配置文件】\n\n即：profile\n\n如： 【C:\\Users】\n\n查看 当前用户: whoami \n\n查看 当前用户的SID：whoami /user\n\n在管理员权限下：\n\ncmd:\n\n+   【修改密码】net user 用户名 密码\n+   【新建用户】net user  用户名 密码  /add\n+   【删除用户】net user 用户名 /del\n+   【查看用户】net user\n+   【激活/禁用账户】 net user  用户名   /active: yes/no\n\n#### 4. 用户组\n\n为简化权限设置【给组划分权限，将相应权限的用户划分到相应组】\n\n+   管理员\n+   来宾\n+   用户\n+   网络\n+   打印机\n+   远程桌面\n\n**cmd命令：**\n\n+   【查看所有本地组】：net\t localgroup \t\n+   【查看指定的用户组】： net  localgroup 用户组名\n+   【添加用户到指定的用户组】： net  localgroup 用户组名 用户名   /add\n+   【删除用户到指定的用户组】： net  localgroup 用户组名 用户名   /del\n\n添加用户/用户组：\n\n+   右键计算机\n+   管理\n+   用户/用户组\n\n## 远程管理\n\n####  1. 远程桌面【端口号：3389】\n\n步骤：【如果**客户端不是管理员**，则需要在**服务器**上将该用户加入 **远程桌面用户组**】\n\n+   保证 客户端 和 服务器之间 能够 ping通\n+   服务器 允许被 远程访问：\n    +   桌面右键属性\n    +   远程设置\n    +   选择允许\n    +   确定\n+   客户端上\n    +   win + R\n    +   mstsc\n    +   输入IP地址\n    +   确定\n    +   输入用户名和密码\n\n#### 2. telnet\n\n步骤：\n\n服务器：\n\n+   将账户加入到 telnet客户机组\n\n客户端：\n\n+   在service.msc中开启telnet服务[xp]，在cmd中使用telnet\n\n## 文件共享\n\n【CIFS 协议，445端口（tcp和udp都有）】\n\n+   右键\n+   文件/文件夹\n+   共享\n+   高级共享\t\n\n-\t共享此文件夹\n-\t设置共享名（指的是客户端远程访问该共享文件夹时看到的文件夹名）\n    -\t共享名后加1个$表示是隐藏的共享文件\n-\t设置权限（共享文件夹的权限收到共享权限和NTFS权限共同影响）\n-\t访问：win+R ,输入：`\\\\地址`\n\n创建共享：\n\n+   cmd\n+   net share 共享名= 路径【如：net share c$ = c:\\】\n\n默认情况下所有盘符都共享【不安全！！】：\n\n因此，需要关闭共享：\n\n+   方法1：\n    +   右键-计算机-管理-服务-找到server-禁用\n+   方法2【暂时的，重启就失效】：\n    +   cmd -输入 net share  共享名  /del \n+   方法3【修改注册表】\n+   方法4：【防火墙的入站规则】\n+   方法5：将删除共享的命令保存为批处理命令格式，然后放入启动目录\n\n\n\n## PE系统\n\nPE:微型维修系统，由于容量小，只能用于维修\n\n使用PE破解window密码步骤:\n\n+   制作PE U盘\n+   启动计算机进入BIOS后改为U启动\n+   进入PE系统\n+   使用破解工具【原理：**替换**掉原来系统中的**SAM**中计算出的账户密码的**哈希值**】\n+   退出PE\n+   切换回硬盘启动\n+   使用修改后的密码\n\n\n\n## DHCP的部署与安全\n\n【udp:67和68端口】\n\n\n1.  dhcp相关：【ip，掩码，网关，dns， 租期】\n2.  DHCP**租约**过程:\n    1.  dhcp discovery:【客户机广播请求IP，请求包中有客户机的MAC地址】\n    2.  DHCP服务器发送 offer广播包【包内有dhcp分配给客户机的ip,但没有掩码网关等参数】\n    3.  客户机发送request广播包【客户机确认要使用的IP】\n    4.  服务器DHCP ack 广播包【服务器确认租约，并发送ip,掩码,网关,dns,租约等参数】\n3.  DHCP 的**续约**过程：\n    1.  当租期达到**50%**时，客户机再次向服务器发送 dhcp request请求\n    2.  如果没有响应，则继续使用至租约**87.5%**时再次向服务器发送 dhcp request请求\n    3.  如果仍然没有响应，则释放ip地址，重新发送dhcp  discovery包\n    4.  如果还没有响应，则分配 169.254.xxx.xxx/16(全球统一的无效地址，用于内网临时通信)\n4.  DHCP服务器部署【服务器ip要与地址池ip在同一网段】\n    1.  服务器有1个固定的IP\n    2.  安装dhcp服务器插件\n    3.  新建作用域和作用域选项\n        1.  打开dhcp管理工具\n        2.  右键，新建作用域\n        3.  指定地址池名称\n        4.  指定分配的ip范围及掩码\n        5.  指定地址池中不想分配的地址\n        6.  设置租约【默认8天】\n        7.  设置作用域选项【即：网关、dns等】\n    4.  激活[右键]\n    5.  客户端验证\n5.  DHCP常用命令：\n\n    1.  ipconfig  /release【取消租约，释放 ip】\n    2.  ipconfig /renew【没有ip时发送dsicovery,有ip时发送request手动续约】\n6.  可以继续dhcp的备份和还原【右键dhcp管理页面】\n7.  删除dhcp服务器页的服务器后，服务依然进行只是不显示，可以通过高级-查找出服务器来恢复显示。要想完全删除，必须删除作用域\n8.  地址保留：对特点的Mac地址分配特定的ip\n9.  **作用域选项**可以通过设置**服务器选项**批量配置【右键-配置选项】\n10.  DHCP中各种选项的优先级：\n\n     1.  作用域选项 > 服务器选项\n11.  **DHCP攻击：**\n\n     1.  **攻击DHCP服务器**：频繁发送伪装的dhcp请求，直到将地址池资源耗尽\n\n         1.  防御措施：在**管理型交换机的端口**上做**动态MAC地址绑定**\n     2.  **伪装DHCP服务器**：hack将自己部署为DHCP服务器\n\n         1.  防御措施：在**管理型交换机上**设置除合法DHCP服务器的端口外，其他端口禁止发送dhcp offer包\n\n## DNS服务器部署\n\n清除缓存DNS: `ipconfig  /flushdns`\n\n查看dns缓存：`ipconfig  /displaydns`\n\n1.  www:主机名,即给服务器取个名字叫www，管理员取名时一般按功能取【可以**自定义**】\n\n2.  baidu.com:域名【这部分是花钱**购买**的】\n\n3.  主机名.域名：完全限定域名(FQDN)【如：www.baidu.com】\n\n4.  根域名：使用小数点<kbd>.</kbd>表示,【浏览器默认补全，不需要手动输入】\n\n5.  域名分类【树状】：\n    +   根域名\n    +   ​\t顶级域名【紧跟根域名的就是顶级域名，如：.com  ,  .cn  ,  .uk等】\t\n\n6.  DNS使用TCP 、UDP 的 **端口** **53**\n\n7.  DNS**查询过程**：【递归找本地dns服务器，迭代找具体的服务器】\n    +   缓存\n    +   hosts文件\n    +   本地dns服务器\n    +   根域\n    +   顶级域\n    +   一级域名……\n\n8.  DNS**查询的分类**：\n    +   正向解析：已知域名 -找》IP\n    +   反向解析：已知IP -解析》域名\n\n9.  **部署步骤**【正向】：\n\n    1.  打开dns服务器管理工具\n\n    2.  右键正向区域-创建区域\n\n        1.  主要区域：主dns服务器 \n        2.  辅助区域：备份dns服务器\n        3.  存根区域：根域名\n\n        【权威应答：直接向**管理 被访问的主机 的dns服务器**询问后得到的回答】\n\n    3.  输入区域名【域名】\n    4.  创建1个用于解析的区域文件【拓展名 .dns】\n    5.  下一步。。。完成\n\n10.  部署后在正向区域出现2条默认记录\n\n     1.  SOA : 宣告谁是权威服务器，世界唯一\n     2.  名称服务器NS：告诉别人当前可以由哪台服务器解析\n\n11.  添加解析记录：\n\n     1.  正向区域右键\n     2.  新建主机【A记录，一种正向解析记录】\n     3.  输入名称【主机名，如：www】\n     4.  输入IP地址【该ip地址会与上面的地址解析关联，档解析解析上面的域名时，返回该ip地址】\n\n\n\n\n\n\n\n## WEB服务器\n\nhttp: tcp 80 端口\n\nhtts: tcp 443 端口\n\n常用的web服务器发布软件：iis / apache/nginx/tomcat\n\n1.  部署web服务器**步骤**：\n    1.  配置静态IP\n    2.  安装IIS【安装iis后会自动创建1个以 iuser 开头的匿名用户】\n    3.  网站默认存放在 c:\\Inetpub下\n\n\n\n\n\n## FTP\n\n端口号：tcp 20/21端口\n\nftp的两种工作模式：\n\n+   主动模式\n+   被动模式\n\nftp用户的最终权限 = ftp权限  与  ntfs权限 的交集\n\n建议：设置ftp站点时勾选所有ftp权限，具体权限的设置在ntfs中完成\n\n用户名和密码一般新建1个用户供他人使用\n\n推荐的第三方ftp服务软件【20人以内】：slyar ftp server ; serv-U【百人以内】\n\n## 域和活动目录\n\n1.   计算机一般有两种工作环境：\n    +   工作组【人人平等】\n    +   域【人人不平等】\n2.   1个域 由 域控制器 (**DC)** 控制【通常：**域控制器**也是 **域内的DNS服务器**】\n3.    通常1台计算机**加入域后，本地账户就失效**，只能使用域账户，域账户的用户名和密码存放在**DC**的一张资源表中【即：活动目录AD，**AD是属于整个域的资源**】，在登录 域中的某一台计算机时，计算机会利用DNS服务找到DC，DC会将接收到的用户名密码与AD表中的条目 相比对，如果在AD中有该用户名和密码，则允许该客户端登录\n4.   在DC上，还可以设置组策略，对域内的计算机进行统一的管控\n5.  计算机**登录到域**后可以**访问域资源**【只有用域账户登录才行】\n6.  **安装步骤：**\n    1.  在要配置成DC的服务器上配置**静态IP**【不需要配置dns】\n    2.  【win+R => 输入 dcpromo】\n    3.  勾选 “通过在计算机上安装DNS服务器进行自动更正”\n    4.  勾选“新林中新建域”【适用于第一次建域】\n    5.  输入该域的**根级域名**【该域的下面的子域名（如mail.baidu.com）都写在根级域名（baidu.com）的前面，】\n    6.  设置**林的功能级别**【若设为window server 2008r2，那么今后该林内的新建的dc只能是2008r2以上的版本】\n    7.  设置**域功能级别**【域功能级别只对当前域有效，其子域受林功能基本控制】\n    8.  一直确定【不要更改默认路径！！（活动目录就是ntds数据库文件，sysvol就是组策略）】\n    9.  设置活动目录的**还原密码**【该密码只在做还原域的操作时有用】\n    10.  安装后重启\n7.  当1台服务器成为域中的DC后，该服务器【DC】上原来的本地账户自动迁移到AD表中【登录时可以看到：（用户名变为：qf\\admin  ， 其中：qf为域名，admin为原来的本地账户）】\n8.  打开 “AD用户和计算机”，展开域名，在展开的项中\n    1.  computers：域中的普通成员\n    2.  domain controller:域控制器\n    3.  users：域账户【部分账号 来自 该计算机原先的本地账户】\n9.  将普通的计算机加入域：\n    1.  将计算机 连入 域所在的网络【不需要配网关，但需要配dns(域控制器的ip),域控制器在配置ip的界面上要将dns配为运营商的dns使域能上外网】\n    2.  右键“计算机” - “属性”-“计算机名更改设置”-输入要改成计算机的名字和域名\n    3.  使用域管理员登录【qf.com\\admin ; 123.com】\n    4.  重启计算机\n10.  在DC的**AD**上建立**普通域账户**给加入到**域的普通计算机**使用：\n     1.  打开AD\n     2.  右键“users”-“新建”-“用户”\n     3.  输入姓和名\n     4.  输入登录名。下一步\n     5.  输入密码和确认密码\n     6.  去掉“下次登录时更改密码”\n\n11.  普通域用户对特定电脑有管理员权限：\n     1.  用域管理员身份登录特定电脑\n     2.  打开本地管理员组\n     3.  查找位置为域 将该 普通域账户 加入到特定电脑的 本地管理员组 中\n12.  **加入域不成功**的原因：\n     1.  网络不通\n     2.  dns解析不成功\n     3.  dns缓存\n13.  **登录域不成功**的原因：\n     1.  用户名错误\n14.  OU：组织单元【用于对域资源 **(即：域用户，域计算机，域组)** 进行归类】\n15.  组和OU的区别：\n     1.  组：为了赋予组内的账户权限\n     2.  OU：为了下发 **组策略**\n\n16.  创建OU:\n     1.  打开AD，右键域名文件夹\n     2.  新建-组织单元\n     3.  输入ou的名字\n     4.  完成\n     5.  右键用户\n     6.  所有任务\n     7.  移动\n     8.  选择要移到的OU\n     9.  确定\n17.  组策略【GPO】:通过组策略可以修改计算机的各种属性【开始菜单;桌面背景;网络参数等】\n     1.  **组策略在域中是由OU下发的**\n     2.  组策略下发后，用户的应用顺序【lsdou：本地-站点-域-组织单元】\n     3.  开始-管理工具-组策略管理\n     4.  组策略的3 种状态：【启用，禁止，未配置】\n\n## 案例1\n\n利用window 7 粘滞键 (在登录界面按5次shift)登录 不知道密码 的计算机\n\n【C:\\Windows\\System32\\sethc.exe】\n\n步骤：\n\n+   强制断电后开机\n+   进入 启动修复界面\n+   查看问题反馈【目的 : 打开txt】\n+   打开路径并将粘滞键改名【路径：C:\\Windows\\System32\\sethc.exe】\n+   将cmd改名为粘滞键的文件名\n+   重启\n+   按5次shift 弹出\n+   cmd中在管理员组中添加新用户\n2.  新建-组织单元\n     3.  输入ou的名字\n     4.  完成\n     5.  右键用户\n     6.  所有任务\n     7.  移动\n     8.  选择要移到的OU\n     9.  确定\n17.  组策略【GPO】:通过组策略可以修改计算机的各种属性【开始菜单;桌面背景;网络参数等】\n     1.  **组策略在域中是由OU下发的**\n     2.  组策略下发后，用户的应用顺序【lsdou：本地-站点-域-组织单元】\n     3.  开始-管理工具-组策略管理\n     4.  组策略的3 种状态：【启用，禁止，未配置】\n\n## 案例1\n\n利用window 7 粘滞键 (在登录界面按5次shift)登录 不知道密码 的计算机\n\n【C:\\Windows\\System32\\sethc.exe】\n\n步骤：\n\n+   强制断电后开机\n+   进入 启动修复界面\n+   查看问题反馈【目的 : 打开txt】\n+   打开路径并将粘滞键改名【路径：C:\\Windows\\System32\\sethc.exe】\n+   将cmd改名为粘滞键的文件名\n+   重启\n+   按5次shift 弹出\n+   cmd中在管理员组中添加新用户\n+   使用新用户登录","source":"_posts/Windows操作系统使用-笔记.md","raw":"---\ntitle: Windows操作系统使用-笔记\ntag: Windows\ncategories:\n  - [后端,操作系统,Windows使用]\n---\n\n# Windows操作系统使用-笔记\n\n[toc]\n\n## DOS\n[批处理笔记-链接](https://blog.csdn.net/m0_46578592/article/details/110527563)\n#### 1. 更改cmd 的*窗口背景色*及*字体颜色*\n```dos\n  颜色属性由两个十六进制数字指定 --(如： color fc)\n\n\t\t\t  第一个\t 十六进制数字 对应于背景\n\n\t\t\t  第二个    十六进制数字 对应于前景\n\n\n\t  每个数字\n\t\t可以为以下任何值:\n\n\t\t\t\t 0=黑色       8=灰色\n\n\t\t\t  \t 1=蓝色       9=淡蓝色\n\n\t\t\t   \t 2=绿色       A=淡绿色\n\n\t\t\t   \t 3=浅绿色     B=淡浅绿色\n\n\t\t    \t 4=红色       C=淡红色\n\n\t\t    \t 5=紫色       D=淡紫色\n\n\t\t    \t 6=黄色       E=淡黄色\n\n\t\t    \t 7=白色       F=亮白色  \n\n\t\t  \n\n\t如果没有给定任何参数，此命令会将颜色还原到 cmd.exe 启动时的颜色。\n\n\t\t\t这个值来自当前控制台窗口、\n\t\t\t/T 命令行开关,\n\t\t\t或 DefaultColor 注册表\t值。  \n\n\n\n\t\n\t如果尝试使用相同的\t前景和背景颜色  来执行  COLOR 命令，COLOR 命令会将 ERRORLEVEL 设置为 1。  \n\n\n\n \n\t示例: \"COLOR fc\" 在亮白色上产生淡红色\n\n\t\t  color 0a\t\t//第一个对应于背景，第二个对应于前景\t\t    \t \n```\n\n***************\n\n#### 2. ipconfig\n\n ```dos\nipconfig                       ... 显示信息\n\nipconfig /all                  ... 显示详细信息\n\nipconfig /renew                ... 更新所有适配器\n\nipconfig /renew EL*            ... 更新所有名称以 EL 开头的连接\n\nipconfig /release *Con*        ... 释放所有匹配的连接，\n                                         例如“有线以太网连接 1”或\n                                             “有线以太网连接 2”\n                                             \nipconfig /allcompartments /all ... 显示有关所有隔离舱的详细信息                                             \nipconfig /allcompartments      ... 显示有关所有隔离舱的信息\n ```\n\n#### 3. net user(显示所有 网络用户账号)\n\n#### 4. 文件管理\n\n>    文件路径\t\t\t  \t\t\t\t\t\t\t   : `D:\\abc\\1.txt`\n>    列出文件(包括隐藏的)\t\t\t\t\t   : `dir  /a\t`\n>    执行完命令后**不退出cmd**    \t\t\t : `pause `\n>    改变窗口**标题**\t\t  \t\t\t\t\t\t  : `title 想要的标题`\n>    **清屏**\t\t\t\t  \t\t\t\t\t\t\t\t : `cls  `\n>    **读取**文件\t\t\t\t  \t\t\t\t\t\t :` type 文件名`\n>    将**源文件内容**输出到**目标文件**\t    : `copy 源文件 目标文件 `,`例如： copy con ./1.txt`  \n>    **剪切**文件\t\t\t\t\t\t       \t\t: `move  源文件全名 \t目标文件全名`  \n>    设置**隐藏文件**\t\t: `attrib  +/- h   文件名.后缀`   ,其中： `h隐藏文件 , s系统级的文件 ，a追加写`  \n>\n>    **隐藏当前文件夹**内部的所有文件\t: 只输入 attrib \n>\n>    **创建文件**\t\t\t\t\t\t\t\t\t\t  ： `fsutil  file  createnew  文件名   文件大小（单位：字节）` \n>\n>    ```dos\n>    例如：\n>    \t\tfsutil  file  createnew  d:\\system.ini   文件大小(单位：字节)  \n>    \n>    \t\t\t如果配合  attrib +a;+s;+h   就可以减少硬盘存储而找不到原因  \n>    ```\n>\n>    **创建文件夹**\t\t\t\t\t\t\t  : `md 文件夹名`\t\t\n>\n>    **文件/文件夹重命名**\t\t\t\t: `ren  旧名  新名` \n>\n>    **删除文件**\t\t\t\t\t\t\t\t : `del  文件名`\t\t\t\t\t\t\t\t\t\t\t\n>\n>    ```dos\n>    例如：\tdel *.* /s/q  >nul   2>nul    \n>        \n>    \t  //删除所有文件，\n>    \t  \t\t/s 表示递归 ，\n>    \t  \t\t/q表示让系统不再弹出确认的询问信息，\n>    \t  \t\t1>nul 不再弹出正确提示，\n>    \t  \t\t2>nul 不再弹出错误提示\t\n>    ```\n>\n>     **删除文件夹**\t\t\t\t\t\t: `rd  文件夹名\t`\n>\n>     更改**文件关联性** \n>\n>    ```dos\n>    assoc  .txt = exefile\t\t\t\n>    \t\t\t\t\t\t//将txt文件与exe文件关联，让系统认为 txt程序 是 exe程序\n>    \n>    assoc  .txt = txtfile\t\n>    \t\t\t\t\t\t//改回来\n>    ```\n\n#### 5. 杀进程\n\n>`taskkill -im 进程名(如:notepad.exe) /f  >nul 2>nul`\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n>\n>​\t\t\t\t\t\t\t\t\t\t\t表示：杀死进程，强制，不提示正确/错误 信息  \n\n#### 6.关机/重启/注销:\n\n```dos\nshutdown -s -t 时间（秒）\t\t\t\t//关机，；-r 重启；-f 强制执行；-c “ 提示信息xxx”\n\nshutdown -s -f -t  秒数  -c \"文字xxx\"\n\nshutdown -a\t\t\t\t\t\t\t\t// -a 可以取消命令\n\nshutdown -l \t\t\t\t\t\t\t//注销，==logoff\n```\n\n\n\n#### 7. 输出\n\n>    输出空行\t\t\t: `echo.`    \n>\n>    路径提示\t\t\t: \t\n>\n>    ​\t\t\t\t\t\t\t@echo off  \t\t//关掉路径提示信息\n>    ​\t\t\t\t\t\t\t@echo on\t\t//开启路径提示信息  \n\n#### 8.  查看本地开放的所有端口：[1个端口对应1个服务]\n\n>   netstat -an\n\n##  批处理脚本\n\nwin10 启动路径：\n\n+   C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\n\n```\n后缀 \t：  .bat\n\n作用\t：  自上而下，执行命令，直到执行完所有命令（即使中间有命令无法执行，也不会停止）\n\n命令\t：  dos命令\n\n\n\t设置变量： set a=1\n\t取变量\t：  %a%\n\t\n\t由用户输入变量的值： set /p a=\n\t\n\t位置变量(代表参数)： 如 shutdown -s -t %1\n\t\n\t\t\t\t\t0:代表批处理本身\n\t\t\t\t\t1：代表第一个参数\t\n\t\n\t跳转命令：  【  ：和 goto 连用  】\t \n```\n\n## 用户管理\n\n#### 1. SID\n\n在 Windows中 每个登录到系统的用户都有相应的用户ID【UID】\n\n+   用户ID = 系统ID（SID） + 用户编号\n+   用户编号：管理员（500），普通（1000）\n+   账号与密码存放在 【C:\\Windows\\System32\\config\\SAM】，使用哈希算法【不可逆。安全】\n\n#### 2. 系统默认账号【基本的5个】\n\n+   给人使用的：\n    +   administrator:管理员\n    +   guest：来宾【默认禁用】\n+   给计算机使用的：\n    +   system：系统账户，权力最高\n    +   local services：本地服务账户，普通用户\n    +   network services : 网络服务账户，普通用户\n\n#### 3. 每个用户都有自己的home目录【存放配置文件】\n\n即：profile\n\n如： 【C:\\Users】\n\n查看 当前用户: whoami \n\n查看 当前用户的SID：whoami /user\n\n在管理员权限下：\n\ncmd:\n\n+   【修改密码】net user 用户名 密码\n+   【新建用户】net user  用户名 密码  /add\n+   【删除用户】net user 用户名 /del\n+   【查看用户】net user\n+   【激活/禁用账户】 net user  用户名   /active: yes/no\n\n#### 4. 用户组\n\n为简化权限设置【给组划分权限，将相应权限的用户划分到相应组】\n\n+   管理员\n+   来宾\n+   用户\n+   网络\n+   打印机\n+   远程桌面\n\n**cmd命令：**\n\n+   【查看所有本地组】：net\t localgroup \t\n+   【查看指定的用户组】： net  localgroup 用户组名\n+   【添加用户到指定的用户组】： net  localgroup 用户组名 用户名   /add\n+   【删除用户到指定的用户组】： net  localgroup 用户组名 用户名   /del\n\n添加用户/用户组：\n\n+   右键计算机\n+   管理\n+   用户/用户组\n\n## 远程管理\n\n####  1. 远程桌面【端口号：3389】\n\n步骤：【如果**客户端不是管理员**，则需要在**服务器**上将该用户加入 **远程桌面用户组**】\n\n+   保证 客户端 和 服务器之间 能够 ping通\n+   服务器 允许被 远程访问：\n    +   桌面右键属性\n    +   远程设置\n    +   选择允许\n    +   确定\n+   客户端上\n    +   win + R\n    +   mstsc\n    +   输入IP地址\n    +   确定\n    +   输入用户名和密码\n\n#### 2. telnet\n\n步骤：\n\n服务器：\n\n+   将账户加入到 telnet客户机组\n\n客户端：\n\n+   在service.msc中开启telnet服务[xp]，在cmd中使用telnet\n\n## 文件共享\n\n【CIFS 协议，445端口（tcp和udp都有）】\n\n+   右键\n+   文件/文件夹\n+   共享\n+   高级共享\t\n\n-\t共享此文件夹\n-\t设置共享名（指的是客户端远程访问该共享文件夹时看到的文件夹名）\n    -\t共享名后加1个$表示是隐藏的共享文件\n-\t设置权限（共享文件夹的权限收到共享权限和NTFS权限共同影响）\n-\t访问：win+R ,输入：`\\\\地址`\n\n创建共享：\n\n+   cmd\n+   net share 共享名= 路径【如：net share c$ = c:\\】\n\n默认情况下所有盘符都共享【不安全！！】：\n\n因此，需要关闭共享：\n\n+   方法1：\n    +   右键-计算机-管理-服务-找到server-禁用\n+   方法2【暂时的，重启就失效】：\n    +   cmd -输入 net share  共享名  /del \n+   方法3【修改注册表】\n+   方法4：【防火墙的入站规则】\n+   方法5：将删除共享的命令保存为批处理命令格式，然后放入启动目录\n\n\n\n## PE系统\n\nPE:微型维修系统，由于容量小，只能用于维修\n\n使用PE破解window密码步骤:\n\n+   制作PE U盘\n+   启动计算机进入BIOS后改为U启动\n+   进入PE系统\n+   使用破解工具【原理：**替换**掉原来系统中的**SAM**中计算出的账户密码的**哈希值**】\n+   退出PE\n+   切换回硬盘启动\n+   使用修改后的密码\n\n\n\n## DHCP的部署与安全\n\n【udp:67和68端口】\n\n\n1.  dhcp相关：【ip，掩码，网关，dns， 租期】\n2.  DHCP**租约**过程:\n    1.  dhcp discovery:【客户机广播请求IP，请求包中有客户机的MAC地址】\n    2.  DHCP服务器发送 offer广播包【包内有dhcp分配给客户机的ip,但没有掩码网关等参数】\n    3.  客户机发送request广播包【客户机确认要使用的IP】\n    4.  服务器DHCP ack 广播包【服务器确认租约，并发送ip,掩码,网关,dns,租约等参数】\n3.  DHCP 的**续约**过程：\n    1.  当租期达到**50%**时，客户机再次向服务器发送 dhcp request请求\n    2.  如果没有响应，则继续使用至租约**87.5%**时再次向服务器发送 dhcp request请求\n    3.  如果仍然没有响应，则释放ip地址，重新发送dhcp  discovery包\n    4.  如果还没有响应，则分配 169.254.xxx.xxx/16(全球统一的无效地址，用于内网临时通信)\n4.  DHCP服务器部署【服务器ip要与地址池ip在同一网段】\n    1.  服务器有1个固定的IP\n    2.  安装dhcp服务器插件\n    3.  新建作用域和作用域选项\n        1.  打开dhcp管理工具\n        2.  右键，新建作用域\n        3.  指定地址池名称\n        4.  指定分配的ip范围及掩码\n        5.  指定地址池中不想分配的地址\n        6.  设置租约【默认8天】\n        7.  设置作用域选项【即：网关、dns等】\n    4.  激活[右键]\n    5.  客户端验证\n5.  DHCP常用命令：\n\n    1.  ipconfig  /release【取消租约，释放 ip】\n    2.  ipconfig /renew【没有ip时发送dsicovery,有ip时发送request手动续约】\n6.  可以继续dhcp的备份和还原【右键dhcp管理页面】\n7.  删除dhcp服务器页的服务器后，服务依然进行只是不显示，可以通过高级-查找出服务器来恢复显示。要想完全删除，必须删除作用域\n8.  地址保留：对特点的Mac地址分配特定的ip\n9.  **作用域选项**可以通过设置**服务器选项**批量配置【右键-配置选项】\n10.  DHCP中各种选项的优先级：\n\n     1.  作用域选项 > 服务器选项\n11.  **DHCP攻击：**\n\n     1.  **攻击DHCP服务器**：频繁发送伪装的dhcp请求，直到将地址池资源耗尽\n\n         1.  防御措施：在**管理型交换机的端口**上做**动态MAC地址绑定**\n     2.  **伪装DHCP服务器**：hack将自己部署为DHCP服务器\n\n         1.  防御措施：在**管理型交换机上**设置除合法DHCP服务器的端口外，其他端口禁止发送dhcp offer包\n\n## DNS服务器部署\n\n清除缓存DNS: `ipconfig  /flushdns`\n\n查看dns缓存：`ipconfig  /displaydns`\n\n1.  www:主机名,即给服务器取个名字叫www，管理员取名时一般按功能取【可以**自定义**】\n\n2.  baidu.com:域名【这部分是花钱**购买**的】\n\n3.  主机名.域名：完全限定域名(FQDN)【如：www.baidu.com】\n\n4.  根域名：使用小数点<kbd>.</kbd>表示,【浏览器默认补全，不需要手动输入】\n\n5.  域名分类【树状】：\n    +   根域名\n    +   ​\t顶级域名【紧跟根域名的就是顶级域名，如：.com  ,  .cn  ,  .uk等】\t\n\n6.  DNS使用TCP 、UDP 的 **端口** **53**\n\n7.  DNS**查询过程**：【递归找本地dns服务器，迭代找具体的服务器】\n    +   缓存\n    +   hosts文件\n    +   本地dns服务器\n    +   根域\n    +   顶级域\n    +   一级域名……\n\n8.  DNS**查询的分类**：\n    +   正向解析：已知域名 -找》IP\n    +   反向解析：已知IP -解析》域名\n\n9.  **部署步骤**【正向】：\n\n    1.  打开dns服务器管理工具\n\n    2.  右键正向区域-创建区域\n\n        1.  主要区域：主dns服务器 \n        2.  辅助区域：备份dns服务器\n        3.  存根区域：根域名\n\n        【权威应答：直接向**管理 被访问的主机 的dns服务器**询问后得到的回答】\n\n    3.  输入区域名【域名】\n    4.  创建1个用于解析的区域文件【拓展名 .dns】\n    5.  下一步。。。完成\n\n10.  部署后在正向区域出现2条默认记录\n\n     1.  SOA : 宣告谁是权威服务器，世界唯一\n     2.  名称服务器NS：告诉别人当前可以由哪台服务器解析\n\n11.  添加解析记录：\n\n     1.  正向区域右键\n     2.  新建主机【A记录，一种正向解析记录】\n     3.  输入名称【主机名，如：www】\n     4.  输入IP地址【该ip地址会与上面的地址解析关联，档解析解析上面的域名时，返回该ip地址】\n\n\n\n\n\n\n\n## WEB服务器\n\nhttp: tcp 80 端口\n\nhtts: tcp 443 端口\n\n常用的web服务器发布软件：iis / apache/nginx/tomcat\n\n1.  部署web服务器**步骤**：\n    1.  配置静态IP\n    2.  安装IIS【安装iis后会自动创建1个以 iuser 开头的匿名用户】\n    3.  网站默认存放在 c:\\Inetpub下\n\n\n\n\n\n## FTP\n\n端口号：tcp 20/21端口\n\nftp的两种工作模式：\n\n+   主动模式\n+   被动模式\n\nftp用户的最终权限 = ftp权限  与  ntfs权限 的交集\n\n建议：设置ftp站点时勾选所有ftp权限，具体权限的设置在ntfs中完成\n\n用户名和密码一般新建1个用户供他人使用\n\n推荐的第三方ftp服务软件【20人以内】：slyar ftp server ; serv-U【百人以内】\n\n## 域和活动目录\n\n1.   计算机一般有两种工作环境：\n    +   工作组【人人平等】\n    +   域【人人不平等】\n2.   1个域 由 域控制器 (**DC)** 控制【通常：**域控制器**也是 **域内的DNS服务器**】\n3.    通常1台计算机**加入域后，本地账户就失效**，只能使用域账户，域账户的用户名和密码存放在**DC**的一张资源表中【即：活动目录AD，**AD是属于整个域的资源**】，在登录 域中的某一台计算机时，计算机会利用DNS服务找到DC，DC会将接收到的用户名密码与AD表中的条目 相比对，如果在AD中有该用户名和密码，则允许该客户端登录\n4.   在DC上，还可以设置组策略，对域内的计算机进行统一的管控\n5.  计算机**登录到域**后可以**访问域资源**【只有用域账户登录才行】\n6.  **安装步骤：**\n    1.  在要配置成DC的服务器上配置**静态IP**【不需要配置dns】\n    2.  【win+R => 输入 dcpromo】\n    3.  勾选 “通过在计算机上安装DNS服务器进行自动更正”\n    4.  勾选“新林中新建域”【适用于第一次建域】\n    5.  输入该域的**根级域名**【该域的下面的子域名（如mail.baidu.com）都写在根级域名（baidu.com）的前面，】\n    6.  设置**林的功能级别**【若设为window server 2008r2，那么今后该林内的新建的dc只能是2008r2以上的版本】\n    7.  设置**域功能级别**【域功能级别只对当前域有效，其子域受林功能基本控制】\n    8.  一直确定【不要更改默认路径！！（活动目录就是ntds数据库文件，sysvol就是组策略）】\n    9.  设置活动目录的**还原密码**【该密码只在做还原域的操作时有用】\n    10.  安装后重启\n7.  当1台服务器成为域中的DC后，该服务器【DC】上原来的本地账户自动迁移到AD表中【登录时可以看到：（用户名变为：qf\\admin  ， 其中：qf为域名，admin为原来的本地账户）】\n8.  打开 “AD用户和计算机”，展开域名，在展开的项中\n    1.  computers：域中的普通成员\n    2.  domain controller:域控制器\n    3.  users：域账户【部分账号 来自 该计算机原先的本地账户】\n9.  将普通的计算机加入域：\n    1.  将计算机 连入 域所在的网络【不需要配网关，但需要配dns(域控制器的ip),域控制器在配置ip的界面上要将dns配为运营商的dns使域能上外网】\n    2.  右键“计算机” - “属性”-“计算机名更改设置”-输入要改成计算机的名字和域名\n    3.  使用域管理员登录【qf.com\\admin ; 123.com】\n    4.  重启计算机\n10.  在DC的**AD**上建立**普通域账户**给加入到**域的普通计算机**使用：\n     1.  打开AD\n     2.  右键“users”-“新建”-“用户”\n     3.  输入姓和名\n     4.  输入登录名。下一步\n     5.  输入密码和确认密码\n     6.  去掉“下次登录时更改密码”\n\n11.  普通域用户对特定电脑有管理员权限：\n     1.  用域管理员身份登录特定电脑\n     2.  打开本地管理员组\n     3.  查找位置为域 将该 普通域账户 加入到特定电脑的 本地管理员组 中\n12.  **加入域不成功**的原因：\n     1.  网络不通\n     2.  dns解析不成功\n     3.  dns缓存\n13.  **登录域不成功**的原因：\n     1.  用户名错误\n14.  OU：组织单元【用于对域资源 **(即：域用户，域计算机，域组)** 进行归类】\n15.  组和OU的区别：\n     1.  组：为了赋予组内的账户权限\n     2.  OU：为了下发 **组策略**\n\n16.  创建OU:\n     1.  打开AD，右键域名文件夹\n     2.  新建-组织单元\n     3.  输入ou的名字\n     4.  完成\n     5.  右键用户\n     6.  所有任务\n     7.  移动\n     8.  选择要移到的OU\n     9.  确定\n17.  组策略【GPO】:通过组策略可以修改计算机的各种属性【开始菜单;桌面背景;网络参数等】\n     1.  **组策略在域中是由OU下发的**\n     2.  组策略下发后，用户的应用顺序【lsdou：本地-站点-域-组织单元】\n     3.  开始-管理工具-组策略管理\n     4.  组策略的3 种状态：【启用，禁止，未配置】\n\n## 案例1\n\n利用window 7 粘滞键 (在登录界面按5次shift)登录 不知道密码 的计算机\n\n【C:\\Windows\\System32\\sethc.exe】\n\n步骤：\n\n+   强制断电后开机\n+   进入 启动修复界面\n+   查看问题反馈【目的 : 打开txt】\n+   打开路径并将粘滞键改名【路径：C:\\Windows\\System32\\sethc.exe】\n+   将cmd改名为粘滞键的文件名\n+   重启\n+   按5次shift 弹出\n+   cmd中在管理员组中添加新用户\n2.  新建-组织单元\n     3.  输入ou的名字\n     4.  完成\n     5.  右键用户\n     6.  所有任务\n     7.  移动\n     8.  选择要移到的OU\n     9.  确定\n17.  组策略【GPO】:通过组策略可以修改计算机的各种属性【开始菜单;桌面背景;网络参数等】\n     1.  **组策略在域中是由OU下发的**\n     2.  组策略下发后，用户的应用顺序【lsdou：本地-站点-域-组织单元】\n     3.  开始-管理工具-组策略管理\n     4.  组策略的3 种状态：【启用，禁止，未配置】\n\n## 案例1\n\n利用window 7 粘滞键 (在登录界面按5次shift)登录 不知道密码 的计算机\n\n【C:\\Windows\\System32\\sethc.exe】\n\n步骤：\n\n+   强制断电后开机\n+   进入 启动修复界面\n+   查看问题反馈【目的 : 打开txt】\n+   打开路径并将粘滞键改名【路径：C:\\Windows\\System32\\sethc.exe】\n+   将cmd改名为粘滞键的文件名\n+   重启\n+   按5次shift 弹出\n+   cmd中在管理员组中添加新用户\n+   使用新用户登录","slug":"Windows操作系统使用-笔记","published":1,"date":"2021-06-02T02:49:19.188Z","updated":"2021-06-01T07:36:09.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexfs2j0049lcvdcfun2iht","content":"<h1 id=\"Windows操作系统使用-笔记\"><a href=\"#Windows操作系统使用-笔记\" class=\"headerlink\" title=\"Windows操作系统使用-笔记\"></a>Windows操作系统使用-笔记</h1><p>[toc]</p>\n<h2 id=\"DOS\"><a href=\"#DOS\" class=\"headerlink\" title=\"DOS\"></a>DOS</h2><p><a href=\"https://blog.csdn.net/m0_46578592/article/details/110527563\">批处理笔记-链接</a></p>\n<h4 id=\"1-更改cmd-的窗口背景色及字体颜色\"><a href=\"#1-更改cmd-的窗口背景色及字体颜色\" class=\"headerlink\" title=\"1. 更改cmd 的窗口背景色及字体颜色\"></a>1. 更改cmd 的<em>窗口背景色</em>及<em>字体颜色</em></h4><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 颜色属性由两个十六进制数字指定 --(如： <span class=\"built_in\">color</span> fc)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t  第一个\t 十六进制数字 对应于背景</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t  第二个    十六进制数字 对应于前景</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  每个数字</span><br><span class=\"line\">\t可以为以下任何值:</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t <span class=\"number\">0</span>=黑色       <span class=\"number\">8</span>=灰色</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t  \t <span class=\"number\">1</span>=蓝色       <span class=\"number\">9</span>=淡蓝色</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t   \t <span class=\"number\">2</span>=绿色       A=淡绿色</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t   \t <span class=\"number\">3</span>=浅绿色     B=淡浅绿色</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \t <span class=\"number\">4</span>=红色       C=淡红色</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \t <span class=\"number\">5</span>=紫色       D=淡紫色</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \t <span class=\"number\">6</span>=黄色       E=淡黄色</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \t <span class=\"number\">7</span>=白色       F=亮白色  </span><br><span class=\"line\"></span><br><span class=\"line\">\t  </span><br><span class=\"line\"></span><br><span class=\"line\">如果没有给定任何参数，此命令会将颜色还原到 <span class=\"built_in\">cmd</span>.exe 启动时的颜色。</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t这个值来自当前控制台窗口、</span><br><span class=\"line\">\t\t/T 命令行开关,</span><br><span class=\"line\">\t\t或 DefaultColor 注册表\t值。  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">如果尝试使用相同的\t前景和背景颜色  来执行  <span class=\"built_in\">COLOR</span> 命令，<span class=\"built_in\">COLOR</span> 命令会将 <span class=\"keyword\">ERRORLEVEL</span> 设置为 <span class=\"number\">1</span>。  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">示例: &quot;<span class=\"built_in\">COLOR</span> fc&quot; 在亮白色上产生淡红色</span><br><span class=\"line\"></span><br><span class=\"line\">\t  <span class=\"built_in\">color</span> <span class=\"number\">0</span>a\t\t//第一个对应于背景，第二个对应于前景\t\t    \t </span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"2-ipconfig\"><a href=\"#2-ipconfig\" class=\"headerlink\" title=\"2. ipconfig\"></a>2. ipconfig</h4> <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ipconfig</span>                       ... 显示信息</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ipconfig</span> /all                  ... 显示详细信息</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ipconfig</span> /renew                ... 更新所有适配器</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ipconfig</span> /renew EL*            ... 更新所有名称以 EL 开头的连接</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ipconfig</span> /release *<span class=\"built_in\">Con</span>*        ... 释放所有匹配的连接，</span><br><span class=\"line\">                                         例如“有线以太网连接 <span class=\"number\">1</span>”或</span><br><span class=\"line\">                                             “有线以太网连接 <span class=\"number\">2</span>”</span><br><span class=\"line\">                                             </span><br><span class=\"line\"><span class=\"built_in\">ipconfig</span> /allcompartments /all ... 显示有关所有隔离舱的详细信息                                             </span><br><span class=\"line\"><span class=\"built_in\">ipconfig</span> /allcompartments      ... 显示有关所有隔离舱的信息</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-net-user-显示所有-网络用户账号\"><a href=\"#3-net-user-显示所有-网络用户账号\" class=\"headerlink\" title=\"3. net user(显示所有 网络用户账号)\"></a>3. net user(显示所有 网络用户账号)</h4><h4 id=\"4-文件管理\"><a href=\"#4-文件管理\" class=\"headerlink\" title=\"4. 文件管理\"></a>4. 文件管理</h4><blockquote>\n<p>   文件路径                                             : <code>D:\\abc\\1.txt</code><br>   列出文件(包括隐藏的)                       : <code>dir  /a    </code><br>   执行完命令后<strong>不退出cmd</strong>                 : <code>pause </code><br>   改变窗口<strong>标题</strong>                                    : <code>title 想要的标题</code><br>   <strong>清屏</strong>                                                   : <code>cls  </code><br>   <strong>读取</strong>文件                                           :<code> type 文件名</code><br>   将<strong>源文件内容</strong>输出到<strong>目标文件</strong>        : <code>copy 源文件 目标文件 </code>,<code>例如： copy con ./1.txt</code><br>   <strong>剪切</strong>文件                                       : <code>move  源文件全名     目标文件全名</code><br>   设置<strong>隐藏文件</strong>        : <code>attrib  +/- h   文件名.后缀</code>   ,其中： <code>h隐藏文件 , s系统级的文件 ，a追加写</code>  </p>\n<p>   <strong>隐藏当前文件夹</strong>内部的所有文件    : 只输入 attrib </p>\n<p>   <strong>创建文件</strong>                                          ： <code>fsutil  file  createnew  文件名   文件大小（单位：字节）</code> </p>\n   <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">\t\tfsutil  file  createnew  d:\\system.ini   文件大小(单位：字节)  </span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t如果配合  <span class=\"built_in\">attrib</span> +a;+s;+h   就可以减少硬盘存储而找不到原因  </span><br></pre></td></tr></table></figure>\n\n<p>   <strong>创建文件夹</strong>                              : <code>md 文件夹名</code>        </p>\n<p>   <strong>文件/文件夹重命名</strong>                : <code>ren  旧名  新名</code> </p>\n<p>   <strong>删除文件</strong>                                 : <code>del  文件名</code>                                            </p>\n   <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：\t<span class=\"built_in\">del</span> *.* /s/q  &gt;<span class=\"built_in\">nul</span>   <span class=\"number\">2</span>&gt;<span class=\"built_in\">nul</span>    </span><br><span class=\"line\">    </span><br><span class=\"line\">\t  //删除所有文件，</span><br><span class=\"line\">\t  \t\t/s 表示递归 ，</span><br><span class=\"line\">\t  \t\t/q表示让系统不再弹出确认的询问信息，</span><br><span class=\"line\">\t  \t\t<span class=\"number\">1</span>&gt;<span class=\"built_in\">nul</span> 不再弹出正确提示，</span><br><span class=\"line\">\t  \t\t<span class=\"number\">2</span>&gt;<span class=\"built_in\">nul</span> 不再弹出错误提示\t</span><br></pre></td></tr></table></figure>\n\n<pre><code>**删除文件夹**                        : `rd  文件夹名    `\n\n更改**文件关联性** \n</code></pre>\n   <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">assoc</span>  .txt = exefile\t\t\t</span><br><span class=\"line\">\t\t\t\t\t\t//将txt文件与exe文件关联，让系统认为 txt程序 是 exe程序</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">assoc</span>  .txt = txtfile\t</span><br><span class=\"line\">\t\t\t\t\t\t//改回来</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h4 id=\"5-杀进程\"><a href=\"#5-杀进程\" class=\"headerlink\" title=\"5. 杀进程\"></a>5. 杀进程</h4><blockquote>\n<p><code>taskkill -im 进程名(如:notepad.exe) /f  &gt;nul 2&gt;nul</code>                                                        </p>\n<p>​                                            表示：杀死进程，强制，不提示正确/错误 信息  </p>\n</blockquote>\n<h4 id=\"6-关机-重启-注销\"><a href=\"#6-关机-重启-注销\" class=\"headerlink\" title=\"6.关机/重启/注销:\"></a>6.关机/重启/注销:</h4><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shutdown -s -t 时间（秒）\t\t\t\t//关机，；-r 重启；-f 强制执行；-c “ 提示信息xxx”</span><br><span class=\"line\"></span><br><span class=\"line\">shutdown -s -f -t  秒数  -c &quot;文字xxx&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">shutdown -a\t\t\t\t\t\t\t\t// -a 可以取消命令</span><br><span class=\"line\"></span><br><span class=\"line\">shutdown -l \t\t\t\t\t\t\t//注销，==logoff</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"7-输出\"><a href=\"#7-输出\" class=\"headerlink\" title=\"7. 输出\"></a>7. 输出</h4><blockquote>\n<p>   输出空行            : <code>echo.</code>    </p>\n<p>   路径提示            :     </p>\n<p>   ​                            @echo off          //关掉路径提示信息<br>   ​                            @echo on        //开启路径提示信息  </p>\n</blockquote>\n<h4 id=\"8-查看本地开放的所有端口：-1个端口对应1个服务\"><a href=\"#8-查看本地开放的所有端口：-1个端口对应1个服务\" class=\"headerlink\" title=\"8.  查看本地开放的所有端口：[1个端口对应1个服务]\"></a>8.  查看本地开放的所有端口：[1个端口对应1个服务]</h4><blockquote>\n<p>  netstat -an</p>\n</blockquote>\n<h2 id=\"批处理脚本\"><a href=\"#批处理脚本\" class=\"headerlink\" title=\"批处理脚本\"></a>批处理脚本</h2><p>win10 启动路径：</p>\n<ul>\n<li>  C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs</li>\n</ul>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">后缀 \t：  .bat</span><br><span class=\"line\"></span><br><span class=\"line\">作用\t：  自上而下，执行命令，直到执行完所有命令（即使中间有命令无法执行，也不会停止）</span><br><span class=\"line\"></span><br><span class=\"line\">命令\t：  dos命令</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t设置变量： <span class=\"builtin-name\">set</span> <span class=\"attribute\">a</span>=1</span><br><span class=\"line\">\t取变量\t：  %a%</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t由用户输入变量的值： <span class=\"builtin-name\">set</span> /p a=</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t位置变量(代表参数)： 如 shutdown -s -t %1</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t\t\t\t0:代表批处理本身</span><br><span class=\"line\">\t\t\t\t\t1：代表第一个参数\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t跳转命令：  【  ：和 goto 连用  】\t </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"用户管理\"><a href=\"#用户管理\" class=\"headerlink\" title=\"用户管理\"></a>用户管理</h2><h4 id=\"1-SID\"><a href=\"#1-SID\" class=\"headerlink\" title=\"1. SID\"></a>1. SID</h4><p>在 Windows中 每个登录到系统的用户都有相应的用户ID【UID】</p>\n<ul>\n<li>  用户ID = 系统ID（SID） + 用户编号</li>\n<li>  用户编号：管理员（500），普通（1000）</li>\n<li>  账号与密码存放在 【C:\\Windows\\System32\\config\\SAM】，使用哈希算法【不可逆。安全】</li>\n</ul>\n<h4 id=\"2-系统默认账号【基本的5个】\"><a href=\"#2-系统默认账号【基本的5个】\" class=\"headerlink\" title=\"2. 系统默认账号【基本的5个】\"></a>2. 系统默认账号【基本的5个】</h4><ul>\n<li>给人使用的：<ul>\n<li>  administrator:管理员</li>\n<li>  guest：来宾【默认禁用】</li>\n</ul>\n</li>\n<li>给计算机使用的：<ul>\n<li>  system：系统账户，权力最高</li>\n<li>  local services：本地服务账户，普通用户</li>\n<li>  network services : 网络服务账户，普通用户</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-每个用户都有自己的home目录【存放配置文件】\"><a href=\"#3-每个用户都有自己的home目录【存放配置文件】\" class=\"headerlink\" title=\"3. 每个用户都有自己的home目录【存放配置文件】\"></a>3. 每个用户都有自己的home目录【存放配置文件】</h4><p>即：profile</p>\n<p>如： 【C:\\Users】</p>\n<p>查看 当前用户: whoami </p>\n<p>查看 当前用户的SID：whoami /user</p>\n<p>在管理员权限下：</p>\n<p>cmd:</p>\n<ul>\n<li>  【修改密码】net user 用户名 密码</li>\n<li>  【新建用户】net user  用户名 密码  /add</li>\n<li>  【删除用户】net user 用户名 /del</li>\n<li>  【查看用户】net user</li>\n<li>  【激活/禁用账户】 net user  用户名   /active: yes/no</li>\n</ul>\n<h4 id=\"4-用户组\"><a href=\"#4-用户组\" class=\"headerlink\" title=\"4. 用户组\"></a>4. 用户组</h4><p>为简化权限设置【给组划分权限，将相应权限的用户划分到相应组】</p>\n<ul>\n<li>  管理员</li>\n<li>  来宾</li>\n<li>  用户</li>\n<li>  网络</li>\n<li>  打印机</li>\n<li>  远程桌面</li>\n</ul>\n<p><strong>cmd命令：</strong></p>\n<ul>\n<li>  【查看所有本地组】：net     localgroup     </li>\n<li>  【查看指定的用户组】： net  localgroup 用户组名</li>\n<li>  【添加用户到指定的用户组】： net  localgroup 用户组名 用户名   /add</li>\n<li>  【删除用户到指定的用户组】： net  localgroup 用户组名 用户名   /del</li>\n</ul>\n<p>添加用户/用户组：</p>\n<ul>\n<li>  右键计算机</li>\n<li>  管理</li>\n<li>  用户/用户组</li>\n</ul>\n<h2 id=\"远程管理\"><a href=\"#远程管理\" class=\"headerlink\" title=\"远程管理\"></a>远程管理</h2><h4 id=\"1-远程桌面【端口号：3389】\"><a href=\"#1-远程桌面【端口号：3389】\" class=\"headerlink\" title=\"1. 远程桌面【端口号：3389】\"></a>1. 远程桌面【端口号：3389】</h4><p>步骤：【如果<strong>客户端不是管理员</strong>，则需要在<strong>服务器</strong>上将该用户加入 <strong>远程桌面用户组</strong>】</p>\n<ul>\n<li>  保证 客户端 和 服务器之间 能够 ping通</li>\n<li>服务器 允许被 远程访问：<ul>\n<li>  桌面右键属性</li>\n<li>  远程设置</li>\n<li>  选择允许</li>\n<li>  确定</li>\n</ul>\n</li>\n<li>客户端上<ul>\n<li>  win + R</li>\n<li>  mstsc</li>\n<li>  输入IP地址</li>\n<li>  确定</li>\n<li>  输入用户名和密码</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-telnet\"><a href=\"#2-telnet\" class=\"headerlink\" title=\"2. telnet\"></a>2. telnet</h4><p>步骤：</p>\n<p>服务器：</p>\n<ul>\n<li>  将账户加入到 telnet客户机组</li>\n</ul>\n<p>客户端：</p>\n<ul>\n<li>  在service.msc中开启telnet服务[xp]，在cmd中使用telnet</li>\n</ul>\n<h2 id=\"文件共享\"><a href=\"#文件共享\" class=\"headerlink\" title=\"文件共享\"></a>文件共享</h2><p>【CIFS 协议，445端口（tcp和udp都有）】</p>\n<ul>\n<li>  右键</li>\n<li>  文件/文件夹</li>\n<li>  共享</li>\n<li>  高级共享    </li>\n</ul>\n<ul>\n<li>   共享此文件夹</li>\n<li>   设置共享名（指的是客户端远程访问该共享文件夹时看到的文件夹名）    -    共享名后加1个$表示是隐藏的共享文件</li>\n<li>   设置权限（共享文件夹的权限收到共享权限和NTFS权限共同影响）</li>\n<li>   访问：win+R ,输入：<code>\\\\地址</code></li>\n</ul>\n<p>创建共享：</p>\n<ul>\n<li>  cmd</li>\n<li>  net share 共享名= 路径【如：net share c$ = c:\\】</li>\n</ul>\n<p>默认情况下所有盘符都共享【不安全！！】：</p>\n<p>因此，需要关闭共享：</p>\n<ul>\n<li>方法1：<ul>\n<li>  右键-计算机-管理-服务-找到server-禁用</li>\n</ul>\n</li>\n<li>方法2【暂时的，重启就失效】：<ul>\n<li>  cmd -输入 net share  共享名  /del </li>\n</ul>\n</li>\n<li>  方法3【修改注册表】</li>\n<li>  方法4：【防火墙的入站规则】</li>\n<li>  方法5：将删除共享的命令保存为批处理命令格式，然后放入启动目录</li>\n</ul>\n<h2 id=\"PE系统\"><a href=\"#PE系统\" class=\"headerlink\" title=\"PE系统\"></a>PE系统</h2><p>PE:微型维修系统，由于容量小，只能用于维修</p>\n<p>使用PE破解window密码步骤:</p>\n<ul>\n<li>  制作PE U盘</li>\n<li>  启动计算机进入BIOS后改为U启动</li>\n<li>  进入PE系统</li>\n<li>  使用破解工具【原理：<strong>替换</strong>掉原来系统中的<strong>SAM</strong>中计算出的账户密码的<strong>哈希值</strong>】</li>\n<li>  退出PE</li>\n<li>  切换回硬盘启动</li>\n<li>  使用修改后的密码</li>\n</ul>\n<h2 id=\"DHCP的部署与安全\"><a href=\"#DHCP的部署与安全\" class=\"headerlink\" title=\"DHCP的部署与安全\"></a>DHCP的部署与安全</h2><p>【udp:67和68端口】</p>\n<ol>\n<li><p> dhcp相关：【ip，掩码，网关，dns， 租期】</p>\n</li>\n<li><p>DHCP<strong>租约</strong>过程:</p>\n<ol>\n<li> dhcp discovery:【客户机广播请求IP，请求包中有客户机的MAC地址】</li>\n<li> DHCP服务器发送 offer广播包【包内有dhcp分配给客户机的ip,但没有掩码网关等参数】</li>\n<li> 客户机发送request广播包【客户机确认要使用的IP】</li>\n<li> 服务器DHCP ack 广播包【服务器确认租约，并发送ip,掩码,网关,dns,租约等参数】</li>\n</ol>\n</li>\n<li><p>DHCP 的<strong>续约</strong>过程：</p>\n<ol>\n<li> 当租期达到**50%**时，客户机再次向服务器发送 dhcp request请求</li>\n<li> 如果没有响应，则继续使用至租约**87.5%**时再次向服务器发送 dhcp request请求</li>\n<li> 如果仍然没有响应，则释放ip地址，重新发送dhcp  discovery包</li>\n<li> 如果还没有响应，则分配 169.254.xxx.xxx/16(全球统一的无效地址，用于内网临时通信)</li>\n</ol>\n</li>\n<li><p>DHCP服务器部署【服务器ip要与地址池ip在同一网段】</p>\n<ol>\n<li> 服务器有1个固定的IP</li>\n<li> 安装dhcp服务器插件</li>\n<li>新建作用域和作用域选项<ol>\n<li> 打开dhcp管理工具</li>\n<li> 右键，新建作用域</li>\n<li> 指定地址池名称</li>\n<li> 指定分配的ip范围及掩码</li>\n<li> 指定地址池中不想分配的地址</li>\n<li> 设置租约【默认8天】</li>\n<li> 设置作用域选项【即：网关、dns等】</li>\n</ol>\n</li>\n<li> 激活[右键]</li>\n<li> 客户端验证</li>\n</ol>\n</li>\n<li><p>DHCP常用命令：</p>\n<ol>\n<li> ipconfig  /release【取消租约，释放 ip】</li>\n<li> ipconfig /renew【没有ip时发送dsicovery,有ip时发送request手动续约】</li>\n</ol>\n</li>\n<li><p> 可以继续dhcp的备份和还原【右键dhcp管理页面】</p>\n</li>\n<li><p> 删除dhcp服务器页的服务器后，服务依然进行只是不显示，可以通过高级-查找出服务器来恢复显示。要想完全删除，必须删除作用域</p>\n</li>\n<li><p> 地址保留：对特点的Mac地址分配特定的ip</p>\n</li>\n<li><p> <strong>作用域选项</strong>可以通过设置<strong>服务器选项</strong>批量配置【右键-配置选项】</p>\n</li>\n<li><p>DHCP中各种选项的优先级：</p>\n<ol>\n<li> 作用域选项 &gt; 服务器选项</li>\n</ol>\n</li>\n<li><p><strong>DHCP攻击：</strong></p>\n<ol>\n<li><p><strong>攻击DHCP服务器</strong>：频繁发送伪装的dhcp请求，直到将地址池资源耗尽</p>\n<ol>\n<li> 防御措施：在<strong>管理型交换机的端口</strong>上做<strong>动态MAC地址绑定</strong></li>\n</ol>\n</li>\n<li><p><strong>伪装DHCP服务器</strong>：hack将自己部署为DHCP服务器</p>\n<ol>\n<li> 防御措施：在<strong>管理型交换机上</strong>设置除合法DHCP服务器的端口外，其他端口禁止发送dhcp offer包</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"DNS服务器部署\"><a href=\"#DNS服务器部署\" class=\"headerlink\" title=\"DNS服务器部署\"></a>DNS服务器部署</h2><p>清除缓存DNS: <code>ipconfig  /flushdns</code></p>\n<p>查看dns缓存：<code>ipconfig  /displaydns</code></p>\n<ol>\n<li><p> www:主机名,即给服务器取个名字叫www，管理员取名时一般按功能取【可以<strong>自定义</strong>】</p>\n</li>\n<li><p> baidu.com:域名【这部分是花钱<strong>购买</strong>的】</p>\n</li>\n<li><p> 主机名.域名：完全限定域名(FQDN)【如：<a href=\"http://www.baidu.com】/\">www.baidu.com】</a></p>\n</li>\n<li><p> 根域名：使用小数点<kbd>.</kbd>表示,【浏览器默认补全，不需要手动输入】</p>\n</li>\n<li><p>域名分类【树状】：</p>\n<ul>\n<li>  根域名</li>\n<li>  ​    顶级域名【紧跟根域名的就是顶级域名，如：.com  ,  .cn  ,  .uk等】    </li>\n</ul>\n</li>\n<li><p> DNS使用TCP 、UDP 的 <strong>端口</strong> <strong>53</strong></p>\n</li>\n<li><p>DNS<strong>查询过程</strong>：【递归找本地dns服务器，迭代找具体的服务器】</p>\n<ul>\n<li>  缓存</li>\n<li>  hosts文件</li>\n<li>  本地dns服务器</li>\n<li>  根域</li>\n<li>  顶级域</li>\n<li>  一级域名……</li>\n</ul>\n</li>\n<li><p>DNS<strong>查询的分类</strong>：</p>\n<ul>\n<li>  正向解析：已知域名 -找》IP</li>\n<li>  反向解析：已知IP -解析》域名</li>\n</ul>\n</li>\n<li><p><strong>部署步骤</strong>【正向】：</p>\n<ol>\n<li><p> 打开dns服务器管理工具</p>\n</li>\n<li><p>右键正向区域-创建区域</p>\n<ol>\n<li> 主要区域：主dns服务器 </li>\n<li> 辅助区域：备份dns服务器</li>\n<li> 存根区域：根域名</li>\n</ol>\n<p> 【权威应答：直接向<strong>管理 被访问的主机 的dns服务器</strong>询问后得到的回答】</p>\n</li>\n<li><p> 输入区域名【域名】</p>\n</li>\n<li><p> 创建1个用于解析的区域文件【拓展名 .dns】</p>\n</li>\n<li><p> 下一步。。。完成</p>\n</li>\n</ol>\n</li>\n<li><p>部署后在正向区域出现2条默认记录</p>\n<ol>\n<li> SOA : 宣告谁是权威服务器，世界唯一</li>\n<li> 名称服务器NS：告诉别人当前可以由哪台服务器解析</li>\n</ol>\n</li>\n<li><p>添加解析记录：</p>\n<ol>\n<li> 正向区域右键</li>\n<li> 新建主机【A记录，一种正向解析记录】</li>\n<li> 输入名称【主机名，如：www】</li>\n<li> 输入IP地址【该ip地址会与上面的地址解析关联，档解析解析上面的域名时，返回该ip地址】</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"WEB服务器\"><a href=\"#WEB服务器\" class=\"headerlink\" title=\"WEB服务器\"></a>WEB服务器</h2><p>http: tcp 80 端口</p>\n<p>htts: tcp 443 端口</p>\n<p>常用的web服务器发布软件：iis / apache/nginx/tomcat</p>\n<ol>\n<li>部署web服务器<strong>步骤</strong>：<ol>\n<li> 配置静态IP</li>\n<li> 安装IIS【安装iis后会自动创建1个以 iuser 开头的匿名用户】</li>\n<li> 网站默认存放在 c:\\Inetpub下</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"FTP\"><a href=\"#FTP\" class=\"headerlink\" title=\"FTP\"></a>FTP</h2><p>端口号：tcp 20/21端口</p>\n<p>ftp的两种工作模式：</p>\n<ul>\n<li>  主动模式</li>\n<li>  被动模式</li>\n</ul>\n<p>ftp用户的最终权限 = ftp权限  与  ntfs权限 的交集</p>\n<p>建议：设置ftp站点时勾选所有ftp权限，具体权限的设置在ntfs中完成</p>\n<p>用户名和密码一般新建1个用户供他人使用</p>\n<p>推荐的第三方ftp服务软件【20人以内】：slyar ftp server ; serv-U【百人以内】</p>\n<h2 id=\"域和活动目录\"><a href=\"#域和活动目录\" class=\"headerlink\" title=\"域和活动目录\"></a>域和活动目录</h2><ol>\n<li><p>  计算机一般有两种工作环境：    +   工作组【人人平等】    +   域【人人不平等】</p>\n</li>\n<li><p>  1个域 由 域控制器 (<strong>DC)</strong> 控制【通常：<strong>域控制器</strong>也是 <strong>域内的DNS服务器</strong>】</p>\n</li>\n<li><p>   通常1台计算机<strong>加入域后，本地账户就失效</strong>，只能使用域账户，域账户的用户名和密码存放在<strong>DC</strong>的一张资源表中【即：活动目录AD，<strong>AD是属于整个域的资源</strong>】，在登录 域中的某一台计算机时，计算机会利用DNS服务找到DC，DC会将接收到的用户名密码与AD表中的条目 相比对，如果在AD中有该用户名和密码，则允许该客户端登录</p>\n</li>\n<li><p>  在DC上，还可以设置组策略，对域内的计算机进行统一的管控</p>\n</li>\n<li><p> 计算机<strong>登录到域</strong>后可以<strong>访问域资源</strong>【只有用域账户登录才行】</p>\n</li>\n<li><p><strong>安装步骤：</strong></p>\n<ol>\n<li> 在要配置成DC的服务器上配置<strong>静态IP</strong>【不需要配置dns】</li>\n<li> 【win+R =&gt; 输入 dcpromo】</li>\n<li> 勾选 “通过在计算机上安装DNS服务器进行自动更正”</li>\n<li> 勾选“新林中新建域”【适用于第一次建域】</li>\n<li> 输入该域的<strong>根级域名</strong>【该域的下面的子域名（如mail.baidu.com）都写在根级域名（baidu.com）的前面，】</li>\n<li> 设置<strong>林的功能级别</strong>【若设为window server 2008r2，那么今后该林内的新建的dc只能是2008r2以上的版本】</li>\n<li> 设置<strong>域功能级别</strong>【域功能级别只对当前域有效，其子域受林功能基本控制】</li>\n<li> 一直确定【不要更改默认路径！！（活动目录就是ntds数据库文件，sysvol就是组策略）】</li>\n<li> 设置活动目录的<strong>还原密码</strong>【该密码只在做还原域的操作时有用】</li>\n<li> 安装后重启</li>\n</ol>\n</li>\n<li><p> 当1台服务器成为域中的DC后，该服务器【DC】上原来的本地账户自动迁移到AD表中【登录时可以看到：（用户名变为：qf\\admin  ， 其中：qf为域名，admin为原来的本地账户）】</p>\n</li>\n<li><p>打开 “AD用户和计算机”，展开域名，在展开的项中</p>\n<ol>\n<li> computers：域中的普通成员</li>\n<li> domain controller:域控制器</li>\n<li> users：域账户【部分账号 来自 该计算机原先的本地账户】</li>\n</ol>\n</li>\n<li><p>将普通的计算机加入域：</p>\n<ol>\n<li> 将计算机 连入 域所在的网络【不需要配网关，但需要配dns(域控制器的ip),域控制器在配置ip的界面上要将dns配为运营商的dns使域能上外网】</li>\n<li> 右键“计算机” - “属性”-“计算机名更改设置”-输入要改成计算机的名字和域名</li>\n<li> 使用域管理员登录【qf.com\\admin ; 123.com】</li>\n<li> 重启计算机</li>\n</ol>\n</li>\n<li><p>在DC的<strong>AD</strong>上建立<strong>普通域账户</strong>给加入到<strong>域的普通计算机</strong>使用：</p>\n<ol>\n<li> 打开AD</li>\n<li> 右键“users”-“新建”-“用户”</li>\n<li> 输入姓和名</li>\n<li> 输入登录名。下一步</li>\n<li> 输入密码和确认密码</li>\n<li> 去掉“下次登录时更改密码”</li>\n</ol>\n</li>\n<li><p>普通域用户对特定电脑有管理员权限：</p>\n<ol>\n<li> 用域管理员身份登录特定电脑</li>\n<li> 打开本地管理员组</li>\n<li> 查找位置为域 将该 普通域账户 加入到特定电脑的 本地管理员组 中</li>\n</ol>\n</li>\n<li><p><strong>加入域不成功</strong>的原因：</p>\n<ol>\n<li> 网络不通</li>\n<li> dns解析不成功</li>\n<li> dns缓存</li>\n</ol>\n</li>\n<li><p><strong>登录域不成功</strong>的原因：</p>\n<ol>\n<li> 用户名错误</li>\n</ol>\n</li>\n<li><p> OU：组织单元【用于对域资源 <strong>(即：域用户，域计算机，域组)</strong> 进行归类】</p>\n</li>\n<li><p>组和OU的区别：</p>\n<ol>\n<li> 组：为了赋予组内的账户权限</li>\n<li> OU：为了下发 <strong>组策略</strong></li>\n</ol>\n</li>\n<li><p>创建OU:</p>\n<ol>\n<li> 打开AD，右键域名文件夹</li>\n<li> 新建-组织单元</li>\n<li> 输入ou的名字</li>\n<li> 完成</li>\n<li> 右键用户</li>\n<li> 所有任务</li>\n<li> 移动</li>\n<li> 选择要移到的OU</li>\n<li> 确定</li>\n</ol>\n</li>\n<li><p>组策略【GPO】:通过组策略可以修改计算机的各种属性【开始菜单;桌面背景;网络参数等】</p>\n<ol>\n<li> <strong>组策略在域中是由OU下发的</strong></li>\n<li> 组策略下发后，用户的应用顺序【lsdou：本地-站点-域-组织单元】</li>\n<li> 开始-管理工具-组策略管理</li>\n<li> 组策略的3 种状态：【启用，禁止，未配置】</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"案例1\"><a href=\"#案例1\" class=\"headerlink\" title=\"案例1\"></a>案例1</h2><p>利用window 7 粘滞键 (在登录界面按5次shift)登录 不知道密码 的计算机</p>\n<p>【C:\\Windows\\System32\\sethc.exe】</p>\n<p>步骤：</p>\n<ul>\n<li>  强制断电后开机</li>\n<li>  进入 启动修复界面</li>\n<li>  查看问题反馈【目的 : 打开txt】</li>\n<li>  打开路径并将粘滞键改名【路径：C:\\Windows\\System32\\sethc.exe】</li>\n<li>  将cmd改名为粘滞键的文件名</li>\n<li>  重启</li>\n<li>  按5次shift 弹出</li>\n<li>  cmd中在管理员组中添加新用户</li>\n</ul>\n<ol start=\"2\">\n<li>新建-组织单元<ol start=\"3\">\n<li> 输入ou的名字</li>\n<li> 完成</li>\n<li> 右键用户</li>\n<li> 所有任务</li>\n<li> 移动</li>\n<li> 选择要移到的OU</li>\n<li> 确定</li>\n</ol>\n</li>\n<li>组策略【GPO】:通过组策略可以修改计算机的各种属性【开始菜单;桌面背景;网络参数等】<ol>\n<li> <strong>组策略在域中是由OU下发的</strong></li>\n<li> 组策略下发后，用户的应用顺序【lsdou：本地-站点-域-组织单元】</li>\n<li> 开始-管理工具-组策略管理</li>\n<li> 组策略的3 种状态：【启用，禁止，未配置】</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"案例1-1\"><a href=\"#案例1-1\" class=\"headerlink\" title=\"案例1\"></a>案例1</h2><p>利用window 7 粘滞键 (在登录界面按5次shift)登录 不知道密码 的计算机</p>\n<p>【C:\\Windows\\System32\\sethc.exe】</p>\n<p>步骤：</p>\n<ul>\n<li>  强制断电后开机</li>\n<li>  进入 启动修复界面</li>\n<li>  查看问题反馈【目的 : 打开txt】</li>\n<li>  打开路径并将粘滞键改名【路径：C:\\Windows\\System32\\sethc.exe】</li>\n<li>  将cmd改名为粘滞键的文件名</li>\n<li>  重启</li>\n<li>  按5次shift 弹出</li>\n<li>  cmd中在管理员组中添加新用户</li>\n<li>  使用新用户登录</li>\n</ul>\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"Windows操作系统使用-笔记\"><a href=\"#Windows操作系统使用-笔记\" class=\"headerlink\" title=\"Windows操作系统使用-笔记\"></a>Windows操作系统使用-笔记</h1><p>[toc]</p>\n<h2 id=\"DOS\"><a href=\"#DOS\" class=\"headerlink\" title=\"DOS\"></a>DOS</h2><p><a href=\"https://blog.csdn.net/m0_46578592/article/details/110527563\">批处理笔记-链接</a></p>\n<h4 id=\"1-更改cmd-的窗口背景色及字体颜色\"><a href=\"#1-更改cmd-的窗口背景色及字体颜色\" class=\"headerlink\" title=\"1. 更改cmd 的窗口背景色及字体颜色\"></a>1. 更改cmd 的<em>窗口背景色</em>及<em>字体颜色</em></h4><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 颜色属性由两个十六进制数字指定 --(如： <span class=\"built_in\">color</span> fc)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t  第一个\t 十六进制数字 对应于背景</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t  第二个    十六进制数字 对应于前景</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  每个数字</span><br><span class=\"line\">\t可以为以下任何值:</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t <span class=\"number\">0</span>=黑色       <span class=\"number\">8</span>=灰色</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t  \t <span class=\"number\">1</span>=蓝色       <span class=\"number\">9</span>=淡蓝色</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t   \t <span class=\"number\">2</span>=绿色       A=淡绿色</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t   \t <span class=\"number\">3</span>=浅绿色     B=淡浅绿色</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \t <span class=\"number\">4</span>=红色       C=淡红色</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \t <span class=\"number\">5</span>=紫色       D=淡紫色</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \t <span class=\"number\">6</span>=黄色       E=淡黄色</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \t <span class=\"number\">7</span>=白色       F=亮白色  </span><br><span class=\"line\"></span><br><span class=\"line\">\t  </span><br><span class=\"line\"></span><br><span class=\"line\">如果没有给定任何参数，此命令会将颜色还原到 <span class=\"built_in\">cmd</span>.exe 启动时的颜色。</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t这个值来自当前控制台窗口、</span><br><span class=\"line\">\t\t/T 命令行开关,</span><br><span class=\"line\">\t\t或 DefaultColor 注册表\t值。  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">如果尝试使用相同的\t前景和背景颜色  来执行  <span class=\"built_in\">COLOR</span> 命令，<span class=\"built_in\">COLOR</span> 命令会将 <span class=\"keyword\">ERRORLEVEL</span> 设置为 <span class=\"number\">1</span>。  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">示例: &quot;<span class=\"built_in\">COLOR</span> fc&quot; 在亮白色上产生淡红色</span><br><span class=\"line\"></span><br><span class=\"line\">\t  <span class=\"built_in\">color</span> <span class=\"number\">0</span>a\t\t//第一个对应于背景，第二个对应于前景\t\t    \t </span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"2-ipconfig\"><a href=\"#2-ipconfig\" class=\"headerlink\" title=\"2. ipconfig\"></a>2. ipconfig</h4> <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ipconfig</span>                       ... 显示信息</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ipconfig</span> /all                  ... 显示详细信息</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ipconfig</span> /renew                ... 更新所有适配器</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ipconfig</span> /renew EL*            ... 更新所有名称以 EL 开头的连接</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ipconfig</span> /release *<span class=\"built_in\">Con</span>*        ... 释放所有匹配的连接，</span><br><span class=\"line\">                                         例如“有线以太网连接 <span class=\"number\">1</span>”或</span><br><span class=\"line\">                                             “有线以太网连接 <span class=\"number\">2</span>”</span><br><span class=\"line\">                                             </span><br><span class=\"line\"><span class=\"built_in\">ipconfig</span> /allcompartments /all ... 显示有关所有隔离舱的详细信息                                             </span><br><span class=\"line\"><span class=\"built_in\">ipconfig</span> /allcompartments      ... 显示有关所有隔离舱的信息</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-net-user-显示所有-网络用户账号\"><a href=\"#3-net-user-显示所有-网络用户账号\" class=\"headerlink\" title=\"3. net user(显示所有 网络用户账号)\"></a>3. net user(显示所有 网络用户账号)</h4><h4 id=\"4-文件管理\"><a href=\"#4-文件管理\" class=\"headerlink\" title=\"4. 文件管理\"></a>4. 文件管理</h4><blockquote>\n<p>   文件路径                                             : <code>D:\\abc\\1.txt</code><br>   列出文件(包括隐藏的)                       : <code>dir  /a    </code><br>   执行完命令后<strong>不退出cmd</strong>                 : <code>pause </code><br>   改变窗口<strong>标题</strong>                                    : <code>title 想要的标题</code><br>   <strong>清屏</strong>                                                   : <code>cls  </code><br>   <strong>读取</strong>文件                                           :<code> type 文件名</code><br>   将<strong>源文件内容</strong>输出到<strong>目标文件</strong>        : <code>copy 源文件 目标文件 </code>,<code>例如： copy con ./1.txt</code><br>   <strong>剪切</strong>文件                                       : <code>move  源文件全名     目标文件全名</code><br>   设置<strong>隐藏文件</strong>        : <code>attrib  +/- h   文件名.后缀</code>   ,其中： <code>h隐藏文件 , s系统级的文件 ，a追加写</code>  </p>\n<p>   <strong>隐藏当前文件夹</strong>内部的所有文件    : 只输入 attrib </p>\n<p>   <strong>创建文件</strong>                                          ： <code>fsutil  file  createnew  文件名   文件大小（单位：字节）</code> </p>\n   <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">\t\tfsutil  file  createnew  d:\\system.ini   文件大小(单位：字节)  </span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t如果配合  <span class=\"built_in\">attrib</span> +a;+s;+h   就可以减少硬盘存储而找不到原因  </span><br></pre></td></tr></table></figure>\n\n<p>   <strong>创建文件夹</strong>                              : <code>md 文件夹名</code>        </p>\n<p>   <strong>文件/文件夹重命名</strong>                : <code>ren  旧名  新名</code> </p>\n<p>   <strong>删除文件</strong>                                 : <code>del  文件名</code>                                            </p>\n   <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：\t<span class=\"built_in\">del</span> *.* /s/q  &gt;<span class=\"built_in\">nul</span>   <span class=\"number\">2</span>&gt;<span class=\"built_in\">nul</span>    </span><br><span class=\"line\">    </span><br><span class=\"line\">\t  //删除所有文件，</span><br><span class=\"line\">\t  \t\t/s 表示递归 ，</span><br><span class=\"line\">\t  \t\t/q表示让系统不再弹出确认的询问信息，</span><br><span class=\"line\">\t  \t\t<span class=\"number\">1</span>&gt;<span class=\"built_in\">nul</span> 不再弹出正确提示，</span><br><span class=\"line\">\t  \t\t<span class=\"number\">2</span>&gt;<span class=\"built_in\">nul</span> 不再弹出错误提示\t</span><br></pre></td></tr></table></figure>\n\n<pre><code>**删除文件夹**                        : `rd  文件夹名    `\n\n更改**文件关联性** \n</code></pre>\n   <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">assoc</span>  .txt = exefile\t\t\t</span><br><span class=\"line\">\t\t\t\t\t\t//将txt文件与exe文件关联，让系统认为 txt程序 是 exe程序</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">assoc</span>  .txt = txtfile\t</span><br><span class=\"line\">\t\t\t\t\t\t//改回来</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h4 id=\"5-杀进程\"><a href=\"#5-杀进程\" class=\"headerlink\" title=\"5. 杀进程\"></a>5. 杀进程</h4><blockquote>\n<p><code>taskkill -im 进程名(如:notepad.exe) /f  &gt;nul 2&gt;nul</code>                                                        </p>\n<p>​                                            表示：杀死进程，强制，不提示正确/错误 信息  </p>\n</blockquote>\n<h4 id=\"6-关机-重启-注销\"><a href=\"#6-关机-重启-注销\" class=\"headerlink\" title=\"6.关机/重启/注销:\"></a>6.关机/重启/注销:</h4><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shutdown -s -t 时间（秒）\t\t\t\t//关机，；-r 重启；-f 强制执行；-c “ 提示信息xxx”</span><br><span class=\"line\"></span><br><span class=\"line\">shutdown -s -f -t  秒数  -c &quot;文字xxx&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">shutdown -a\t\t\t\t\t\t\t\t// -a 可以取消命令</span><br><span class=\"line\"></span><br><span class=\"line\">shutdown -l \t\t\t\t\t\t\t//注销，==logoff</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"7-输出\"><a href=\"#7-输出\" class=\"headerlink\" title=\"7. 输出\"></a>7. 输出</h4><blockquote>\n<p>   输出空行            : <code>echo.</code>    </p>\n<p>   路径提示            :     </p>\n<p>   ​                            @echo off          //关掉路径提示信息<br>   ​                            @echo on        //开启路径提示信息  </p>\n</blockquote>\n<h4 id=\"8-查看本地开放的所有端口：-1个端口对应1个服务\"><a href=\"#8-查看本地开放的所有端口：-1个端口对应1个服务\" class=\"headerlink\" title=\"8.  查看本地开放的所有端口：[1个端口对应1个服务]\"></a>8.  查看本地开放的所有端口：[1个端口对应1个服务]</h4><blockquote>\n<p>  netstat -an</p>\n</blockquote>\n<h2 id=\"批处理脚本\"><a href=\"#批处理脚本\" class=\"headerlink\" title=\"批处理脚本\"></a>批处理脚本</h2><p>win10 启动路径：</p>\n<ul>\n<li>  C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs</li>\n</ul>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">后缀 \t：  .bat</span><br><span class=\"line\"></span><br><span class=\"line\">作用\t：  自上而下，执行命令，直到执行完所有命令（即使中间有命令无法执行，也不会停止）</span><br><span class=\"line\"></span><br><span class=\"line\">命令\t：  dos命令</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t设置变量： <span class=\"builtin-name\">set</span> <span class=\"attribute\">a</span>=1</span><br><span class=\"line\">\t取变量\t：  %a%</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t由用户输入变量的值： <span class=\"builtin-name\">set</span> /p a=</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t位置变量(代表参数)： 如 shutdown -s -t %1</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t\t\t\t0:代表批处理本身</span><br><span class=\"line\">\t\t\t\t\t1：代表第一个参数\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t跳转命令：  【  ：和 goto 连用  】\t </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"用户管理\"><a href=\"#用户管理\" class=\"headerlink\" title=\"用户管理\"></a>用户管理</h2><h4 id=\"1-SID\"><a href=\"#1-SID\" class=\"headerlink\" title=\"1. SID\"></a>1. SID</h4><p>在 Windows中 每个登录到系统的用户都有相应的用户ID【UID】</p>\n<ul>\n<li>  用户ID = 系统ID（SID） + 用户编号</li>\n<li>  用户编号：管理员（500），普通（1000）</li>\n<li>  账号与密码存放在 【C:\\Windows\\System32\\config\\SAM】，使用哈希算法【不可逆。安全】</li>\n</ul>\n<h4 id=\"2-系统默认账号【基本的5个】\"><a href=\"#2-系统默认账号【基本的5个】\" class=\"headerlink\" title=\"2. 系统默认账号【基本的5个】\"></a>2. 系统默认账号【基本的5个】</h4><ul>\n<li>给人使用的：<ul>\n<li>  administrator:管理员</li>\n<li>  guest：来宾【默认禁用】</li>\n</ul>\n</li>\n<li>给计算机使用的：<ul>\n<li>  system：系统账户，权力最高</li>\n<li>  local services：本地服务账户，普通用户</li>\n<li>  network services : 网络服务账户，普通用户</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-每个用户都有自己的home目录【存放配置文件】\"><a href=\"#3-每个用户都有自己的home目录【存放配置文件】\" class=\"headerlink\" title=\"3. 每个用户都有自己的home目录【存放配置文件】\"></a>3. 每个用户都有自己的home目录【存放配置文件】</h4><p>即：profile</p>\n<p>如： 【C:\\Users】</p>\n<p>查看 当前用户: whoami </p>\n<p>查看 当前用户的SID：whoami /user</p>\n<p>在管理员权限下：</p>\n<p>cmd:</p>\n<ul>\n<li>  【修改密码】net user 用户名 密码</li>\n<li>  【新建用户】net user  用户名 密码  /add</li>\n<li>  【删除用户】net user 用户名 /del</li>\n<li>  【查看用户】net user</li>\n<li>  【激活/禁用账户】 net user  用户名   /active: yes/no</li>\n</ul>\n<h4 id=\"4-用户组\"><a href=\"#4-用户组\" class=\"headerlink\" title=\"4. 用户组\"></a>4. 用户组</h4><p>为简化权限设置【给组划分权限，将相应权限的用户划分到相应组】</p>\n<ul>\n<li>  管理员</li>\n<li>  来宾</li>\n<li>  用户</li>\n<li>  网络</li>\n<li>  打印机</li>\n<li>  远程桌面</li>\n</ul>\n<p><strong>cmd命令：</strong></p>\n<ul>\n<li>  【查看所有本地组】：net     localgroup     </li>\n<li>  【查看指定的用户组】： net  localgroup 用户组名</li>\n<li>  【添加用户到指定的用户组】： net  localgroup 用户组名 用户名   /add</li>\n<li>  【删除用户到指定的用户组】： net  localgroup 用户组名 用户名   /del</li>\n</ul>\n<p>添加用户/用户组：</p>\n<ul>\n<li>  右键计算机</li>\n<li>  管理</li>\n<li>  用户/用户组</li>\n</ul>\n<h2 id=\"远程管理\"><a href=\"#远程管理\" class=\"headerlink\" title=\"远程管理\"></a>远程管理</h2><h4 id=\"1-远程桌面【端口号：3389】\"><a href=\"#1-远程桌面【端口号：3389】\" class=\"headerlink\" title=\"1. 远程桌面【端口号：3389】\"></a>1. 远程桌面【端口号：3389】</h4><p>步骤：【如果<strong>客户端不是管理员</strong>，则需要在<strong>服务器</strong>上将该用户加入 <strong>远程桌面用户组</strong>】</p>\n<ul>\n<li>  保证 客户端 和 服务器之间 能够 ping通</li>\n<li>服务器 允许被 远程访问：<ul>\n<li>  桌面右键属性</li>\n<li>  远程设置</li>\n<li>  选择允许</li>\n<li>  确定</li>\n</ul>\n</li>\n<li>客户端上<ul>\n<li>  win + R</li>\n<li>  mstsc</li>\n<li>  输入IP地址</li>\n<li>  确定</li>\n<li>  输入用户名和密码</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-telnet\"><a href=\"#2-telnet\" class=\"headerlink\" title=\"2. telnet\"></a>2. telnet</h4><p>步骤：</p>\n<p>服务器：</p>\n<ul>\n<li>  将账户加入到 telnet客户机组</li>\n</ul>\n<p>客户端：</p>\n<ul>\n<li>  在service.msc中开启telnet服务[xp]，在cmd中使用telnet</li>\n</ul>\n<h2 id=\"文件共享\"><a href=\"#文件共享\" class=\"headerlink\" title=\"文件共享\"></a>文件共享</h2><p>【CIFS 协议，445端口（tcp和udp都有）】</p>\n<ul>\n<li>  右键</li>\n<li>  文件/文件夹</li>\n<li>  共享</li>\n<li>  高级共享    </li>\n</ul>\n<ul>\n<li>   共享此文件夹</li>\n<li>   设置共享名（指的是客户端远程访问该共享文件夹时看到的文件夹名）    -    共享名后加1个$表示是隐藏的共享文件</li>\n<li>   设置权限（共享文件夹的权限收到共享权限和NTFS权限共同影响）</li>\n<li>   访问：win+R ,输入：<code>\\\\地址</code></li>\n</ul>\n<p>创建共享：</p>\n<ul>\n<li>  cmd</li>\n<li>  net share 共享名= 路径【如：net share c$ = c:\\】</li>\n</ul>\n<p>默认情况下所有盘符都共享【不安全！！】：</p>\n<p>因此，需要关闭共享：</p>\n<ul>\n<li>方法1：<ul>\n<li>  右键-计算机-管理-服务-找到server-禁用</li>\n</ul>\n</li>\n<li>方法2【暂时的，重启就失效】：<ul>\n<li>  cmd -输入 net share  共享名  /del </li>\n</ul>\n</li>\n<li>  方法3【修改注册表】</li>\n<li>  方法4：【防火墙的入站规则】</li>\n<li>  方法5：将删除共享的命令保存为批处理命令格式，然后放入启动目录</li>\n</ul>\n<h2 id=\"PE系统\"><a href=\"#PE系统\" class=\"headerlink\" title=\"PE系统\"></a>PE系统</h2><p>PE:微型维修系统，由于容量小，只能用于维修</p>\n<p>使用PE破解window密码步骤:</p>\n<ul>\n<li>  制作PE U盘</li>\n<li>  启动计算机进入BIOS后改为U启动</li>\n<li>  进入PE系统</li>\n<li>  使用破解工具【原理：<strong>替换</strong>掉原来系统中的<strong>SAM</strong>中计算出的账户密码的<strong>哈希值</strong>】</li>\n<li>  退出PE</li>\n<li>  切换回硬盘启动</li>\n<li>  使用修改后的密码</li>\n</ul>\n<h2 id=\"DHCP的部署与安全\"><a href=\"#DHCP的部署与安全\" class=\"headerlink\" title=\"DHCP的部署与安全\"></a>DHCP的部署与安全</h2><p>【udp:67和68端口】</p>\n<ol>\n<li><p> dhcp相关：【ip，掩码，网关，dns， 租期】</p>\n</li>\n<li><p>DHCP<strong>租约</strong>过程:</p>\n<ol>\n<li> dhcp discovery:【客户机广播请求IP，请求包中有客户机的MAC地址】</li>\n<li> DHCP服务器发送 offer广播包【包内有dhcp分配给客户机的ip,但没有掩码网关等参数】</li>\n<li> 客户机发送request广播包【客户机确认要使用的IP】</li>\n<li> 服务器DHCP ack 广播包【服务器确认租约，并发送ip,掩码,网关,dns,租约等参数】</li>\n</ol>\n</li>\n<li><p>DHCP 的<strong>续约</strong>过程：</p>\n<ol>\n<li> 当租期达到**50%**时，客户机再次向服务器发送 dhcp request请求</li>\n<li> 如果没有响应，则继续使用至租约**87.5%**时再次向服务器发送 dhcp request请求</li>\n<li> 如果仍然没有响应，则释放ip地址，重新发送dhcp  discovery包</li>\n<li> 如果还没有响应，则分配 169.254.xxx.xxx/16(全球统一的无效地址，用于内网临时通信)</li>\n</ol>\n</li>\n<li><p>DHCP服务器部署【服务器ip要与地址池ip在同一网段】</p>\n<ol>\n<li> 服务器有1个固定的IP</li>\n<li> 安装dhcp服务器插件</li>\n<li>新建作用域和作用域选项<ol>\n<li> 打开dhcp管理工具</li>\n<li> 右键，新建作用域</li>\n<li> 指定地址池名称</li>\n<li> 指定分配的ip范围及掩码</li>\n<li> 指定地址池中不想分配的地址</li>\n<li> 设置租约【默认8天】</li>\n<li> 设置作用域选项【即：网关、dns等】</li>\n</ol>\n</li>\n<li> 激活[右键]</li>\n<li> 客户端验证</li>\n</ol>\n</li>\n<li><p>DHCP常用命令：</p>\n<ol>\n<li> ipconfig  /release【取消租约，释放 ip】</li>\n<li> ipconfig /renew【没有ip时发送dsicovery,有ip时发送request手动续约】</li>\n</ol>\n</li>\n<li><p> 可以继续dhcp的备份和还原【右键dhcp管理页面】</p>\n</li>\n<li><p> 删除dhcp服务器页的服务器后，服务依然进行只是不显示，可以通过高级-查找出服务器来恢复显示。要想完全删除，必须删除作用域</p>\n</li>\n<li><p> 地址保留：对特点的Mac地址分配特定的ip</p>\n</li>\n<li><p> <strong>作用域选项</strong>可以通过设置<strong>服务器选项</strong>批量配置【右键-配置选项】</p>\n</li>\n<li><p>DHCP中各种选项的优先级：</p>\n<ol>\n<li> 作用域选项 &gt; 服务器选项</li>\n</ol>\n</li>\n<li><p><strong>DHCP攻击：</strong></p>\n<ol>\n<li><p><strong>攻击DHCP服务器</strong>：频繁发送伪装的dhcp请求，直到将地址池资源耗尽</p>\n<ol>\n<li> 防御措施：在<strong>管理型交换机的端口</strong>上做<strong>动态MAC地址绑定</strong></li>\n</ol>\n</li>\n<li><p><strong>伪装DHCP服务器</strong>：hack将自己部署为DHCP服务器</p>\n<ol>\n<li> 防御措施：在<strong>管理型交换机上</strong>设置除合法DHCP服务器的端口外，其他端口禁止发送dhcp offer包</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"DNS服务器部署\"><a href=\"#DNS服务器部署\" class=\"headerlink\" title=\"DNS服务器部署\"></a>DNS服务器部署</h2><p>清除缓存DNS: <code>ipconfig  /flushdns</code></p>\n<p>查看dns缓存：<code>ipconfig  /displaydns</code></p>\n<ol>\n<li><p> www:主机名,即给服务器取个名字叫www，管理员取名时一般按功能取【可以<strong>自定义</strong>】</p>\n</li>\n<li><p> baidu.com:域名【这部分是花钱<strong>购买</strong>的】</p>\n</li>\n<li><p> 主机名.域名：完全限定域名(FQDN)【如：<a href=\"http://www.baidu.com】/\">www.baidu.com】</a></p>\n</li>\n<li><p> 根域名：使用小数点<kbd>.</kbd>表示,【浏览器默认补全，不需要手动输入】</p>\n</li>\n<li><p>域名分类【树状】：</p>\n<ul>\n<li>  根域名</li>\n<li>  ​    顶级域名【紧跟根域名的就是顶级域名，如：.com  ,  .cn  ,  .uk等】    </li>\n</ul>\n</li>\n<li><p> DNS使用TCP 、UDP 的 <strong>端口</strong> <strong>53</strong></p>\n</li>\n<li><p>DNS<strong>查询过程</strong>：【递归找本地dns服务器，迭代找具体的服务器】</p>\n<ul>\n<li>  缓存</li>\n<li>  hosts文件</li>\n<li>  本地dns服务器</li>\n<li>  根域</li>\n<li>  顶级域</li>\n<li>  一级域名……</li>\n</ul>\n</li>\n<li><p>DNS<strong>查询的分类</strong>：</p>\n<ul>\n<li>  正向解析：已知域名 -找》IP</li>\n<li>  反向解析：已知IP -解析》域名</li>\n</ul>\n</li>\n<li><p><strong>部署步骤</strong>【正向】：</p>\n<ol>\n<li><p> 打开dns服务器管理工具</p>\n</li>\n<li><p>右键正向区域-创建区域</p>\n<ol>\n<li> 主要区域：主dns服务器 </li>\n<li> 辅助区域：备份dns服务器</li>\n<li> 存根区域：根域名</li>\n</ol>\n<p> 【权威应答：直接向<strong>管理 被访问的主机 的dns服务器</strong>询问后得到的回答】</p>\n</li>\n<li><p> 输入区域名【域名】</p>\n</li>\n<li><p> 创建1个用于解析的区域文件【拓展名 .dns】</p>\n</li>\n<li><p> 下一步。。。完成</p>\n</li>\n</ol>\n</li>\n<li><p>部署后在正向区域出现2条默认记录</p>\n<ol>\n<li> SOA : 宣告谁是权威服务器，世界唯一</li>\n<li> 名称服务器NS：告诉别人当前可以由哪台服务器解析</li>\n</ol>\n</li>\n<li><p>添加解析记录：</p>\n<ol>\n<li> 正向区域右键</li>\n<li> 新建主机【A记录，一种正向解析记录】</li>\n<li> 输入名称【主机名，如：www】</li>\n<li> 输入IP地址【该ip地址会与上面的地址解析关联，档解析解析上面的域名时，返回该ip地址】</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"WEB服务器\"><a href=\"#WEB服务器\" class=\"headerlink\" title=\"WEB服务器\"></a>WEB服务器</h2><p>http: tcp 80 端口</p>\n<p>htts: tcp 443 端口</p>\n<p>常用的web服务器发布软件：iis / apache/nginx/tomcat</p>\n<ol>\n<li>部署web服务器<strong>步骤</strong>：<ol>\n<li> 配置静态IP</li>\n<li> 安装IIS【安装iis后会自动创建1个以 iuser 开头的匿名用户】</li>\n<li> 网站默认存放在 c:\\Inetpub下</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"FTP\"><a href=\"#FTP\" class=\"headerlink\" title=\"FTP\"></a>FTP</h2><p>端口号：tcp 20/21端口</p>\n<p>ftp的两种工作模式：</p>\n<ul>\n<li>  主动模式</li>\n<li>  被动模式</li>\n</ul>\n<p>ftp用户的最终权限 = ftp权限  与  ntfs权限 的交集</p>\n<p>建议：设置ftp站点时勾选所有ftp权限，具体权限的设置在ntfs中完成</p>\n<p>用户名和密码一般新建1个用户供他人使用</p>\n<p>推荐的第三方ftp服务软件【20人以内】：slyar ftp server ; serv-U【百人以内】</p>\n<h2 id=\"域和活动目录\"><a href=\"#域和活动目录\" class=\"headerlink\" title=\"域和活动目录\"></a>域和活动目录</h2><ol>\n<li><p>  计算机一般有两种工作环境：    +   工作组【人人平等】    +   域【人人不平等】</p>\n</li>\n<li><p>  1个域 由 域控制器 (<strong>DC)</strong> 控制【通常：<strong>域控制器</strong>也是 <strong>域内的DNS服务器</strong>】</p>\n</li>\n<li><p>   通常1台计算机<strong>加入域后，本地账户就失效</strong>，只能使用域账户，域账户的用户名和密码存放在<strong>DC</strong>的一张资源表中【即：活动目录AD，<strong>AD是属于整个域的资源</strong>】，在登录 域中的某一台计算机时，计算机会利用DNS服务找到DC，DC会将接收到的用户名密码与AD表中的条目 相比对，如果在AD中有该用户名和密码，则允许该客户端登录</p>\n</li>\n<li><p>  在DC上，还可以设置组策略，对域内的计算机进行统一的管控</p>\n</li>\n<li><p> 计算机<strong>登录到域</strong>后可以<strong>访问域资源</strong>【只有用域账户登录才行】</p>\n</li>\n<li><p><strong>安装步骤：</strong></p>\n<ol>\n<li> 在要配置成DC的服务器上配置<strong>静态IP</strong>【不需要配置dns】</li>\n<li> 【win+R =&gt; 输入 dcpromo】</li>\n<li> 勾选 “通过在计算机上安装DNS服务器进行自动更正”</li>\n<li> 勾选“新林中新建域”【适用于第一次建域】</li>\n<li> 输入该域的<strong>根级域名</strong>【该域的下面的子域名（如mail.baidu.com）都写在根级域名（baidu.com）的前面，】</li>\n<li> 设置<strong>林的功能级别</strong>【若设为window server 2008r2，那么今后该林内的新建的dc只能是2008r2以上的版本】</li>\n<li> 设置<strong>域功能级别</strong>【域功能级别只对当前域有效，其子域受林功能基本控制】</li>\n<li> 一直确定【不要更改默认路径！！（活动目录就是ntds数据库文件，sysvol就是组策略）】</li>\n<li> 设置活动目录的<strong>还原密码</strong>【该密码只在做还原域的操作时有用】</li>\n<li> 安装后重启</li>\n</ol>\n</li>\n<li><p> 当1台服务器成为域中的DC后，该服务器【DC】上原来的本地账户自动迁移到AD表中【登录时可以看到：（用户名变为：qf\\admin  ， 其中：qf为域名，admin为原来的本地账户）】</p>\n</li>\n<li><p>打开 “AD用户和计算机”，展开域名，在展开的项中</p>\n<ol>\n<li> computers：域中的普通成员</li>\n<li> domain controller:域控制器</li>\n<li> users：域账户【部分账号 来自 该计算机原先的本地账户】</li>\n</ol>\n</li>\n<li><p>将普通的计算机加入域：</p>\n<ol>\n<li> 将计算机 连入 域所在的网络【不需要配网关，但需要配dns(域控制器的ip),域控制器在配置ip的界面上要将dns配为运营商的dns使域能上外网】</li>\n<li> 右键“计算机” - “属性”-“计算机名更改设置”-输入要改成计算机的名字和域名</li>\n<li> 使用域管理员登录【qf.com\\admin ; 123.com】</li>\n<li> 重启计算机</li>\n</ol>\n</li>\n<li><p>在DC的<strong>AD</strong>上建立<strong>普通域账户</strong>给加入到<strong>域的普通计算机</strong>使用：</p>\n<ol>\n<li> 打开AD</li>\n<li> 右键“users”-“新建”-“用户”</li>\n<li> 输入姓和名</li>\n<li> 输入登录名。下一步</li>\n<li> 输入密码和确认密码</li>\n<li> 去掉“下次登录时更改密码”</li>\n</ol>\n</li>\n<li><p>普通域用户对特定电脑有管理员权限：</p>\n<ol>\n<li> 用域管理员身份登录特定电脑</li>\n<li> 打开本地管理员组</li>\n<li> 查找位置为域 将该 普通域账户 加入到特定电脑的 本地管理员组 中</li>\n</ol>\n</li>\n<li><p><strong>加入域不成功</strong>的原因：</p>\n<ol>\n<li> 网络不通</li>\n<li> dns解析不成功</li>\n<li> dns缓存</li>\n</ol>\n</li>\n<li><p><strong>登录域不成功</strong>的原因：</p>\n<ol>\n<li> 用户名错误</li>\n</ol>\n</li>\n<li><p> OU：组织单元【用于对域资源 <strong>(即：域用户，域计算机，域组)</strong> 进行归类】</p>\n</li>\n<li><p>组和OU的区别：</p>\n<ol>\n<li> 组：为了赋予组内的账户权限</li>\n<li> OU：为了下发 <strong>组策略</strong></li>\n</ol>\n</li>\n<li><p>创建OU:</p>\n<ol>\n<li> 打开AD，右键域名文件夹</li>\n<li> 新建-组织单元</li>\n<li> 输入ou的名字</li>\n<li> 完成</li>\n<li> 右键用户</li>\n<li> 所有任务</li>\n<li> 移动</li>\n<li> 选择要移到的OU</li>\n<li> 确定</li>\n</ol>\n</li>\n<li><p>组策略【GPO】:通过组策略可以修改计算机的各种属性【开始菜单;桌面背景;网络参数等】</p>\n<ol>\n<li> <strong>组策略在域中是由OU下发的</strong></li>\n<li> 组策略下发后，用户的应用顺序【lsdou：本地-站点-域-组织单元】</li>\n<li> 开始-管理工具-组策略管理</li>\n<li> 组策略的3 种状态：【启用，禁止，未配置】</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"案例1\"><a href=\"#案例1\" class=\"headerlink\" title=\"案例1\"></a>案例1</h2><p>利用window 7 粘滞键 (在登录界面按5次shift)登录 不知道密码 的计算机</p>\n<p>【C:\\Windows\\System32\\sethc.exe】</p>\n<p>步骤：</p>\n<ul>\n<li>  强制断电后开机</li>\n<li>  进入 启动修复界面</li>\n<li>  查看问题反馈【目的 : 打开txt】</li>\n<li>  打开路径并将粘滞键改名【路径：C:\\Windows\\System32\\sethc.exe】</li>\n<li>  将cmd改名为粘滞键的文件名</li>\n<li>  重启</li>\n<li>  按5次shift 弹出</li>\n<li>  cmd中在管理员组中添加新用户</li>\n</ul>\n<ol start=\"2\">\n<li>新建-组织单元<ol start=\"3\">\n<li> 输入ou的名字</li>\n<li> 完成</li>\n<li> 右键用户</li>\n<li> 所有任务</li>\n<li> 移动</li>\n<li> 选择要移到的OU</li>\n<li> 确定</li>\n</ol>\n</li>\n<li>组策略【GPO】:通过组策略可以修改计算机的各种属性【开始菜单;桌面背景;网络参数等】<ol>\n<li> <strong>组策略在域中是由OU下发的</strong></li>\n<li> 组策略下发后，用户的应用顺序【lsdou：本地-站点-域-组织单元】</li>\n<li> 开始-管理工具-组策略管理</li>\n<li> 组策略的3 种状态：【启用，禁止，未配置】</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"案例1-1\"><a href=\"#案例1-1\" class=\"headerlink\" title=\"案例1\"></a>案例1</h2><p>利用window 7 粘滞键 (在登录界面按5次shift)登录 不知道密码 的计算机</p>\n<p>【C:\\Windows\\System32\\sethc.exe】</p>\n<p>步骤：</p>\n<ul>\n<li>  强制断电后开机</li>\n<li>  进入 启动修复界面</li>\n<li>  查看问题反馈【目的 : 打开txt】</li>\n<li>  打开路径并将粘滞键改名【路径：C:\\Windows\\System32\\sethc.exe】</li>\n<li>  将cmd改名为粘滞键的文件名</li>\n<li>  重启</li>\n<li>  按5次shift 弹出</li>\n<li>  cmd中在管理员组中添加新用户</li>\n<li>  使用新用户登录</li>\n</ul>\n"},{"title":"Java SE-入门笔记","_content":"\n\n# Java SE -入门笔记\n\n[toc]\n\n## 0. 前置知识\n\n文档：\n\n-   [Java 教程 | 菜鸟教程 (runoob.com)](https://www.runoob.com/java/java-tutorial.html)\n-   [在线文档-jdk-zh](https://tool.oschina.net/apidocs/apidoc?api=jdk-zh)\n-   [JavaSE-博客-笔记-网传](https://blog.csdn.net/Zzh1110/article/details/105069644)\n\n\n\n### 0.1 Java 的**文件结构** :\n\n>   项目 ->  模块（包）->  .java文件 -> 类 \n>\n>    \n>\n>   包的命名规范：\n>\n>   1.  由字母、数字下划线组成，不能以数字开头，字母全部小写。\n>   2.  不同路径通过点(.)来分割，如：`java.lang`\n>   3.  为了保证包名唯一性，一般使用域名反写来命名包，如：`com.baidu.music`\n>\n>    \n>\n>     \n>\n>   \n>\n>   新建包：`project -> 右键 src -> new -> package`\n>\n>    \n>\n>   \n>\n>    按包名展开：`左侧导航栏 -> 齿轮 ->  去掉 compact middle packages的勾`\n>\n>   \n\n \n\n### 0.2 运行环境介绍\n\n-   JVM：运行，java虚拟机\n-   JRE：运行，（JVM+lib类库 =》真正可以执行.class文件）\n-   JDK：开发，4个主要的文件夹：`bin、include、lib、 jre`\n\n\n\n范围：\n\n>    JDK > JRE >JVM\n\n\n\n`JDK`是用于java程序的`开发`,而`JRE`则是只能运行class而`没有编译的功能`。\n\n\n\n\n\nJava的能够“一次编译，到处运行”的原因：\n\n>   Java虚拟机在执行字节码（.class文件）时，把字节码解释成具体平台上的机器指令执行。\n\n\n\n\n\n### 0.3 cmd中的Java指令\n\n```bash\njavac 文件名\n\njava 类名\n```\n\n\n\n\n\n## 1. 环境配置 + 快捷键\n\n\n\n### 1.1 JDK-下载：\n\n-    [JDK-官网下载](https://www.oracle.com/java/technologies/javase-downloads.html) \n-    [JDK-下载url](https://www.programmer-box.com/?ref=jdk_1.6)\n-   [JDK的下载、安装和环境配置教程](https://blog.csdn.net/Marvin_996_ICU/article/details/106240065)\n-   [JDK12安装配置-Win10](https://blog.csdn.net/panjiabin321/article/details/89391210)\n\n\n\n### 1.2 IDEA下载：\n\n-   [IntelliJ IDEA下载](https://www.jetbrains.com/zh-cn/idea/download/#section=windows)\n-   [IDEA 2019 下载+安装教程](https://mp.weixin.qq.com/s?__biz=MzU0MTg5NDkzNA==&mid=2247491865&idx=1&sn=9085c37f2b10a3495d68f5d0b66623a2&chksm=fb205160cc57d876a540fb31dcf8990b2d600855d3a195ccc565683899de64bb055401345920&scene=21#wechat_redirect)\n-   [JetBrains 2021 最新版本全家桶激活](https://pan.baidu.com/s/1Yhq_7dP0MOayyEJ-g4_27A)  提取码：ute8\n\n\n\n#### 1.2.1 IDEA的配置：\n\n-   [IDEA-配置-视频](https://www.bilibili.com/video/BV1FZ4y1H7rh?p=174&spm_id_from=pageDriver)\n\n>   1.  新建Project时，需要选择已安装的JDK\n>2.  更改字号：file -> settings -> editor  -> font 或者 general->mouse control -> 勾选change font size whith ctrl mouse\n>   3.  更改快捷键【例如】：file -> settings -> keymap -> 齿轮图标 -> duplicate -> 展开 main Menu -> 展开 code -> code complete -> 展开 -> 选中 -> 右键 -> add keyboard shutcut -> 输入快捷键 -> ok\n>4.  方法分隔符：file -> settings -> editor -> general -> appearance -> show method seperator\n>   \n>\n\n#### 1.2.2 常用快捷键：\n\n| 功能                                 | 快捷键           |\n| ------------------------------------ | ---------------- |\n| 打印 | sout |\n| main 函数 | psvm 或 main |\n| 代码提示                             | alt + /          |\n| 自动导包（修正代码）                 | alt  + enter     |\n| 复制光标所在行，并插入到光标的下一行 | ctrl + d         |\n| 删除一行 | ctrl + y |\n| 格式化代码                           | ctrl + alt +L    |\n| 单行注释                             | ctrl + /         |\n| 多行注释                             | ctrl + shift + / |\n| 自动生成代码（get / set /toString）  | alt  + insert    |\n|移动当前代码行 | alt + shift +  上下箭头|\n|快速写 遍历数组的代码|数组名.fori + enter|\n|快速生成代码块，如：for、if、try-catch| ctrl + alt + T |\n|快速生成 for 代码块| fori |\n|快速生成 增强型 for| iter   或者 foreach |\n|搜索类| ctrl + n |\n|查看子类| ctrl + h |\n\n\n\n\n\n\n\n\n\n\n\n## 2. 数据类型\n\n![数据类型](https://z3.ax1x.com/2021/05/24/gjUjoj.png)\n\n\n\n\n\n### 2.1 char 和 byte 的差别：\n\n-   char 是无符号型的，可以表示一个整数，不能表示负数；char可以表中文字符，\n-   byte 是有符号型的，可以表示 -128—127 的数，byte不可以表中文字符\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 3. 运算符\n\n\n\n![运算符](https://z3.ax1x.com/2021/05/24/gjaKl6.png)\n\n\n\n\n\n\n\n## 4. 数组\n\n>   1.  数组 直接打印: 得到的是`地址`\n>\n>   2.  数组反转：对称位置的元素交换\n>\n>       \n\n\n\n### 4.1 数组的初始化：【4种】\n\n```java\n// 静态[指定内容]：\n\n\t\t// 格式： 数据类型 [] 数组名= new 数据类型[]{数组的内容};\n\t\t\n\t\tint[] arr = new int[]{1,2,4,6};\n\n//==============================================\n//动态[指定长度]\n\n\t\t// 格式：数据类型[] 数组名称 = new 数据类型[长度]\n\t\t\n\t\tint[] arr = new int[10];\n\t\tarr[0] =12;\n\t\tarr[1] = 15;\n\t\tarr[2] = 45;\n\n\n\n//==============================================\n//省略：\n\t\t\n\t\t// 数据类型[] 数组名称 = {数组的内容}；\n\n\t\tint[] arr = {1,2,5,6};\n\n\n\n//==============================================\n//拆分成2步：\n\t\t\n\t\t// 格式: 数据类型[] 数组名称；\n\t\t// 数组名称 = new 数据类型[]{数组内容}； (采用省略格式则不能分步骤写)\n\n\t\tint[] arr;\n\t\tarr = new int[10]{1,2,5,7,9};\n\n```\n\n\n\n\n\n\n\n\n\n## 5. 内存区域的划分\n\n\n\n-   栈(stack)：\n\n>   存放方法的局部变量，运行方法\n>   【局部变量 的特点：一旦超出作用域就会从内存中消失】\n\n\n\n-   堆(heap)：\n\n>   new出来的东西都放在堆中(为：引用类型)，如 ：数组\n>   【堆内的东西都有一个16进制的地址值】\n\n\n\n-   方法区(method area)：\n\n>   存储`.class`的相关信息，包含：方法信息\n\n\n\n-   本地方法栈(native method stack)\n\n\n\n-   寄存器(register)：与cpu相关\n\n\n\n\n\n\n\n\n\n\n\n## 6. 面向对象\n\n\n\n 面向对象的三大特性：\n\n-   封装性(如： private, 方法等)\n-   继承性(extend ,super等)\n-   多态性(**子类**继承**父类**的方法后可以 **覆盖重写**override)\n\n\n\n\n\n\n\n### 6.1 类：\n\n>   1.  `类` = `属性` +` 方法` \t// 方法也就是行为、函数。\n>\n>   \n>\n>   2.  JAVA的`类`：`成员变量`(在类内部，即：属性) **+** `成员方法`+`构造方法`\t\t// 普通变量：写在函数的内部。 \n>\n>   \n>\n>   3.  `方法` ：只能有`1个返回值`。如果想**返回多个数**，可以将**返回值定义为数组**，并返回数组首地址。 \n>\n>   \n>\n>   4.  JavaBean：标准类，类中至少要包括：`无参构造方法`，`全参构造方法`，`属性 + getter + setter`\n>\n>    \n>\n>   5.  构造方法：在创建对象(new)时，自动调用。【快捷键：`alter + insert`】\n\n \n\n#### 6.1.1 构造方法：\n\n>   1.  `构造方法的名称`必须与所在的`类的名称`完全相同，大小写也要一样。\n>       【普通方法首字小写，构造方法首字大写】 \n>   2.   构造方法`不能写返回值类型`，连void也不要写。\n>   3.  构造方法`不能return `返回值。\n>   4.  如果`没有写`构造方法，那么编译器会`自动赠送`1个构造方法。\n>   5.  只要自己编`写了构造方法`，编译器就`不会赠送`构造方法。\n>   6.  可以在定义构造方法时，将所需的参数定义在方法的参数列表中， 可以在创建对象时传入参数。但是还是需要写`getter和setter 方法`，目的是`方便修改参数的值`。\n\n\n\n#### 6.1.2 成员变量 与 局部变量 的区别：\n\n>   1.  `成员变量`：定义在 `类` 的内部，在**类**中都可以**使用**，有`默认值 ` 。\n>\n>   \n>\n>   2.  `局部变量`：定义在 `方法内部`，只能在 **方法内部**使用，`没有默认值`，使用要**先赋值** 。\n\n\n\n\n\n#### 6.1.3 成员变量 与 局部变量 重名时 的优先级：\n\n>   1.  默认根据`就近原则`，`优先`使用 `局部变量`。\n>   2.  如果想使用`成员变量`，可以使用`this关键字`，如： `this.name` 。\n>   3.  `this` 一定是写在`方法内部`的，用于在`变量名相同`时，`做区分` 。\n\n\n\n\n\n\n\n\n\n#### 6.1.4 Override 方法重写 + Overload 方法重载：\n\n-   [方法重写与方法重载的区别-url](https://blog.csdn.net/weixin_44502804/article/details/90523478)\n\n>   `Override 方法重写`： \n>\n>   1.  子类继承父类/接口 后，换掉同名的方法中的处理语句。\n>\n>   2.  方法重写前后：返回值类型、方法名、参数必须一致。\n>   3.  重写后，访问权限必须更宽松，如：重写前 => protected，重写后 => public\n>\n>   \n>\n>   `Overload 方法重载`：\n>\n>   1.  在一个类里面，返回类型可以相同也可以不同，方法名一致，而参数不同。\n\n\n\n覆盖重写Override：【需要先：继承】\n\n```java\n// 父类：属性 + 无参构造 + 全参构造 + getter + setter + Eat()\n// 子类：属性 + 无参构造 + 全参构造 + getter + setter + 覆盖重写的Eat()\n\n\n\n\n\n\n// 父类\npublic class Father {\n    private String name;\n\n    public Father(String name) {\n        this.name = name;\n    }\n\n    public Father() {\n\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n}\n\n\n\n\n\n\n// 子类\npublic class Son extends Father{\n    public Son(String name) {\n        super(name);\n    }\n\n    public Son() {\n    }\n\n    @Override\n    public void eat() {\n        System.out.println(\"son：我要吃 -> 水果\");\n    }\n}\n\n\n\n\n\n//main\npublic class FaterAndSonDemo {\n    public static void main(String[] args) {\n        Father father = new Father(\"刘备\");\n        Son son = new Son(\"阿斗\");\n        father.eat();\n        son.eat();\n    }\n}\n\n\n```\n\n\n\n覆盖重载Overload：\n\n```java\n// 以下代码 省略了 构造方法+ getter + setter\n\npublic class Calc {\n    private int a;\n    private int b;\n    private float c;\n\n\n\t//方法重载1\n    public int sum(int a, int b){\n        return a+b;\n    }\n\t\n    //方法重载2\n    public float sum(int a,int b,float c){\n        return a+b+c;\n    }    \n    \n    \n\n}\n\n```\n\n\n\n\n\n#### 6.1.5 内部类：【4种】\n\n>   `内部类`：1个类 定义在 另一个类 的内部 =》`内部类`(public / protected / private)。 外面的类叫`外部类`(只能public)。\n>\n>    \n>\n>   **注意**：`内部类`可以访问`外部类`的所有`成员变量`和`成员方法`。\n>\n>   \n\n\n\n-   [Java内部类](https://blog.csdn.net/weixin_42762133/article/details/82890555?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160906466316780279191862%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=160906466316780279191862&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-3-82890555.pc_search_result_cache&utm_term=Java)\n\n\n\n1.  成员内部类：\n\n```java\n/*\n * 1. 定义 外部类、外部类属性、构造方法、getter、setter\n * 2. 定义 成员内部类、内部类属性、构造方法、getter、setter\n * 3. 在 main 中，new 外部类对象\n * 4. 格式：外部类名.内部类名 变量名 = 外部类对象.new 内部类名();\n*/\n\n// main\npublic class OutAndInnerClassDemo {\n    public static void main(String[] args) {\n        \n        Outer outer = new Outer();\n        Outer.Inner inner = outer.new Inner();\n        \n    }\n}\n\n//外部类\nclass Outer{  \n \n    public Outer() {\n         System.out.println(\"外部类\");\n    }\n\n    //内部类\n    class Inner{\n   \n        public Inner() {\n             System.out.println(\"内部类\");\n        }      \n    }\n}\n\n```\n\n\n\n2.  静态内部类：\n\n```java\n/*\n * 1. 定义 外部类、外部类属性、构造方法、getter、setter\n * 2. 定义 静态内部类、内部类属性、构造方法、getter、setter\n * 3. 在 main 中，\n * 4. 格式：外部类名.静态内部类名 变量名 = new 外部类名.静态内部类名();\n * 5. \n*/\n\n\n\n// main\npublic class OutAndInnerClassDemo2 {\n    public static void main(String[] args) {\n\n        Outer2.Inner inner = new Outer2.Inner();\n\n    }\n}\n\n//外部类\nclass Outer2 {\n\n    public Outer2() {\n        System.out.println(\"外部类\");\n    }\n\n\n    //静态内部类\n    static class Inner{\n        public Inner() {\n            System.out.println(\"静态内部类\");\n        }\n    }\n}\n\n```\n\n\n\n\n\n3.  方法内部类：【在方法内部：定义、创建new、使用(调用)】\n\n```java\n/*\n * 1. 定义 外部类、外部类属性、构造方法、getter、setter\n * 2. 定义 外部类的方法，该方法中的内部类、内部类属性、构造方法、getter、setter\n * 3. 在 外部类的方法中 new 内部类的对象：内部类名 变量名 = new 内部类名();\n * 4. 在 main 中，\n * 5. 格式：\n \t\t\t外部类 变量名= new 外部类();\n \t\t\t变量名.外部类方法名();\n\n*/\n\n\n\n//main\npublic class OutAndInnerClassDemo3 {\n    public static void main(String[] args) {\n        Outer3 o3 = new Outer3();\n        o3.Func1();\n    }\n}\n\n\n\n// 外部类\nclass Outer3{\n    public Outer3() {\n        System.out.println(\"外部类 -> 创建\");\n    }\n\t\n    // 外部类方法\n    public  void Func1(){\n\n        System.out.println(\"外部类的方法 -> 调用\");\n\n        // 内部类\n        class Inner3{\n            public Inner3() {\n                System.out.println(\"内部类 -> 创建\");\n            }\n\t\t\t\n            // 内部类方法调用\n            public void say(){\n                System.out.println(\"内部类的方法 -> 调用\");\n            }\n        }\n\n        Inner3 i3 = new Inner3();\n        i3.say();\n    }\n\n}\n\n\n```\n\n\n\n\n\n4.  匿名内部类：【方法中 return 1个 new出的对象】  \n\n**注意**：匿名内部类 没有 构造方法。\n\n```java\n/*\n * 1. 定义 接口\n * 2. 定义 外部类、外部类属性、构造方法、getter、setter\n * 3. 定义 外部类的方法，该方法返回1个匿名内部类的对象的定义，在该匿名内部类的对象的定义中重写接口中的方法\n * 4. 在 main 中，\n * 5. 格式：\n \t\t\t外部类 变量名= new 外部类();\n \t\t\t变量名.外部类方法名().重写的方法名();\n\n*/\n\n\n// main\npublic class OutAndInnerClassDemo4 {\n    public static void main(String[] args) {\n\n        Outer4 o4 = new Outer4();\n        o4.getInner4().eat();\t\t\t\t//注意 连续调用 方法\n\n    }\n}\n\n\n\n// 接口\npublic interface Inner4 {\n    void eat();\n}\n\n\n//外部类\nclass Outer4{\n    public Outer4() {\n        System.out.println(\"外部类 -> 创建\");\n    }\n\n    //外部类的方法\n    public Inner4 getInner4(){\n\n        return  new Inner4(){\n            @Override\n            public void eat() {\n                System.out.println(\"匿名内部类 -> 方法\");\n            }\n        };\t\t\t// 注意分号\n    }\n}\n\n\n\n\n```\n\n\n\n#### 6.1.6 类的使用：\n\n>   1.  导包：`import java.util.*;`\n>   2.  创建：`Animals cat = new Animals();`\n>   3.  使用：`cat.eat();`\n\n\n\n注意：\n\n-   `java.lang` 下的包`不用导`\n-   `同一package`下的类也`不用导`\n-   `导包语句`必须写在 `package 包名`后，`类名前`\n\n-   包名-格式：`package net.java.util;`\n\n\n\n\n\n\n\n#### 6.1.7 静态变量 与 静态方法：\n\n>   `静态变量`：带有 `static `关键字的`变量`\n>\n>   `静态方法`：带有 `static` 关键字的`方法`\n\n**注意**：【凡是带`static` 的`变量、方法、代码块`】\n\n-   `属于`整个`类`，而不仅仅 属于一个**对象**\n-   只创建`1次`\n-   可以直接用 `类名.变量`调用\n-   不能使用 `this`,`super`关键字：因为静态方法可以通过类名来调用，而这是可能还没有创建对象，更谈不上继承。\n\n\n\n\n\n```java\n// 静态代码块：\nstatic{\n\t\t//语句块\n}\n\n\n\n\n// 静态方法\n// 格式： \n    public static void PrintMe(){.......}\t\n\n// 调用：[对于本类当中的静态方法，可以省略类名称，直接静态方法]\n    类名称.静态变量;\n    类名称.静态方法();\n\n```\n\n\n\n### 6.2 接口：\n\n>   1.  接口就是各个类的规范，\n>   2.  接口是一种 `引用的数据类型` ，其中：最重要的是`抽象方法`\n\n\n\n#### 6.2.1 格式：\n\n```java\n  public interface 接口名称{\n        // 接口内容  \n  }  \n```\n\n\n\n#### 6.2.2 接口内容：\n\n>   -   JDK 1.7 的接口可以包含：\n>       -   常量\n>       -   抽象方法\n>   -   JDK 1.8 的接口还可以额外包含\n>       -   默认方法\n>       -   静态方法\n>   -   JDK 1.9 的接口还可以额外包含\n>       -   私有方法\n\n\n\n\n\n**注意** ：\n\n>   1.  接口中的抽象方法，修饰符必须是 public abstract \n>\n>       【如：`public abstract void methodAbstract( );`】， 可以省略但不能换成别的 。 \n>\n>   \n>\n>   2.  `接口`无法直接使用，只能让1个 “实现类” 来 “实现” 该接口 。\n>\n>       【类似 抽象类的继承】\n>\n>    \n>\n>   3.  `实现类` 除非是1个由abstract修饰的抽象类，否则`必须覆盖重写`所有`抽象方法`。\n\n\n\n\n\n\n\n#### 6.2.3 接口的使用：\n\n```java\n/*\n *\t1. 定义接口 + 接口内容\n *\t2. 定义接口的 \"实现类\"\n *\t3. 在 \"实现类\" 中，覆盖重写 接口的抽象方法\n *\t4. main方法中 new出 \"实现类的对象\"，\"实现类的对象\" 调用 重写后的方法\n*/\n\n\n\n// 定义接口\npublic interface MyIntface {\n    public abstract void Say();\n}\n\n\n\n\n\n\n// 定义实现类\npublic class ToDoClass implements MyIntface {\n    \n    @Override\n    public void Say() {\n        System.out.println(\"你好！\");\n    }\n    \n}\n\n\n\n\n\n// main方法\npublic class IntfaceDemo {\n    public static void main(String[] args) {\n        \n        \n        ToDoClass a = new ToDoClass();\n        a.Say();\n        \n        \n    }\n}\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n### 6.3 四大特性：\n\n\n\n 面向对象的三大特性：\n\n>   -   封装性(如： private, 方法等)\n>   -   继承性(extend ,super等)\n>   -   多态性(**子类**继承**父类**的方法后可以 **覆盖重写**override)\n\n\n\n\n\n#### 6.3.1 封装性：\n\n封装性有两种：【变量，方法】\n\n\n\nprivate关键字： \t\n\n>   1.  只有在写了private 的类中可以直接访问该属性,\t\n>   2.  有`private 关键字`就必须在类中`定义` 2个专门 访问、设置 该属性的方法` getter、setter` 。\n>\n>   \n>\n>   setNum(int num)【有参数，无返回值】 \t\t\n>\n>   getNum( )【无参数，有返回值】\n\n\n\n\n\n#### 6.3.2 继承性：\n\n\n\n继承性：\n\n>   1.  继承是`多态性的前提`；\n>   2.  承解决了共性的问题（把`几个类`中都有的`属性、方法`放到`1个父类中`，每个`子类 继承 父类`）\n\n\n\n\n\n父类与子类：\n\n>   1.  父类：基类，超类\n>   2.  子类：派生类\n\n\n\n\n\n\n\n在继承关系中，子类就是父类的一种。\n\n例如： 父类是员工，子类是老师，老师也是一种员工 =》 老师 is 员工\n\n\n\n\n\n\n\n继承过程中，成员变量的访问特点：\n\n>   1.  子类有，则`优先使用 子类的成员变量`。\n>   2.  `子类 `知道 `父类的变量、方法`，父类不知道子类的变量、方法。\n>   3.  父子的`变量、方法` 重名时，优先使用`子类`\n\n\n\n\n\n\n\n\n\n`父类的变量`，`子类的变量`，方法的`局部变量` 重名时：\n\n>   1.  访问 父类的变量：super.变量名\n>   2.  访问 本类的变量： this.成员变量名\n>   3.  访问 方法的局部变量： 直接写变量名\n\n\n\n\n\n\n\n\n\n\n\n父类、子类、继承的使用：\n\n```java\n// 父类【普通的类的定义】：\t\n\tpublic class 父类名称{}\t\n\n// 子类：\n\tpublic class 子类名称 extends 父类名称{}\n\n\n\n// 例如：\n\t\t//父类\n\t\tpublic class Employee {\n\t\t\tString name;\n\t\t\tint age;\n\t\t}\n\t\t\t\t\n\t\t//子类 -> 继承父类\n\t\tpublic class Teacher extends Employee {\n\t\t\tString Tno;\n\t\t}\n```\n\n\n\n\n\n#### 6.3.3 抽象性：\n\n抽象：\n\n>   一个父类有一个没法具体描述的方法：\n>   如：\n>\n>   -   `子类 cat` 有 `eatFish( )` 的方法，\n>   -   `父类 Animal `有`eat( ) `的方法，但没法细说具体执行过程。\n\n\n\n\n\n抽象方法-格式：\n\n```java\n// 方法 返回值前 加上 abstract 关键字，去掉大括号{}，直接以分号；结束。\n\n\n//抽象方法\npublic abstract void Eat();\n```\n\n\n\n\n\n**注意** ：\n\n>   1.  `抽象方法` 只能 定义在`抽象类内` 【在 class前加上 abstract】，但 `抽象类`不一定有 `抽象方法`，没有抽象方法的 抽象类 同样 不能直接new,它有特殊用途。  \n>\n>    \n>\n>   2.  子类 必须 覆盖重写 父类 所有的 抽象方法。 【除非子类也是抽象类】\n>\n>       抽象方法覆盖重写 即：去掉 抽象方法的 abstract关键字，补上{ } \n>\n>       【可以鼠标点击 extends 行 按下 alt + enter】\n>\n>   \n\n\n\n\n\n抽象类：\n\n```java\n//抽象类\npublic abstract class Animals {\n    \n\t//抽象方法,没有普通方法的{}\n\tpublic abstract void Eat();\t\t\n    \n}\n```\n\n\n\n\n\n`抽象类` 与 `抽象方法`的使用：\n\n>   抽象类的 对象 无法直接 new 。\n>\n>   即： 不能 Animal a = new Animal( );\n>\n>   必须`先`用一个子类 `继承`一个父类，`再覆盖重写`其抽象方法。\n\n\n\n\n\n`main方法中`使用`抽象类`的`执行顺序`：\n\n1.  子类 调用 super( )，执行抽象父类构造方法。\n2.  执行 子类构造方法。\n3.  执行 子类的抽象方法。\n\n```java\n/*\n *\t1. 在抽象类中 定义 抽象方法\n *\t2. 子类继承抽象类，覆盖重写 抽象类的 所有抽象方法\n * \t3. main方法中，new 子类对象\n *\n*/\n\n\n\n// 抽象类\npublic abstract class Animals {\n\t//抽象方法,没有普通方法的{}\n\tpublic abstract void Eat();\t\t\t\n}\n\n\n// 子类 继承 抽象类\npublic class Cat extends Animals {\t\t\n    @Override\n    public  void Eat(){\n        System.out.println(\"cat eat\".toUpperCase());\n    }\n}\n\n\n// main方法\npublic class Demo {\n    public static void main(String[] args) {\n        \n        \n        Cat c = new Cat();\n        c.Eat();\n        \n    }\n}\n\n```\n\n\n\n\n\n\n\n#### 6.3.4 多态性：\n\n\n\n-   [Java多态性理解](https://www.cnblogs.com/jack204/archive/2012/10/29/2745150.html)\n\n\n\n多态性的条件：\n\n-   继承\n-   重写\n-   父类变量 引用 子类对象\n\n\n\n实现多态的技术：\n\n>   动态绑定（dynamic binding），是指在`执行期间判断`所引用对象的`实际类型`，根据其实际的类型调用其相应的方法。\n\n```java\n// 左边是父类/接口，右边new的是子类\n// 编译时，arr是List；\n// 运行时，arr是ArrayList\n\n\tList<Integer> arr = new ArrayList<>();\n\n```\n\n\n\n\n\n\n\n### 6.4 包装类\n\n\n\n-   [Java包装类-url](https://www.yiibai.com/java/wrapper-class-in-java.html)\n-   [Java泛型和包装类](https://blog.csdn.net/Hushboom/article/details/104798466)\n\n\n\n#### 6.4.1 包装类是什么：【自动装箱 + 自动拆箱】\n\n包装类 = 基本类型 + 常用方法\n\n将一个类型变成一个类。\n\n>   -   `原始数据类型 `=转换为=》`对象`\n>\n>   -   `对象` =转换为=》 `原始数据类型`\n>   -   可用于实现` 多态性`\n>\n>    \n>\n>    \n>\n>   *`JDK1.5`*开始可以进行`自动装箱，自动拆箱`：\n>\n>   -   自动装箱： 自动将 `基本类型 => 包装类`\n>   -   自动拆箱： 自动将 `包装类 => 基本类型`\n\n![包装类](https://z3.ax1x.com/2021/05/24/gja30e.png)\n\n\n\n#### 6.4.2 泛型：\n\n`泛型 <=> <包装类>` \n\n泛型常用于：指定`某个集合`只能保存`某种数据类型的数据`。\n\n```java\n// 泛型就是下面的 <String>，其中String是包装类\n\nList<String> list = new ArrayList<String>();`\t// 一种体现多态性的写法，左边是父类型，右边是子类型\n```\n\n\n\n\n\n\n\n## 7. 常用的类\n\n\n\n### 7.1 Math类：\n\n\n\nMath的所属路径：`java.lang.Math`\n\n```java\npackage com.cyw2;\n\npublic class Demo {\n    public static void main(String[] args) {\n        \n// 取整        \n        double a = Math.floor(1.4);\t//向下取整，无论正负数(取小的)\n        double b = Math.round(1.4); //四舍五入(负数入的时候向0进位)\n        double c = Math.ceil(1.4);\t//向上取整，无论正负数(取大的)    \n\n        System.out.println(\"1.4 => floor \"+a);  // 1.0\n        System.out.println(\"1.4 => round \"+b);  // 1.0\n        System.out.println(\"1.4 => ceil \"+c);   // 2.0\n        System.out.println(\"==============\");\n        \n    \n        \n        \n// 随机数          \n        double d = Math.random();   //返回1个[0,1)之间的double类型的小数\n        \n        System.out.println(d);\n   \n        \n        \n\n// 比大小        \n        int max = Math.max(12,34);  // 返回参数中的最大值\n        int min = Math.min(12,34);  // 返回参数中的最小值\n        \n        System.out.println(max);\n        System.out.println(min);\n        System.out.println(\"==============\");\n\n        \n        \n// 三角函数\n\n        double e = Math.toRadians(45.0);    // 将角度制 转为 弧度制\n        double f = Math.tan(e);             // 计算tan(PI/4)\n        double g = Math.rint(f);\n        \n        System.out.println(g);   // 将计算结果 转化成 最接近的整数\n        System.out.println(\"==============\");\n \n        \n        \n// 数值 与 字符串 相互转化\n        String h = Integer.toString(123);\n        System.out.println(h);\n        \n        String i = \"123\";\n        int j = Interager.parseInt(i);\n        \n        System.out.println(j);\n        System.out.println(\"==============\");\n        \n        \n// 多次方 与 开根号     \n               \n        double k = Math.sqrt(100.0);\t// 开根号\n        double L = Math.pow(10.0,2.0);\t// 多次方\n        System.out.println(k);\n        System.out.println(L);\n\n    }\n}\n\n```\n\n\n\n\n\n### 7.2 Charater类：\n\n常用方法：\n\n-   `判断`字符类型：是否是 `字母、数字、空白符、大写、小写`\n-   转化大小写：转化成 `大写、小写、字符串`\n\n```java\n// 定义\t\n\n\tchar ch = 'a';\n\n\tCharacter ch = new Character('a');\n\n\tchar uniChar = '\\u039A';  // Unicode 字符表示形式\n \n\t// 字符数组\n\tchar[] charArray ={ 'a', 'b', 'c', 'd', 'e' };\n\n\tCharacter ch = new Character('a');\n\n\n// 常用方法：\n\tchar a = 'A';\n\tboolean isLetter = Character.isLetter(a);\n\n    System.out.println(isLetter);\t// true\n    System.out.println(Character.isDigit(a));\t//false\n\n```\n\n\n\n\n\n\n\n### 7.3 String类：\n\nString 类是不可改变的，一旦创建了 String 对象，那它的值就无法改变了。\n\n要想改变` String 对象的值`，可以使用 `StringBuffer` 和 `StringBuilder `类。\n\n```java\n// 存放在 堆中的字符串常量池中\n\tString str = \"Runoob\";\n\n// 使用构造函数\n\tString str2 = new String(\"Runoob\");\n\n\n// 字符串长度\n\tstr = \"abc\";\n    int len = str.length(); \n\tSystem.out.println(len);\t// 3\n\n\n// 字符串的拼接\n\tString str2 = \"我的名字是 \".concat(\"Runoob\");\t\n\tString str3 = \"我的名字是 \"+\"Runoob\";\n\n\n// 格式化拼接字符串\n\tString fs;\n\tfs = String.format(\"a的值为%f, 整型变量的值为\" \n                    %d, 字符串变量的值为          \n                    %s\", floatVar, intVar, stringVar);\n\n\n\n// 返回指定位置的字符\n\tString str1 = \"abc\";\n\tchar ch = str1.charAt(0);\n\tSystem.out.println(cg);\t// a\n\n\n// 返回字符串中指定字符的第一个索引\n\tString str1 = \"abc\";\n\tint index = str1.indexOf('b');\n\tSystem.out.println(index);\t// 1\n\n\n// 截取从参数位置到最后的字符串: substring(索引)\n// 截取从[索引1,索引2)的字符串: substring(索引1,索引2)\t\t\n\n\tString str1 = \"hello\";\n\tString str2 = str1.substring(0);  \t//str2 = \"hello\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tString str3 = str1.substring(1,4);\t//str3 = \"ell\";\n\n\n// 字符串的转化\n\t//将字符串拆为字符数组,并将字符数组作为返回值: toCharArray();\n\t//获取当前字符串底层的字节数组: getBytes();\n\t//替换字符串，返回新字符串: replace(old,new);\n\n\n//字符串的分割\n\t//split(正则表达式)：按指定规则分割字符串，并返回字符数组，若想用. 作为分割符，需要写 \\\\.\n\t\t\n```\n\n\n\n\n\n字符串在内存中的创建过程：\n\n>   以 String str1 = \"abc\" 为例 \n>\n>   内存中情况：  \t\n>\n>   1.  在 `栈`中开辟 `变量的空间`， \t\n>\n>   2.   在 `堆`中的 `字符串常量池` 中`创建String 对象` \t\n>   3.  在 `堆`中 创建 `byte[] \t`\n>   4.  `String 对象`引用` byte[] 的地址` \t\n>   5.  `栈`中的变量 引用 `String 对象 的地址`\n\n\n\n\n\n### 7.4 StringBuffer 类 与 StringBuilder 类：\n\nStringBuffer 和 StringBuilder 都可用来创建字符串，\n区别：\n\n-   StringBuffer ：速度慢，但在多线程时安全\n-   StringBuilder ：速度快，但在多线程时不安全【StringBuilder 更常用】\n\n```java\npublic class Demo{\n    public static void main(String args[]){\n        \n// 10 为容量\n        StringBuilder sb_1 = new StringBuilder(10);\n        sb_1.append(\"大家好\");\n        System.out.println(sb_1);  \n       \n        sb.insert(8, \"Java\");\n        System.out.println(sb_1); \n        \n// 5为开始位置，8为结束位置\n        sb.delete(5,8);\n        System.out.println(sb_1);  \n        \n    }\n}\n```\n\n\n\n\n\n\n\n\n\n### 7.5 Date类：\n\n`import java.util.Date;`\n\n```java\n// 2个构造函数\n\n\tDate d1 = new Date();\n\n\tDate d1 = new Date(long millisec);\t// millisec: 从 1970-1-1 到 现在 的毫秒数\n\n\n// 获取millisec：long getTime( )\n// 设置millisec：void setTime(long time)\n\n\n//比较时间：假设A、B是两个时间\n\n\tA.before(B);\t//  时间A 在 时间B 前，则 返回true\n\tA.after(B);\t\t//  时间A 在 时间B 后，则 返回true\n\tA.equals(B);\t//  时间A 与 时间B 相等，则 返回true\n\n\n// 格式化的时间、日期\n\n\tDate dNow = new Date( );\n\tSimpleDateFormat sdf = new SimpleDateFormat (\"yyyy-MM-dd HH:mm:ss\");\n\tSystem.out.println(\"当前时间为: \" + sdf.format(dNow));\n\t\n\t\t\n```\n\n\n\n\n\n\n\n### 7.6 Calender类：\n\n\n\n```java\n//当前日期\n\tCalendar c = Calendar.getInstance();\n\n//创建指定日期\n\tCalendar c1 = Calendar.getInstance();\n\n\tc1.set(2009, 6 - 1, 12);\t// 设置 年、月、日\n\n\n// 获取日期的相关信息\n\tCalendar c1 = Calendar.getInstance();\n\t// 获得年份\n\t\tint year = c1.get(Calendar.YEAR);\n\n\t// 获得月份\n\t\tint month = c1.get(Calendar.MONTH) + 1;\n\n\t// 获得日期\n\t\tint date = c1.get(Calendar.DATE);\n\n\t// 获得小时\n\t\tint hour = c1.get(Calendar.HOUR_OF_DAY);\n\n\t// 获得分钟\n\t\tint minute = c1.get(Calendar.MINUTE);\n\n\t// 获得秒\n\t\tint second = c1.get(Calendar.SECOND);\n\n\t// 获得星期几【注意（这个与Date类是不同的）：1代表星期日、2代表星期一、3代表星期二，以此类推】\n\t\tint day = c1.get(Calendar.DAY_OF_WEEK);\n```\n\n\n\n\n\n\n\n\n\n### 7.7 Scanner 类：\n\n`import java.util.Scanner;  `\n\n```java\n/*\n * Scanner sc = new Scanner(System.in);\n * ``sc.hasNextInt()   \t <=>  sc.nextInt()\n * ``sc.hasNextFloat()   <=>  sc.nextFloat()\n * ``sc.hasNextDouble()  <=>  sc.nextDouble()\n * \n*/\n\n\n// 从键盘接收数据【next() 按字符】\n        Scanner sc1 = new Scanner(System.in);\n\n        if (sc1.hasNext()) {\n                String str1 = sc1.next();\n                System.out.println(\"输入的数据为：\" + str1);\n        }    \n        sc1.close();\n\n\n\n\n\n// 从键盘接收数据【nextLine() 按行，接收回车之前的所有字符，包括空白符】\n\t    Scanner sc2 = new Scanner(System.in);\n        // 从键盘接收数据\n \n        // nextLine方式接收字符串\n        System.out.println(\"nextLine方式接收：\");\n        // 判断是否还有输入\n        if (sc2.hasNextLine()) {\n            String str2 = sc2.nextLine();\n            System.out.println(\"输入的数据为：\" + str2);\n        }\n        scan.close();\n\n```\n\n\n\n\n\n\n\n\n\n\n\n### 7.8 Regex-正则表达式：\n\n\n\n`import java.util.regex.*;`\n\n\n\njava.util.regex 包主要包括以下三个类：\n\n-   Pattern 类：`表达式`\n-   Matcher 类：`匹配引擎`\n-   PatternSyntaxException类：`语法错误`\n\n\n\nJava中的`\\\\` 等价于 其他语言中的 `\\`: \n\n-    `\\b`表示匹配删除，`\\\\b`表示匹配边界\n-   例如：要匹配 str1 = ”(hello)“，正则必须为`\\\\(hello\\\\)`\n\n\n\n\n\n```java\n/*\n*\t1. 匹配1个字符：.\n*\t2。匹配前面的1个字符 0次~多次：* 等价于{0,}，例如：ab* 即：ab{0,}   =>匹配：[a,ab]\n*\t3。匹配前面的1个字符 1次~多次：+ 等价于{1,}，例如：ab+ 即：ab{1,}   =>匹配：[ab，abb]\n*\t4。匹配前面的1个字符 0次~1次：? 等价于{0,1}，例如：ab? 即：ab{0,1}  =>匹配：[a,ab]\n*\t4。非贪心匹配，尽可能短，用于匹配修饰符之后：? ，例如：ab? 即：a*? =>匹配：a\n*\t6. 匹配特殊字符：\\ ,例如：\\\\d 表示匹配 \\d ,即：匹配1个数字【java中的 \\\\ 相当于 其他语言中 \\】\n*\t7. 匹配以指定字符开头的字串：^字符,例如：^a 表示匹配以a开头的字串\n*\t8. 匹配以指定字符结尾的字串：字符$,例如：a$ 表示匹配以a结尾的字串\n*\t9. 匹配其中的一个，相当于\"或\"：(字符1|字符2),例如：fu(c|n)  => 匹配：[fuc,fun]\n*\t10. 匹配指定字符集中的任意一个：[字符1字符2字符3],例如：fu[abc] => 匹配：[fua,fub,fuc]\n*\t11. 匹配指定连续的字符集中的任意一个：[字符1-字符3],例如：fu[a-c] => 匹配：[fua,fub,fuc]\n*\t12. 不匹配指定数组中的任意一个：[^字符1字符2字符3],例如：fu[^abc] => 不匹配：[fua,fub,fuc]\n*\t12. 不匹配指定数组中的任意一个：[^字符1-字符3],例如：fu[^a-c] => 不匹配：[fua,fub,fuc]\n*\t13. 匹配以指定字符结尾的字串：字符$,例如：a$ 表示匹配以a结尾的字串\n*\t14. 只匹配边界位置的字符：\\b 例如：\"er\\b\" 匹配=> never , 不匹配=> verb\n*\t15. 不匹配边界位置的字符：\\B 例如：\"er\\B\" 不匹配=> never , 匹配=> verb\n*/\n\n\n\n\n        String str1 = \"Hello World 123,Hello Man 456! \";\n        String pattern = \".*Hello.*\";\n        boolean isMatch = Pattern.matches(pattern,str1);\n\n        System.out.println(\"字符串中是否能否找到Hello：\"+isMatch);\t//true\n```\n\n\n\n\n\n\n\n\n\n### 7.9 try-catch 异常处理：\n\n所有的异常类是从 `java.lang.Exception 类`继承的子类\n\n[Java 异常处理 | 菜鸟教程 (runoob.com)](https://www.runoob.com/java/java-exceptions.html)\n\n异常：\n\n-   `检查性异常`：最容易犯，编译时不能忽略，如：打开不存在的文件\n-   `运行时异常`：可以避免，编译时可被忽略，如：空指针异常、下标越界异常、算数异常（如：除数为0）、类型转化异常\n-   `错误`（编译错误、运行错误、逻辑错误）：脱离控制，如：堆栈溢出、虚拟机错误、线程死锁\n\n![异常处理-使用技巧](https://z3.ax1x.com/2021/05/24/gjachn.png)\n\n\n\n声明异常：\n\n```java\n/* 声明异常：try-catch 或 在定义方法时：方法名()throws 异常{ }\n*\t声明异常的注意事项：\n*\t\t1. 只有父类声明了某个异常，子类才能声明该种异常/该种异常的子类\n*\t\t   \t【父类有，子类才能有】\n*\n*\t\t2. 子类重写父类的方法时，也要声明 父类已经声明的异常 或 父类已经声明的异常的子类异常\n*\t\t\n*/\n\n\n// 越是子类的异常，越要先catch\n\n// 使用 try-catch 来声明异常\ntry {\n    file = new FileInputStream(fileName);\n    x = (byte) file.read();\n} catch(FileNotFoundException f) { // Not valid!\n    f.printStackTrace();\n    return -1;\n} catch(IOException i) {\n    i.printStackTrace();\n    return -1;\n}\nfinally{\n    // 无论是否有异常，都会执行的代码\n}\n\n\n\n\n// 使用 throws关键字 来声明异常\nimport java.io.*;\npublic class className\n{\n  public void deposit(double amount) throws RemoteException\n  {\n    // Method implementation\n    throw new RemoteException();\n  }\n  //Remainder of class definition\n}\n```\n\n\n\n\n\n在 Java 中你可以自定义异常。编写自己的异常类时需要记住下面的几点。\n\n-   所有异常都必须是 Throwable 的子类。\n-   如果希望写一个`检查性异常类`【编译不通过的异常】，则需要继承 Exception 类。=》try-catch 或 throws\n-   如果你想写一个`运行时异常类`【运行不通过的异常】，那么需要继承 RuntimeException 类。\n\n\n\n出现算数异常：除数不能为0\n\n```java\n\n// 出现算数异常：除数不能为0\npublic class Demo {\n    public static void main(String[] args) {\n\n        int a=10,b=0;\n        System.out.println(div(a,b));\n\n    }\n\n    // 除法\n    public static int div(int a,int b){\n        return a/b;\n\n    }\n}\n\n```\n\n\n\n自定义异常-步骤：\n\n```java\n/*\n*\t自定义异常-步骤：\n*\t\t1. 创建异常类，该异常类继承 Exception类\n*\t\t2. 重写 异常类的构造方法\n*\n*\t手动抛出异常-步骤：\n*\t\t1. 选择1个合适的异常类\n*\t\t2. 创建异常类的对象\n*\t\t3. 抛出对象\n*/\n\n\n// 异常类\n    public class myException extends Exception{\n\n        public myException() {\n            super();\n        }\n\n        public myException(String msg) {\n            super(msg);\n        }\n\n    }\n\n\n\n\n// 父类\n    public class Father {\n\n        public void eat() throws myException{\n            System.out.println(\"我是父类的-eat\");\n        }\n        \n    }\n\n\n\n\n// 女儿类\n    public class Daughter extends Father{\n        \n//main方法\n            public static void main(String[] args) {\n                   Father daughter = new Daughter();\n\n                   try{\n                       daughter.eat();\n                   }catch (myException e){\n                        e.printStackTrace(); // 打印堆栈的轨迹\n                   }\n            }\n        \n//女儿类的 eat()\n            @Override\n            public void eat() throws myException {\t//子类声明的异常必须 小于等于 父类声明的异常\n                System.out.println(\"我是女儿类的-eat\");\n                System.out.println(\"我是女儿类的-eat\");\n                System.out.println(\"我是女儿类的-eat\");\n\n                // 打印3次\"我是女儿类的-eat\"后，马上抛出异常\n                throw new myException(\"我吃太多了~\");\t\n            }\n\n    }\n\n```\n\n\n\n![异常-层次图](https://z3.ax1x.com/2021/05/24/gjaI74.png)\n\n\n\n\n\n## 8. Stream、IO、File\n\n\n\n`import java.io.*;`\n\n\n\n需要定义` IO异常`\n\n\n\n-   [Java-IO-视频](https://www.bilibili.com/video/BV1Tz4y1X7H7?from=search&seid=14230994899231979002)\n-   [Java-IO-笔记](https://www.cnblogs.com/coderzjz/p/13670088.html)\n\n\n\n### 8.1 Stream的介绍：\n\n`流-Stream`:\n\n>   一个`数据的序列`。【以 **内存** 为参照物】\n>\n>   -   `输入流`表示**计算机**从一个源`读取数据 => 内存`，\n>\n>   -   `输出流`表示**计算机**向一个目标`写入数据 => 存储设备`。【必须 flush( ) 才能写入】\n\n\n\n字节流：可以复制 文本、图片、二进制文件\n\n字符流：可以复制 文本文件（包括中文）\n\n\n\n流的分类：\n\n>   1.  按方向：\n>\n>       -   输入流：`读取数据 => 内存`\n>       -   输出流：`写入数据 => 存储设备`\n>\n>       \n>\n>   2.  按单位：\n>\n>       -   字节流\n>       -   字符流:（只能：读写文本）\n>\n>        \n>\n>   3.  按功能：\n>\n>       -   节点流：读写 数据\n>       -   过滤流：增强 功能\n\n\n\n![IO流](https://z3.ax1x.com/2021/05/24/gjaXjK.png)\n\n### 8.2 Stream的常用类：\n\n```java\n/*\n*\t字节输入流：InputStream【读数据】\t\n*\t\t1. read()\t\t\t\t\t\t\t\t// 读取下一个字节\n*\t\t2. read(byte[] b)\t\t\t\t\t\t// 读取下面多个字节\n*\t\t3. read(byte[] b,int offset,int maxlen)\t// 读取下面多个字节\n*\t\t4. close()\t\t\t\t\t\t\t\t// 关闭资源\n*\t步骤：\n*\t\t\t1. 创建 FileInputStream\n*\t\t\t2. 创建 byte[]\n*\t\t\t3. 在 FileInputStream调用 read(byte数组)上\n*\n*\t字节输出流：OutputStream【写数据】\n*\t\t1. write(int b)\t\t\t\t\t\t\t\t// 输出指定字节\n*\t\t2. write(byte[] b)\t\t\t\t\t\t\t// 输出指定字节数组\n*\t\t3. write(byte[] h,int offset,int len)\t\t// 输出指定位置和长度的多个字节\n*\t\t4. flush()\t\t\t\t\t\t\t\t\t// 刷新缓冲区，并 写入数据\n*\t\t5. close()\t\t\t\t\t\t\t\t\t// 关闭资源\n*\n*\n*/\n\n\n// FileInputStream : InputStream的子类\n\n    import java.io.FileInputStream;\n\n    public class Demo {\n        \n// main方法，声明IO异常        \n        public static void main(String[] args) throws Exception{\n            \n            // 假设'E:\\abc.txt' 已经存在，且内容为：abc012\n            \n// 创建文件输入流\n            FileInputStream fis = new FileInputStream(\"e:\\\\abc.txt\");\n            \n            \n            \n            // 如果 存在字节，则输出，继续循环,\n            // 最终输出：97 98 99 48 49 50 读取完毕！【其中，数字：表示字节的ASCII码】\n// 读取单个字节\n            int data;\n            while ( (data=fis.read()) != -1   ){\n                    System.out.println(data);\n            }\n            fis.close();\n            System.out.println(\"读取完毕！\");\n            \n            \n// 读取多个字节            \n            byte[] buf  = new  byte[3];\n            int count = 0 ;\t\t\t\t// 返回 读取的字节个数\n            while( (count = fis.read(buf) ) ！=-1){\n                   System.out.println(new String(buf));\t// 输出 读取的字节的字符形式\n            }         \n            fis.close();\n             System.out.println(\"读取完毕！\");\n\n            \n            \n            \n            \n            \n// FileOutputStream : OutputStream的子类\n        // 构造方法：FileOutputStream(路径,[append=false])\n            \n        FileOutputStream fos = new FileOutputStream(\"e:\\\\abc.txt\");\n        \n        // 写入单个字节\n        fos.write(97);\t\t// 输出：a\n        \n        // 写入多个字节\n        byte[] buf = new byte[]{'d','e','f'};\n        fos.write(buf);\t\t// 输出：def\n            \n            \n\t\t// 写入多个字符\n        String str1 = \"这是一个字符串\";\n        byte[] buf2 = str1.getBytes();\n        fos.write(buf2);\t// 输出：\"这是一个字符串\"\n            \n        fos.close();    \n        System.out.println(\"输出完毕\");\t// 最终输出：adef这是一个字符串\n            \n        }\n    }\n\n\n```\n\n\n\n\n\n### 8.3 案例-文件复制：\n\n【先输入流-读取，再输出流-写入】\n\n```java\n// 目标：将\"E:\\A,jpeg \" 复制到 ”E:\\0\\B。jpg“\n\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\n\npublic class Demo {\n    \n    public static void main(String[] args) throws Exception{\n\n// 创建输入、输出流\n            FileInputStream fis= new FileInputStream(\"E:\\\\A.jpeg\");\n\n            FileOutputStream fos = new FileOutputStream(\"E:\\\\0\\\\B.jpeg\");\n        \n// 创建缓存区 67KB\n            byte[] buf = new byte[67*1024];\n        \n// 读取的字节个数\n            int count = 0;\n\n           while((count = fis.read(buf)) != -1) { // 固定写法\n// 写入文件\n               fos.write(buf,0,count);\n           }\n// 关闭资源        \n        \tfis.close();\n        \tfos.close();\n            System.out.println(\"复制完毕\");\n\n    }\n}\n\n\n```\n\n\n\n\n\n### 8.4 字节缓存流：\n\n`java.io.BufferedInputStream`\n\n`java.io.BufferedOutputStream`\n\n\n\n需要与 InputStream或 其子类 配合使用。\n\n目的：\n\n>   1.  调高IO效率，减少访问磁盘\n>\n>   2.  数据存储在缓冲区，flush( )将数据写入文件，也可直接close( )\n>\n>       【close( )也会调用flush( ),将内容写入文件】\n\n```java\n/*\n*\t步骤：\n*\t\t\t1. new InputStream\n*\t\t\t2. new BufferedInputStream\n*\t\t\t3. 读取缓存，输出\n*\t\t\t4.关闭资源\n*/\n\n\n// 缓冲输入流\n// BufferedInputStream \n        FileInputStream fis = new FileInputStream(\"e:\\\\abc.txt\");\n\n        BufferedInputStream bis = new BufferedInputStream(fis);\n\n        int data=0;\n\t\t\n\t\t// 读取：\"adef\"\n        while((data = bis.read()) !=-1){\n            // 打印结果：97:a  100:d  101:e  102:f \n            System.out.print(data+\":\"+(char)data+\"  \");\n            \n        }\n\n        bis.close();\n\t\tfis();\n\n\n\n\n// 缓冲输出流\n// BufferedOutputStream【最后必须 flush() 或 close() 才能 写入成功】\n\t    FileOutputStream fos = new FileOutputStream(\"e:\\\\def.txt\");\n        BufferedOutputStream bos  = new BufferedOutputStream(fos);\n\n        int i=0;\n        while(i<10){\n            i++;\n            bos.write(\"Hello\\n\".getBytes());\n            bos.flush();\n        }\n\t\tbos.close();\n\t\tfos();\n```\n\n\n\n\n\n### 8.5 对象流（序列化 / 反序列化）：\n\n-   ObjectOutputStream\n\n-   ObjectInputStream\n\n\n\n对象流：【需要结合 InputStream / OutputStream】\n\n>   1.  增强了 缓冲区的功能\n>   2.  增强了 读写 基本数据类型 + 字符串\n>   3.  增强了 读写对象：readObject( ) 和 writeObject( obj)\n\n\n\n`使用 Stream 传输 Object 的过程`：\n\n-   序列化【写入】：ObjectOutputStream，`1个类要想序列化，必须 implements Serializable接口`\n\n-   反序列化【读取】：ObjectInputStream\n\n\n\n#### 8.5.1 序列化：【写入Object 到 文件】\n\n**注意**： \n\n-   被 写入文件（序列化）的类 必须实现 `可序列化接口` 。\n-   如果`某个属性不想被序列化`，可以使用transient来修饰 某个类里 的 某个属性：`private transient int age;` 。\n-   `静态属性`不可以序列化。\n\n```java\n/*\n*\t类：Student\n*\t\t1. 属性：name,age【如果是class类型的属性，则该属性也需要implements Serializable接口】\n*\t\t2. implements Serializable接口\n\t\t3. 类要有序列化版本ID（快捷键自动添加），该ID可以保证序列化、反序列化的类是同一个\n*\t\n*\t序列化-步骤：\n*\t\t1. new 文件输出流、对象输出流\n*\t\t2. 序列化(写入对象)\n*\t\t3. 关闭资源\n*/\n\n// Student类\n// 【注意：】1个类要想序列化，必须 implements Serializable接口\n    public class Student implements Serializable {\n\t\tprivate static final long serialVersionUID = 100L;\n        private String name;\n        private int age;\n        \n// 以下省略了 ：构造方法、getter、setter\n   \t\t// ……\n    }\n\n\n// 创建文件输出流、对象输出流\n\tFileOutputStream fos = new FileOutputStream(\"e:\\\\ghi.txt\");\n    ObjectOutputStream oos = new ObjectOutputStream(fos);\n\n// 序列化： ObjectOutputStream\n    Student ZhangSan = new Student(\"张三\",20);\n    oos.writeObject(ZhangSan);\n\n// 关闭资源\n    oos.close();\n\n```\n\n\n\n#### 8.5.2 反序列化：【读取文件中的Object】\n\n```java\n/*\n*\t类：上面已经 序列化的类Student\n*\t\n*\t反序列化-步骤：\n*\t\t1. new 文件输入流、对象输入流\n*\t\t2. 反序列化(读取对象，并强制转化为Student类)\n*\t\t3. 关闭资源\n*/       \n\n\n// 反序列化\n\t FileInputStream fis = new FileInputStream(\"e:\\\\ghi.txt\");\n     ObjectInputStream ois = new ObjectInputStream(fis);\n\n     Student stu1 = (Student) ois.readObject();\n     System.out.println(stu1.getName());\t// 张三\n     System.out.println(stu1.getAge());\t\t// 20\n\t ois.close();\n```\n\n\n\n\n\n### 8.6 字符流：\n\n\n\n#### 8.6.1 字符编码：\n\n\n\n-   `ISO-8859-1`：【1个Byte表示】ASCII，希腊语、阿拉伯语、泰语等\n-   `UTF-8`：UniCode的可变长编码\n-   `GB-2312`：【1-2 Btye】简体中文\n-   `GBK`：【1-2 Btye】简体中文 + 扩展（GB-2312的升级版）\n-   `Big5`：台湾-繁体中文\n\n\n\n**注意：**` 编码方式` 与 `解码方式` 不一致 =》`乱码`\n\n\n\n\n\n\n\n#### 8.6.2 字符流：\n\n字符流 =》 `java.io.Reader` 和 `java.io.Writer`\n\n字符流常用子类：`FileReader`  和 `FileWriter` \n\n\n\n\n\nFileReader：【可显示中文(默认UTF-8编码)】\n\n```java\n// 每次读取1个 \n\n\t\tFileReader fr = new FileReader(\"e:\\\\0\\\\1.txt\");\n        int data= 0;\n        while( (data=fr.read())!=-1){\n            System.out.println((char)data);\t\t// 打印：好好学习\n        }\n\t\tfr.close();\n\n\n\n\n// 使用缓冲区读取\n\n       FileReader fr = new FileReader(\"e:\\\\0\\\\1.txt\");\n\n        char[] buf = new char[4];\n\n        int count= 0; \n\n        while( (count = fr.read(buf)) != -1){\n            \n            System.out.println(new String(buf,0,count));\t// 打印：好好学习\n            \n        }\n\t\tfr.close();\n```\n\n\n\n\n\nFileWriter：\n\n```java\n        \n\t\tFileWriter fw = new FileWriter(\"e:\\\\0\\\\1.txt\");\n        fw.write(\"天天向上\");\n        fw.close();\t\t\t// 输出：天天向上\n```\n\n\n\n\n\n\n\n#### 8.6.2 字符流-复制文本文件：\n\n`FileReader  + FileWriter  `： 复制**文本文件**【`无法复制：图片、二进制文件`】\n\n```java\n// 字符流-复制文本文件        \n\t\tFileReader fr = new FileReader(\"e:\\\\1.txt\");\n        FileWriter fw = new FileWriter(\"e:\\\\0\\\\2.txt\");\n\n        char[] buf = new char[1024];\n        int count = 0;\n\n        while((count = fr.read(buf)) != -1){\n\n            fw.write(new String(buf,0,count));\n            fw.flush();\n        }\n        fw.close();\n        fr.close();\n\n\n```\n\n\n\n\n\n#### 8.6.3 字符缓冲流:\n\n-   BufferedReader：输入\n-   BufferedWriter：输出【原样打印】\n-   PrintWriter：输出【原样打印、换行打印】\n\n\n\n```java\n// 字符缓冲-输入流【第一种】:BufferedReader\n\n        FileReader fr = new FileReader(\"e:\\\\1.txt\");\n\n        BufferedReader br = new BufferedReader(fr);\n\n        char[] buf = new char[1024];\n\n        int count =0;\n\n        while((count=br.read(buf))!= -1){\n            System.out.println(buf);\t// 打印：天天向上-1 天天向上-2 天天向上-3\n        }\n\n\n\n\n// 字符缓冲-输入流【第二种】:BufferedReader\n        FileReader fr = new FileReader(\"e:\\\\1.txt\");\n\n        BufferedReader br = new BufferedReader(fr);\n\n        char[] buf = new char[1024];\n\n        String line = null;\n\n        while((line=br.readLine()) != null){\n            \n            System.out.println(line);\n            \n        }\n\n//================================================\n\n\n// 字符缓冲-输出流: BufferedWriter\n\n        FileWriter fw = new FileWriter(\"e:\\\\1.txt\");\n        BufferedWriter bw = new BufferedWriter(fw);\n        bw.write(\"好好学习\");\n        bw.newLine();\t// 换行\n        bw.close();\n\n\n\n//================================================\n\n\n\n// PrintWriter\n\t// 原样打印\n        PrintWriter pw = new PrintWriter(\"e:\\\\2.txt\");\n        pw.println(97);\n        pw.println(true);\n        pw.flush();\n\n\n\t// \n```\n\n\n\n\n\n\n\n### 8.7 桥转换流：\n\n`java.io.InputStreamReader` 和 `java.io.OutputStreamWriter`\n\n转化：\n\n-   `字节流` =转为=》`字符流`\n-   可设置`编码`\n\n\n\n```java\n// 1个1个读取   \n\t\tFileInputStream fis = new FileInputStream(\"e:\\\\1.txt\");\n        InputStreamReader isr = new InputStreamReader(fis,\"utf-8\");\t// 指定打开的编码\n        int data=0;\n        while((data= isr.read())!=-1){\n            System.out.println((char)data);\n        }\n        System.out.println(isr.getEncoding());\t\t// 获取当前编码\n        isr.close();\n        fis.close();\n\n\n\n// 输出：\n        FileOutputStream fos = new FileOutputStream(\"e:\\\\1.txt\");\n        OutputStreamWriter osw = new OutputStreamWriter(fos);\n        osw.write(\"霓虹，你好\\r\\n我是第二行\");\n        osw.flush();\n\t\tfos.close();\n```\n\n\n\n\n\n\n\n### 8.8 File类：\n\n`File类`：代表物理磁盘中的`文件、文件夹`。\n\n\n\nFile类-使用：\n\n-   分隔符\n    -   File.pathSeparatorChar：路径分隔符（\\）\n    -   File.separator：名称分隔符（;）\n-   文件操作\n-   文件夹操作\n\n\n\n\n\n#### 8.8.1 文件操作：\n\n```java\n    public static void creFile() throws Exception{\n        \n// 创建文件对象，无论是否：真实存在        \n        File file = new File(\"e:\\\\3.txt\");\t\n        \n        \n// 按段是否：创建成功 createNewFile()\n        boolean isCreSuccess = file.createNewFile();\t\n        System.out.println(isCreSuccess);\t\n        \n        \n// 判断是否：已存在 file.exists()        \n        System.out.println(file.exists());\t\n   \n        \n// 判断是否：删除  file.delete()       \n        System.out.println(file.delete());\n     \n        \n// JVM退出时，删除        \n        file.deleteOnExit();\n \n        \n// 获取绝对路径   file.getAbsoluteFile()\n         System.out.println(file.getAbsoluteFile());  // e:\\3.txt\n  \n        \n// 获取路径 file.getPath()      \n         System.out.println(file.getPath()); // e:\\3.txt\n     \n        \n// 获取路径 file.getName()        \n        System.out.println(file.getName());\t// 3.txt\n        \n        \n// 获取父目录 file.getParent()           \n        System.out.println(file.getParent());\t// e:\\\n        \n        \n// 获取文件的创建时间 file.length()       \n        System.out.println(file.length());\n\n        \n// 获取文件的 最后修改时间的毫秒数 file.lastModified()\n        System.out.println(new Date(file.lastModified()).toString());\n        \n        \n        \n// 查看读、写权限        \n        System.out.println(file.canRead());\n        System.out.println(file.canWrite());\n        System.out.println(file.canExecute());\n        \n// 判断 文件、文件夹        \n        System.out.println(file.isFile());\n        \n// 判断是否 隐藏        \n        System.out.println(file.isHidden());\n    }\n```\n\n\n\n\n\n\n\n#### 8.8.2 文件夹操作：\n\n```java\n   public static void creDir() throws Exception{\n       \n//创建文件夹对象\n        File dir =new File(\"e:\\\\0\\\\1\");\n// 判断是否存在\n        if(!dir.exists()){\n            \n// 创建单层目录: dir.mkdir();\t        \n            \n            \n// 创建多层目录: dir.mkdirs();\n            dir.mkdirs();\t// 返回 true\n        }\n\n// 删除文件夹       \n        dir.delete();\n\n       \n       \n// 列出所有的文件名              \n        String[] arr = dir.list();\n       \n        for(String f : arr){\n            System.out.println(f);            \n        }\n       \n       \n       \n// ... 所有的方法都与文件的一样\n\n    }\n\n```\n\n\n\n#### 8.8.3 FileFilter接口：\n\n【按条件 筛选出 文件、文件夹】\n\n```java\n\n\n\n\n// 传入FileFilter匿名对象，如果是jpg,\n\n       File[] arr = dir.listFiles(new FileFilter() {\n            @Override\n            public boolean accept(File pathname) {\n                if(pathname.getName().endsWith(\".txt\")){\n                    // 符合条件的返回true\n                    return true;\n                }else{\n                    return false;\n                }\n\n            }\n        });\n\n// 输出：符合条件的文件名\n       for(File f:arr){\n           System.out.println(f.getName());\n       }\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 9. 集合框架\n\n-   [JavaSE--集合介绍](https://blog.csdn.net/Zzh1110/article/details/105518682)\n-   [千锋-Java集合框架详解-bilibili](https://www.bilibili.com/video/BV1zD4y1Q7Fw?p=2)\n-   [Java集合-简要笔记](https://www.cnblogs.com/coderzjz/p/13587167.html)\n-   [JAVA集合框架详解](https://lazydog036.gitee.io/2020/10/29/JAVA集合框架/)\n\n\n\n### 9.1 引入：\n\n\n\n`数组、链表、集合`等，都是`存放多个数据`的1种容器，都用于在`内存中存储`（而不是持久化存储：txt,abi,jpg）。\n\n\n\n\n\n`数组`：【有序存储，元素可重复】\n\n-   特点：指定长度后，长度不可再次更改，只能存放同一种类型的数据。 int [ ] arr = new int[ ];\n-   缺点：长度固定，不可更改；添加、删除元素时，效率低；没有现成的方法或属性来获取数组长度\n\n\n\n为解决`数组`的上述`缺点`，引入了`集合`。\n\n\n\n\n\n\n\n\n\n-   集合只能存储`引用类型`   ：\n\n>   => 必须`自动装箱、自动拆箱`来将  `基本类型 ` 转化为  `引用类型` 。     \n\n\n\n\n\n-   为什么学习不同的集合？\n\n>   不同的集合，在底层的数据结构的实现不同。\n\n\n\n\n\n\n\n-   数组 与 集合 的区别：\n\n>   1.  数组长度固定，集合长度不固定。\n>   2.  数组可以存储基本类型+引用类型，集合只能存储引用类型（因此需要 自动装箱、自动拆箱）。\n\n\n\n\n\n-   集合的包的位置：`import java.uitl.*;`\n\n\n\n![collection集合](https://z3.ax1x.com/2021/05/24/gjdpAH.png)\n\n\n\n### 9.2 Collection集合的操作：\n\n\n\nCollection、List、Set是接口，不能直接new，而要借助他们的子类如：ArrayList、LinkedList、HashSet、TreeSet。\n\n\n\n#### 9.2.1 Collection 集合接口：\n\n```java\n/*\n* 集合的操作：\n*\t1. 添加：add(obj),\n*\t2. 删除：remove(),clear();\n*\t3. 遍历：foreach语句，迭代器\n*\t4. 判断：contains(),isEmpty(),equals()\n*\t5. 获取：get()\n*/\n\n\n\n// 添加：\n\n            Collection coll = new ArrayList();\n            coll.add(\"苹果\");\n            coll.add(\"西瓜\");\n            System.out.println(“元素个数：”+coll.size());\n            System.out.println(coll);\n\n\n// 删除：\n\n            coll.remove(\"苹果\");\n            System.out.println(coll);\n\n\n// 清空:\n            coll.clear();\n            System.out.println(coll);\n\n\n\n\n\n\n// 遍历的2种方式【重点】：\n//\t\t1. 增强的for\n//\t\t2. 迭代器【专门用于遍历集合的接口】：\n//\t\t\t\thaNext(),有元素则返回true\n//\t\t\t\tnext(),获取下一个元素\n//\t\t\t\tremove()，移除当前元素\n\t\t\n\t\t// 增强for\n            for (Object obj:coll) {\n                String s = (String)obj;\t// 强制转化为真实的类型\n                System.out.println(obj);\n            }\t\n\n\n\n\t\t// 使用迭代器【注意：在迭代时，不能: 集合.remove(),\n\t\t// 否则会报：并发修改异常;但可以 it.remove()】\n            Iterator it = coll.iterator();\n            while(it.hasNext()){\n                String s = (String)it.next();\n                System.out.println(s);\n                it.remove();\n            }\n            System.out.println(coll.size());\t// 0\n\n\t\t\n// 判断：存在-> coll.contains();   \n//      是否为空 -> coll.isEmpty();\n\n\t\t\tSystem.out.println(coll.contains(\"香蕉\"));、\n            System.out.println(coll.isEmpty(香蕉));\n```\n\n\n\n#### 9.2.2 List 集合子接口：\n\n有序、可重复、有下标\n\n```java\n/*\n* List集合的操作：\n*\t1. 添加：add(obj),addAll(index,collection)，add(index,obj);\n*\t2. 删除：remove(),clear();\n*   3. 保留元素：retainAll(collection);\n*\t4. 遍历：foreach语句，\n\t\t\t迭代器:\n\t\t\t\tIterator()、\n\t\t\t\tlistIterator()、\n\t\t\t\tlistIterator(index)【迭代方向可 先从前面开始，也可先从后开始】\n\t\t\t\t\n*\t5. 判断：contains(obj),isEmpty(),equals(obj)\n*\t6. 获取：get(index),subList(from_index,to_index), indexOf(obj)\n*\t7. 修改元素：set(index,obj)\n*\t8. 转化为数组：toA\n*/\n\nimport java.util.List;\nimport java.util.ListIterator;\n\n// 以下内容放入main中\n\n        List list = new ArrayList<>();\n        list.add(\"苹果\");\n        list.add(\"西瓜\");\n        list.add(\"香蕉\");\n        System.out.println(list);\n\n\t\tListIterator it = list.listIterator();\n\n\n// listIterator迭代器，从 前往后 迭代\n\t\twhile(it.hasNext()){\n            System.out.println(it.next());\n        }\n\n\n// listIterator迭代器，从 后往前 迭代【先将指针移到最后，再从后往前打印】\n\n\t\twhile(it.hasNext()){\n           it.next();\n        }\n        \n        while(it.hasPrevious()){\n            System.out.println(it.previous());\n        }\n\n\n// indexOf()\n \t\tSystem.out.println(list.indexOf(\"香蕉\")); // 2\n\n\n// remove(index)  ; remove((Object)obj)\n\n\t\tList list = new ArrayList<>();\n        list.add(20);\n        list.add(30);\n        list.add(40);\n        list.add(50);\n        list.add(60);\n\n        System.out.println(list);\n\n        list.remove((Object)20);\n\t\tlist.remove(0);  // 与上1行效果一致\n\n        System.out.println(list);\n\n\n// subList(from_idx,to_idx) 返回子集,范围 [from_idx,to_idx)\n\n\t\t\n\n\t\t\n```\n\n\n\n\n\n#### 9.2.3 List 接口的常用实现类：\n\n\n\n\n\n-   ArrayList【重点】：数组，查询快、增删慢，线程不安全【jdk1.2】\n\n>    源码分析：\n>\n>   1.  默认容量（default_capacity）：当没有元素时，0；有1个元素时，10\n>   2.  数组（elementData）\n>   3.  当前大小（size）：\n\n\n\n\n\n-   LinkedList：双链表，增删快、查询慢\n\n```java\n/*\n*\tLinkedList常用方法：\n*\t\t1. add()，addAll()\n*\t\t2. remove(),removeAll()\n*\t\t3. addFirst(),addLast()\n* \t\t4. removeFirst(),removeLast()\n* \t\t5. clear()\n*/\n\n\n\n        LinkedList ll = new LinkedList();\n\n        Student s1 = new Student(\"张1\",10);\n        Student s2 = new Student(\"张2\",20);\n        Student s3 = new Student(\"张3\",30);\n\n// 添加\n        ll.add(s1);\n        ll.add(s2);\n        ll.add(s3);\n        System.out.println(ll);\n\n//删除\n        ll.remove(s2);\n        System.out.println(ll);\n\n// 头插\n        ll.addFirst(s2);\n        System.out.println(ll);\n\n// 头删\n        ll.removeFirst();\n        System.out.println(ll);\n\n// 尾插\n        ll.addLast(s2);\n        System.out.println(ll);\n\n// 尾删\n        ll.removeLast();\n        System.out.println(ll);\n\n\n// 遍历【向后】\n        ListIterator it = ll.listIterator();\n\n        while(it.hasNext()){\n            System.out.println(it.next());\n        }\n\n\n// 遍历【向前】\n         while(it.hasPrevious()){\n                System.out.println(it.previous());\n            }\n\n```\n\n\n\n\n\n-   Vector：数组，查询快、增删慢，线程安全，【jdk1.0】\n\n```java\n/*\n*\tVector集合 演示：\n*\t\tadd()\n*\t\tremove()\n*\t\tsize()\n*\n*\t\t遍历： 枚举器\n* \n*/\n\n\n        Vector v = new Vector();\n        v.add(\"张三\");\n        v.add(\"里斯\");\n        v.add(\"威武\");\n\n// 枚举器，遍历Vector\n        Enumeration en = v.elements();\n\n        while(en.hasMoreElements()){\n            System.out.println(en.nextElement());\n        }\n\n\n\n// firstElement()\n// lastElement()\n// elementAt(idx)\n\n        System.out.println( v.firstElement());\n        System.out.println( v.lastElement());\n        System.out.println( v.elementAt(1));\n\n\n```\n\n\n\n\n\n\n\n#### 9.2.4 Set 集合：\n\n只有包含 Collection 集合中的方法，没有自己额外的方法。\n\n\n\n-   HashSet：基于hashcode来保证不重复。当hashcodec重复时，equals方法被调用，如果equals方法返回true，则 拒绝添加 新的那个重复元素。【存储结构：哈希表，数组+链表】\n\n-   TreeSet：基于排列顺序来保证不重复。【存储结构：红黑树】\n\n\n\n\n\n\n\n#####  HashSet：\n\n```java\n/*\n*  HashSet:\n*\t存储过程：【需要在类里 重写 hashcode()、equals()】\n\t\t【1】 根据hashcode查找保存的位置，位置处无元素，则存入，否则执行第二步\n\t\t【2】 执行euqals(),若返回false,则表示元素不重复，以链表形式存入。\n\t\t小结：先比较hashcode【同一地址】,再equals()【同一值】\n\n* \t\t1. add(obj)\n* \t\t2. remove(obj)\n* \t\t3. clear()\n*\t\t4. contains(obj)\n*\t\t4. isEmpty()\n*\t\t6. 遍历：\n\t\t\t - 增强型for\n\t\t\t - 迭代器\n*\n*/\n\n\n\n        HashSet<Student> s = new HashSet<>();\n\n        Student s1 = new Student(\"张1\",10);\n        Student s2 = new Student(\"张2\",20);\n        Student s3 = new Student(\"张3\",30);\n\n        s.add(s1);\n        s.add(s2);\n        s.add(s3);\n\n        System.out.println(s);\n\n\n\n// 添加\n        s.add(s3);\n        System.out.println(s);\n\n\n\n// 删除\n        s.remove(s2);\n        System.out.println(s);\n\n\n\n// 包含元素\n  \t\tSystem.out.println( s.contains(s2) ); // true\n\n\n// 是否为空\n  \t\tSystem.out.println( s.isEmpty() ); // false\n\n\n// 遍历【增强for】\n        for (Student item : s) {\n            System.out.println(item);\n        }\n\n\n// 遍历【迭代器】\n        Iterator<Student> it = s.iterator();\n        \n        while(it.hasNext()){\n            System.out.println(it.next());\n        }\n\n\n\n// 【Student类中】重写hashcode方法，\n// 注意：此处写法不严谨，使用质数31来参与运算，解决散列冲突: 31*i = (31<<5)-i\n    @Override\n    public int hashCode() {\n        int n1 = this.name.hashCode();\n        int n2 = this.age;\n        return n1+n2;\n    }\n\n// 【Student类中】重写equals方法\n   @Override\n    public boolean equals(Object obj) {\n        if(obj == this){\n            return true;\n        }\n        else if(obj == null){\n            return false;\n        }\n        else if(obj instanceof Student){\n            Student s = (Student) obj;\n            if(this.name.equals(s.getName())&&this.age==s.getAge()){\n                return true;\n            } \n        }\n         return false;\n    }\n\n```\n\n\n\n\n\n\n\n\n\n#####  TreeSet：\n\n【红黑树，即：二叉查找树】\n\n-   按 `排列顺序` 实现  `元素不重复`\n-   实现了` SortedSet 接口`， 对元素 进行`自动排序`\n-   元素类 必须`实现 Comparable 接口`，指定 `排序规则`\n\n```java\n/*\n*  TreeSet:\n\n\n* \t\t1. add(obj)\n* \t\t2. remove(obj)\n* \t\t3. clear()\n*\t\t4. contains(obj)\n*\t\t4. isEmpty()\n*\t\t6. 遍历：\n\t\t\t - 增强型for\n\t\t\t - 迭代器\n*\n*/\n\n\n\n// Student类中 实现 Comparable 接口，重写 CompareTo() \n    @Override\n    public int compareTo(Student o) {\n        int n1 = this.name.compareTo(o.getName());\n        int n2 = this.age-o.getAge();\n        return n1==0?n2:n1;\t// 返回0，表示元素重复\n    }\n\n\n\n// 或者 main方法中，在new Student类时,传入匿名内部类，指定 比较规则\n\n        TreeSet<Student> s = new TreeSet<>(new Comparator<Student>() {\n            @Override\n            public int compare(Student o1, Student o2) {\n                int n1 = o1.getAge() - o2.getAge();\n                int n2 = o1.getName().compareTo(o2.getName());\n                return n1==0?n2:n1;\n            }\n        });\n\n\n\n\n\n// main\n\t\tTreeSet<Student> s = new TreeSet<>();\n\n        Student s1 = new Student(\"张1\",10);\n        Student s2 = new Student(\"张2\",20);\n        Student s3 = new Student(\"张3\",30);\n\n        s.add(s1);\n        s.add(s2);\n        s.add(s3);\n\n        System.out.println(s);\n\n\n\n// 添加\n        s.add(s3);\n        System.out.println(s);\n\n\n\n// 删除\n        s.remove(s2);\n        System.out.println(s);\n\n\n\n// 包含元素\n  \t\tSystem.out.println( s.contains(s2) ); // true\n\n\n// 是否为空\n  \t\tSystem.out.println( s.isEmpty() ); // false\n\n\n// 遍历【增强for】\n        for (Student item : s) {\n            System.out.println(item);\n        }\n\n\n// 遍历【迭代器】\n        Iterator<Student> it = s.iterator();\n        \n        while(it.hasNext()){\n            System.out.println(it.next());\n        }\n\n```\n\n\n\n\n\n#####  TreeSet-案例：\n\n```java\npackage CollectionDemo;\n\nimport java.util.Comparator;\nimport java.util.TreeSet;\n\npublic class TreeSetDemo {\n    /*  todo:\n    *       按照字符串的长度进行排序\n    *           beijing:7,guangzhou:9,shanghai:8\n    * */\n\n    \n// main\n    public static void main(String[] args) {\n\n        TreeSet<String> t = new TreeSet<>(new Comparator<String>() {\n            @Override\n            public int compare(String o1, String o2) {\n                int n1 = o1.length() - o2.length();\n                int n2 = o1.compareTo(o2);\n                return n1==0?n2:n1;\n            }\n        });\n\n\n        t.add(\"beijing:7\");\n        t.add(\"guangzhou:9\");\n        t.add(\"shanghai:8\");\n\n        System.out.println(t);\t// [beijing:7, shanghai:8, guangzhou:9]\n    }\n}\n\n```\n\n\n\n\n\n### 9.3 泛型\n\n注意：`6.4.2 `中也提到了泛型\n\n\n\n1.  泛型-定义：\n\n>   把`数据类型`当作`参数`,且`传入`的数据类型必须是`引用类型`【`基本类型` 必须使用 其`包装类 `作为参数】\n>\n>   例如：\n>\n>    `ArrayList<Integer> arr = new ArrayList< >( );`\n\n\n\n2.  常见形式：\n\n>   -   泛型类\n>   -   泛型接口\n>   -   泛型方法\n\n\n\n\n\n3.  语法：`<T,… >`  ，其中的 T可以换成`E,K,V`\n\n\n\n\n\n4.  好处：\n\n>   -   提高代码复用性\n>   -   提高代码安全性，防止 类型转化异常\n\n\n\n\n\n5.  泛型在集合框架中的应用：\n\n>   可以指定某个集合只能传入某个类型的数据。\n>\n>   【不指定`泛型`，`默认`传入`Object类型`，因此需 `强制转化`类型】\n\n\n\n\n\n#### 9.3.1 泛型类：\n\n```java\n/*\n*\t泛型类的语法： 类名<T>{ }\n*\t\t1. T为数据类型的 占位符，可以有多个，每个占位符之间用逗号隔开\n*\t\t2. T可以用来 声明 变量\n*\t\t3. T可以用来 作为 参数\n*\t\t4. T可以用来 作为 返回值\n*\t\t5. 不能 使用T的构造方法：不能 new T()\n*\t\t6. 不同的泛型对象 不能 相互赋值\n*\n*/\n\n// 泛型类\n\tpublic class MyGeneral<T>{    \n\n            T t1; \n\n            public void show(T t1){\n                System.out.println(t1);\n            }\n\n            public T getT1(){\n                return t1;\n            }   \n    }\n\n// main\n\n        MyGeneral<String> m1 = new MyGeneral<>(\"张三\");\n        System.out.println( m1.getT1()); // 张三\n        m1.show(\"你好\");\t//你好\n        \n\n        MyGeneral<Integer> m2 = new MyGeneral<>(123);\n        System.out.println(m2.getT1()); // 123\n        m2.show(456); // 456\n\n\n\n```\n\n\n\n\n\n#### 9.3.2 泛型接口：\n\n```java\n/* \t泛型接口：\n*\t\t1. 不能创建 泛型常量\n*/\n\n\n\n// 泛型接口\n        public interface myInt<T>{\n            T show(T t1);\n        }\n\n\n\n\n\n        // 1. 泛型接口-实现类【在实现接口时，确定要传入的类型】\n                public class myIntClass implements myInt<String>{\n                    @Override\n                    public String show(String t1) {\n                        System.out.println(t1);\n                        return t1;\n                    }\n                }\n        // main\n                myIntClass myInt_1 = new myIntClass();\n                myInt_1.show(\"你好\");\t// 你好\n\n\n\n\n\n\n\n        // 2. 泛型接口-实现类【在创建对象时，确定要传入的类型】\n                public class myIntClass2<T> implements myInt<T>{\n                    @Override\n                    public T show(T t1) {\n                        System.out.println(t1);\n                        return t1;\n                    }\n                }\n\n\n        // main\n                myIntClass2<Integer> myInt_2 = new myIntClass2<>();\n                myInt_2.show(123);\t// 123\n```\n\n\n\n\n\n\n\n#### 9.3.3 泛型方法：\n\n```java\n/*\n*\n*\n*\n*\n*\n*\n*\n*/\n\n\npublic class myGer{\n    \n // 泛型方法：   \n    public <T> void show(T t1){\n        System.out.println(\"这是泛型方法:\" + t1);\n    }\n    \n}\n\n\n// 泛型方法 T由 传入的数据的类型 来决定\n        myGer ger = new myGer();\n        ger.show(123);\t\t//这是泛型方法:123\n        ger.show(\"你好\");\t\t//这是泛型方法:你好\n\n```\n\n\n\n\n\n\n\n\n\n### 9.4 Map 集合：\n\n\n\n![Map集合](https://z3.ax1x.com/2021/05/24/gjdYbF.png)\n\n\n\n\n\n1.  特点：\n\n>   -   用于存储 `无序、无下标`的`键值对`\n>   -   键：无序、无下标、不重复\n>   -   值：无序、无下标、可重复\n\n\n\n```java\n/*\n*\tMap:\n*\t\tentrySet();\n*\t\tput(key,value);\n*\t\tget(key);\n*\t\tkeySet();\n*\t\tvalues();\n*/\n\n\n\n        Map<String,String> m = new HashMap<>();\n\n// 添加\n        m.put(\"a\",\"a->10\");\n        m.put(\"b\",\"b->20\");\n        m.put(\"c\",\"c->30\");\n\n        System.out.println(m);\n\n\n// 删除\n\t\tm.remove(\"c\");\n        System.out.println(m);\n\n\n// 遍历-【keySet】\n\t    Set<String> keyset = m.keySet();\n\n        for (String k : keyset) {\n            System.out.println(k+\"---\"m.get(k));\n        }\n\n\n// 遍历-【entrySet】\n\t\tSet<Map.Entry<String,String>>  entries = m.entrySet();\n\n        for (Map.Entry<String,String> item: entries ) {\n            \n            System.out.println(item.getKey()+\"---\"+item.getValue());\n        }\n\n```\n\n\n\n\n\n#### 9.4.1 HashMap\n\n默认容量：16。\n\n75%时，开始扩容。\n\n数组长度>8 且 链表长度>64时，使用红黑树。\n\n\n\n`为实现每一项的键和值都不一样，需要重写 hashcode()、equals() 【可使用IED的快捷键】`\n\n\n\nHashMap源码分析-小结：\n\n>   -   HashMap 刚创建时，table为null【为节省空间】，当添加第一个元素时，table的容量为16。\n>   -   元素个数大于阈值（容量的75%)时，会进行扩容为原来的2倍，目的是减少需要调整的元素个数。\n>   -   JDK1.8 ，当每个链表长度 大于8，元素个数 大于等于64时，调整为红黑树，目的是提高元素的效率。\n>   -   JDK1.8 ，当每个链表长度 小于6时，使用链表。\n>   -   JDK1.8以前，使用头插法；JDK1.8以后，使用尾插法。\n\n\n\n案例：\n\n统计字符串中每个字符的出现次数\n\n```java\nimport java.util.HashMap;\nimport java.util.Scanner;\n\n\npublic class Demo {\n    public static void main(String[] args){\n\n        Scanner sc = new Scanner(System.in);\n\n        String s = sc.nextLine();\n\n        HashMap<Character,Integer> hm = new HashMap<>();\n        \n        char[] arr = s.toCharArray();\n\n        for (char item: arr) {\n// hashmap中如果有该字符，则更新value\n// 没有该字符，则直接插入当前字符的键值对            \n            if(hm.containsKey(item)){\n                int t = hm.get(item);\n                hm.put(item,++t);\n            }else{\n                hm.put(item,1);\n            }\n        }\n\n\n\n        System.out.println(\"现在的字符串：\"+s);\n        System.out.println(\"现在的HashMap：\"+hm);\n\n    }\n}\n\n```\n\n\n\n\n\n\n\n\n\n\n\n#### 9.4.2 TreeMap\n\n存储：红黑树\n\n对 key 自动排序\n\n```java\n/*\n*\n*\t注意：参数类Student 必须 implents Comparable接口\n*\t\n*     put()\n*\t  remove()\n\n遍历：\n\t1. keySet();\n\t2. Entry\n*/     \n\n\t\tStudent s1 = new Student(\"张1\", 10);\n        Student s2 = new Student(\"张2\", 20);\n        Student s3 = new Student(\"张3\", 30);\n\n        TreeMap<Student, String> tm = new TreeMap<>();\n        tm.put(s1, \"1\");\n        tm.put(s2, \"2\");\n        tm.put(s3, \"3\");\n        System.out.println(tm);\n\n\n// 遍历-1\n        Set<Student> set = tm.keySet();\n        for (Student k:set ) {\n            System.out.println(k+\"---\"+tm.get(k));            \n        }\n\n\n// 遍历-2\n\n  \t\tMap.Entry<Student,String>> entries = tm.entrySet();\n\n        for (Map.Entry<Student,String> item: entries)\n        {\n            System.out.println(item.getKey()+\"---\"+item.getValue());\n        }\n```\n\n\n\n\n\n\n\n### 9.5 Collections 工具类：\n\n\n\n**方法**：\n\n-   `public static void reverse(List<?> list)`//反转集合中元素的顺序\n-   `public static void shuffle(List<?> list)`//随机重置集合元素的顺序\n-   `public static void sort(List<T> list)`//升序排序（元素类型必须实现Comparable接口）\n\n\n\n```java\n      \t\n\t\tArrayList<Integer> arr = new ArrayList<>();\n        arr.add(10);\n        arr.add(20);\n        arr.add(30);\n        arr.add(40);\n\n        System.out.println(arr);\n\n// 打乱顺序\n        Collections.shuffle(arr);        \n        System.out.println(arr);\n\n//排序\n    \tCollections.sort(arr);\n        System.out.println(arr);\n\n// 二分查找\n        System.out.println( Collections.binarySearch(arr,20) );\n\n//反转\n    \tCollections.reverse(arr);\n        System.out.println(arr);\n\n```\n\n\n\n\n\n\n\n\n\n## 10. 多线程\n\n-   [狂神说Java多线程详解](https://www.bilibili.com/video/BV1V4411p7EF?)\n-   [赵姗姗-b站-多线程](https://www.bilibili.com/video/BV1cb4y1X7kz?p=115)\n-   [Java多线程详解](https://www.cnblogs.com/13roky/p/14707360.html#1-基本概念)\n\n\n\n\n\n1.   并发 与 并行：\n\n>   -   并发：在一段**时间段**内执行多个程序\n>\n>   -   并行：在一个**时间点**执行多个程序\n\n\n\n2.   进程 和 线程 ：\n\n>   进程：1个正在运行的程序【资源分配的基本单位】\n>   线程：1个进程通常由多个线程组成（最少有1个main线程)【资源调度的基本单位】\n>\n>    \n>\n>   **多线程的好处** ：效率高，多个线程之间互不影响\n\n\n\n3.   线程的调度：\n\n>   -   分时调度：所有线程轮流使用CPU\n>   -   抢占调度：让`优先级`高的线程先使用CPU，如果优先级一样，则随机选一个【`Java使用: 抢占调度`】\n\n\n\n4.  主线程：\n\n>   -   主线程：执行 main 方法的线程\n>   -   单线程程序：java默认情况只有1个线程=》main线程\n>   -   JVM 的 main方法进栈 并 执行main 方法 =》产生1条进栈的路（main线程）\n\n\n\n\n\n5.  最常见的线程操作：\n\n>   -   设置线程名：setName( )\n>\n>   -   获取线程名：getName( )\n>   -   获取当前线程：Thread.currentThread( )\n\n\n\n### 10.1 多线程的实现：\n\n\n\n\n\n#### 10.1.1 方式1【继承Thread类-重点】\n\n步骤：\n\n-   `继承Thread类`【java.lang.Thread类】形成子类。\n-   override `重写 `Thread类的 `run 方法`【线程要干什么】。\n-   main中 `new 1个 线程对象`。\n-   `线程对象.start( ) `【启动线程】，JVM会自动调用 run( )来执行任务。\n-   最终：main线程 和 新的线程 并发执行。\n\n\n\n**注意：**\n\n-   多次重复启动1个 线程是非法的。【尤其是在 该线程已经 执行完毕后】\n-   java 是执行线程是` 抢占式`，线程的`优先级越高`，越`优先执行`。\n\n\n\n```java\npackage ThreadsDemo;\n\n// 1. 继承Thread类\npublic class TestThread extends Thread{\n\n// 2. 重写 run()方法\n    @Override\n    public void run() {\n\n        for (int i = 0; i < 1000; i++) {\n            System.out.println(\"多线程执行-\"+i);\n        }\n\n    }\n\n// 3. main 函数中 new 线程对象，调用 start()\n    public static void main(String[] args) {\n\n        Thread th1 = new TestThread();\n\n        th1.start();\n\n\n        for (int i = 0; i <1000 ; i++) {\n            System.out.println(\"main线程执行~~\");\n        }\n    }\n\n}\n\n```\n\n\n\n\n\n##### 案例1-多线程下载图片：\n\n-   前提：\n\n    -   下载、导入jar包： commons-io.jar包 \n\n    >   导入Jar包的步骤：\n    >\n    >   1.  新建 lib文件夹\n    >   2.  将 jar包 托入lib文件夹\n    >   3.  打开 file -> project Structure -> lib -> 点击 “+” -> 应用\n\n    -   导入该案例所需的工具类：\n        -    `import org.apache.commons.io.FileUtils;`\n        -   `import java.net.URL;`  \n        -    `import java.io.File;`\n        -   `import java.io.IOException;`\n\n```java\n/*\n*\t1. 类： \n\t\t\tWebDownLoader类，TestThread2类\n*\n*\t\n*/\n\n\nimport java.io.IOException;\nimport java.net.URL;\nimport java.io.File;\nimport org.apache.commons.io.FileUtils;\n\n\n// 下载器类\n        class WebDownLoader{\n\n            public void download(String url,String name){\n                try {\n                    FileUtils.copyURLToFile(new URL(url),new File(name));\n                } catch (IOException e) {\n                    e.printStackTrace();\n                    System.out.println(\"IO异常-在 download 方法中\");\n                }\n            }\n        }\n\n\n\n// 多线程-下载图片\n    public class TestThread2 extends Thread {\n        private String url;\n        private String name;\n\n        public TestThread2(String url, String name) {\n            this.url = url;\n            this.name = name;\n        }\n\n// 重写线程类的 run方法        \n        @Override\n        public void run() {\n\n            WebDownLoader wd = new WebDownLoader();\n            wd.download(this.url,this.name);\n            System.out.println(\"下载的文件名为：\"+this.name);\n        }\n        \n// main方法\n        public static void main(String[] args) {\n            \n            String base_url=\"https://t7.baidu.com/it/u=\";\n            \n            TestThread2 downTh1 = new TestThread2(base_url+\"1595072465,3644073269&fm=193&f=GIF\",\"图片-1.jpg\");\n            TestThread2 downTh2 = new TestThread2(base_url+\"825057118,3516313570&fm=193&f=GIF\",\"图片-2.jpg\");\n            TestThread2 downTh3 = new TestThread2(base_url+\"3435942975,1552946865&fm=193&f=GIF\",\"图片-3.jpg\");\n \n// 开启多线程，进行下载            \n            downTh1.start();\n            downTh2.start();\n            downTh3.start();\n        }\n    }\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n#### 10.1.2 方式2【实现Runnable接口-重点-推荐】\n\n`推荐使用`\n\n步骤：\n\n-   实现Runnable接口，重写run( )方法\n-   在main方法中，new 1个 实现类【`实现类 就是多线程要抢的 资源`】\n-   将 实现类的对象 作为参数，传入 new Thread( ) 构造方法中\n-   线程类.start( )来自动执行run( )\n\n```java\npackage ThreadsDemo;\n\n// 重写 实现类的 run方法\n   \t public class TestThread3 implements Runnable{\n\n            @Override\n            public void run() {\n                System.out.println(\"我是多线程\");\n            }\n\n// main函数\n            public static void main(String[] args) {\n              // 创建实现类的对象\n                TestThread3 tt3 = new TestThread3();\n              // 将实现类的对象 传入 Thread类的构造方法中\n                Thread th1 = new Thread(tt3);\n\n              // 开启线程  \n                th1.start();\n            }\n    }\n\n```\n\n\n\n#####  案例2-下载图片\n\n```java\npackage ThreadsDemo;\n\nimport org.apache.commons.io.FileUtils;\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URL;\n\n// 下载器\n    class WebDownLoader2{\n\n\n        public void download(String url,String name){\n            try {\n                FileUtils.copyURLToFile(new URL(url),new File(name));\n\n            } catch (IOException e) {\n                e.printStackTrace();\n                System.out.println(\"download方法-> IO异常\");\n            }\n\n        }\n    }\n\n// 多线程\n    public class TestThread4 implements Runnable{\n\n        private String url;\n        private String name;\n\n        public TestThread4(String url, String name) {\n            this.url = url;\n            this.name = name;\n        }\n\n        @Override\n        public void run() {\n\n            WebDownLoader2 wd2 = new WebDownLoader2();\n            wd2.download(this.url,this.name);\n            System.out.println(\"当前正在下载：\"+this.name);\n\n        }\n\n        public static void main(String[] args) {\n\n            String url_1 = \"https://t7.baidu.com/it/u=3779234486,1094031034&fm=193&f=GIF\";\n            String url_2 = \"https://t7.baidu.com/it/u=3908717,2002330211&fm=193&f=GIF\";\n            String url_3 =\"https://t7.baidu.com/it/u=3785402047,1898752523&fm=193&f=GIF\";\n\n            TestThread4 tt1 = new TestThread4(url_1,\"1.jpg\");\n            TestThread4 tt2 = new TestThread4(url_2,\"2.jpg\");\n            TestThread4 tt3 = new TestThread4(url_3,\"3.jpg\");\n\n            new Thread(tt1).start();\n            new Thread(tt2).start();\n            new Thread(tt3).start();\n            \n        }\n    }\n\n\n\n\n```\n\n\n\n\n\n##### 案例3-模拟抢票：\n\n```java\npackage ThreadsDemo;\n\n// 多线程操作同一对象时，出现线程不安全，数据紊乱【重复 抢到 同一张票】\n\n// 票-类\npublic class TestThread5 implements Runnable{\n\n    static int ticketNum=10;\n// 重写run方法\n    @Override\n    public void run() {\n        while(true){\n            if(ticketNum<=0)break;\n            System.out.println(Thread.currentThread().getName()+\" => 拿到了第\"+(ticketNum--)+\"张票\");\n            try {\n                Thread.sleep(200);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n// main方法\n    public static void main(String[] args) {\n        TestThread5 t1 = new TestThread5();\n        TestThread5 t2 = new TestThread5();\n        TestThread5 t3 = new TestThread5();\n\n        new Thread(t1,\"小虹\").start();\n        new Thread(t2,\"小白\").start();\n        new Thread(t3,\"小黄\").start();\n\n    }\n}\n\n```\n\n\n\n##### 案例4-龟兔赛跑：\n\n```java\npackage ThreadsDemo;\n\n// 多线程案例：龟兔赛跑\n// \"实现类\" =》跑道 =》资源\npublic class RaceDemo {\n    public static void main(String[] args) {\n        Race race = new Race();\n        new Thread(race,\"兔子\").start();\n        new Thread(race,\"乌龟\").start();\n    }\n}\n\nclass Race implements Runnable{\n    private static String winner;\n// 重写run方法\n    @Override\n    public void run() {\n\n        for (int i = 1; i <=100; i++) {\n\n            if(Thread.currentThread().getName().equals(\"兔子\") && i%10==0){\n                try {\n                    Thread.sleep(1);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n\n\n            boolean flag = isFinished(i);\n\n            if(flag)break;\n\n            System.out.println(Thread.currentThread().getName()+\"-> 跑了\"+i+\"步\");\n\n            isFinished(i);\n\n        }\n    }\n// 判断是否完成\n    public boolean isFinished(int steps){\n        if(winner != null){\n            return true;\n        }else {\n            if(steps >= 100){\n                winner = Thread.currentThread().getName();\n                System.out.println(\"胜利者：\"+winner);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n```\n\n\n\n\n\n#### 10.1.3 方式3【实现Callable接口-了解】\n\n\n\n好处：\n\n>   -   可以 `抛出异常`\n>\n>   -   可以 有`返回值`\n\n\n\n\n\n步骤：\n\n-   实现 Callcable接口\n-   重写 call( )方法\n-   创建目标对象：\n-   创建执行服务：`  ExecutorService es = Executors.newFixedThreadPool(2);`\n-   提交执行：  `Future<Boolean> res1 = es.submit(tc1);`\n-   获取结果：` boolean r1 = res1.get();`\n-   关闭服务：`  es.shutdownNow();`\n\n\n\n\n\n\n\n##### 案例5：下载图片\n\n```java\npackage ThreadsDemo;\n\nimport org.apache.commons.io.FileUtils;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.concurrent.*;\n\n// 下载器类\n        class webImageDownLoader{\n\n\n            public void download(String url,String name){\n                try {\n                    FileUtils.copyURLToFile(new URL(url),new File(name));\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n\n                System.out.println(\"下载的文件名为 \"+name);\n            }\n        }\n\n        public class TestCallable implements Callable {\n            private String url;\n            private String name;\n\n\n            public TestCallable(String url, String name) {\n                this.url = url;\n                this.name = name;\n            }\n// 重写call()\n            @Override\n            public Boolean call() throws Exception {\n\n                webImageDownLoader wid = new webImageDownLoader();\n                wid.download(this.url,this.name);\n                return true;\n            }\n\n// main函数\n            public static void main(String[] args) {\n                TestCallable tc1 = new TestCallable(\"https://t7.baidu.com/it/u=1595072465,3644073269&fm=193&f=GIF\",\"图片-1.jpg\");\n                TestCallable tc2 = new TestCallable(\"https://t7.baidu.com/it/u=825057118,3516313570&fm=193&f=GIF\",\"图片-2.jpg\");\n\n                // 创建执行服务\n                ExecutorService es = Executors.newFixedThreadPool(2);\n\n                // 提交执行操作\n                Future<Boolean> res1 = es.submit(tc1);\n                Future<Boolean> res2 = es.submit(tc2);\n\n                try {\n                    // 获取执行结果\n                    boolean r1 = res1.get();\n                    boolean r2 = res1.get();\n\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                } catch (ExecutionException e) {\n                    e.printStackTrace();\n                }\n\n\n                // 关闭执行服务\n                es.shutdownNow();\n            }\n        }\n\n\n\n\n\n```\n\n\n\n\n\n### 10.2 静态代理\n\n多线程的原理 就利用了 静态代理。\n\n```java\n/*\n*\t静态代理：\n*\t\t1.真实对象、代理对象，都要实现 同一个方法\n*\t\t2. 好处：代理对象可以做很多招生对象做不了的事。\n*\n*\n*/\n\npublic class StaticProxy {\n\n    public static void main(String[] args) {\n        WeddingCompany weddingCompany = new WeddingCompany(new You());\n        weddingCompany.HappyMarry();\n    }\n}\n\n// 接口\ninterface Marry{\n    void HappyMarry();\n}\n\n// 结婚者【代理对象】\nclass You implements Marry{\n\n    @Override\n    public void HappyMarry() {\n        System.out.println(\"我结婚了，你哼开心~~\");\n    }\n}\n\n// 婚庆公司【真实对象】\nclass WeddingCompany implements Marry{\n\n    private Marry target;\n\n    public WeddingCompany(Marry target) {\n        this.target = target;\n    }\n    \n     private void before(){\n        System.out.println(\"布置\");\n    }\n\n    private void after(){\n        System.out.println(\"收钱\");\n    }\n// 重写接口的方法\n    @Override\n    public void HappyMarry() {\n        this.before();\n        this.target.HappyMarry();\n        this.after();\n    }\n    \n   \n}\n\n```\n\n\n\n\n\n\n\n### 10.3 Lambda 表达式：\n\nLambda表达式，，是函数式编程，它可以作为**匿名内部类**的替代品。\n\n\n\n函数式接口：\n\n>   一个接口，如果`只有1个抽象方法`，则为 `函数式接口` 。【接口只有1个方法】\n\n\n\n类似：`        new Thread( ()-> System.out.println(\"多线程的学习\")).start();`\n\n\n\n格式：【函数式接口 =》需要保证：接口中只有1个抽象方法】\n\n-   `(参数)-> {表达式1;表达式2;};`\n\n```java\n@FunctionalInterface\npublic interface myInt{\n    public abstract void Eat();\n    //...其他内容\n}\n```\n\n\n\n步骤：\n\n>   -   定义1个只有1个方法的接口\n>   -   使用lambda实现方法并创建对象\n>   -   调用方法\n\n函数式接口 =》作为方法的`参数 和 返回值类型`。\n\n```java\nclass Demo{\n    public static void show(myInt a){\n        a.Eat();\n    }\n     public static void main(String[] args){\n       // 方式1：传入接口的实现类  \n          this.show(new myIntImpCls());\n         \n       // 方式2：传入接口  \n         this.show(new myIntInmp(){\n             // 重写接口的方法\n         });\n         \n      // 方式3：传入Lambda \n         this.show(()->{System.out.println(\"你好\");});\n    }\n    \n}\n```\n\n\n\n\n\n##### 案例6：\n\n-   优化前\n\n```java\n\n    interface Ilike{\n        void lambda(); \n    }\n\n    class Like implements Ilike{\n        @Override\n        public void lambda() {\n            System.out.println(\"我喜欢lambda \");\n        }\n    }\n\n\npublic class Demo {\n    public static void main(String[] args) {\n// 优化前        \n       Ilike a = new Like();\n       a.lambda();\n        \n    }\n}\n\n\n\n```\n\n\n\n-   优化后\n\n```java\n\ninterface Ilike{\n    void lambda(); \n}\n\nclass Like implements Ilike{\n    @Override\n    public void lambda() {\n        System.out.println(\"我喜欢lambda \");\n    }\n}\n\n\tpublic class Demo { \n        public static void main(String[] args) {\n    \n// 普通 \n           Ilike a = new Like();\n           a.lambda();\n       \n//静态内部类\n           Like2 b = new Like2();\n           b.lambda();\n\n//局部内部类\n            class Like3 implements Ilike{\n                @Override\n                public void lambda() {\n                    System.out.println(\"我喜欢lambda \");\n                }\n            }       \n            Like3 c = new Like3();\n            c.lambda();\n        \n        \n// 匿名内部类\n            Ilike d = new Ilike() {\n                @Override\n                public void lambda() {\n\n                }\n            };        \n            d.lambda();\n        \n// lambda\n            Ilike e = ( )->{\n                System.out.println(\"I like lambda\");\n            };\n            e.lambda();\n\n        }\n    }\n\n\n```\n\n\n\n\n\n##### lambda表达式的简化：\n\n```java\npackage LandaDemo;\n\n\n\ninterface Ilike{\n    void lambda(int i);\n}\n\npublic class Demo {\n\n    public static void main(String[] args) {\n\n\n// 普通 lambda\n       Ilike a = (int i)->{\n           System.out.println(\"lambda: \"+i);\n           System.out.println(\"lambda: \"+i);\n       };\n\n       a.lambda(123);\n\n        \n        \n        \n// 简化参数 lambda\n        Ilike b = (i)->{\n            System.out.println(\"lambda: \"+i);\n            System.out.println(\"lambda: \"+i);\n        };\n\n        b.lambda(123);\n\n        \n        \n        \n// 简化括号 lambda【多个参数必须有小括号】\n        Ilike c = i->{\n            System.out.println(\"lambda: \"+i);\n            System.out.println(\"lambda: \"+i);\n        };\n\n        c.lambda(123);\n\n        \n        \n        \n// 简化括号 lambda【只适合一行代码的情况下使用】\n        Ilike d = i->System.out.println(\"lambda: \"+i);\n\n        d.lambda(123);\n        \n\n    }\n}\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### 10.4 线程的生命周期：\n\n`java.lang.Thread.State`\n\n-   新生：new Thread( )\n-   就绪：线程调用 start( ) 后进入 该状态。【还没 轮到 该线程 使用cpu】\n-   运行：线程自动调用run(  )后进入 该状态\n-   阻塞：等待\n-   消亡：程序正常结束、出现异常、手动 调用已被废弃不用的stop( )\n\n\n\n![](https://www.runoob.com/wp-content/uploads/2014/01/java-thread.jpg)\n\n\n\n\n\n![多线程-状态](https://z3.ax1x.com/2021/05/24/gvPy6S.png)\n\n\n\n\n\n#### 10.4.1 线程常用方法：\n\n>   -   start( )：开启线程，自动调用线程中的 run( )\n>   -   run( )：继承自Runnable接口的方法，必须在线程中 覆盖重写。\n>   -   join( )：先start( )，再join( )。一旦 join( )，优先执行完后，才轮到别的线程执行。 【插队、阻塞】\n>   -   currentThread( )：获取当前正在运行的线程。\n>   -   getName( )：获取线程名\n>   -   setName( 线程名 )：设置线程名\n>   -   setPriority( 优先级 )：设置线程的 优先级，传入1~10，默认5。值越大，越可能被调用。\n>   -   sleep(  毫秒数 )：阻塞\n>   -   setDaemon( true )：将子线程 设置为 主线程的伴随线程。主线程停止时，子线程继续执行一段时间后也停止。【先设置，再start( )】\n>   -   wait(毫秒数 )：阻塞，【老板等顾客】，毫秒数过后仍然没有线程调用锁对象的notify( )，则自动唤醒。\n>   -   notify( )：唤醒，【包子做好给顾客】\n\n\n\n几个方法的使用顺序：\n\n>   -   setDaemon( true )\n>   -   start( )\n>   -   join( )\n\n\n\n\n\n#### 10.4.2 线程优先级：\n\n>   -   优先级：1~10，默认优先级为 5\n>   -   优先级 相同时，按时间片，先到先得\n>   -   优先级越高，线程 被CPU先调用 的机率更高\n>   -   join( )可以无视优先级，直接插队【先start( )，再join( )】\n\n\n\n\n\n### 10.5 线程的同步：\n\n\n\n-   多线程 产生的问题：\n\n>   多个线程抢夺到同一个资源\n>\n>   如：买票时，买到同一张票。\n\n\n\n-   解决多线程安全问题：\n\n>   加 “锁”【同步、同步监视器】\n\n\n\n\n\n三种方式：\n\n#### 10.5.1 同步代码块\n\n\n\n```java\n// 线程类\nclass TestThread implements Runnable{\n    @Override\n    public void run() {\n        \n        for (int i = 0; i <10 ; i++) {\n\n// 同步代码块-形式1           \n            synchronized (this){\t\n                // 这里的this就是要锁住的对象，锁 多了会降低效率。\n                // 如果是实现Runnable接口的线程，由于只需new一个线程对象，并将该对象传入多个Thread(),\n                // \t\t因此,锁住的是同一个对象。\n                // 但如果是继承Thread类的多线程，由于new了多个线程对象，因此锁住的不是同一个对象，\n                // \t\t因此,锁没有真的生效。\n                // 综上，锁对象 必须要是同一个对象。\n                System.out.println(Thread.currentThread().getName());\n            }\n            \n            \n// 同步代码块-形式2 \n            static Object obj = new Object();\n            \n             synchronized (obj){              \n                System.out.println(Thread.currentThread().getName());\n            }\n            \n            \n            \n// 同步代码块-形式3 【推荐】\n           // 将 线程类的字节码 作为 锁对象。\n             synchronized (TestThread.class){              \n                System.out.println(Thread.currentThread().getName());\n            }            \n            \n        }\n    }\n}\n```\n\n\n\n小结：\n\n>   -   语法：`synchronized( 锁对象){ 语句 }`\n>   -   锁对象【同步监视器】 必须是 `引用类型`，且最好使用`final 修饰`。\n>   -   不要 将String、包装类Interger 作为锁\n>   -   在同步代码块中，`不应该 改变锁对象`的引用。\n>   -   可以使用一个`static类型的无确切的含义的对象`来充当 `锁对象`【同步监视器】\n\n\n\n执行过程：\n\n>   -   线程A来到同步代码块，发现“ 锁”处于open状态，于是进入，并close“锁”\n>   -   线程B来到同步代码块，CPU资源切换到线程B，但B发现 “锁” close，于是阻塞。\n>   -   线程A 继续接管CPU资源，执行同步代码块的内容，执行完毕后，open“锁”\n>\n>   \n>\n>   **小结：**\n>\n>   -   同步代码块中，可以切换CPU资源，但不能执行同步代码块的内容，因为“锁”，仍处于close状态。\n\n\n\n\n\n#### 10.5.2 同步方法\n\n```java\nclass TestThread implements Runnable{\n    \n// 同步方法  \n    private static synchronized void sayWhoAmI(){\n        \n        System.out.println(Thread.currentThread().getName());\n        \n    }\n    \n    @Override\n    public void run() {\n        \n        for (int i = 0; i <10 ; i++) {\n// 调用            \n            sayWhoAmI();\n            \n        }\n    }\n    \n   \n}\n```\n\n\n\n\n\n#### 10.5.3 Lock锁\n\n\n\n`import java.util.concurrent.locks.Lock;`\n\n-   在类的成员位置：Lock lock1 = new ReentrantLock( )\n-   在线程问题的语句前【try-catch内】：lock1.lock( )\n-   语句块\n-   在线程问题的语句后【finally语句块中】：lock1.unlock( )\n\n```java\nclass TestThread implements Runnable{\n\n// 锁对象    \n    Lock lock1 = new ReentrantLock();\n\n    @Override\n    public void run() {\n\n        for (int i = 0; i <10 ; i++) {\n// 加锁\n            lock1.lock();\n\n            try {\n// 处理                \n                System.out.println(Thread.currentThread().getName());\n            } catch (Exception e) {\n                e.printStackTrace();\n            }finally {   \n// 解锁                \n                lock1.unlock();\n            }\n\n        }\n    }  \n}\n\n```\n\n\n\n小结：\n\n>   Lock的优点：\n>\n>   -   Lock效率更高\n>   -   可由用户控制，而之前的synchronzied由JVM控制\n>   -   扩展性好，Lock是一个接口，有多个实现类\n>\n>    \n>\n>   使用优先级：\n>\n>   -   Lock【推荐】 -> 同步代码块 -> 同步方法\n\n\n\n线程安全性问题：\n\n>   可能导致`死锁` =》 `尽可能不`使用 同步资源的`嵌套`\n\n\n\n\n\n\n\n### 10.6 线程通信问题：\n\n\n\n#### 10.6.1生产者与消费者问题\n\n经典问题：\n\n-   [生产者与消费者问题-视频1：](https://www.bilibili.com/video/BV1op4y1S7KK?from=search&seid=13986664181595566652)\n-   [生产者与消费者问题-视频2](https://www.bilibili.com/video/BV1Lb411z71t/?spm_id_from=trigger_reload)\n\n>   生产者：生产商品，放入仓库\n>\n>   消费者：消费商品，取出仓库 \n>\n>    \n>\n>   以上两个线程共享资源【仓库】，但每个线程 执行的操作不同，需要线程之间的通信，来同步仓库中的商品数。\n\n代码分析：\n\n-   生产者：\n-   消费者：\n-   商品：品牌、名字\n\n![多线程-生产者和消费者](https://z3.ax1x.com/2021/05/24/gx9XeH.png)\n\n\n\n#### 10.6.2 解决线程通信问题：\n\n例子：\n\n>   生产者：包子铺老板。\n>\n>   消费者：顾客\n>\n>    \n>\n>   顾客：告诉老板 购买的包子数，顾客调用`wait( )`，放弃CPU执行，进入`waiting无限等待`状态\n>\n>   老板：花5s做包子，调用`notify( )`，告知唤醒 顾客来拿包子。\n>\n>   **注意：**\n>\n>   -   老板、顾客都要使用 `同步代码块` 包裹。\n>   -   同步代码块的`锁对象`必须`唯一`。\n>   -   只有`锁对象`才能调用` wait( )`，和`notify( )`。\n\n综上：\n\n-   吃、做包子【包子和包子铺互斥，因此包子为 锁对象】\n-   修改标志\n-   唤醒对方\n\n\n\n\n\n-   同步代码块\n\n```java\n/*\n*\t分别在生产者类、消费者类中使用同步代码块\n*\n*/\n\n\n\n// main方法\n    public class Demo2 {\n\n        public static void main(String[] args) {\n\n            Product p = new Product();\n\n            ProcuderThread pt = new ProcuderThread(p);\n\n            ClientThread ct =new ClientThread(p);\n\n            new Thread(pt).start();\n            new Thread(ct).start();\n        }\n    }\n\n// 产品\n    class Product{\n        private String brand;\n\n        private String name;\n\n        public String getBrand() {\n            return brand;\n        }\n\n        public void setBrand(String brand) {\n            this.brand = brand;\n        }\n\n        public String getName() {\n            return name;\n        }\n\n        public void setName(String name) {\n            this.name = name;\n        }\n\n        public Product() {\n        }\n\n        public Product(String brand, String name) {\n            this.brand = brand;\n            this.name = name;\n        }\n    }\n\n// 生产者\n    class ProcuderThread implements Runnable{\n        private Product p;\n\n        public ProcuderThread(Product p) {\n            this.p = p;\n        }\n\n        @Override\n        public void run() {\n            for (int i = 1; i <=10 ; i++) {\n\n                synchronized (p){\n\n                    if(i%2==0){\n                        // 生产巧克力\n                        this.p.setBrand(\"德芙\");\n                        try {\n                            Thread.sleep(100);\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                        this.p.setName(\"巧克力\");\n                    }else{\n                        // 生产啤酒\n                        this.p.setBrand(\"青岛\");\n                        try {\n                            Thread.sleep(100);\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                        this.p.setName(\"啤酒\");\n                    }\n\n\n                    System.out.println(\"生产者生产了：\"+this.p.getBrand()+\"--->\"\n                            +this.p.getName());\n\n                }\n\n            }\n        }\n    }\n\n//消费者\n    class ClientThread implements Runnable {\n        private Product p;\n\n        public ClientThread(Product p) {\n            this.p = p;\n        }\n\n        @Override\n        public void run() {\n            for (int i =1; i <=10 ; i++) {\n\n                synchronized (p){\n                    System.out.println(\"消费者消费了：\"+this.p.getBrand()+\"--->\"\n                            +this.p.getName());\n                }\n            }\n        }\n    }\n```\n\n\n\n\n\n-   同步方法\n\n```java\n/*\n*\t在产品类中使用同步代码块\n*\n*\n*/\n\npublic class Demo2 {\n\n    public static void main(String[] args) {\n\n        Product p = new Product();\n\n        ProcuderThread pt = new ProcuderThread(p);\n\n        ClientThread ct =new ClientThread(p);\n\n        new Thread(pt).start();\n        new Thread(ct).start();\n\n\n    }\n}\n\n// 产品\n    class Product{\n        private String brand;\n\n        private String name;\n\n        public String getBrand() {\n            return brand;\n        }\n\n        public void setBrand(String brand) {\n            this.brand = brand;\n        }\n\n        public String getName() {\n            return name;\n        }\n\n        public void setName(String name) {\n            this.name = name;\n        }\n\n        public Product() {\n        }\n\n        public Product(String brand, String name) {\n            this.brand = brand;\n            try {\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            this.name = name;\n\n            System.out.println();\n        }\n\n        public synchronized void setProduct(String brand, String name){\n            this.setBrand(brand);\n            try {\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            this.setName(name);\n\n            System.out.println(\"生产者生产了：\"+this.getBrand()+\"--->\"\n                    +this.getName());\n\n        }\n\n        public synchronized void getProduct(){\n\n            System.out.println(\"消费者消费了：\"+this.getBrand()+\"--->\"\n                    +this.getName());\n\n        }\n    }\n// 生产者\n    class ProcuderThread implements Runnable{\n        private Product p;\n\n        public ProcuderThread(Product p) {\n            this.p = p;\n        }\n\n        @Override\n        public void run() {\n            for (int i = 1; i <=10 ; i++) {\n\n                    if(i%2==0){\n                        p.setProduct(\"德芙\",\"巧克力\");\n                    }else{\n                        p.setProduct(\"青岛\",\"啤酒\");\n                    }\n\n                    System.out.println(\"生产者生产了：\"+this.p.getBrand()+\"--->\"\n                            +this.p.getName());\n\n            }\n        }\n    }\n\n// 消费者\n    class ClientThread implements Runnable {\n        private Product p;\n\n        public ClientThread(Product p) {\n            this.p = p;\n        }\n\n        @Override\n        public void run() {\n            for (int i =1; i <=10 ; i++) {\n\n                p.getProduct();\n            }\n        }\n    }\n\n```\n\n\n\n-   Lock锁\n\n\n\n\n\n\n\n\n\n\n\n\n\n### 10.7 线程池：\n\n\n\n>   -   第一次使用时，创建多个线程，存入集合中【集合中的线程可以复用】\n>   -   使用时，取出线程\n>   -   用完后，重写存入线程池\n>\n>   \n>\n>    \n>\n>   JDK1.5 之后，自带线程池，无需 用户 自己使用 集合 创建线程池。\n>\n>   -   `java.util.concurrent.Executors;` =》生产 线程池 的工厂类\n>   -   `ExecutorService newFixedThreadPool( 线程数 );` 生成线程池的方法\n>   -   `submit( 线程);`\n>   -   `shudown();`\n>\n>    \n>\n>   线程池的好处：\n>\n>   -   提高速度\n>   -   降低消耗\n\n\n\n\n\n```java\npackage ThreadPoolDemo;\n\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\n\n// 线程类\n    class TestThread implements Runnable{\n        @Override\n        public void run() {\n            System.out.println(\"这是:\"+Thread.currentThread().getName());\n        }\n    }\n\n// main方法\n    public class Demo {\n        public static void main(String[] args) {\n\n// 创建 1个可存放3个线程 的线程池\n            ExecutorService service = Executors.newFixedThreadPool(3);\n\n// 创建2个线程，并提交给 线程池\n            service.submit(new TestThread());\n            service.submit(new TestThread());\n\n            service.shutdownNow();\n\n        }\n    }\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 11. 网络编程\n\n整体过程：\n\n-   服务器：启动，监听端口\n-   客户端：主动连接 服务器\n\n\n\nJava中专门用于TCP通信的类：\n\n-   客户端：`java.net.Socket` ，创建对象，发起连接\n-   服务器：`java.net.ServerSocket`，创建对象，开启服务\n\n\n\n在TCP通信中，传输了`字节流对象`, 该流对象是`属于客户端`的流，服务器共用客户端的流。\n\n\n\nSocket：\n\n>   套接字，是 包含了 IP地址+端口号的网络单位。\n\n\n\nSocket的常用方法：\n\n>   构造方法：\n>\n>   -   客户端：`public Socket(String host目标主机, int port目标端口);`\n>   -   服务器：`public ServerSocket(int port);`\n>\n>    \n>\n>   客户端-成员方法：\n>\n>   -   `getInputStream();`  // 获取输入流\n>   -   `getOutputStream();` // 获取输出流\n>   -   `close()`  // 关闭套接字\n>\n>    \n>\n>   服务器-成员方法：\n>\n>   -   `accept()` // 获取客户端的Socket\n>   -   `getInputStream();` // 获取输入流\n>   -   `getOutputStream();` // 获取输出流\n>   -   `close()`  // 关闭套接字\n\n\n\n```java\n/*\n*\t步骤：【客户端】\n*\t\t1. 创建客户端Scocket，构造方法中传入IP、端口\n*\t\t2. 获取客户端的输出流 getOutputStream()\n*\t\t3. 输出流的 write()来向服务器发送数据\n*\t\t4. 获取客户端的输入流 getInputStream()\n*\t\t5. 输入流的 read()来读取数据\n*\t\t6. 释放资源 close()\n\n\n\n*\t步骤：【服务器】\n*\t\t1. 创建服务器Scocket对象，构造方法中传入端口\n*\t\t2. accept()获取客户端的Socket,\n*\t\t3. socket.getInputStream() 来获取输入流  =》 read()\n*\t\t4. socket.getOutputStream() 来获取输出流 =》 write()\n*\t\t6. 释放资源【客户端的Socket、服务器的Socket】 close()\n*\n\n\n\n*  注意：\n*\t\t1. 网络通信，必须使用Socket提供的流对象，不能使用自己创建的流。\n*\t\t2. Socket创建时，会向服务器发起请求，如果服务器未开启，则出现异常，否则可以正常通信。\n*/\n\n\n// 服务端：=======================================\n\n        package TCPDemo;\n\n        import java.io.IOException;\n        import java.io.InputStream;\n        import java.io.OutputStream;\n        import java.net.ServerSocket;\n        import java.net.Socket;\n        import java.nio.charset.StandardCharsets;\n\n        public class Demo2 {\n            public static void main(String[] args) throws IOException{               \n             \n                ServerSocket socketServer = new ServerSocket(8888);\n              \n                Socket client = socketServer.accept();\n                \n                InputStream is = client.getInputStream();\n\n                byte[] buffer = new byte[1024];\n                int len=is.read(buffer);\n\n                System.out.println(new String(buffer,0,len));\n\n\n                OutputStream os = client.getOutputStream();\n                os.write(\"收到，谢谢\".getBytes(StandardCharsets.UTF_8));\n\n\n                client.close();\n                socketServer.close();\n\n            }\n        }\n\n\n\n// 客户端：=======================================\n\n         package TCPDemo;\n\n        import java.io.IOException;\n        import java.io.InputStream;\n        import java.io.OutputStream;\n        import java.net.Socket;\n        import java.nio.charset.StandardCharsets;\n\n        public class Demo {\n            public static void main(String[] args)throws IOException {\n\n\n                Socket socketClient = new Socket(\"127.0.0.1\",8888);\n                \n                OutputStream o = socketClient.getOutputStream();\n                \n                o.write(\"你好，服务器\".getBytes(StandardCharsets.UTF_8));\n\n\n                InputStream is = socketClient.getInputStream();\n                \n                byte[] buffer = new byte[1024];\n                int len=is.read(buffer);\n                System.out.println(new String(buffer,0,len));\n\n\n                socketClient.close();\n\n\n            }\n        }\n\n\n```\n\n\n\n\n\n#### 案例1：文件上传、下载\n\n步骤：\n\n-   客户端：获取`本地上传的输入流`，使用`网络Socket输出流`上传文件。接收服务器的“上传成功”\n-   服务器：获取`网络Socket输入流`，使用`本地下载输出流`下载文件。给客户端发送“上传成功”。\n\n\n\n优化思路：将服务端的代码，放入Thread中，并开启多线程。\n\n```java\n// 服务端：=======================================\n\npackage TCPDemo;\n\nimport java.io.*;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Random;\n\npublic class FileUploadServer {\n    public static void main(String[] args)throws Exception{\n\n        ServerSocket server = new ServerSocket(8888);\n\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    // 死循环，让服务器一直监听客户端\n                    while(true){\n\n\n\n                        Socket client = server.accept();\n\n                        InputStream is = client.getInputStream();\n\n\n                        File file = new File(\"E:\\\\2-demo\");\n\n                        if(!file.exists()){\n                            file.mkdirs();\n\n                        }\n\n\n                        byte[] buffer = new byte[1024];\n\n                        int len = is.read(buffer);\n\n// 自定义文件的命名规则：域名+毫秒值+随机数\n                        String filename = \"\\\\txt-\"\n                                +System.currentTimeMillis()\n                                +new Random().nextInt(200)\n                                +\".txt\";\n\n\n                        FileOutputStream fos = new FileOutputStream(file+filename);\n\n                        fos.write(buffer);\n\n\n                        OutputStream os = client.getOutputStream();\n                        os.write(\"上传成功\".getBytes(StandardCharsets.UTF_8));\n\n\n                        fos.close();\n                        client.close();\n\n                    }\n\n                }catch (Exception e){\n                    e.printStackTrace();\n                }\n            }\n        }).start();\n\n    }\n}\n\n\n\n\n// 客户端：=======================================\n        package TCPDemo;\n\n        import java.io.FileInputStream;\n        import java.io.OutputStream;\n        import java.net.Socket;\n        import java.nio.charset.StandardCharsets;\n\n        public class FileUploadClient {\n            public static void main(String[] args) throws Exception{\n\n                FileInputStream fis = new FileInputStream(\"E:\\\\0-demo\\\\1.txt\");\n                \n                Socket client = new Socket(\"127.0.0.1\",8888);\n                \n                OutputStream os = client.getOutputStream();\n                \n                byte[] buffer = new byte[1024];\n                int len;\n                \n// 读取数据【可能死循环，因为读到文件结束符后，没有将结束符写入文件，因此read()阻塞，程序不结束】                \n                while((len=fis.read(buffer))!=-1){\n                     os.write(buffer,0,len);\n                }\n// 解决死循环问题                \n                client.shutdownOutput();\n                \n// 打印数据【可能死循环，因为读到文件结束符后，没有将结束符写入文件，因此read()阻塞，程序不结束】                      \n                InputStream is = client.getInputStream();\n                \n                while((len=is.read(buffer))!=-1){\n                    System.out.println(new String(buffer,0,len));\n                }\n\n                fis.close();\n                is.close();\n                os.close();\n                client.close();\n\n\n\n            }\n        }\n\n\n\n\n```\n\n\n\n\n\n#### 案例二：模拟 B/S进行通信\n\n```java\n// 服务端：Java\n// 客户端：浏览器\n\n\nimport java.io.*;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.nio.charset.StandardCharsets;\n\npublic class Demo {\n    public static void main(String[] args) throws Exception {\n\n        ServerSocket server = new ServerSocket(8888);\n\n        while (true) {\n\n            Socket clientSocket = server.accept();\n            new Thread(new Runnable() {\n                @Override\n                public void run() {\n\n                    try {\n\n\n                        InputStream is = clientSocket.getInputStream();\n\n                        BufferedReader br = new BufferedReader(new InputStreamReader(is));\n\n                        // http请求的第一行\n                        String line = br.readLine();\n                        String[] arr = line.split(\" \");\n                        String htmlpath = arr[1].substring(1);\n\n                        FileInputStream fis = new FileInputStream(htmlpath);\n                        OutputStream os = clientSocket.getOutputStream();\n\n                        //固定写法\n                        os.write(\"HTTP/1.1 200 OK\\r\\n\".getBytes());\n                        os.write(\"Content-Type:text/html\\r\\n\".getBytes());\n                        os.write(\"\\r\\n\".getBytes());\n\n\n                        // 在浏览器输出页面\n                        byte[] buff = new byte[1024];\n                        int len = 0;\n                        while ((len = fis.read(buff)) != -1) {\n                            os.write(buff, 0, len);\n                        }\n\n\n                        fis.close();\n                        br.close();\n                        clientSocket.close();\n\n\n                    } catch (Exception e) {\n                        e.printStackTrace();\n                    }\n\n                }\n            }).start();\n\n        }\n\n    }\n}\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 12. Junit单元测试\n\n\n\n![测试-分类](https://z3.ax1x.com/2021/05/27/2CT5h8.png)\n\nJunit：\n\n>   一种白盒测试工具。\n\n\n\n#### 12.1 Junit的使用：【@Test】\n\n```java\n/*\t步骤：\n*\t\t1. 定义1个测试类\n\t\t\t 建议：\n               - 包名：xxx.xxxx.test;  => 如： cn.itcast.test;\n\t\t\t   - 类名：测试类的类名以被测试类的名字+Test组成：类名Test =》 如：CalcTest\n\t\t\n\t\t2. 定义1个测试方法：=》如：void testAdd()\n        \t 建议：\n        \t \t- 方法名： 以test开头\n        \t \t- 方法返回值： void\n        \t \t- 参数：无需参数\n\t\t3. 在方法定义位置前，加上注解@Test ,使得方法可以独立运行【无需main方法】\n        \n        4. 导入Junit工具的依赖包\n        \t- 【点击@Test旁边的小灯泡，添加进classPath】\n        \n        5. 在测试方法中：\n        \t- 创建被测试的对象，调用被测试的方法。\n        \t\n        6. 运行\n        \n        7. 判断结果：\n        \t- 红色：测试失败\n        \t- 绿色：测试通过\n        \t\n        8. 断言，将当前结果与正确结果比较\t\n        \tAssert.assertEquals(正确值，当前值);\n*\n*\n*/\n\n\npackage demo.test;\n\nimport org.junit.Test;\nimport demo.junit.Calculator;// 自定义的被测试类\n\npublic class CalcTest {\n\n    // 测试add方法\n    @Test\n    public void testAdd(){\n        Calculator c = new  Calculator();\n        int rst = c.add(1,2);\n        Assert.assertEquals(3,rst);\n    }\n    \n    // 测试sub方法\n    @Test\n    public void testSub(){\n        Calculator c = new Calculator();\n        int rst = c.sub(2,1);\n        Assert.assertEquals(1,2);\n    }\n    \n}\n\n```\n\n\n\n\n\n#### 12.2 Junit的使用：【@Before 和 @After】\n\n```java\npackage demo.test;\n\nimport org.junit.After;\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\nimport demo.junit.Calculator;// 自定义的被测试类\n\npublic class CalcTest {\n\n    /*\n    *   定义1个 init方法，用于在申请资源,每个测试方法在执行前都会自动调用init( )\n    *\n    *\n    * */\n    @Before\n    public void init(){\n        System.out.println(\"申请资源-init()\");\n    }\n\n\n    /*\n     *   定义1个 close（），用于在释放资源,每个测试方法在执行后都会自动调用init( )\n     *\n     *\n     * */\n    @After\n    public void close(){\n        System.out.println(\"释放资源-after()\");\n\n    }\n\n\n\n    @Test\n    public void testAdd(){\n        System.out.println(\"testAdd方法执行\");\n        Calculator c = new  Calculator();\n        int rst = c.add(1,2);\n        //System.out.println(rst);\n        Assert.assertEquals(3,rst);\n    }\n\n    @Test\n    public void testSub(){\n        System.out.println(\"testSub方法执行\");\n        Calculator c = new Calculator();\n        int rst = c.sub(2,1);\n        Assert.assertEquals(1,2);\n    }\n}\n\n```\n\n\n\n\n\n\n\n## 13. 反射\n\n-   [Java--反射CSDN博客](https://blog.csdn.net/Zzh1110/article/details/104101124)\n\n-   [狂神说-反射](https://www.bilibili.com/video/BV1p4411P7V3?p=5)\n\n    \n\n\n\n**反射** 【框架设计的灵魂】：\n\n>   定义：将类的组成部分，封装为各个对象。\n>\n>   可以在`运行`的时候，`获取类`的相关信息。【是Java作为`准动态语言`的标志】\n\n\n\n-   正常过程：\n\n>   导包 =》new 对象 =》 得到 实例化对象\n\n-   反射过程：\n\n>   获取实例化对象 =》getClass( )来得到类信息 =》找到所在的包名\n\n\n\n### 13.1 Java代码的三个阶段：\n\n-   源代码阶段：编写代码【成员变量+成员方法+构造方法】\n-   类对象阶段：通过类加载器，将代码读入 JVM【在这个阶段，源码中的1个类，被拆成3个Class对象】\n-   运行时阶段：运行代码\n\n\n\n![Java代码的三个阶段](https://z3.ax1x.com/2021/05/29/2kTPf0.png)\n\n\n\n\n\n反射的好处：\n\n>   -   可以在代码运行的时候，来操作对象。【例如：IDE的代码提示功能，就是利用了反射的原理，在类对象阶段加载Methods数组】\n>   -   解耦\n\n\n\n\n\n代码演示：\n\n```java\n/*\n*   1. 获取字节码【类名.class】：\n\t\t\tClass personClass = Person.class;\n\t\t\t\n\t2. 常用方法：\n\t\n\t    0-设置访问权限【忽略安全检查】：true\n        \tdeclaredField_1.setAccessible(true);\n        \t\n\t    1-字段：\n\t\t\t- 获取类中，所有public的字段(属性):\n\t\t\t\t Field[] fields = personClass.getFields();\n\t\t\t\t \n\t\t\t- 获取类中，指定的public的字段(属性):\t \n\t\t\t\t Field field_1 = personClass.getField(字段名);\n\t\t\t\t \t\t\t\t \n\t\t\t- 获取类中，所有的字段【包括private,但获取private的前提是先设置权限】:\t \n\t\t\t\t Field[] declaredFields = personClass.getDeclaredFields();\n\t\t\t\t \n\t\t\t\t \n\t\t\t- 获取类中，指定的字段【包括private,但获取private的前提是先设置权限】:\t \n\t\t\t\t Field declaredField = personClass.getDeclaredField(“name”);\n                 \n                 \n        2-构造器： \n            - 获取类中，所有的构造器\n   \t\t\tConstructor<?>[] Constructors = personClass.getConstructors();\n\t\t\t\n\t\t\t-获取类中，指定的构造器\n        \tConstructor<T> Constructor = personClass.getConstructor(类<?>...参数类型);\n        \n            - 获取类中，所有的已经声明的构造器\n             Constructor[] declaredConstructors = personClass.getDeclaredConstructors();\n             \n\t\t \t-获取类中，指定的已经声明的构造器\n    \t\t Constructor declaredConstructor = personClass.getDeclaredConstructor(类<?>...参数类型);\n    \t\t \n    \t\t \n       3-成员方法：\n       \n        \tMethod[] methods = personClass.getMethods();\n        \t\n        \tMethod method = personClass.getMethod(String name,类<?>...参数类型);\n\n        \tMethod[] declaredMethods = personClass.getDeclaredMethods();\n\n        \tMethod declaredMethod = personClass.getDeclaredMethod(String name,类<?>...参数类型);\n     4-获取类名：\n     \t\tString class_name = personClass.getName();\n\n*\n*\n*/\n\n\n\n\n\nimport java.lang.reflect.Field;\n\n// Person类\n    class Person{\n        private String name;\n        private int age;\n        \n        // 以下省略了get/set访问器\n        。。。\n            \n        public Person() {\n        }\n        public Person(String name, int age) {\n            this.name = name;\n            this.age = age;\n        }\n\n        \n    }\n\npublic class Demo {\n\n    public static void main(String[] args) throws Exception{\n// 字段相关：=================================================\n        // 利用反射来获取字节码，找到Person类\n        Class personClass = Person.class;\n        // 获取Person中 所有 public 的字段【属性】\n        Field[] fields = personClass.getFields();\n        \n        // 打印所有public属性\n        for (Field field : fields) {\n            System.out.println(field);\n        }\n        \n        \n        \n        \n        \n        // 创建对象\n        Person p = new Person(\"张三\",20,1);\n        // 获取Person类中的public字段 a类\n        Field a = personClass.getField(\"a\");\n        \n        // 获取 对象p中的属性a的值的对象\n        Object value = a.get(p);\n        System.out.println(value); // 1\n        \n        // 设置 对象p中的属性a的值\n        a.set(p,123);\n        System.out.println(p); // Person{name='张三', age=20, a=123}\n        \n        \n\n        \n        // 获取声明过的属性【包括：private类型的】\n        Field declaredField_name = personClass.getDeclaredField(\"name\");\n        // 设置访问权限【忽略安全检查】：true\n        declaredField_name.setAccessible(true);\n        // 获取 具体字段值的 对象\n        Object val2 = declaredField_name.get(p);\n        System.out.println(val2);\n        \n// 构造器相关：=================================================      \n\t\tClass<Person> personClass = Person.class;\n        \n\t\t//获取构造器\nConstructor constructor1= personClass.getConstructor(String.class,int.class,int.class);\n\n    \t// 打印结果：public Person(java.lang.String,int,int)\n    \tSystem.out.println(constructor);\n\n    \t// 1.创建对象-有参【构造器-newInstance方法】\n        Object person_1 = constructor1.newInstance(\"张三\",23,1);\n        // 2.创建对象-无参【构造器-newInstance方法】\n        Object person_2 = constructor1.newInstance();\n        // 3.创建对象-无参【Class类-newInstance方法，已弃用】\n        Object person_3 = personClass.newInstance();\n        \n        // Person{name='张三', age=23, a=1}\n        System.out.println(person_1);\n        \n\n        \n// 成员方法相关：=================================================             \n        \n        \n        Class<Person> personClass = Person.class;\n        // 获取指定的方法【方法无参数时】\n        Method eat_method = personClass.getMethod(\"eat\");\n        System.out.println(eat_method);\n        \n        Person p = new Person(\"张三\",20,1);\n        //调用eat方法\n        eat_method.invoke(p);  //我eat\n        \n        \n        \n        // 获取指定的方法【方法有参数时,传入：方法名+参数的反射类】        \n        Method eat_2 = personClass.getMethod(\"eat\", String.class);\n        Person p2 = new Person(\"李四\",24,3);\n        eat_2.invoke(p2,\"香蕉\"); //我eat:香蕉\n        \n        \n        \n        \n        // 获取类名\n        String class_name = personClass.getName();\n        System.out.println(class_name);\n\n    }\n    \n}\n\n\n\n\n```\n\n\n\n\n\n\n\n### 13.2 案例1：\n\n目标：\n\n>   写一个工具，在不改变任何代码的前提下，可以用来：\n>\n>   -   创建任意对象\n>   -   执行任意方法\n\n\n\n实现思路:\n\n>   -   需要：配置文件、反射\n\n\n\n实现步骤：\n\n>   -   将需要创建的`对象的全类名` 和 需要调用的`方法` 定义在`配置文件`中。\n>   -   加载`配置文件`。\n>   -   利用`反射`来加载 `所需的类`到`内存`中。\n>   -   创建对象\n>   -   执行方法\n\n\n\n```java\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.lang.reflect.Member;\nimport java.lang.reflect.Method;\nimport java.util.Properties;\n\npublic class ReflectTest {\n    public static void main(String[] args) throws Exception{\n        \n        // 创建properties对象\n        Properties prop = new Properties();\n        \n        //获取类加载器，通过类加载器，加载class目录下的配置文件的输入流\n        ClassLoader classLoader_1 = ReflectTest.class.getClassLoader();\n        InputStream is = classLoader_1.getResourceAsStream(\"pro.properties\");\n\n        //利用配置文件的输入流，加载配置文件\n        prop.load(is);\n\n        //获取具体的配置\n        String className_1 = prop.getProperty(\"className\");\n        String methodName_1 = prop.getProperty(\"methodName\");\n\n        //获取Class类\n        Class<?> cls = Class.forName(className_1);\n        // 创建类对象\n        Object  c = cls.newInstance();\n\n        //获取方法类\n        Class<?> cls2 = Class.forName(methodName_1);\n        Method m1 = cls2.getMethod(methodName_1);\n\n        //调用方法\n        m1.invoke(c);\n\n    }\n}\n\n\n\n\n```\n\n\n\n\n\n### 13.3 获取Class对象的3种方式：\n\n-   源代码阶段：`Class.forName(全类名);\t`// 全类名：`包名.类名`\n-   类加载阶段：`类名.class 属性;`\n-   运行时阶段：`对象名.getClass( ); `  // getClass( )定义在Object类中\n\n结论：\n\n>    同一个字节码文件，在程序的一次运行中，只会加载一次，不论用哪种方式获取的Class对象，最终只会是同一个。\n\n\n\n\n\n\n\n### 13.4 Class对象的功能：\n\n-   获取` 成员变量`：`getFields();`\n\n-   获取 `成员方法`：`getMethods()`\n\n-   获取 `构造方法`：`getConstructors();`\n\n-   获取 `类名`：`getClassName();`\n\n    \n\n\n\n### 13.5 类加载的过程：\n\n![Java内存分析](https://z3.ax1x.com/2021/05/30/2V5Aqe.png)\n\n\n\n\n\n![Java-类加载的过程](https://z3.ax1x.com/2021/05/30/2V5KRP.png)\n\n![类加载的详细过程](https://z3.ax1x.com/2021/05/30/2V5jQf.png)\n\n\n\n## 14. 注解（Annotation）\n\n-   [Java--自定义注解-CSDN博客](https://blog.csdn.net/Zzh1110/article/details/104887317)\n-   [狂神说-注解和反射](https://www.bilibili.com/video/BV1p4411P7V3?p=1)\n\n\n\n### 14.1 注解-概念:\n\n\n\n>   -   `注释`：给`人`看的备注\n>   -   `注解`：给`计算机`看的备注，也叫`元数据`，`JDK1.5`开始引入的特性。\n\n\n\n\n\n### 14.2 注解的作用：\n\n\n\n>   -   编写文档：生成doc文档\n>   -   代码分析：使用反射\n>   -   编译检查：如：Ovverride\n\n\n\n```java\n/**\n*\n*\t注解doc演示\n*\t@author cyw\n*\t@version 1.0\n*\t@since 1.5\n*/\n\n// 在cmd中，进入该文件所在的目录，输入：javadoc AnnoDemo.java ,可以得到该类的文档\n\npublic class AnnoDemo{\n    \n    /**\n\t*\t@param a 整数\n\t*\t@param b整数\n\t*\t@return 两数之和\n\t*/\n        public add(int a,int b){\n            return a+b;\n        }\n    \n}\n\n\n\n```\n\n\n\n\n\n\n\n\n\n### 14.2  JDK中内置的注解：\n\n-   `@Override`: 检查被标注的方法是否是继承自 父类/接口。\n-   `@Deprecated`: 标注的内容已过时。\n-   `@SuppressWarnings`: 压制警告 =》 `@@SuppressWarnings(\"all\")`\n\n\n\n```java\n\n// 压制所有警告：IDE不要弹出警告信息    \n\t@SuppressWarnings(\"all\")\n    public class AnnoDemo{\n\n        // 用于标记：方法已过时\n            @Deprecated\n            public add_1(int a,int b){\n                return a+b;\n            }\n\n\n            public add_2(int a,int b){\n                return a+b;\n            }\n\n    }\n```\n\n\n\n\n\n\n\n### 14.3 自定义注解：\n\n-   格式：【`元注解 + public @interface 注解名{ }`】\n\n```java\n元注解\npublic @interface 注解名{\n    \n}    \n\n\n// 例如：\n    public @interface MyAnno{\n\n    } \n\n\t@MyAnno\n\tpublic void sayHello(){\n        System.out.println(\"你好\");\n    }\n```\n\n\n\n-   注解的`本质`：【继承了Annotion类的1个`接口`】\n\n```java\npublic interface MyAnno extends java.lang.annotion,Annotion{\n    \n} \n```\n\n\n\n-   注解的`属性`：【注解接口中的`抽象方法`】\n\n    >   1.  只要定义了注解的属性，则该注解的属性必须赋完值才能使用。\n    >\n    >   2.  可以使用default关键字，来给注解的属性赋默认值。\n    >   3.  如果注解只有1个属性，且该属性的名字为value，使用时，可以只传值，不写属性名。\n    >   4.  数组在数值时，在数组的值的最外面，用 { } 包裹；数组只有1个值时，可省略大括号。\n    >\n    >   \n\n\n\n\n\n-   注解中抽象方法（注解的属性）的返回值的类型【5种】：\n\n>   -   基本类型\n>   -   字符串\n>   -   枚举\n>   -   注解\n>   -   以上4种的数组\n\n```java\n    public @interface MyAnno{\n\t\tint show_1();\t//基本类型\n        String show_2();\n        MyAnno show_3();\n        String[] show_4();\n \n    } \n\n```\n\n\n\n\n\n实例：\n\n```java\n    public @interface MyAnno{\n        String name_method();\n\t\tint age_method();\n    }\n\n\n    @MyAnno(name_method=\"张三\",age_method = 13)\n    public void Eat(){\n        System.out.println(\"你好\");\n    }\n```\n\n\n\n#### 14.3.1 元注解：\n\n概念：\n\n>   元注解：修饰注解的注解。\n\n\n\n常见的元注解：\n\n-   `@Target`：描述`作用的位置`。如：作用在方法\n    -   ElementType：【一种枚举类型】\n        -   TYPE：作用在`类`上\n        -   METHOD：作用在`方法`上\n        -   FIELD：作用在`成员变量`\n-   `@Retention`：描述 注解 `保留的阶段`。如：保留在源码阶段\n    -   RetentionPolicy：【一种枚举类型】\n        -   SOURCE：源码阶段\n        -   CLASS：class类对象阶段\n        -   RUNTIME：运行时阶段【最常用】\n-   `@Documented`：描述 注解 `是否被抽取到API文档`中。\n-   `@Inheritied`：描述 注解 `是否被子类继承`。\n\n\n\n\n\n#### 14.3.2 注解的使用:\n\n-   获取 注解使用的`位置的对象`\n-   利用位置对象 获取 `注解对象`: obj.getAnnotion(注解名.class)\n-   调用注解中的`抽象方法`\n\n\n\n\n\n```java\n\n@Target(ElementType.TYPE)\t\t// 元注解，Target元注解,指定自定义注解的使用位置，TYPE：给类使用\n@Retention(RetentionPolicy.RUNTIME)\t// 元注解，Retention元注解,指定自定义注解的使用时期\npublic @interface myAnnoDemo{\n    String name() default \"ZhangSan\";\n}\n\n//使用注解\n@myAnnoDemo(name=\"lisi\")\nclass TestClass{\n    public static void show(){\n        System.out.println();\n    }\n}\n\n```\n\n\n\n\n\n\n\n","source":"_posts/Java SE.md","raw":"---\ntitle: Java SE-入门笔记\ntag: Java\ncategories:\n  - 后端\n  - Java\n  - Java SE\n---\n\n\n# Java SE -入门笔记\n\n[toc]\n\n## 0. 前置知识\n\n文档：\n\n-   [Java 教程 | 菜鸟教程 (runoob.com)](https://www.runoob.com/java/java-tutorial.html)\n-   [在线文档-jdk-zh](https://tool.oschina.net/apidocs/apidoc?api=jdk-zh)\n-   [JavaSE-博客-笔记-网传](https://blog.csdn.net/Zzh1110/article/details/105069644)\n\n\n\n### 0.1 Java 的**文件结构** :\n\n>   项目 ->  模块（包）->  .java文件 -> 类 \n>\n>    \n>\n>   包的命名规范：\n>\n>   1.  由字母、数字下划线组成，不能以数字开头，字母全部小写。\n>   2.  不同路径通过点(.)来分割，如：`java.lang`\n>   3.  为了保证包名唯一性，一般使用域名反写来命名包，如：`com.baidu.music`\n>\n>    \n>\n>     \n>\n>   \n>\n>   新建包：`project -> 右键 src -> new -> package`\n>\n>    \n>\n>   \n>\n>    按包名展开：`左侧导航栏 -> 齿轮 ->  去掉 compact middle packages的勾`\n>\n>   \n\n \n\n### 0.2 运行环境介绍\n\n-   JVM：运行，java虚拟机\n-   JRE：运行，（JVM+lib类库 =》真正可以执行.class文件）\n-   JDK：开发，4个主要的文件夹：`bin、include、lib、 jre`\n\n\n\n范围：\n\n>    JDK > JRE >JVM\n\n\n\n`JDK`是用于java程序的`开发`,而`JRE`则是只能运行class而`没有编译的功能`。\n\n\n\n\n\nJava的能够“一次编译，到处运行”的原因：\n\n>   Java虚拟机在执行字节码（.class文件）时，把字节码解释成具体平台上的机器指令执行。\n\n\n\n\n\n### 0.3 cmd中的Java指令\n\n```bash\njavac 文件名\n\njava 类名\n```\n\n\n\n\n\n## 1. 环境配置 + 快捷键\n\n\n\n### 1.1 JDK-下载：\n\n-    [JDK-官网下载](https://www.oracle.com/java/technologies/javase-downloads.html) \n-    [JDK-下载url](https://www.programmer-box.com/?ref=jdk_1.6)\n-   [JDK的下载、安装和环境配置教程](https://blog.csdn.net/Marvin_996_ICU/article/details/106240065)\n-   [JDK12安装配置-Win10](https://blog.csdn.net/panjiabin321/article/details/89391210)\n\n\n\n### 1.2 IDEA下载：\n\n-   [IntelliJ IDEA下载](https://www.jetbrains.com/zh-cn/idea/download/#section=windows)\n-   [IDEA 2019 下载+安装教程](https://mp.weixin.qq.com/s?__biz=MzU0MTg5NDkzNA==&mid=2247491865&idx=1&sn=9085c37f2b10a3495d68f5d0b66623a2&chksm=fb205160cc57d876a540fb31dcf8990b2d600855d3a195ccc565683899de64bb055401345920&scene=21#wechat_redirect)\n-   [JetBrains 2021 最新版本全家桶激活](https://pan.baidu.com/s/1Yhq_7dP0MOayyEJ-g4_27A)  提取码：ute8\n\n\n\n#### 1.2.1 IDEA的配置：\n\n-   [IDEA-配置-视频](https://www.bilibili.com/video/BV1FZ4y1H7rh?p=174&spm_id_from=pageDriver)\n\n>   1.  新建Project时，需要选择已安装的JDK\n>2.  更改字号：file -> settings -> editor  -> font 或者 general->mouse control -> 勾选change font size whith ctrl mouse\n>   3.  更改快捷键【例如】：file -> settings -> keymap -> 齿轮图标 -> duplicate -> 展开 main Menu -> 展开 code -> code complete -> 展开 -> 选中 -> 右键 -> add keyboard shutcut -> 输入快捷键 -> ok\n>4.  方法分隔符：file -> settings -> editor -> general -> appearance -> show method seperator\n>   \n>\n\n#### 1.2.2 常用快捷键：\n\n| 功能                                 | 快捷键           |\n| ------------------------------------ | ---------------- |\n| 打印 | sout |\n| main 函数 | psvm 或 main |\n| 代码提示                             | alt + /          |\n| 自动导包（修正代码）                 | alt  + enter     |\n| 复制光标所在行，并插入到光标的下一行 | ctrl + d         |\n| 删除一行 | ctrl + y |\n| 格式化代码                           | ctrl + alt +L    |\n| 单行注释                             | ctrl + /         |\n| 多行注释                             | ctrl + shift + / |\n| 自动生成代码（get / set /toString）  | alt  + insert    |\n|移动当前代码行 | alt + shift +  上下箭头|\n|快速写 遍历数组的代码|数组名.fori + enter|\n|快速生成代码块，如：for、if、try-catch| ctrl + alt + T |\n|快速生成 for 代码块| fori |\n|快速生成 增强型 for| iter   或者 foreach |\n|搜索类| ctrl + n |\n|查看子类| ctrl + h |\n\n\n\n\n\n\n\n\n\n\n\n## 2. 数据类型\n\n![数据类型](https://z3.ax1x.com/2021/05/24/gjUjoj.png)\n\n\n\n\n\n### 2.1 char 和 byte 的差别：\n\n-   char 是无符号型的，可以表示一个整数，不能表示负数；char可以表中文字符，\n-   byte 是有符号型的，可以表示 -128—127 的数，byte不可以表中文字符\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 3. 运算符\n\n\n\n![运算符](https://z3.ax1x.com/2021/05/24/gjaKl6.png)\n\n\n\n\n\n\n\n## 4. 数组\n\n>   1.  数组 直接打印: 得到的是`地址`\n>\n>   2.  数组反转：对称位置的元素交换\n>\n>       \n\n\n\n### 4.1 数组的初始化：【4种】\n\n```java\n// 静态[指定内容]：\n\n\t\t// 格式： 数据类型 [] 数组名= new 数据类型[]{数组的内容};\n\t\t\n\t\tint[] arr = new int[]{1,2,4,6};\n\n//==============================================\n//动态[指定长度]\n\n\t\t// 格式：数据类型[] 数组名称 = new 数据类型[长度]\n\t\t\n\t\tint[] arr = new int[10];\n\t\tarr[0] =12;\n\t\tarr[1] = 15;\n\t\tarr[2] = 45;\n\n\n\n//==============================================\n//省略：\n\t\t\n\t\t// 数据类型[] 数组名称 = {数组的内容}；\n\n\t\tint[] arr = {1,2,5,6};\n\n\n\n//==============================================\n//拆分成2步：\n\t\t\n\t\t// 格式: 数据类型[] 数组名称；\n\t\t// 数组名称 = new 数据类型[]{数组内容}； (采用省略格式则不能分步骤写)\n\n\t\tint[] arr;\n\t\tarr = new int[10]{1,2,5,7,9};\n\n```\n\n\n\n\n\n\n\n\n\n## 5. 内存区域的划分\n\n\n\n-   栈(stack)：\n\n>   存放方法的局部变量，运行方法\n>   【局部变量 的特点：一旦超出作用域就会从内存中消失】\n\n\n\n-   堆(heap)：\n\n>   new出来的东西都放在堆中(为：引用类型)，如 ：数组\n>   【堆内的东西都有一个16进制的地址值】\n\n\n\n-   方法区(method area)：\n\n>   存储`.class`的相关信息，包含：方法信息\n\n\n\n-   本地方法栈(native method stack)\n\n\n\n-   寄存器(register)：与cpu相关\n\n\n\n\n\n\n\n\n\n\n\n## 6. 面向对象\n\n\n\n 面向对象的三大特性：\n\n-   封装性(如： private, 方法等)\n-   继承性(extend ,super等)\n-   多态性(**子类**继承**父类**的方法后可以 **覆盖重写**override)\n\n\n\n\n\n\n\n### 6.1 类：\n\n>   1.  `类` = `属性` +` 方法` \t// 方法也就是行为、函数。\n>\n>   \n>\n>   2.  JAVA的`类`：`成员变量`(在类内部，即：属性) **+** `成员方法`+`构造方法`\t\t// 普通变量：写在函数的内部。 \n>\n>   \n>\n>   3.  `方法` ：只能有`1个返回值`。如果想**返回多个数**，可以将**返回值定义为数组**，并返回数组首地址。 \n>\n>   \n>\n>   4.  JavaBean：标准类，类中至少要包括：`无参构造方法`，`全参构造方法`，`属性 + getter + setter`\n>\n>    \n>\n>   5.  构造方法：在创建对象(new)时，自动调用。【快捷键：`alter + insert`】\n\n \n\n#### 6.1.1 构造方法：\n\n>   1.  `构造方法的名称`必须与所在的`类的名称`完全相同，大小写也要一样。\n>       【普通方法首字小写，构造方法首字大写】 \n>   2.   构造方法`不能写返回值类型`，连void也不要写。\n>   3.  构造方法`不能return `返回值。\n>   4.  如果`没有写`构造方法，那么编译器会`自动赠送`1个构造方法。\n>   5.  只要自己编`写了构造方法`，编译器就`不会赠送`构造方法。\n>   6.  可以在定义构造方法时，将所需的参数定义在方法的参数列表中， 可以在创建对象时传入参数。但是还是需要写`getter和setter 方法`，目的是`方便修改参数的值`。\n\n\n\n#### 6.1.2 成员变量 与 局部变量 的区别：\n\n>   1.  `成员变量`：定义在 `类` 的内部，在**类**中都可以**使用**，有`默认值 ` 。\n>\n>   \n>\n>   2.  `局部变量`：定义在 `方法内部`，只能在 **方法内部**使用，`没有默认值`，使用要**先赋值** 。\n\n\n\n\n\n#### 6.1.3 成员变量 与 局部变量 重名时 的优先级：\n\n>   1.  默认根据`就近原则`，`优先`使用 `局部变量`。\n>   2.  如果想使用`成员变量`，可以使用`this关键字`，如： `this.name` 。\n>   3.  `this` 一定是写在`方法内部`的，用于在`变量名相同`时，`做区分` 。\n\n\n\n\n\n\n\n\n\n#### 6.1.4 Override 方法重写 + Overload 方法重载：\n\n-   [方法重写与方法重载的区别-url](https://blog.csdn.net/weixin_44502804/article/details/90523478)\n\n>   `Override 方法重写`： \n>\n>   1.  子类继承父类/接口 后，换掉同名的方法中的处理语句。\n>\n>   2.  方法重写前后：返回值类型、方法名、参数必须一致。\n>   3.  重写后，访问权限必须更宽松，如：重写前 => protected，重写后 => public\n>\n>   \n>\n>   `Overload 方法重载`：\n>\n>   1.  在一个类里面，返回类型可以相同也可以不同，方法名一致，而参数不同。\n\n\n\n覆盖重写Override：【需要先：继承】\n\n```java\n// 父类：属性 + 无参构造 + 全参构造 + getter + setter + Eat()\n// 子类：属性 + 无参构造 + 全参构造 + getter + setter + 覆盖重写的Eat()\n\n\n\n\n\n\n// 父类\npublic class Father {\n    private String name;\n\n    public Father(String name) {\n        this.name = name;\n    }\n\n    public Father() {\n\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n}\n\n\n\n\n\n\n// 子类\npublic class Son extends Father{\n    public Son(String name) {\n        super(name);\n    }\n\n    public Son() {\n    }\n\n    @Override\n    public void eat() {\n        System.out.println(\"son：我要吃 -> 水果\");\n    }\n}\n\n\n\n\n\n//main\npublic class FaterAndSonDemo {\n    public static void main(String[] args) {\n        Father father = new Father(\"刘备\");\n        Son son = new Son(\"阿斗\");\n        father.eat();\n        son.eat();\n    }\n}\n\n\n```\n\n\n\n覆盖重载Overload：\n\n```java\n// 以下代码 省略了 构造方法+ getter + setter\n\npublic class Calc {\n    private int a;\n    private int b;\n    private float c;\n\n\n\t//方法重载1\n    public int sum(int a, int b){\n        return a+b;\n    }\n\t\n    //方法重载2\n    public float sum(int a,int b,float c){\n        return a+b+c;\n    }    \n    \n    \n\n}\n\n```\n\n\n\n\n\n#### 6.1.5 内部类：【4种】\n\n>   `内部类`：1个类 定义在 另一个类 的内部 =》`内部类`(public / protected / private)。 外面的类叫`外部类`(只能public)。\n>\n>    \n>\n>   **注意**：`内部类`可以访问`外部类`的所有`成员变量`和`成员方法`。\n>\n>   \n\n\n\n-   [Java内部类](https://blog.csdn.net/weixin_42762133/article/details/82890555?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160906466316780279191862%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=160906466316780279191862&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-3-82890555.pc_search_result_cache&utm_term=Java)\n\n\n\n1.  成员内部类：\n\n```java\n/*\n * 1. 定义 外部类、外部类属性、构造方法、getter、setter\n * 2. 定义 成员内部类、内部类属性、构造方法、getter、setter\n * 3. 在 main 中，new 外部类对象\n * 4. 格式：外部类名.内部类名 变量名 = 外部类对象.new 内部类名();\n*/\n\n// main\npublic class OutAndInnerClassDemo {\n    public static void main(String[] args) {\n        \n        Outer outer = new Outer();\n        Outer.Inner inner = outer.new Inner();\n        \n    }\n}\n\n//外部类\nclass Outer{  \n \n    public Outer() {\n         System.out.println(\"外部类\");\n    }\n\n    //内部类\n    class Inner{\n   \n        public Inner() {\n             System.out.println(\"内部类\");\n        }      \n    }\n}\n\n```\n\n\n\n2.  静态内部类：\n\n```java\n/*\n * 1. 定义 外部类、外部类属性、构造方法、getter、setter\n * 2. 定义 静态内部类、内部类属性、构造方法、getter、setter\n * 3. 在 main 中，\n * 4. 格式：外部类名.静态内部类名 变量名 = new 外部类名.静态内部类名();\n * 5. \n*/\n\n\n\n// main\npublic class OutAndInnerClassDemo2 {\n    public static void main(String[] args) {\n\n        Outer2.Inner inner = new Outer2.Inner();\n\n    }\n}\n\n//外部类\nclass Outer2 {\n\n    public Outer2() {\n        System.out.println(\"外部类\");\n    }\n\n\n    //静态内部类\n    static class Inner{\n        public Inner() {\n            System.out.println(\"静态内部类\");\n        }\n    }\n}\n\n```\n\n\n\n\n\n3.  方法内部类：【在方法内部：定义、创建new、使用(调用)】\n\n```java\n/*\n * 1. 定义 外部类、外部类属性、构造方法、getter、setter\n * 2. 定义 外部类的方法，该方法中的内部类、内部类属性、构造方法、getter、setter\n * 3. 在 外部类的方法中 new 内部类的对象：内部类名 变量名 = new 内部类名();\n * 4. 在 main 中，\n * 5. 格式：\n \t\t\t外部类 变量名= new 外部类();\n \t\t\t变量名.外部类方法名();\n\n*/\n\n\n\n//main\npublic class OutAndInnerClassDemo3 {\n    public static void main(String[] args) {\n        Outer3 o3 = new Outer3();\n        o3.Func1();\n    }\n}\n\n\n\n// 外部类\nclass Outer3{\n    public Outer3() {\n        System.out.println(\"外部类 -> 创建\");\n    }\n\t\n    // 外部类方法\n    public  void Func1(){\n\n        System.out.println(\"外部类的方法 -> 调用\");\n\n        // 内部类\n        class Inner3{\n            public Inner3() {\n                System.out.println(\"内部类 -> 创建\");\n            }\n\t\t\t\n            // 内部类方法调用\n            public void say(){\n                System.out.println(\"内部类的方法 -> 调用\");\n            }\n        }\n\n        Inner3 i3 = new Inner3();\n        i3.say();\n    }\n\n}\n\n\n```\n\n\n\n\n\n4.  匿名内部类：【方法中 return 1个 new出的对象】  \n\n**注意**：匿名内部类 没有 构造方法。\n\n```java\n/*\n * 1. 定义 接口\n * 2. 定义 外部类、外部类属性、构造方法、getter、setter\n * 3. 定义 外部类的方法，该方法返回1个匿名内部类的对象的定义，在该匿名内部类的对象的定义中重写接口中的方法\n * 4. 在 main 中，\n * 5. 格式：\n \t\t\t外部类 变量名= new 外部类();\n \t\t\t变量名.外部类方法名().重写的方法名();\n\n*/\n\n\n// main\npublic class OutAndInnerClassDemo4 {\n    public static void main(String[] args) {\n\n        Outer4 o4 = new Outer4();\n        o4.getInner4().eat();\t\t\t\t//注意 连续调用 方法\n\n    }\n}\n\n\n\n// 接口\npublic interface Inner4 {\n    void eat();\n}\n\n\n//外部类\nclass Outer4{\n    public Outer4() {\n        System.out.println(\"外部类 -> 创建\");\n    }\n\n    //外部类的方法\n    public Inner4 getInner4(){\n\n        return  new Inner4(){\n            @Override\n            public void eat() {\n                System.out.println(\"匿名内部类 -> 方法\");\n            }\n        };\t\t\t// 注意分号\n    }\n}\n\n\n\n\n```\n\n\n\n#### 6.1.6 类的使用：\n\n>   1.  导包：`import java.util.*;`\n>   2.  创建：`Animals cat = new Animals();`\n>   3.  使用：`cat.eat();`\n\n\n\n注意：\n\n-   `java.lang` 下的包`不用导`\n-   `同一package`下的类也`不用导`\n-   `导包语句`必须写在 `package 包名`后，`类名前`\n\n-   包名-格式：`package net.java.util;`\n\n\n\n\n\n\n\n#### 6.1.7 静态变量 与 静态方法：\n\n>   `静态变量`：带有 `static `关键字的`变量`\n>\n>   `静态方法`：带有 `static` 关键字的`方法`\n\n**注意**：【凡是带`static` 的`变量、方法、代码块`】\n\n-   `属于`整个`类`，而不仅仅 属于一个**对象**\n-   只创建`1次`\n-   可以直接用 `类名.变量`调用\n-   不能使用 `this`,`super`关键字：因为静态方法可以通过类名来调用，而这是可能还没有创建对象，更谈不上继承。\n\n\n\n\n\n```java\n// 静态代码块：\nstatic{\n\t\t//语句块\n}\n\n\n\n\n// 静态方法\n// 格式： \n    public static void PrintMe(){.......}\t\n\n// 调用：[对于本类当中的静态方法，可以省略类名称，直接静态方法]\n    类名称.静态变量;\n    类名称.静态方法();\n\n```\n\n\n\n### 6.2 接口：\n\n>   1.  接口就是各个类的规范，\n>   2.  接口是一种 `引用的数据类型` ，其中：最重要的是`抽象方法`\n\n\n\n#### 6.2.1 格式：\n\n```java\n  public interface 接口名称{\n        // 接口内容  \n  }  \n```\n\n\n\n#### 6.2.2 接口内容：\n\n>   -   JDK 1.7 的接口可以包含：\n>       -   常量\n>       -   抽象方法\n>   -   JDK 1.8 的接口还可以额外包含\n>       -   默认方法\n>       -   静态方法\n>   -   JDK 1.9 的接口还可以额外包含\n>       -   私有方法\n\n\n\n\n\n**注意** ：\n\n>   1.  接口中的抽象方法，修饰符必须是 public abstract \n>\n>       【如：`public abstract void methodAbstract( );`】， 可以省略但不能换成别的 。 \n>\n>   \n>\n>   2.  `接口`无法直接使用，只能让1个 “实现类” 来 “实现” 该接口 。\n>\n>       【类似 抽象类的继承】\n>\n>    \n>\n>   3.  `实现类` 除非是1个由abstract修饰的抽象类，否则`必须覆盖重写`所有`抽象方法`。\n\n\n\n\n\n\n\n#### 6.2.3 接口的使用：\n\n```java\n/*\n *\t1. 定义接口 + 接口内容\n *\t2. 定义接口的 \"实现类\"\n *\t3. 在 \"实现类\" 中，覆盖重写 接口的抽象方法\n *\t4. main方法中 new出 \"实现类的对象\"，\"实现类的对象\" 调用 重写后的方法\n*/\n\n\n\n// 定义接口\npublic interface MyIntface {\n    public abstract void Say();\n}\n\n\n\n\n\n\n// 定义实现类\npublic class ToDoClass implements MyIntface {\n    \n    @Override\n    public void Say() {\n        System.out.println(\"你好！\");\n    }\n    \n}\n\n\n\n\n\n// main方法\npublic class IntfaceDemo {\n    public static void main(String[] args) {\n        \n        \n        ToDoClass a = new ToDoClass();\n        a.Say();\n        \n        \n    }\n}\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n### 6.3 四大特性：\n\n\n\n 面向对象的三大特性：\n\n>   -   封装性(如： private, 方法等)\n>   -   继承性(extend ,super等)\n>   -   多态性(**子类**继承**父类**的方法后可以 **覆盖重写**override)\n\n\n\n\n\n#### 6.3.1 封装性：\n\n封装性有两种：【变量，方法】\n\n\n\nprivate关键字： \t\n\n>   1.  只有在写了private 的类中可以直接访问该属性,\t\n>   2.  有`private 关键字`就必须在类中`定义` 2个专门 访问、设置 该属性的方法` getter、setter` 。\n>\n>   \n>\n>   setNum(int num)【有参数，无返回值】 \t\t\n>\n>   getNum( )【无参数，有返回值】\n\n\n\n\n\n#### 6.3.2 继承性：\n\n\n\n继承性：\n\n>   1.  继承是`多态性的前提`；\n>   2.  承解决了共性的问题（把`几个类`中都有的`属性、方法`放到`1个父类中`，每个`子类 继承 父类`）\n\n\n\n\n\n父类与子类：\n\n>   1.  父类：基类，超类\n>   2.  子类：派生类\n\n\n\n\n\n\n\n在继承关系中，子类就是父类的一种。\n\n例如： 父类是员工，子类是老师，老师也是一种员工 =》 老师 is 员工\n\n\n\n\n\n\n\n继承过程中，成员变量的访问特点：\n\n>   1.  子类有，则`优先使用 子类的成员变量`。\n>   2.  `子类 `知道 `父类的变量、方法`，父类不知道子类的变量、方法。\n>   3.  父子的`变量、方法` 重名时，优先使用`子类`\n\n\n\n\n\n\n\n\n\n`父类的变量`，`子类的变量`，方法的`局部变量` 重名时：\n\n>   1.  访问 父类的变量：super.变量名\n>   2.  访问 本类的变量： this.成员变量名\n>   3.  访问 方法的局部变量： 直接写变量名\n\n\n\n\n\n\n\n\n\n\n\n父类、子类、继承的使用：\n\n```java\n// 父类【普通的类的定义】：\t\n\tpublic class 父类名称{}\t\n\n// 子类：\n\tpublic class 子类名称 extends 父类名称{}\n\n\n\n// 例如：\n\t\t//父类\n\t\tpublic class Employee {\n\t\t\tString name;\n\t\t\tint age;\n\t\t}\n\t\t\t\t\n\t\t//子类 -> 继承父类\n\t\tpublic class Teacher extends Employee {\n\t\t\tString Tno;\n\t\t}\n```\n\n\n\n\n\n#### 6.3.3 抽象性：\n\n抽象：\n\n>   一个父类有一个没法具体描述的方法：\n>   如：\n>\n>   -   `子类 cat` 有 `eatFish( )` 的方法，\n>   -   `父类 Animal `有`eat( ) `的方法，但没法细说具体执行过程。\n\n\n\n\n\n抽象方法-格式：\n\n```java\n// 方法 返回值前 加上 abstract 关键字，去掉大括号{}，直接以分号；结束。\n\n\n//抽象方法\npublic abstract void Eat();\n```\n\n\n\n\n\n**注意** ：\n\n>   1.  `抽象方法` 只能 定义在`抽象类内` 【在 class前加上 abstract】，但 `抽象类`不一定有 `抽象方法`，没有抽象方法的 抽象类 同样 不能直接new,它有特殊用途。  \n>\n>    \n>\n>   2.  子类 必须 覆盖重写 父类 所有的 抽象方法。 【除非子类也是抽象类】\n>\n>       抽象方法覆盖重写 即：去掉 抽象方法的 abstract关键字，补上{ } \n>\n>       【可以鼠标点击 extends 行 按下 alt + enter】\n>\n>   \n\n\n\n\n\n抽象类：\n\n```java\n//抽象类\npublic abstract class Animals {\n    \n\t//抽象方法,没有普通方法的{}\n\tpublic abstract void Eat();\t\t\n    \n}\n```\n\n\n\n\n\n`抽象类` 与 `抽象方法`的使用：\n\n>   抽象类的 对象 无法直接 new 。\n>\n>   即： 不能 Animal a = new Animal( );\n>\n>   必须`先`用一个子类 `继承`一个父类，`再覆盖重写`其抽象方法。\n\n\n\n\n\n`main方法中`使用`抽象类`的`执行顺序`：\n\n1.  子类 调用 super( )，执行抽象父类构造方法。\n2.  执行 子类构造方法。\n3.  执行 子类的抽象方法。\n\n```java\n/*\n *\t1. 在抽象类中 定义 抽象方法\n *\t2. 子类继承抽象类，覆盖重写 抽象类的 所有抽象方法\n * \t3. main方法中，new 子类对象\n *\n*/\n\n\n\n// 抽象类\npublic abstract class Animals {\n\t//抽象方法,没有普通方法的{}\n\tpublic abstract void Eat();\t\t\t\n}\n\n\n// 子类 继承 抽象类\npublic class Cat extends Animals {\t\t\n    @Override\n    public  void Eat(){\n        System.out.println(\"cat eat\".toUpperCase());\n    }\n}\n\n\n// main方法\npublic class Demo {\n    public static void main(String[] args) {\n        \n        \n        Cat c = new Cat();\n        c.Eat();\n        \n    }\n}\n\n```\n\n\n\n\n\n\n\n#### 6.3.4 多态性：\n\n\n\n-   [Java多态性理解](https://www.cnblogs.com/jack204/archive/2012/10/29/2745150.html)\n\n\n\n多态性的条件：\n\n-   继承\n-   重写\n-   父类变量 引用 子类对象\n\n\n\n实现多态的技术：\n\n>   动态绑定（dynamic binding），是指在`执行期间判断`所引用对象的`实际类型`，根据其实际的类型调用其相应的方法。\n\n```java\n// 左边是父类/接口，右边new的是子类\n// 编译时，arr是List；\n// 运行时，arr是ArrayList\n\n\tList<Integer> arr = new ArrayList<>();\n\n```\n\n\n\n\n\n\n\n### 6.4 包装类\n\n\n\n-   [Java包装类-url](https://www.yiibai.com/java/wrapper-class-in-java.html)\n-   [Java泛型和包装类](https://blog.csdn.net/Hushboom/article/details/104798466)\n\n\n\n#### 6.4.1 包装类是什么：【自动装箱 + 自动拆箱】\n\n包装类 = 基本类型 + 常用方法\n\n将一个类型变成一个类。\n\n>   -   `原始数据类型 `=转换为=》`对象`\n>\n>   -   `对象` =转换为=》 `原始数据类型`\n>   -   可用于实现` 多态性`\n>\n>    \n>\n>    \n>\n>   *`JDK1.5`*开始可以进行`自动装箱，自动拆箱`：\n>\n>   -   自动装箱： 自动将 `基本类型 => 包装类`\n>   -   自动拆箱： 自动将 `包装类 => 基本类型`\n\n![包装类](https://z3.ax1x.com/2021/05/24/gja30e.png)\n\n\n\n#### 6.4.2 泛型：\n\n`泛型 <=> <包装类>` \n\n泛型常用于：指定`某个集合`只能保存`某种数据类型的数据`。\n\n```java\n// 泛型就是下面的 <String>，其中String是包装类\n\nList<String> list = new ArrayList<String>();`\t// 一种体现多态性的写法，左边是父类型，右边是子类型\n```\n\n\n\n\n\n\n\n## 7. 常用的类\n\n\n\n### 7.1 Math类：\n\n\n\nMath的所属路径：`java.lang.Math`\n\n```java\npackage com.cyw2;\n\npublic class Demo {\n    public static void main(String[] args) {\n        \n// 取整        \n        double a = Math.floor(1.4);\t//向下取整，无论正负数(取小的)\n        double b = Math.round(1.4); //四舍五入(负数入的时候向0进位)\n        double c = Math.ceil(1.4);\t//向上取整，无论正负数(取大的)    \n\n        System.out.println(\"1.4 => floor \"+a);  // 1.0\n        System.out.println(\"1.4 => round \"+b);  // 1.0\n        System.out.println(\"1.4 => ceil \"+c);   // 2.0\n        System.out.println(\"==============\");\n        \n    \n        \n        \n// 随机数          \n        double d = Math.random();   //返回1个[0,1)之间的double类型的小数\n        \n        System.out.println(d);\n   \n        \n        \n\n// 比大小        \n        int max = Math.max(12,34);  // 返回参数中的最大值\n        int min = Math.min(12,34);  // 返回参数中的最小值\n        \n        System.out.println(max);\n        System.out.println(min);\n        System.out.println(\"==============\");\n\n        \n        \n// 三角函数\n\n        double e = Math.toRadians(45.0);    // 将角度制 转为 弧度制\n        double f = Math.tan(e);             // 计算tan(PI/4)\n        double g = Math.rint(f);\n        \n        System.out.println(g);   // 将计算结果 转化成 最接近的整数\n        System.out.println(\"==============\");\n \n        \n        \n// 数值 与 字符串 相互转化\n        String h = Integer.toString(123);\n        System.out.println(h);\n        \n        String i = \"123\";\n        int j = Interager.parseInt(i);\n        \n        System.out.println(j);\n        System.out.println(\"==============\");\n        \n        \n// 多次方 与 开根号     \n               \n        double k = Math.sqrt(100.0);\t// 开根号\n        double L = Math.pow(10.0,2.0);\t// 多次方\n        System.out.println(k);\n        System.out.println(L);\n\n    }\n}\n\n```\n\n\n\n\n\n### 7.2 Charater类：\n\n常用方法：\n\n-   `判断`字符类型：是否是 `字母、数字、空白符、大写、小写`\n-   转化大小写：转化成 `大写、小写、字符串`\n\n```java\n// 定义\t\n\n\tchar ch = 'a';\n\n\tCharacter ch = new Character('a');\n\n\tchar uniChar = '\\u039A';  // Unicode 字符表示形式\n \n\t// 字符数组\n\tchar[] charArray ={ 'a', 'b', 'c', 'd', 'e' };\n\n\tCharacter ch = new Character('a');\n\n\n// 常用方法：\n\tchar a = 'A';\n\tboolean isLetter = Character.isLetter(a);\n\n    System.out.println(isLetter);\t// true\n    System.out.println(Character.isDigit(a));\t//false\n\n```\n\n\n\n\n\n\n\n### 7.3 String类：\n\nString 类是不可改变的，一旦创建了 String 对象，那它的值就无法改变了。\n\n要想改变` String 对象的值`，可以使用 `StringBuffer` 和 `StringBuilder `类。\n\n```java\n// 存放在 堆中的字符串常量池中\n\tString str = \"Runoob\";\n\n// 使用构造函数\n\tString str2 = new String(\"Runoob\");\n\n\n// 字符串长度\n\tstr = \"abc\";\n    int len = str.length(); \n\tSystem.out.println(len);\t// 3\n\n\n// 字符串的拼接\n\tString str2 = \"我的名字是 \".concat(\"Runoob\");\t\n\tString str3 = \"我的名字是 \"+\"Runoob\";\n\n\n// 格式化拼接字符串\n\tString fs;\n\tfs = String.format(\"a的值为%f, 整型变量的值为\" \n                    %d, 字符串变量的值为          \n                    %s\", floatVar, intVar, stringVar);\n\n\n\n// 返回指定位置的字符\n\tString str1 = \"abc\";\n\tchar ch = str1.charAt(0);\n\tSystem.out.println(cg);\t// a\n\n\n// 返回字符串中指定字符的第一个索引\n\tString str1 = \"abc\";\n\tint index = str1.indexOf('b');\n\tSystem.out.println(index);\t// 1\n\n\n// 截取从参数位置到最后的字符串: substring(索引)\n// 截取从[索引1,索引2)的字符串: substring(索引1,索引2)\t\t\n\n\tString str1 = \"hello\";\n\tString str2 = str1.substring(0);  \t//str2 = \"hello\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tString str3 = str1.substring(1,4);\t//str3 = \"ell\";\n\n\n// 字符串的转化\n\t//将字符串拆为字符数组,并将字符数组作为返回值: toCharArray();\n\t//获取当前字符串底层的字节数组: getBytes();\n\t//替换字符串，返回新字符串: replace(old,new);\n\n\n//字符串的分割\n\t//split(正则表达式)：按指定规则分割字符串，并返回字符数组，若想用. 作为分割符，需要写 \\\\.\n\t\t\n```\n\n\n\n\n\n字符串在内存中的创建过程：\n\n>   以 String str1 = \"abc\" 为例 \n>\n>   内存中情况：  \t\n>\n>   1.  在 `栈`中开辟 `变量的空间`， \t\n>\n>   2.   在 `堆`中的 `字符串常量池` 中`创建String 对象` \t\n>   3.  在 `堆`中 创建 `byte[] \t`\n>   4.  `String 对象`引用` byte[] 的地址` \t\n>   5.  `栈`中的变量 引用 `String 对象 的地址`\n\n\n\n\n\n### 7.4 StringBuffer 类 与 StringBuilder 类：\n\nStringBuffer 和 StringBuilder 都可用来创建字符串，\n区别：\n\n-   StringBuffer ：速度慢，但在多线程时安全\n-   StringBuilder ：速度快，但在多线程时不安全【StringBuilder 更常用】\n\n```java\npublic class Demo{\n    public static void main(String args[]){\n        \n// 10 为容量\n        StringBuilder sb_1 = new StringBuilder(10);\n        sb_1.append(\"大家好\");\n        System.out.println(sb_1);  \n       \n        sb.insert(8, \"Java\");\n        System.out.println(sb_1); \n        \n// 5为开始位置，8为结束位置\n        sb.delete(5,8);\n        System.out.println(sb_1);  \n        \n    }\n}\n```\n\n\n\n\n\n\n\n\n\n### 7.5 Date类：\n\n`import java.util.Date;`\n\n```java\n// 2个构造函数\n\n\tDate d1 = new Date();\n\n\tDate d1 = new Date(long millisec);\t// millisec: 从 1970-1-1 到 现在 的毫秒数\n\n\n// 获取millisec：long getTime( )\n// 设置millisec：void setTime(long time)\n\n\n//比较时间：假设A、B是两个时间\n\n\tA.before(B);\t//  时间A 在 时间B 前，则 返回true\n\tA.after(B);\t\t//  时间A 在 时间B 后，则 返回true\n\tA.equals(B);\t//  时间A 与 时间B 相等，则 返回true\n\n\n// 格式化的时间、日期\n\n\tDate dNow = new Date( );\n\tSimpleDateFormat sdf = new SimpleDateFormat (\"yyyy-MM-dd HH:mm:ss\");\n\tSystem.out.println(\"当前时间为: \" + sdf.format(dNow));\n\t\n\t\t\n```\n\n\n\n\n\n\n\n### 7.6 Calender类：\n\n\n\n```java\n//当前日期\n\tCalendar c = Calendar.getInstance();\n\n//创建指定日期\n\tCalendar c1 = Calendar.getInstance();\n\n\tc1.set(2009, 6 - 1, 12);\t// 设置 年、月、日\n\n\n// 获取日期的相关信息\n\tCalendar c1 = Calendar.getInstance();\n\t// 获得年份\n\t\tint year = c1.get(Calendar.YEAR);\n\n\t// 获得月份\n\t\tint month = c1.get(Calendar.MONTH) + 1;\n\n\t// 获得日期\n\t\tint date = c1.get(Calendar.DATE);\n\n\t// 获得小时\n\t\tint hour = c1.get(Calendar.HOUR_OF_DAY);\n\n\t// 获得分钟\n\t\tint minute = c1.get(Calendar.MINUTE);\n\n\t// 获得秒\n\t\tint second = c1.get(Calendar.SECOND);\n\n\t// 获得星期几【注意（这个与Date类是不同的）：1代表星期日、2代表星期一、3代表星期二，以此类推】\n\t\tint day = c1.get(Calendar.DAY_OF_WEEK);\n```\n\n\n\n\n\n\n\n\n\n### 7.7 Scanner 类：\n\n`import java.util.Scanner;  `\n\n```java\n/*\n * Scanner sc = new Scanner(System.in);\n * ``sc.hasNextInt()   \t <=>  sc.nextInt()\n * ``sc.hasNextFloat()   <=>  sc.nextFloat()\n * ``sc.hasNextDouble()  <=>  sc.nextDouble()\n * \n*/\n\n\n// 从键盘接收数据【next() 按字符】\n        Scanner sc1 = new Scanner(System.in);\n\n        if (sc1.hasNext()) {\n                String str1 = sc1.next();\n                System.out.println(\"输入的数据为：\" + str1);\n        }    \n        sc1.close();\n\n\n\n\n\n// 从键盘接收数据【nextLine() 按行，接收回车之前的所有字符，包括空白符】\n\t    Scanner sc2 = new Scanner(System.in);\n        // 从键盘接收数据\n \n        // nextLine方式接收字符串\n        System.out.println(\"nextLine方式接收：\");\n        // 判断是否还有输入\n        if (sc2.hasNextLine()) {\n            String str2 = sc2.nextLine();\n            System.out.println(\"输入的数据为：\" + str2);\n        }\n        scan.close();\n\n```\n\n\n\n\n\n\n\n\n\n\n\n### 7.8 Regex-正则表达式：\n\n\n\n`import java.util.regex.*;`\n\n\n\njava.util.regex 包主要包括以下三个类：\n\n-   Pattern 类：`表达式`\n-   Matcher 类：`匹配引擎`\n-   PatternSyntaxException类：`语法错误`\n\n\n\nJava中的`\\\\` 等价于 其他语言中的 `\\`: \n\n-    `\\b`表示匹配删除，`\\\\b`表示匹配边界\n-   例如：要匹配 str1 = ”(hello)“，正则必须为`\\\\(hello\\\\)`\n\n\n\n\n\n```java\n/*\n*\t1. 匹配1个字符：.\n*\t2。匹配前面的1个字符 0次~多次：* 等价于{0,}，例如：ab* 即：ab{0,}   =>匹配：[a,ab]\n*\t3。匹配前面的1个字符 1次~多次：+ 等价于{1,}，例如：ab+ 即：ab{1,}   =>匹配：[ab，abb]\n*\t4。匹配前面的1个字符 0次~1次：? 等价于{0,1}，例如：ab? 即：ab{0,1}  =>匹配：[a,ab]\n*\t4。非贪心匹配，尽可能短，用于匹配修饰符之后：? ，例如：ab? 即：a*? =>匹配：a\n*\t6. 匹配特殊字符：\\ ,例如：\\\\d 表示匹配 \\d ,即：匹配1个数字【java中的 \\\\ 相当于 其他语言中 \\】\n*\t7. 匹配以指定字符开头的字串：^字符,例如：^a 表示匹配以a开头的字串\n*\t8. 匹配以指定字符结尾的字串：字符$,例如：a$ 表示匹配以a结尾的字串\n*\t9. 匹配其中的一个，相当于\"或\"：(字符1|字符2),例如：fu(c|n)  => 匹配：[fuc,fun]\n*\t10. 匹配指定字符集中的任意一个：[字符1字符2字符3],例如：fu[abc] => 匹配：[fua,fub,fuc]\n*\t11. 匹配指定连续的字符集中的任意一个：[字符1-字符3],例如：fu[a-c] => 匹配：[fua,fub,fuc]\n*\t12. 不匹配指定数组中的任意一个：[^字符1字符2字符3],例如：fu[^abc] => 不匹配：[fua,fub,fuc]\n*\t12. 不匹配指定数组中的任意一个：[^字符1-字符3],例如：fu[^a-c] => 不匹配：[fua,fub,fuc]\n*\t13. 匹配以指定字符结尾的字串：字符$,例如：a$ 表示匹配以a结尾的字串\n*\t14. 只匹配边界位置的字符：\\b 例如：\"er\\b\" 匹配=> never , 不匹配=> verb\n*\t15. 不匹配边界位置的字符：\\B 例如：\"er\\B\" 不匹配=> never , 匹配=> verb\n*/\n\n\n\n\n        String str1 = \"Hello World 123,Hello Man 456! \";\n        String pattern = \".*Hello.*\";\n        boolean isMatch = Pattern.matches(pattern,str1);\n\n        System.out.println(\"字符串中是否能否找到Hello：\"+isMatch);\t//true\n```\n\n\n\n\n\n\n\n\n\n### 7.9 try-catch 异常处理：\n\n所有的异常类是从 `java.lang.Exception 类`继承的子类\n\n[Java 异常处理 | 菜鸟教程 (runoob.com)](https://www.runoob.com/java/java-exceptions.html)\n\n异常：\n\n-   `检查性异常`：最容易犯，编译时不能忽略，如：打开不存在的文件\n-   `运行时异常`：可以避免，编译时可被忽略，如：空指针异常、下标越界异常、算数异常（如：除数为0）、类型转化异常\n-   `错误`（编译错误、运行错误、逻辑错误）：脱离控制，如：堆栈溢出、虚拟机错误、线程死锁\n\n![异常处理-使用技巧](https://z3.ax1x.com/2021/05/24/gjachn.png)\n\n\n\n声明异常：\n\n```java\n/* 声明异常：try-catch 或 在定义方法时：方法名()throws 异常{ }\n*\t声明异常的注意事项：\n*\t\t1. 只有父类声明了某个异常，子类才能声明该种异常/该种异常的子类\n*\t\t   \t【父类有，子类才能有】\n*\n*\t\t2. 子类重写父类的方法时，也要声明 父类已经声明的异常 或 父类已经声明的异常的子类异常\n*\t\t\n*/\n\n\n// 越是子类的异常，越要先catch\n\n// 使用 try-catch 来声明异常\ntry {\n    file = new FileInputStream(fileName);\n    x = (byte) file.read();\n} catch(FileNotFoundException f) { // Not valid!\n    f.printStackTrace();\n    return -1;\n} catch(IOException i) {\n    i.printStackTrace();\n    return -1;\n}\nfinally{\n    // 无论是否有异常，都会执行的代码\n}\n\n\n\n\n// 使用 throws关键字 来声明异常\nimport java.io.*;\npublic class className\n{\n  public void deposit(double amount) throws RemoteException\n  {\n    // Method implementation\n    throw new RemoteException();\n  }\n  //Remainder of class definition\n}\n```\n\n\n\n\n\n在 Java 中你可以自定义异常。编写自己的异常类时需要记住下面的几点。\n\n-   所有异常都必须是 Throwable 的子类。\n-   如果希望写一个`检查性异常类`【编译不通过的异常】，则需要继承 Exception 类。=》try-catch 或 throws\n-   如果你想写一个`运行时异常类`【运行不通过的异常】，那么需要继承 RuntimeException 类。\n\n\n\n出现算数异常：除数不能为0\n\n```java\n\n// 出现算数异常：除数不能为0\npublic class Demo {\n    public static void main(String[] args) {\n\n        int a=10,b=0;\n        System.out.println(div(a,b));\n\n    }\n\n    // 除法\n    public static int div(int a,int b){\n        return a/b;\n\n    }\n}\n\n```\n\n\n\n自定义异常-步骤：\n\n```java\n/*\n*\t自定义异常-步骤：\n*\t\t1. 创建异常类，该异常类继承 Exception类\n*\t\t2. 重写 异常类的构造方法\n*\n*\t手动抛出异常-步骤：\n*\t\t1. 选择1个合适的异常类\n*\t\t2. 创建异常类的对象\n*\t\t3. 抛出对象\n*/\n\n\n// 异常类\n    public class myException extends Exception{\n\n        public myException() {\n            super();\n        }\n\n        public myException(String msg) {\n            super(msg);\n        }\n\n    }\n\n\n\n\n// 父类\n    public class Father {\n\n        public void eat() throws myException{\n            System.out.println(\"我是父类的-eat\");\n        }\n        \n    }\n\n\n\n\n// 女儿类\n    public class Daughter extends Father{\n        \n//main方法\n            public static void main(String[] args) {\n                   Father daughter = new Daughter();\n\n                   try{\n                       daughter.eat();\n                   }catch (myException e){\n                        e.printStackTrace(); // 打印堆栈的轨迹\n                   }\n            }\n        \n//女儿类的 eat()\n            @Override\n            public void eat() throws myException {\t//子类声明的异常必须 小于等于 父类声明的异常\n                System.out.println(\"我是女儿类的-eat\");\n                System.out.println(\"我是女儿类的-eat\");\n                System.out.println(\"我是女儿类的-eat\");\n\n                // 打印3次\"我是女儿类的-eat\"后，马上抛出异常\n                throw new myException(\"我吃太多了~\");\t\n            }\n\n    }\n\n```\n\n\n\n![异常-层次图](https://z3.ax1x.com/2021/05/24/gjaI74.png)\n\n\n\n\n\n## 8. Stream、IO、File\n\n\n\n`import java.io.*;`\n\n\n\n需要定义` IO异常`\n\n\n\n-   [Java-IO-视频](https://www.bilibili.com/video/BV1Tz4y1X7H7?from=search&seid=14230994899231979002)\n-   [Java-IO-笔记](https://www.cnblogs.com/coderzjz/p/13670088.html)\n\n\n\n### 8.1 Stream的介绍：\n\n`流-Stream`:\n\n>   一个`数据的序列`。【以 **内存** 为参照物】\n>\n>   -   `输入流`表示**计算机**从一个源`读取数据 => 内存`，\n>\n>   -   `输出流`表示**计算机**向一个目标`写入数据 => 存储设备`。【必须 flush( ) 才能写入】\n\n\n\n字节流：可以复制 文本、图片、二进制文件\n\n字符流：可以复制 文本文件（包括中文）\n\n\n\n流的分类：\n\n>   1.  按方向：\n>\n>       -   输入流：`读取数据 => 内存`\n>       -   输出流：`写入数据 => 存储设备`\n>\n>       \n>\n>   2.  按单位：\n>\n>       -   字节流\n>       -   字符流:（只能：读写文本）\n>\n>        \n>\n>   3.  按功能：\n>\n>       -   节点流：读写 数据\n>       -   过滤流：增强 功能\n\n\n\n![IO流](https://z3.ax1x.com/2021/05/24/gjaXjK.png)\n\n### 8.2 Stream的常用类：\n\n```java\n/*\n*\t字节输入流：InputStream【读数据】\t\n*\t\t1. read()\t\t\t\t\t\t\t\t// 读取下一个字节\n*\t\t2. read(byte[] b)\t\t\t\t\t\t// 读取下面多个字节\n*\t\t3. read(byte[] b,int offset,int maxlen)\t// 读取下面多个字节\n*\t\t4. close()\t\t\t\t\t\t\t\t// 关闭资源\n*\t步骤：\n*\t\t\t1. 创建 FileInputStream\n*\t\t\t2. 创建 byte[]\n*\t\t\t3. 在 FileInputStream调用 read(byte数组)上\n*\n*\t字节输出流：OutputStream【写数据】\n*\t\t1. write(int b)\t\t\t\t\t\t\t\t// 输出指定字节\n*\t\t2. write(byte[] b)\t\t\t\t\t\t\t// 输出指定字节数组\n*\t\t3. write(byte[] h,int offset,int len)\t\t// 输出指定位置和长度的多个字节\n*\t\t4. flush()\t\t\t\t\t\t\t\t\t// 刷新缓冲区，并 写入数据\n*\t\t5. close()\t\t\t\t\t\t\t\t\t// 关闭资源\n*\n*\n*/\n\n\n// FileInputStream : InputStream的子类\n\n    import java.io.FileInputStream;\n\n    public class Demo {\n        \n// main方法，声明IO异常        \n        public static void main(String[] args) throws Exception{\n            \n            // 假设'E:\\abc.txt' 已经存在，且内容为：abc012\n            \n// 创建文件输入流\n            FileInputStream fis = new FileInputStream(\"e:\\\\abc.txt\");\n            \n            \n            \n            // 如果 存在字节，则输出，继续循环,\n            // 最终输出：97 98 99 48 49 50 读取完毕！【其中，数字：表示字节的ASCII码】\n// 读取单个字节\n            int data;\n            while ( (data=fis.read()) != -1   ){\n                    System.out.println(data);\n            }\n            fis.close();\n            System.out.println(\"读取完毕！\");\n            \n            \n// 读取多个字节            \n            byte[] buf  = new  byte[3];\n            int count = 0 ;\t\t\t\t// 返回 读取的字节个数\n            while( (count = fis.read(buf) ) ！=-1){\n                   System.out.println(new String(buf));\t// 输出 读取的字节的字符形式\n            }         \n            fis.close();\n             System.out.println(\"读取完毕！\");\n\n            \n            \n            \n            \n            \n// FileOutputStream : OutputStream的子类\n        // 构造方法：FileOutputStream(路径,[append=false])\n            \n        FileOutputStream fos = new FileOutputStream(\"e:\\\\abc.txt\");\n        \n        // 写入单个字节\n        fos.write(97);\t\t// 输出：a\n        \n        // 写入多个字节\n        byte[] buf = new byte[]{'d','e','f'};\n        fos.write(buf);\t\t// 输出：def\n            \n            \n\t\t// 写入多个字符\n        String str1 = \"这是一个字符串\";\n        byte[] buf2 = str1.getBytes();\n        fos.write(buf2);\t// 输出：\"这是一个字符串\"\n            \n        fos.close();    \n        System.out.println(\"输出完毕\");\t// 最终输出：adef这是一个字符串\n            \n        }\n    }\n\n\n```\n\n\n\n\n\n### 8.3 案例-文件复制：\n\n【先输入流-读取，再输出流-写入】\n\n```java\n// 目标：将\"E:\\A,jpeg \" 复制到 ”E:\\0\\B。jpg“\n\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\n\npublic class Demo {\n    \n    public static void main(String[] args) throws Exception{\n\n// 创建输入、输出流\n            FileInputStream fis= new FileInputStream(\"E:\\\\A.jpeg\");\n\n            FileOutputStream fos = new FileOutputStream(\"E:\\\\0\\\\B.jpeg\");\n        \n// 创建缓存区 67KB\n            byte[] buf = new byte[67*1024];\n        \n// 读取的字节个数\n            int count = 0;\n\n           while((count = fis.read(buf)) != -1) { // 固定写法\n// 写入文件\n               fos.write(buf,0,count);\n           }\n// 关闭资源        \n        \tfis.close();\n        \tfos.close();\n            System.out.println(\"复制完毕\");\n\n    }\n}\n\n\n```\n\n\n\n\n\n### 8.4 字节缓存流：\n\n`java.io.BufferedInputStream`\n\n`java.io.BufferedOutputStream`\n\n\n\n需要与 InputStream或 其子类 配合使用。\n\n目的：\n\n>   1.  调高IO效率，减少访问磁盘\n>\n>   2.  数据存储在缓冲区，flush( )将数据写入文件，也可直接close( )\n>\n>       【close( )也会调用flush( ),将内容写入文件】\n\n```java\n/*\n*\t步骤：\n*\t\t\t1. new InputStream\n*\t\t\t2. new BufferedInputStream\n*\t\t\t3. 读取缓存，输出\n*\t\t\t4.关闭资源\n*/\n\n\n// 缓冲输入流\n// BufferedInputStream \n        FileInputStream fis = new FileInputStream(\"e:\\\\abc.txt\");\n\n        BufferedInputStream bis = new BufferedInputStream(fis);\n\n        int data=0;\n\t\t\n\t\t// 读取：\"adef\"\n        while((data = bis.read()) !=-1){\n            // 打印结果：97:a  100:d  101:e  102:f \n            System.out.print(data+\":\"+(char)data+\"  \");\n            \n        }\n\n        bis.close();\n\t\tfis();\n\n\n\n\n// 缓冲输出流\n// BufferedOutputStream【最后必须 flush() 或 close() 才能 写入成功】\n\t    FileOutputStream fos = new FileOutputStream(\"e:\\\\def.txt\");\n        BufferedOutputStream bos  = new BufferedOutputStream(fos);\n\n        int i=0;\n        while(i<10){\n            i++;\n            bos.write(\"Hello\\n\".getBytes());\n            bos.flush();\n        }\n\t\tbos.close();\n\t\tfos();\n```\n\n\n\n\n\n### 8.5 对象流（序列化 / 反序列化）：\n\n-   ObjectOutputStream\n\n-   ObjectInputStream\n\n\n\n对象流：【需要结合 InputStream / OutputStream】\n\n>   1.  增强了 缓冲区的功能\n>   2.  增强了 读写 基本数据类型 + 字符串\n>   3.  增强了 读写对象：readObject( ) 和 writeObject( obj)\n\n\n\n`使用 Stream 传输 Object 的过程`：\n\n-   序列化【写入】：ObjectOutputStream，`1个类要想序列化，必须 implements Serializable接口`\n\n-   反序列化【读取】：ObjectInputStream\n\n\n\n#### 8.5.1 序列化：【写入Object 到 文件】\n\n**注意**： \n\n-   被 写入文件（序列化）的类 必须实现 `可序列化接口` 。\n-   如果`某个属性不想被序列化`，可以使用transient来修饰 某个类里 的 某个属性：`private transient int age;` 。\n-   `静态属性`不可以序列化。\n\n```java\n/*\n*\t类：Student\n*\t\t1. 属性：name,age【如果是class类型的属性，则该属性也需要implements Serializable接口】\n*\t\t2. implements Serializable接口\n\t\t3. 类要有序列化版本ID（快捷键自动添加），该ID可以保证序列化、反序列化的类是同一个\n*\t\n*\t序列化-步骤：\n*\t\t1. new 文件输出流、对象输出流\n*\t\t2. 序列化(写入对象)\n*\t\t3. 关闭资源\n*/\n\n// Student类\n// 【注意：】1个类要想序列化，必须 implements Serializable接口\n    public class Student implements Serializable {\n\t\tprivate static final long serialVersionUID = 100L;\n        private String name;\n        private int age;\n        \n// 以下省略了 ：构造方法、getter、setter\n   \t\t// ……\n    }\n\n\n// 创建文件输出流、对象输出流\n\tFileOutputStream fos = new FileOutputStream(\"e:\\\\ghi.txt\");\n    ObjectOutputStream oos = new ObjectOutputStream(fos);\n\n// 序列化： ObjectOutputStream\n    Student ZhangSan = new Student(\"张三\",20);\n    oos.writeObject(ZhangSan);\n\n// 关闭资源\n    oos.close();\n\n```\n\n\n\n#### 8.5.2 反序列化：【读取文件中的Object】\n\n```java\n/*\n*\t类：上面已经 序列化的类Student\n*\t\n*\t反序列化-步骤：\n*\t\t1. new 文件输入流、对象输入流\n*\t\t2. 反序列化(读取对象，并强制转化为Student类)\n*\t\t3. 关闭资源\n*/       \n\n\n// 反序列化\n\t FileInputStream fis = new FileInputStream(\"e:\\\\ghi.txt\");\n     ObjectInputStream ois = new ObjectInputStream(fis);\n\n     Student stu1 = (Student) ois.readObject();\n     System.out.println(stu1.getName());\t// 张三\n     System.out.println(stu1.getAge());\t\t// 20\n\t ois.close();\n```\n\n\n\n\n\n### 8.6 字符流：\n\n\n\n#### 8.6.1 字符编码：\n\n\n\n-   `ISO-8859-1`：【1个Byte表示】ASCII，希腊语、阿拉伯语、泰语等\n-   `UTF-8`：UniCode的可变长编码\n-   `GB-2312`：【1-2 Btye】简体中文\n-   `GBK`：【1-2 Btye】简体中文 + 扩展（GB-2312的升级版）\n-   `Big5`：台湾-繁体中文\n\n\n\n**注意：**` 编码方式` 与 `解码方式` 不一致 =》`乱码`\n\n\n\n\n\n\n\n#### 8.6.2 字符流：\n\n字符流 =》 `java.io.Reader` 和 `java.io.Writer`\n\n字符流常用子类：`FileReader`  和 `FileWriter` \n\n\n\n\n\nFileReader：【可显示中文(默认UTF-8编码)】\n\n```java\n// 每次读取1个 \n\n\t\tFileReader fr = new FileReader(\"e:\\\\0\\\\1.txt\");\n        int data= 0;\n        while( (data=fr.read())!=-1){\n            System.out.println((char)data);\t\t// 打印：好好学习\n        }\n\t\tfr.close();\n\n\n\n\n// 使用缓冲区读取\n\n       FileReader fr = new FileReader(\"e:\\\\0\\\\1.txt\");\n\n        char[] buf = new char[4];\n\n        int count= 0; \n\n        while( (count = fr.read(buf)) != -1){\n            \n            System.out.println(new String(buf,0,count));\t// 打印：好好学习\n            \n        }\n\t\tfr.close();\n```\n\n\n\n\n\nFileWriter：\n\n```java\n        \n\t\tFileWriter fw = new FileWriter(\"e:\\\\0\\\\1.txt\");\n        fw.write(\"天天向上\");\n        fw.close();\t\t\t// 输出：天天向上\n```\n\n\n\n\n\n\n\n#### 8.6.2 字符流-复制文本文件：\n\n`FileReader  + FileWriter  `： 复制**文本文件**【`无法复制：图片、二进制文件`】\n\n```java\n// 字符流-复制文本文件        \n\t\tFileReader fr = new FileReader(\"e:\\\\1.txt\");\n        FileWriter fw = new FileWriter(\"e:\\\\0\\\\2.txt\");\n\n        char[] buf = new char[1024];\n        int count = 0;\n\n        while((count = fr.read(buf)) != -1){\n\n            fw.write(new String(buf,0,count));\n            fw.flush();\n        }\n        fw.close();\n        fr.close();\n\n\n```\n\n\n\n\n\n#### 8.6.3 字符缓冲流:\n\n-   BufferedReader：输入\n-   BufferedWriter：输出【原样打印】\n-   PrintWriter：输出【原样打印、换行打印】\n\n\n\n```java\n// 字符缓冲-输入流【第一种】:BufferedReader\n\n        FileReader fr = new FileReader(\"e:\\\\1.txt\");\n\n        BufferedReader br = new BufferedReader(fr);\n\n        char[] buf = new char[1024];\n\n        int count =0;\n\n        while((count=br.read(buf))!= -1){\n            System.out.println(buf);\t// 打印：天天向上-1 天天向上-2 天天向上-3\n        }\n\n\n\n\n// 字符缓冲-输入流【第二种】:BufferedReader\n        FileReader fr = new FileReader(\"e:\\\\1.txt\");\n\n        BufferedReader br = new BufferedReader(fr);\n\n        char[] buf = new char[1024];\n\n        String line = null;\n\n        while((line=br.readLine()) != null){\n            \n            System.out.println(line);\n            \n        }\n\n//================================================\n\n\n// 字符缓冲-输出流: BufferedWriter\n\n        FileWriter fw = new FileWriter(\"e:\\\\1.txt\");\n        BufferedWriter bw = new BufferedWriter(fw);\n        bw.write(\"好好学习\");\n        bw.newLine();\t// 换行\n        bw.close();\n\n\n\n//================================================\n\n\n\n// PrintWriter\n\t// 原样打印\n        PrintWriter pw = new PrintWriter(\"e:\\\\2.txt\");\n        pw.println(97);\n        pw.println(true);\n        pw.flush();\n\n\n\t// \n```\n\n\n\n\n\n\n\n### 8.7 桥转换流：\n\n`java.io.InputStreamReader` 和 `java.io.OutputStreamWriter`\n\n转化：\n\n-   `字节流` =转为=》`字符流`\n-   可设置`编码`\n\n\n\n```java\n// 1个1个读取   \n\t\tFileInputStream fis = new FileInputStream(\"e:\\\\1.txt\");\n        InputStreamReader isr = new InputStreamReader(fis,\"utf-8\");\t// 指定打开的编码\n        int data=0;\n        while((data= isr.read())!=-1){\n            System.out.println((char)data);\n        }\n        System.out.println(isr.getEncoding());\t\t// 获取当前编码\n        isr.close();\n        fis.close();\n\n\n\n// 输出：\n        FileOutputStream fos = new FileOutputStream(\"e:\\\\1.txt\");\n        OutputStreamWriter osw = new OutputStreamWriter(fos);\n        osw.write(\"霓虹，你好\\r\\n我是第二行\");\n        osw.flush();\n\t\tfos.close();\n```\n\n\n\n\n\n\n\n### 8.8 File类：\n\n`File类`：代表物理磁盘中的`文件、文件夹`。\n\n\n\nFile类-使用：\n\n-   分隔符\n    -   File.pathSeparatorChar：路径分隔符（\\）\n    -   File.separator：名称分隔符（;）\n-   文件操作\n-   文件夹操作\n\n\n\n\n\n#### 8.8.1 文件操作：\n\n```java\n    public static void creFile() throws Exception{\n        \n// 创建文件对象，无论是否：真实存在        \n        File file = new File(\"e:\\\\3.txt\");\t\n        \n        \n// 按段是否：创建成功 createNewFile()\n        boolean isCreSuccess = file.createNewFile();\t\n        System.out.println(isCreSuccess);\t\n        \n        \n// 判断是否：已存在 file.exists()        \n        System.out.println(file.exists());\t\n   \n        \n// 判断是否：删除  file.delete()       \n        System.out.println(file.delete());\n     \n        \n// JVM退出时，删除        \n        file.deleteOnExit();\n \n        \n// 获取绝对路径   file.getAbsoluteFile()\n         System.out.println(file.getAbsoluteFile());  // e:\\3.txt\n  \n        \n// 获取路径 file.getPath()      \n         System.out.println(file.getPath()); // e:\\3.txt\n     \n        \n// 获取路径 file.getName()        \n        System.out.println(file.getName());\t// 3.txt\n        \n        \n// 获取父目录 file.getParent()           \n        System.out.println(file.getParent());\t// e:\\\n        \n        \n// 获取文件的创建时间 file.length()       \n        System.out.println(file.length());\n\n        \n// 获取文件的 最后修改时间的毫秒数 file.lastModified()\n        System.out.println(new Date(file.lastModified()).toString());\n        \n        \n        \n// 查看读、写权限        \n        System.out.println(file.canRead());\n        System.out.println(file.canWrite());\n        System.out.println(file.canExecute());\n        \n// 判断 文件、文件夹        \n        System.out.println(file.isFile());\n        \n// 判断是否 隐藏        \n        System.out.println(file.isHidden());\n    }\n```\n\n\n\n\n\n\n\n#### 8.8.2 文件夹操作：\n\n```java\n   public static void creDir() throws Exception{\n       \n//创建文件夹对象\n        File dir =new File(\"e:\\\\0\\\\1\");\n// 判断是否存在\n        if(!dir.exists()){\n            \n// 创建单层目录: dir.mkdir();\t        \n            \n            \n// 创建多层目录: dir.mkdirs();\n            dir.mkdirs();\t// 返回 true\n        }\n\n// 删除文件夹       \n        dir.delete();\n\n       \n       \n// 列出所有的文件名              \n        String[] arr = dir.list();\n       \n        for(String f : arr){\n            System.out.println(f);            \n        }\n       \n       \n       \n// ... 所有的方法都与文件的一样\n\n    }\n\n```\n\n\n\n#### 8.8.3 FileFilter接口：\n\n【按条件 筛选出 文件、文件夹】\n\n```java\n\n\n\n\n// 传入FileFilter匿名对象，如果是jpg,\n\n       File[] arr = dir.listFiles(new FileFilter() {\n            @Override\n            public boolean accept(File pathname) {\n                if(pathname.getName().endsWith(\".txt\")){\n                    // 符合条件的返回true\n                    return true;\n                }else{\n                    return false;\n                }\n\n            }\n        });\n\n// 输出：符合条件的文件名\n       for(File f:arr){\n           System.out.println(f.getName());\n       }\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 9. 集合框架\n\n-   [JavaSE--集合介绍](https://blog.csdn.net/Zzh1110/article/details/105518682)\n-   [千锋-Java集合框架详解-bilibili](https://www.bilibili.com/video/BV1zD4y1Q7Fw?p=2)\n-   [Java集合-简要笔记](https://www.cnblogs.com/coderzjz/p/13587167.html)\n-   [JAVA集合框架详解](https://lazydog036.gitee.io/2020/10/29/JAVA集合框架/)\n\n\n\n### 9.1 引入：\n\n\n\n`数组、链表、集合`等，都是`存放多个数据`的1种容器，都用于在`内存中存储`（而不是持久化存储：txt,abi,jpg）。\n\n\n\n\n\n`数组`：【有序存储，元素可重复】\n\n-   特点：指定长度后，长度不可再次更改，只能存放同一种类型的数据。 int [ ] arr = new int[ ];\n-   缺点：长度固定，不可更改；添加、删除元素时，效率低；没有现成的方法或属性来获取数组长度\n\n\n\n为解决`数组`的上述`缺点`，引入了`集合`。\n\n\n\n\n\n\n\n\n\n-   集合只能存储`引用类型`   ：\n\n>   => 必须`自动装箱、自动拆箱`来将  `基本类型 ` 转化为  `引用类型` 。     \n\n\n\n\n\n-   为什么学习不同的集合？\n\n>   不同的集合，在底层的数据结构的实现不同。\n\n\n\n\n\n\n\n-   数组 与 集合 的区别：\n\n>   1.  数组长度固定，集合长度不固定。\n>   2.  数组可以存储基本类型+引用类型，集合只能存储引用类型（因此需要 自动装箱、自动拆箱）。\n\n\n\n\n\n-   集合的包的位置：`import java.uitl.*;`\n\n\n\n![collection集合](https://z3.ax1x.com/2021/05/24/gjdpAH.png)\n\n\n\n### 9.2 Collection集合的操作：\n\n\n\nCollection、List、Set是接口，不能直接new，而要借助他们的子类如：ArrayList、LinkedList、HashSet、TreeSet。\n\n\n\n#### 9.2.1 Collection 集合接口：\n\n```java\n/*\n* 集合的操作：\n*\t1. 添加：add(obj),\n*\t2. 删除：remove(),clear();\n*\t3. 遍历：foreach语句，迭代器\n*\t4. 判断：contains(),isEmpty(),equals()\n*\t5. 获取：get()\n*/\n\n\n\n// 添加：\n\n            Collection coll = new ArrayList();\n            coll.add(\"苹果\");\n            coll.add(\"西瓜\");\n            System.out.println(“元素个数：”+coll.size());\n            System.out.println(coll);\n\n\n// 删除：\n\n            coll.remove(\"苹果\");\n            System.out.println(coll);\n\n\n// 清空:\n            coll.clear();\n            System.out.println(coll);\n\n\n\n\n\n\n// 遍历的2种方式【重点】：\n//\t\t1. 增强的for\n//\t\t2. 迭代器【专门用于遍历集合的接口】：\n//\t\t\t\thaNext(),有元素则返回true\n//\t\t\t\tnext(),获取下一个元素\n//\t\t\t\tremove()，移除当前元素\n\t\t\n\t\t// 增强for\n            for (Object obj:coll) {\n                String s = (String)obj;\t// 强制转化为真实的类型\n                System.out.println(obj);\n            }\t\n\n\n\n\t\t// 使用迭代器【注意：在迭代时，不能: 集合.remove(),\n\t\t// 否则会报：并发修改异常;但可以 it.remove()】\n            Iterator it = coll.iterator();\n            while(it.hasNext()){\n                String s = (String)it.next();\n                System.out.println(s);\n                it.remove();\n            }\n            System.out.println(coll.size());\t// 0\n\n\t\t\n// 判断：存在-> coll.contains();   \n//      是否为空 -> coll.isEmpty();\n\n\t\t\tSystem.out.println(coll.contains(\"香蕉\"));、\n            System.out.println(coll.isEmpty(香蕉));\n```\n\n\n\n#### 9.2.2 List 集合子接口：\n\n有序、可重复、有下标\n\n```java\n/*\n* List集合的操作：\n*\t1. 添加：add(obj),addAll(index,collection)，add(index,obj);\n*\t2. 删除：remove(),clear();\n*   3. 保留元素：retainAll(collection);\n*\t4. 遍历：foreach语句，\n\t\t\t迭代器:\n\t\t\t\tIterator()、\n\t\t\t\tlistIterator()、\n\t\t\t\tlistIterator(index)【迭代方向可 先从前面开始，也可先从后开始】\n\t\t\t\t\n*\t5. 判断：contains(obj),isEmpty(),equals(obj)\n*\t6. 获取：get(index),subList(from_index,to_index), indexOf(obj)\n*\t7. 修改元素：set(index,obj)\n*\t8. 转化为数组：toA\n*/\n\nimport java.util.List;\nimport java.util.ListIterator;\n\n// 以下内容放入main中\n\n        List list = new ArrayList<>();\n        list.add(\"苹果\");\n        list.add(\"西瓜\");\n        list.add(\"香蕉\");\n        System.out.println(list);\n\n\t\tListIterator it = list.listIterator();\n\n\n// listIterator迭代器，从 前往后 迭代\n\t\twhile(it.hasNext()){\n            System.out.println(it.next());\n        }\n\n\n// listIterator迭代器，从 后往前 迭代【先将指针移到最后，再从后往前打印】\n\n\t\twhile(it.hasNext()){\n           it.next();\n        }\n        \n        while(it.hasPrevious()){\n            System.out.println(it.previous());\n        }\n\n\n// indexOf()\n \t\tSystem.out.println(list.indexOf(\"香蕉\")); // 2\n\n\n// remove(index)  ; remove((Object)obj)\n\n\t\tList list = new ArrayList<>();\n        list.add(20);\n        list.add(30);\n        list.add(40);\n        list.add(50);\n        list.add(60);\n\n        System.out.println(list);\n\n        list.remove((Object)20);\n\t\tlist.remove(0);  // 与上1行效果一致\n\n        System.out.println(list);\n\n\n// subList(from_idx,to_idx) 返回子集,范围 [from_idx,to_idx)\n\n\t\t\n\n\t\t\n```\n\n\n\n\n\n#### 9.2.3 List 接口的常用实现类：\n\n\n\n\n\n-   ArrayList【重点】：数组，查询快、增删慢，线程不安全【jdk1.2】\n\n>    源码分析：\n>\n>   1.  默认容量（default_capacity）：当没有元素时，0；有1个元素时，10\n>   2.  数组（elementData）\n>   3.  当前大小（size）：\n\n\n\n\n\n-   LinkedList：双链表，增删快、查询慢\n\n```java\n/*\n*\tLinkedList常用方法：\n*\t\t1. add()，addAll()\n*\t\t2. remove(),removeAll()\n*\t\t3. addFirst(),addLast()\n* \t\t4. removeFirst(),removeLast()\n* \t\t5. clear()\n*/\n\n\n\n        LinkedList ll = new LinkedList();\n\n        Student s1 = new Student(\"张1\",10);\n        Student s2 = new Student(\"张2\",20);\n        Student s3 = new Student(\"张3\",30);\n\n// 添加\n        ll.add(s1);\n        ll.add(s2);\n        ll.add(s3);\n        System.out.println(ll);\n\n//删除\n        ll.remove(s2);\n        System.out.println(ll);\n\n// 头插\n        ll.addFirst(s2);\n        System.out.println(ll);\n\n// 头删\n        ll.removeFirst();\n        System.out.println(ll);\n\n// 尾插\n        ll.addLast(s2);\n        System.out.println(ll);\n\n// 尾删\n        ll.removeLast();\n        System.out.println(ll);\n\n\n// 遍历【向后】\n        ListIterator it = ll.listIterator();\n\n        while(it.hasNext()){\n            System.out.println(it.next());\n        }\n\n\n// 遍历【向前】\n         while(it.hasPrevious()){\n                System.out.println(it.previous());\n            }\n\n```\n\n\n\n\n\n-   Vector：数组，查询快、增删慢，线程安全，【jdk1.0】\n\n```java\n/*\n*\tVector集合 演示：\n*\t\tadd()\n*\t\tremove()\n*\t\tsize()\n*\n*\t\t遍历： 枚举器\n* \n*/\n\n\n        Vector v = new Vector();\n        v.add(\"张三\");\n        v.add(\"里斯\");\n        v.add(\"威武\");\n\n// 枚举器，遍历Vector\n        Enumeration en = v.elements();\n\n        while(en.hasMoreElements()){\n            System.out.println(en.nextElement());\n        }\n\n\n\n// firstElement()\n// lastElement()\n// elementAt(idx)\n\n        System.out.println( v.firstElement());\n        System.out.println( v.lastElement());\n        System.out.println( v.elementAt(1));\n\n\n```\n\n\n\n\n\n\n\n#### 9.2.4 Set 集合：\n\n只有包含 Collection 集合中的方法，没有自己额外的方法。\n\n\n\n-   HashSet：基于hashcode来保证不重复。当hashcodec重复时，equals方法被调用，如果equals方法返回true，则 拒绝添加 新的那个重复元素。【存储结构：哈希表，数组+链表】\n\n-   TreeSet：基于排列顺序来保证不重复。【存储结构：红黑树】\n\n\n\n\n\n\n\n#####  HashSet：\n\n```java\n/*\n*  HashSet:\n*\t存储过程：【需要在类里 重写 hashcode()、equals()】\n\t\t【1】 根据hashcode查找保存的位置，位置处无元素，则存入，否则执行第二步\n\t\t【2】 执行euqals(),若返回false,则表示元素不重复，以链表形式存入。\n\t\t小结：先比较hashcode【同一地址】,再equals()【同一值】\n\n* \t\t1. add(obj)\n* \t\t2. remove(obj)\n* \t\t3. clear()\n*\t\t4. contains(obj)\n*\t\t4. isEmpty()\n*\t\t6. 遍历：\n\t\t\t - 增强型for\n\t\t\t - 迭代器\n*\n*/\n\n\n\n        HashSet<Student> s = new HashSet<>();\n\n        Student s1 = new Student(\"张1\",10);\n        Student s2 = new Student(\"张2\",20);\n        Student s3 = new Student(\"张3\",30);\n\n        s.add(s1);\n        s.add(s2);\n        s.add(s3);\n\n        System.out.println(s);\n\n\n\n// 添加\n        s.add(s3);\n        System.out.println(s);\n\n\n\n// 删除\n        s.remove(s2);\n        System.out.println(s);\n\n\n\n// 包含元素\n  \t\tSystem.out.println( s.contains(s2) ); // true\n\n\n// 是否为空\n  \t\tSystem.out.println( s.isEmpty() ); // false\n\n\n// 遍历【增强for】\n        for (Student item : s) {\n            System.out.println(item);\n        }\n\n\n// 遍历【迭代器】\n        Iterator<Student> it = s.iterator();\n        \n        while(it.hasNext()){\n            System.out.println(it.next());\n        }\n\n\n\n// 【Student类中】重写hashcode方法，\n// 注意：此处写法不严谨，使用质数31来参与运算，解决散列冲突: 31*i = (31<<5)-i\n    @Override\n    public int hashCode() {\n        int n1 = this.name.hashCode();\n        int n2 = this.age;\n        return n1+n2;\n    }\n\n// 【Student类中】重写equals方法\n   @Override\n    public boolean equals(Object obj) {\n        if(obj == this){\n            return true;\n        }\n        else if(obj == null){\n            return false;\n        }\n        else if(obj instanceof Student){\n            Student s = (Student) obj;\n            if(this.name.equals(s.getName())&&this.age==s.getAge()){\n                return true;\n            } \n        }\n         return false;\n    }\n\n```\n\n\n\n\n\n\n\n\n\n#####  TreeSet：\n\n【红黑树，即：二叉查找树】\n\n-   按 `排列顺序` 实现  `元素不重复`\n-   实现了` SortedSet 接口`， 对元素 进行`自动排序`\n-   元素类 必须`实现 Comparable 接口`，指定 `排序规则`\n\n```java\n/*\n*  TreeSet:\n\n\n* \t\t1. add(obj)\n* \t\t2. remove(obj)\n* \t\t3. clear()\n*\t\t4. contains(obj)\n*\t\t4. isEmpty()\n*\t\t6. 遍历：\n\t\t\t - 增强型for\n\t\t\t - 迭代器\n*\n*/\n\n\n\n// Student类中 实现 Comparable 接口，重写 CompareTo() \n    @Override\n    public int compareTo(Student o) {\n        int n1 = this.name.compareTo(o.getName());\n        int n2 = this.age-o.getAge();\n        return n1==0?n2:n1;\t// 返回0，表示元素重复\n    }\n\n\n\n// 或者 main方法中，在new Student类时,传入匿名内部类，指定 比较规则\n\n        TreeSet<Student> s = new TreeSet<>(new Comparator<Student>() {\n            @Override\n            public int compare(Student o1, Student o2) {\n                int n1 = o1.getAge() - o2.getAge();\n                int n2 = o1.getName().compareTo(o2.getName());\n                return n1==0?n2:n1;\n            }\n        });\n\n\n\n\n\n// main\n\t\tTreeSet<Student> s = new TreeSet<>();\n\n        Student s1 = new Student(\"张1\",10);\n        Student s2 = new Student(\"张2\",20);\n        Student s3 = new Student(\"张3\",30);\n\n        s.add(s1);\n        s.add(s2);\n        s.add(s3);\n\n        System.out.println(s);\n\n\n\n// 添加\n        s.add(s3);\n        System.out.println(s);\n\n\n\n// 删除\n        s.remove(s2);\n        System.out.println(s);\n\n\n\n// 包含元素\n  \t\tSystem.out.println( s.contains(s2) ); // true\n\n\n// 是否为空\n  \t\tSystem.out.println( s.isEmpty() ); // false\n\n\n// 遍历【增强for】\n        for (Student item : s) {\n            System.out.println(item);\n        }\n\n\n// 遍历【迭代器】\n        Iterator<Student> it = s.iterator();\n        \n        while(it.hasNext()){\n            System.out.println(it.next());\n        }\n\n```\n\n\n\n\n\n#####  TreeSet-案例：\n\n```java\npackage CollectionDemo;\n\nimport java.util.Comparator;\nimport java.util.TreeSet;\n\npublic class TreeSetDemo {\n    /*  todo:\n    *       按照字符串的长度进行排序\n    *           beijing:7,guangzhou:9,shanghai:8\n    * */\n\n    \n// main\n    public static void main(String[] args) {\n\n        TreeSet<String> t = new TreeSet<>(new Comparator<String>() {\n            @Override\n            public int compare(String o1, String o2) {\n                int n1 = o1.length() - o2.length();\n                int n2 = o1.compareTo(o2);\n                return n1==0?n2:n1;\n            }\n        });\n\n\n        t.add(\"beijing:7\");\n        t.add(\"guangzhou:9\");\n        t.add(\"shanghai:8\");\n\n        System.out.println(t);\t// [beijing:7, shanghai:8, guangzhou:9]\n    }\n}\n\n```\n\n\n\n\n\n### 9.3 泛型\n\n注意：`6.4.2 `中也提到了泛型\n\n\n\n1.  泛型-定义：\n\n>   把`数据类型`当作`参数`,且`传入`的数据类型必须是`引用类型`【`基本类型` 必须使用 其`包装类 `作为参数】\n>\n>   例如：\n>\n>    `ArrayList<Integer> arr = new ArrayList< >( );`\n\n\n\n2.  常见形式：\n\n>   -   泛型类\n>   -   泛型接口\n>   -   泛型方法\n\n\n\n\n\n3.  语法：`<T,… >`  ，其中的 T可以换成`E,K,V`\n\n\n\n\n\n4.  好处：\n\n>   -   提高代码复用性\n>   -   提高代码安全性，防止 类型转化异常\n\n\n\n\n\n5.  泛型在集合框架中的应用：\n\n>   可以指定某个集合只能传入某个类型的数据。\n>\n>   【不指定`泛型`，`默认`传入`Object类型`，因此需 `强制转化`类型】\n\n\n\n\n\n#### 9.3.1 泛型类：\n\n```java\n/*\n*\t泛型类的语法： 类名<T>{ }\n*\t\t1. T为数据类型的 占位符，可以有多个，每个占位符之间用逗号隔开\n*\t\t2. T可以用来 声明 变量\n*\t\t3. T可以用来 作为 参数\n*\t\t4. T可以用来 作为 返回值\n*\t\t5. 不能 使用T的构造方法：不能 new T()\n*\t\t6. 不同的泛型对象 不能 相互赋值\n*\n*/\n\n// 泛型类\n\tpublic class MyGeneral<T>{    \n\n            T t1; \n\n            public void show(T t1){\n                System.out.println(t1);\n            }\n\n            public T getT1(){\n                return t1;\n            }   \n    }\n\n// main\n\n        MyGeneral<String> m1 = new MyGeneral<>(\"张三\");\n        System.out.println( m1.getT1()); // 张三\n        m1.show(\"你好\");\t//你好\n        \n\n        MyGeneral<Integer> m2 = new MyGeneral<>(123);\n        System.out.println(m2.getT1()); // 123\n        m2.show(456); // 456\n\n\n\n```\n\n\n\n\n\n#### 9.3.2 泛型接口：\n\n```java\n/* \t泛型接口：\n*\t\t1. 不能创建 泛型常量\n*/\n\n\n\n// 泛型接口\n        public interface myInt<T>{\n            T show(T t1);\n        }\n\n\n\n\n\n        // 1. 泛型接口-实现类【在实现接口时，确定要传入的类型】\n                public class myIntClass implements myInt<String>{\n                    @Override\n                    public String show(String t1) {\n                        System.out.println(t1);\n                        return t1;\n                    }\n                }\n        // main\n                myIntClass myInt_1 = new myIntClass();\n                myInt_1.show(\"你好\");\t// 你好\n\n\n\n\n\n\n\n        // 2. 泛型接口-实现类【在创建对象时，确定要传入的类型】\n                public class myIntClass2<T> implements myInt<T>{\n                    @Override\n                    public T show(T t1) {\n                        System.out.println(t1);\n                        return t1;\n                    }\n                }\n\n\n        // main\n                myIntClass2<Integer> myInt_2 = new myIntClass2<>();\n                myInt_2.show(123);\t// 123\n```\n\n\n\n\n\n\n\n#### 9.3.3 泛型方法：\n\n```java\n/*\n*\n*\n*\n*\n*\n*\n*\n*/\n\n\npublic class myGer{\n    \n // 泛型方法：   \n    public <T> void show(T t1){\n        System.out.println(\"这是泛型方法:\" + t1);\n    }\n    \n}\n\n\n// 泛型方法 T由 传入的数据的类型 来决定\n        myGer ger = new myGer();\n        ger.show(123);\t\t//这是泛型方法:123\n        ger.show(\"你好\");\t\t//这是泛型方法:你好\n\n```\n\n\n\n\n\n\n\n\n\n### 9.4 Map 集合：\n\n\n\n![Map集合](https://z3.ax1x.com/2021/05/24/gjdYbF.png)\n\n\n\n\n\n1.  特点：\n\n>   -   用于存储 `无序、无下标`的`键值对`\n>   -   键：无序、无下标、不重复\n>   -   值：无序、无下标、可重复\n\n\n\n```java\n/*\n*\tMap:\n*\t\tentrySet();\n*\t\tput(key,value);\n*\t\tget(key);\n*\t\tkeySet();\n*\t\tvalues();\n*/\n\n\n\n        Map<String,String> m = new HashMap<>();\n\n// 添加\n        m.put(\"a\",\"a->10\");\n        m.put(\"b\",\"b->20\");\n        m.put(\"c\",\"c->30\");\n\n        System.out.println(m);\n\n\n// 删除\n\t\tm.remove(\"c\");\n        System.out.println(m);\n\n\n// 遍历-【keySet】\n\t    Set<String> keyset = m.keySet();\n\n        for (String k : keyset) {\n            System.out.println(k+\"---\"m.get(k));\n        }\n\n\n// 遍历-【entrySet】\n\t\tSet<Map.Entry<String,String>>  entries = m.entrySet();\n\n        for (Map.Entry<String,String> item: entries ) {\n            \n            System.out.println(item.getKey()+\"---\"+item.getValue());\n        }\n\n```\n\n\n\n\n\n#### 9.4.1 HashMap\n\n默认容量：16。\n\n75%时，开始扩容。\n\n数组长度>8 且 链表长度>64时，使用红黑树。\n\n\n\n`为实现每一项的键和值都不一样，需要重写 hashcode()、equals() 【可使用IED的快捷键】`\n\n\n\nHashMap源码分析-小结：\n\n>   -   HashMap 刚创建时，table为null【为节省空间】，当添加第一个元素时，table的容量为16。\n>   -   元素个数大于阈值（容量的75%)时，会进行扩容为原来的2倍，目的是减少需要调整的元素个数。\n>   -   JDK1.8 ，当每个链表长度 大于8，元素个数 大于等于64时，调整为红黑树，目的是提高元素的效率。\n>   -   JDK1.8 ，当每个链表长度 小于6时，使用链表。\n>   -   JDK1.8以前，使用头插法；JDK1.8以后，使用尾插法。\n\n\n\n案例：\n\n统计字符串中每个字符的出现次数\n\n```java\nimport java.util.HashMap;\nimport java.util.Scanner;\n\n\npublic class Demo {\n    public static void main(String[] args){\n\n        Scanner sc = new Scanner(System.in);\n\n        String s = sc.nextLine();\n\n        HashMap<Character,Integer> hm = new HashMap<>();\n        \n        char[] arr = s.toCharArray();\n\n        for (char item: arr) {\n// hashmap中如果有该字符，则更新value\n// 没有该字符，则直接插入当前字符的键值对            \n            if(hm.containsKey(item)){\n                int t = hm.get(item);\n                hm.put(item,++t);\n            }else{\n                hm.put(item,1);\n            }\n        }\n\n\n\n        System.out.println(\"现在的字符串：\"+s);\n        System.out.println(\"现在的HashMap：\"+hm);\n\n    }\n}\n\n```\n\n\n\n\n\n\n\n\n\n\n\n#### 9.4.2 TreeMap\n\n存储：红黑树\n\n对 key 自动排序\n\n```java\n/*\n*\n*\t注意：参数类Student 必须 implents Comparable接口\n*\t\n*     put()\n*\t  remove()\n\n遍历：\n\t1. keySet();\n\t2. Entry\n*/     \n\n\t\tStudent s1 = new Student(\"张1\", 10);\n        Student s2 = new Student(\"张2\", 20);\n        Student s3 = new Student(\"张3\", 30);\n\n        TreeMap<Student, String> tm = new TreeMap<>();\n        tm.put(s1, \"1\");\n        tm.put(s2, \"2\");\n        tm.put(s3, \"3\");\n        System.out.println(tm);\n\n\n// 遍历-1\n        Set<Student> set = tm.keySet();\n        for (Student k:set ) {\n            System.out.println(k+\"---\"+tm.get(k));            \n        }\n\n\n// 遍历-2\n\n  \t\tMap.Entry<Student,String>> entries = tm.entrySet();\n\n        for (Map.Entry<Student,String> item: entries)\n        {\n            System.out.println(item.getKey()+\"---\"+item.getValue());\n        }\n```\n\n\n\n\n\n\n\n### 9.5 Collections 工具类：\n\n\n\n**方法**：\n\n-   `public static void reverse(List<?> list)`//反转集合中元素的顺序\n-   `public static void shuffle(List<?> list)`//随机重置集合元素的顺序\n-   `public static void sort(List<T> list)`//升序排序（元素类型必须实现Comparable接口）\n\n\n\n```java\n      \t\n\t\tArrayList<Integer> arr = new ArrayList<>();\n        arr.add(10);\n        arr.add(20);\n        arr.add(30);\n        arr.add(40);\n\n        System.out.println(arr);\n\n// 打乱顺序\n        Collections.shuffle(arr);        \n        System.out.println(arr);\n\n//排序\n    \tCollections.sort(arr);\n        System.out.println(arr);\n\n// 二分查找\n        System.out.println( Collections.binarySearch(arr,20) );\n\n//反转\n    \tCollections.reverse(arr);\n        System.out.println(arr);\n\n```\n\n\n\n\n\n\n\n\n\n## 10. 多线程\n\n-   [狂神说Java多线程详解](https://www.bilibili.com/video/BV1V4411p7EF?)\n-   [赵姗姗-b站-多线程](https://www.bilibili.com/video/BV1cb4y1X7kz?p=115)\n-   [Java多线程详解](https://www.cnblogs.com/13roky/p/14707360.html#1-基本概念)\n\n\n\n\n\n1.   并发 与 并行：\n\n>   -   并发：在一段**时间段**内执行多个程序\n>\n>   -   并行：在一个**时间点**执行多个程序\n\n\n\n2.   进程 和 线程 ：\n\n>   进程：1个正在运行的程序【资源分配的基本单位】\n>   线程：1个进程通常由多个线程组成（最少有1个main线程)【资源调度的基本单位】\n>\n>    \n>\n>   **多线程的好处** ：效率高，多个线程之间互不影响\n\n\n\n3.   线程的调度：\n\n>   -   分时调度：所有线程轮流使用CPU\n>   -   抢占调度：让`优先级`高的线程先使用CPU，如果优先级一样，则随机选一个【`Java使用: 抢占调度`】\n\n\n\n4.  主线程：\n\n>   -   主线程：执行 main 方法的线程\n>   -   单线程程序：java默认情况只有1个线程=》main线程\n>   -   JVM 的 main方法进栈 并 执行main 方法 =》产生1条进栈的路（main线程）\n\n\n\n\n\n5.  最常见的线程操作：\n\n>   -   设置线程名：setName( )\n>\n>   -   获取线程名：getName( )\n>   -   获取当前线程：Thread.currentThread( )\n\n\n\n### 10.1 多线程的实现：\n\n\n\n\n\n#### 10.1.1 方式1【继承Thread类-重点】\n\n步骤：\n\n-   `继承Thread类`【java.lang.Thread类】形成子类。\n-   override `重写 `Thread类的 `run 方法`【线程要干什么】。\n-   main中 `new 1个 线程对象`。\n-   `线程对象.start( ) `【启动线程】，JVM会自动调用 run( )来执行任务。\n-   最终：main线程 和 新的线程 并发执行。\n\n\n\n**注意：**\n\n-   多次重复启动1个 线程是非法的。【尤其是在 该线程已经 执行完毕后】\n-   java 是执行线程是` 抢占式`，线程的`优先级越高`，越`优先执行`。\n\n\n\n```java\npackage ThreadsDemo;\n\n// 1. 继承Thread类\npublic class TestThread extends Thread{\n\n// 2. 重写 run()方法\n    @Override\n    public void run() {\n\n        for (int i = 0; i < 1000; i++) {\n            System.out.println(\"多线程执行-\"+i);\n        }\n\n    }\n\n// 3. main 函数中 new 线程对象，调用 start()\n    public static void main(String[] args) {\n\n        Thread th1 = new TestThread();\n\n        th1.start();\n\n\n        for (int i = 0; i <1000 ; i++) {\n            System.out.println(\"main线程执行~~\");\n        }\n    }\n\n}\n\n```\n\n\n\n\n\n##### 案例1-多线程下载图片：\n\n-   前提：\n\n    -   下载、导入jar包： commons-io.jar包 \n\n    >   导入Jar包的步骤：\n    >\n    >   1.  新建 lib文件夹\n    >   2.  将 jar包 托入lib文件夹\n    >   3.  打开 file -> project Structure -> lib -> 点击 “+” -> 应用\n\n    -   导入该案例所需的工具类：\n        -    `import org.apache.commons.io.FileUtils;`\n        -   `import java.net.URL;`  \n        -    `import java.io.File;`\n        -   `import java.io.IOException;`\n\n```java\n/*\n*\t1. 类： \n\t\t\tWebDownLoader类，TestThread2类\n*\n*\t\n*/\n\n\nimport java.io.IOException;\nimport java.net.URL;\nimport java.io.File;\nimport org.apache.commons.io.FileUtils;\n\n\n// 下载器类\n        class WebDownLoader{\n\n            public void download(String url,String name){\n                try {\n                    FileUtils.copyURLToFile(new URL(url),new File(name));\n                } catch (IOException e) {\n                    e.printStackTrace();\n                    System.out.println(\"IO异常-在 download 方法中\");\n                }\n            }\n        }\n\n\n\n// 多线程-下载图片\n    public class TestThread2 extends Thread {\n        private String url;\n        private String name;\n\n        public TestThread2(String url, String name) {\n            this.url = url;\n            this.name = name;\n        }\n\n// 重写线程类的 run方法        \n        @Override\n        public void run() {\n\n            WebDownLoader wd = new WebDownLoader();\n            wd.download(this.url,this.name);\n            System.out.println(\"下载的文件名为：\"+this.name);\n        }\n        \n// main方法\n        public static void main(String[] args) {\n            \n            String base_url=\"https://t7.baidu.com/it/u=\";\n            \n            TestThread2 downTh1 = new TestThread2(base_url+\"1595072465,3644073269&fm=193&f=GIF\",\"图片-1.jpg\");\n            TestThread2 downTh2 = new TestThread2(base_url+\"825057118,3516313570&fm=193&f=GIF\",\"图片-2.jpg\");\n            TestThread2 downTh3 = new TestThread2(base_url+\"3435942975,1552946865&fm=193&f=GIF\",\"图片-3.jpg\");\n \n// 开启多线程，进行下载            \n            downTh1.start();\n            downTh2.start();\n            downTh3.start();\n        }\n    }\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n#### 10.1.2 方式2【实现Runnable接口-重点-推荐】\n\n`推荐使用`\n\n步骤：\n\n-   实现Runnable接口，重写run( )方法\n-   在main方法中，new 1个 实现类【`实现类 就是多线程要抢的 资源`】\n-   将 实现类的对象 作为参数，传入 new Thread( ) 构造方法中\n-   线程类.start( )来自动执行run( )\n\n```java\npackage ThreadsDemo;\n\n// 重写 实现类的 run方法\n   \t public class TestThread3 implements Runnable{\n\n            @Override\n            public void run() {\n                System.out.println(\"我是多线程\");\n            }\n\n// main函数\n            public static void main(String[] args) {\n              // 创建实现类的对象\n                TestThread3 tt3 = new TestThread3();\n              // 将实现类的对象 传入 Thread类的构造方法中\n                Thread th1 = new Thread(tt3);\n\n              // 开启线程  \n                th1.start();\n            }\n    }\n\n```\n\n\n\n#####  案例2-下载图片\n\n```java\npackage ThreadsDemo;\n\nimport org.apache.commons.io.FileUtils;\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URL;\n\n// 下载器\n    class WebDownLoader2{\n\n\n        public void download(String url,String name){\n            try {\n                FileUtils.copyURLToFile(new URL(url),new File(name));\n\n            } catch (IOException e) {\n                e.printStackTrace();\n                System.out.println(\"download方法-> IO异常\");\n            }\n\n        }\n    }\n\n// 多线程\n    public class TestThread4 implements Runnable{\n\n        private String url;\n        private String name;\n\n        public TestThread4(String url, String name) {\n            this.url = url;\n            this.name = name;\n        }\n\n        @Override\n        public void run() {\n\n            WebDownLoader2 wd2 = new WebDownLoader2();\n            wd2.download(this.url,this.name);\n            System.out.println(\"当前正在下载：\"+this.name);\n\n        }\n\n        public static void main(String[] args) {\n\n            String url_1 = \"https://t7.baidu.com/it/u=3779234486,1094031034&fm=193&f=GIF\";\n            String url_2 = \"https://t7.baidu.com/it/u=3908717,2002330211&fm=193&f=GIF\";\n            String url_3 =\"https://t7.baidu.com/it/u=3785402047,1898752523&fm=193&f=GIF\";\n\n            TestThread4 tt1 = new TestThread4(url_1,\"1.jpg\");\n            TestThread4 tt2 = new TestThread4(url_2,\"2.jpg\");\n            TestThread4 tt3 = new TestThread4(url_3,\"3.jpg\");\n\n            new Thread(tt1).start();\n            new Thread(tt2).start();\n            new Thread(tt3).start();\n            \n        }\n    }\n\n\n\n\n```\n\n\n\n\n\n##### 案例3-模拟抢票：\n\n```java\npackage ThreadsDemo;\n\n// 多线程操作同一对象时，出现线程不安全，数据紊乱【重复 抢到 同一张票】\n\n// 票-类\npublic class TestThread5 implements Runnable{\n\n    static int ticketNum=10;\n// 重写run方法\n    @Override\n    public void run() {\n        while(true){\n            if(ticketNum<=0)break;\n            System.out.println(Thread.currentThread().getName()+\" => 拿到了第\"+(ticketNum--)+\"张票\");\n            try {\n                Thread.sleep(200);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n// main方法\n    public static void main(String[] args) {\n        TestThread5 t1 = new TestThread5();\n        TestThread5 t2 = new TestThread5();\n        TestThread5 t3 = new TestThread5();\n\n        new Thread(t1,\"小虹\").start();\n        new Thread(t2,\"小白\").start();\n        new Thread(t3,\"小黄\").start();\n\n    }\n}\n\n```\n\n\n\n##### 案例4-龟兔赛跑：\n\n```java\npackage ThreadsDemo;\n\n// 多线程案例：龟兔赛跑\n// \"实现类\" =》跑道 =》资源\npublic class RaceDemo {\n    public static void main(String[] args) {\n        Race race = new Race();\n        new Thread(race,\"兔子\").start();\n        new Thread(race,\"乌龟\").start();\n    }\n}\n\nclass Race implements Runnable{\n    private static String winner;\n// 重写run方法\n    @Override\n    public void run() {\n\n        for (int i = 1; i <=100; i++) {\n\n            if(Thread.currentThread().getName().equals(\"兔子\") && i%10==0){\n                try {\n                    Thread.sleep(1);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n\n\n            boolean flag = isFinished(i);\n\n            if(flag)break;\n\n            System.out.println(Thread.currentThread().getName()+\"-> 跑了\"+i+\"步\");\n\n            isFinished(i);\n\n        }\n    }\n// 判断是否完成\n    public boolean isFinished(int steps){\n        if(winner != null){\n            return true;\n        }else {\n            if(steps >= 100){\n                winner = Thread.currentThread().getName();\n                System.out.println(\"胜利者：\"+winner);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n```\n\n\n\n\n\n#### 10.1.3 方式3【实现Callable接口-了解】\n\n\n\n好处：\n\n>   -   可以 `抛出异常`\n>\n>   -   可以 有`返回值`\n\n\n\n\n\n步骤：\n\n-   实现 Callcable接口\n-   重写 call( )方法\n-   创建目标对象：\n-   创建执行服务：`  ExecutorService es = Executors.newFixedThreadPool(2);`\n-   提交执行：  `Future<Boolean> res1 = es.submit(tc1);`\n-   获取结果：` boolean r1 = res1.get();`\n-   关闭服务：`  es.shutdownNow();`\n\n\n\n\n\n\n\n##### 案例5：下载图片\n\n```java\npackage ThreadsDemo;\n\nimport org.apache.commons.io.FileUtils;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.concurrent.*;\n\n// 下载器类\n        class webImageDownLoader{\n\n\n            public void download(String url,String name){\n                try {\n                    FileUtils.copyURLToFile(new URL(url),new File(name));\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n\n                System.out.println(\"下载的文件名为 \"+name);\n            }\n        }\n\n        public class TestCallable implements Callable {\n            private String url;\n            private String name;\n\n\n            public TestCallable(String url, String name) {\n                this.url = url;\n                this.name = name;\n            }\n// 重写call()\n            @Override\n            public Boolean call() throws Exception {\n\n                webImageDownLoader wid = new webImageDownLoader();\n                wid.download(this.url,this.name);\n                return true;\n            }\n\n// main函数\n            public static void main(String[] args) {\n                TestCallable tc1 = new TestCallable(\"https://t7.baidu.com/it/u=1595072465,3644073269&fm=193&f=GIF\",\"图片-1.jpg\");\n                TestCallable tc2 = new TestCallable(\"https://t7.baidu.com/it/u=825057118,3516313570&fm=193&f=GIF\",\"图片-2.jpg\");\n\n                // 创建执行服务\n                ExecutorService es = Executors.newFixedThreadPool(2);\n\n                // 提交执行操作\n                Future<Boolean> res1 = es.submit(tc1);\n                Future<Boolean> res2 = es.submit(tc2);\n\n                try {\n                    // 获取执行结果\n                    boolean r1 = res1.get();\n                    boolean r2 = res1.get();\n\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                } catch (ExecutionException e) {\n                    e.printStackTrace();\n                }\n\n\n                // 关闭执行服务\n                es.shutdownNow();\n            }\n        }\n\n\n\n\n\n```\n\n\n\n\n\n### 10.2 静态代理\n\n多线程的原理 就利用了 静态代理。\n\n```java\n/*\n*\t静态代理：\n*\t\t1.真实对象、代理对象，都要实现 同一个方法\n*\t\t2. 好处：代理对象可以做很多招生对象做不了的事。\n*\n*\n*/\n\npublic class StaticProxy {\n\n    public static void main(String[] args) {\n        WeddingCompany weddingCompany = new WeddingCompany(new You());\n        weddingCompany.HappyMarry();\n    }\n}\n\n// 接口\ninterface Marry{\n    void HappyMarry();\n}\n\n// 结婚者【代理对象】\nclass You implements Marry{\n\n    @Override\n    public void HappyMarry() {\n        System.out.println(\"我结婚了，你哼开心~~\");\n    }\n}\n\n// 婚庆公司【真实对象】\nclass WeddingCompany implements Marry{\n\n    private Marry target;\n\n    public WeddingCompany(Marry target) {\n        this.target = target;\n    }\n    \n     private void before(){\n        System.out.println(\"布置\");\n    }\n\n    private void after(){\n        System.out.println(\"收钱\");\n    }\n// 重写接口的方法\n    @Override\n    public void HappyMarry() {\n        this.before();\n        this.target.HappyMarry();\n        this.after();\n    }\n    \n   \n}\n\n```\n\n\n\n\n\n\n\n### 10.3 Lambda 表达式：\n\nLambda表达式，，是函数式编程，它可以作为**匿名内部类**的替代品。\n\n\n\n函数式接口：\n\n>   一个接口，如果`只有1个抽象方法`，则为 `函数式接口` 。【接口只有1个方法】\n\n\n\n类似：`        new Thread( ()-> System.out.println(\"多线程的学习\")).start();`\n\n\n\n格式：【函数式接口 =》需要保证：接口中只有1个抽象方法】\n\n-   `(参数)-> {表达式1;表达式2;};`\n\n```java\n@FunctionalInterface\npublic interface myInt{\n    public abstract void Eat();\n    //...其他内容\n}\n```\n\n\n\n步骤：\n\n>   -   定义1个只有1个方法的接口\n>   -   使用lambda实现方法并创建对象\n>   -   调用方法\n\n函数式接口 =》作为方法的`参数 和 返回值类型`。\n\n```java\nclass Demo{\n    public static void show(myInt a){\n        a.Eat();\n    }\n     public static void main(String[] args){\n       // 方式1：传入接口的实现类  \n          this.show(new myIntImpCls());\n         \n       // 方式2：传入接口  \n         this.show(new myIntInmp(){\n             // 重写接口的方法\n         });\n         \n      // 方式3：传入Lambda \n         this.show(()->{System.out.println(\"你好\");});\n    }\n    \n}\n```\n\n\n\n\n\n##### 案例6：\n\n-   优化前\n\n```java\n\n    interface Ilike{\n        void lambda(); \n    }\n\n    class Like implements Ilike{\n        @Override\n        public void lambda() {\n            System.out.println(\"我喜欢lambda \");\n        }\n    }\n\n\npublic class Demo {\n    public static void main(String[] args) {\n// 优化前        \n       Ilike a = new Like();\n       a.lambda();\n        \n    }\n}\n\n\n\n```\n\n\n\n-   优化后\n\n```java\n\ninterface Ilike{\n    void lambda(); \n}\n\nclass Like implements Ilike{\n    @Override\n    public void lambda() {\n        System.out.println(\"我喜欢lambda \");\n    }\n}\n\n\tpublic class Demo { \n        public static void main(String[] args) {\n    \n// 普通 \n           Ilike a = new Like();\n           a.lambda();\n       \n//静态内部类\n           Like2 b = new Like2();\n           b.lambda();\n\n//局部内部类\n            class Like3 implements Ilike{\n                @Override\n                public void lambda() {\n                    System.out.println(\"我喜欢lambda \");\n                }\n            }       \n            Like3 c = new Like3();\n            c.lambda();\n        \n        \n// 匿名内部类\n            Ilike d = new Ilike() {\n                @Override\n                public void lambda() {\n\n                }\n            };        \n            d.lambda();\n        \n// lambda\n            Ilike e = ( )->{\n                System.out.println(\"I like lambda\");\n            };\n            e.lambda();\n\n        }\n    }\n\n\n```\n\n\n\n\n\n##### lambda表达式的简化：\n\n```java\npackage LandaDemo;\n\n\n\ninterface Ilike{\n    void lambda(int i);\n}\n\npublic class Demo {\n\n    public static void main(String[] args) {\n\n\n// 普通 lambda\n       Ilike a = (int i)->{\n           System.out.println(\"lambda: \"+i);\n           System.out.println(\"lambda: \"+i);\n       };\n\n       a.lambda(123);\n\n        \n        \n        \n// 简化参数 lambda\n        Ilike b = (i)->{\n            System.out.println(\"lambda: \"+i);\n            System.out.println(\"lambda: \"+i);\n        };\n\n        b.lambda(123);\n\n        \n        \n        \n// 简化括号 lambda【多个参数必须有小括号】\n        Ilike c = i->{\n            System.out.println(\"lambda: \"+i);\n            System.out.println(\"lambda: \"+i);\n        };\n\n        c.lambda(123);\n\n        \n        \n        \n// 简化括号 lambda【只适合一行代码的情况下使用】\n        Ilike d = i->System.out.println(\"lambda: \"+i);\n\n        d.lambda(123);\n        \n\n    }\n}\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### 10.4 线程的生命周期：\n\n`java.lang.Thread.State`\n\n-   新生：new Thread( )\n-   就绪：线程调用 start( ) 后进入 该状态。【还没 轮到 该线程 使用cpu】\n-   运行：线程自动调用run(  )后进入 该状态\n-   阻塞：等待\n-   消亡：程序正常结束、出现异常、手动 调用已被废弃不用的stop( )\n\n\n\n![](https://www.runoob.com/wp-content/uploads/2014/01/java-thread.jpg)\n\n\n\n\n\n![多线程-状态](https://z3.ax1x.com/2021/05/24/gvPy6S.png)\n\n\n\n\n\n#### 10.4.1 线程常用方法：\n\n>   -   start( )：开启线程，自动调用线程中的 run( )\n>   -   run( )：继承自Runnable接口的方法，必须在线程中 覆盖重写。\n>   -   join( )：先start( )，再join( )。一旦 join( )，优先执行完后，才轮到别的线程执行。 【插队、阻塞】\n>   -   currentThread( )：获取当前正在运行的线程。\n>   -   getName( )：获取线程名\n>   -   setName( 线程名 )：设置线程名\n>   -   setPriority( 优先级 )：设置线程的 优先级，传入1~10，默认5。值越大，越可能被调用。\n>   -   sleep(  毫秒数 )：阻塞\n>   -   setDaemon( true )：将子线程 设置为 主线程的伴随线程。主线程停止时，子线程继续执行一段时间后也停止。【先设置，再start( )】\n>   -   wait(毫秒数 )：阻塞，【老板等顾客】，毫秒数过后仍然没有线程调用锁对象的notify( )，则自动唤醒。\n>   -   notify( )：唤醒，【包子做好给顾客】\n\n\n\n几个方法的使用顺序：\n\n>   -   setDaemon( true )\n>   -   start( )\n>   -   join( )\n\n\n\n\n\n#### 10.4.2 线程优先级：\n\n>   -   优先级：1~10，默认优先级为 5\n>   -   优先级 相同时，按时间片，先到先得\n>   -   优先级越高，线程 被CPU先调用 的机率更高\n>   -   join( )可以无视优先级，直接插队【先start( )，再join( )】\n\n\n\n\n\n### 10.5 线程的同步：\n\n\n\n-   多线程 产生的问题：\n\n>   多个线程抢夺到同一个资源\n>\n>   如：买票时，买到同一张票。\n\n\n\n-   解决多线程安全问题：\n\n>   加 “锁”【同步、同步监视器】\n\n\n\n\n\n三种方式：\n\n#### 10.5.1 同步代码块\n\n\n\n```java\n// 线程类\nclass TestThread implements Runnable{\n    @Override\n    public void run() {\n        \n        for (int i = 0; i <10 ; i++) {\n\n// 同步代码块-形式1           \n            synchronized (this){\t\n                // 这里的this就是要锁住的对象，锁 多了会降低效率。\n                // 如果是实现Runnable接口的线程，由于只需new一个线程对象，并将该对象传入多个Thread(),\n                // \t\t因此,锁住的是同一个对象。\n                // 但如果是继承Thread类的多线程，由于new了多个线程对象，因此锁住的不是同一个对象，\n                // \t\t因此,锁没有真的生效。\n                // 综上，锁对象 必须要是同一个对象。\n                System.out.println(Thread.currentThread().getName());\n            }\n            \n            \n// 同步代码块-形式2 \n            static Object obj = new Object();\n            \n             synchronized (obj){              \n                System.out.println(Thread.currentThread().getName());\n            }\n            \n            \n            \n// 同步代码块-形式3 【推荐】\n           // 将 线程类的字节码 作为 锁对象。\n             synchronized (TestThread.class){              \n                System.out.println(Thread.currentThread().getName());\n            }            \n            \n        }\n    }\n}\n```\n\n\n\n小结：\n\n>   -   语法：`synchronized( 锁对象){ 语句 }`\n>   -   锁对象【同步监视器】 必须是 `引用类型`，且最好使用`final 修饰`。\n>   -   不要 将String、包装类Interger 作为锁\n>   -   在同步代码块中，`不应该 改变锁对象`的引用。\n>   -   可以使用一个`static类型的无确切的含义的对象`来充当 `锁对象`【同步监视器】\n\n\n\n执行过程：\n\n>   -   线程A来到同步代码块，发现“ 锁”处于open状态，于是进入，并close“锁”\n>   -   线程B来到同步代码块，CPU资源切换到线程B，但B发现 “锁” close，于是阻塞。\n>   -   线程A 继续接管CPU资源，执行同步代码块的内容，执行完毕后，open“锁”\n>\n>   \n>\n>   **小结：**\n>\n>   -   同步代码块中，可以切换CPU资源，但不能执行同步代码块的内容，因为“锁”，仍处于close状态。\n\n\n\n\n\n#### 10.5.2 同步方法\n\n```java\nclass TestThread implements Runnable{\n    \n// 同步方法  \n    private static synchronized void sayWhoAmI(){\n        \n        System.out.println(Thread.currentThread().getName());\n        \n    }\n    \n    @Override\n    public void run() {\n        \n        for (int i = 0; i <10 ; i++) {\n// 调用            \n            sayWhoAmI();\n            \n        }\n    }\n    \n   \n}\n```\n\n\n\n\n\n#### 10.5.3 Lock锁\n\n\n\n`import java.util.concurrent.locks.Lock;`\n\n-   在类的成员位置：Lock lock1 = new ReentrantLock( )\n-   在线程问题的语句前【try-catch内】：lock1.lock( )\n-   语句块\n-   在线程问题的语句后【finally语句块中】：lock1.unlock( )\n\n```java\nclass TestThread implements Runnable{\n\n// 锁对象    \n    Lock lock1 = new ReentrantLock();\n\n    @Override\n    public void run() {\n\n        for (int i = 0; i <10 ; i++) {\n// 加锁\n            lock1.lock();\n\n            try {\n// 处理                \n                System.out.println(Thread.currentThread().getName());\n            } catch (Exception e) {\n                e.printStackTrace();\n            }finally {   \n// 解锁                \n                lock1.unlock();\n            }\n\n        }\n    }  \n}\n\n```\n\n\n\n小结：\n\n>   Lock的优点：\n>\n>   -   Lock效率更高\n>   -   可由用户控制，而之前的synchronzied由JVM控制\n>   -   扩展性好，Lock是一个接口，有多个实现类\n>\n>    \n>\n>   使用优先级：\n>\n>   -   Lock【推荐】 -> 同步代码块 -> 同步方法\n\n\n\n线程安全性问题：\n\n>   可能导致`死锁` =》 `尽可能不`使用 同步资源的`嵌套`\n\n\n\n\n\n\n\n### 10.6 线程通信问题：\n\n\n\n#### 10.6.1生产者与消费者问题\n\n经典问题：\n\n-   [生产者与消费者问题-视频1：](https://www.bilibili.com/video/BV1op4y1S7KK?from=search&seid=13986664181595566652)\n-   [生产者与消费者问题-视频2](https://www.bilibili.com/video/BV1Lb411z71t/?spm_id_from=trigger_reload)\n\n>   生产者：生产商品，放入仓库\n>\n>   消费者：消费商品，取出仓库 \n>\n>    \n>\n>   以上两个线程共享资源【仓库】，但每个线程 执行的操作不同，需要线程之间的通信，来同步仓库中的商品数。\n\n代码分析：\n\n-   生产者：\n-   消费者：\n-   商品：品牌、名字\n\n![多线程-生产者和消费者](https://z3.ax1x.com/2021/05/24/gx9XeH.png)\n\n\n\n#### 10.6.2 解决线程通信问题：\n\n例子：\n\n>   生产者：包子铺老板。\n>\n>   消费者：顾客\n>\n>    \n>\n>   顾客：告诉老板 购买的包子数，顾客调用`wait( )`，放弃CPU执行，进入`waiting无限等待`状态\n>\n>   老板：花5s做包子，调用`notify( )`，告知唤醒 顾客来拿包子。\n>\n>   **注意：**\n>\n>   -   老板、顾客都要使用 `同步代码块` 包裹。\n>   -   同步代码块的`锁对象`必须`唯一`。\n>   -   只有`锁对象`才能调用` wait( )`，和`notify( )`。\n\n综上：\n\n-   吃、做包子【包子和包子铺互斥，因此包子为 锁对象】\n-   修改标志\n-   唤醒对方\n\n\n\n\n\n-   同步代码块\n\n```java\n/*\n*\t分别在生产者类、消费者类中使用同步代码块\n*\n*/\n\n\n\n// main方法\n    public class Demo2 {\n\n        public static void main(String[] args) {\n\n            Product p = new Product();\n\n            ProcuderThread pt = new ProcuderThread(p);\n\n            ClientThread ct =new ClientThread(p);\n\n            new Thread(pt).start();\n            new Thread(ct).start();\n        }\n    }\n\n// 产品\n    class Product{\n        private String brand;\n\n        private String name;\n\n        public String getBrand() {\n            return brand;\n        }\n\n        public void setBrand(String brand) {\n            this.brand = brand;\n        }\n\n        public String getName() {\n            return name;\n        }\n\n        public void setName(String name) {\n            this.name = name;\n        }\n\n        public Product() {\n        }\n\n        public Product(String brand, String name) {\n            this.brand = brand;\n            this.name = name;\n        }\n    }\n\n// 生产者\n    class ProcuderThread implements Runnable{\n        private Product p;\n\n        public ProcuderThread(Product p) {\n            this.p = p;\n        }\n\n        @Override\n        public void run() {\n            for (int i = 1; i <=10 ; i++) {\n\n                synchronized (p){\n\n                    if(i%2==0){\n                        // 生产巧克力\n                        this.p.setBrand(\"德芙\");\n                        try {\n                            Thread.sleep(100);\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                        this.p.setName(\"巧克力\");\n                    }else{\n                        // 生产啤酒\n                        this.p.setBrand(\"青岛\");\n                        try {\n                            Thread.sleep(100);\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                        this.p.setName(\"啤酒\");\n                    }\n\n\n                    System.out.println(\"生产者生产了：\"+this.p.getBrand()+\"--->\"\n                            +this.p.getName());\n\n                }\n\n            }\n        }\n    }\n\n//消费者\n    class ClientThread implements Runnable {\n        private Product p;\n\n        public ClientThread(Product p) {\n            this.p = p;\n        }\n\n        @Override\n        public void run() {\n            for (int i =1; i <=10 ; i++) {\n\n                synchronized (p){\n                    System.out.println(\"消费者消费了：\"+this.p.getBrand()+\"--->\"\n                            +this.p.getName());\n                }\n            }\n        }\n    }\n```\n\n\n\n\n\n-   同步方法\n\n```java\n/*\n*\t在产品类中使用同步代码块\n*\n*\n*/\n\npublic class Demo2 {\n\n    public static void main(String[] args) {\n\n        Product p = new Product();\n\n        ProcuderThread pt = new ProcuderThread(p);\n\n        ClientThread ct =new ClientThread(p);\n\n        new Thread(pt).start();\n        new Thread(ct).start();\n\n\n    }\n}\n\n// 产品\n    class Product{\n        private String brand;\n\n        private String name;\n\n        public String getBrand() {\n            return brand;\n        }\n\n        public void setBrand(String brand) {\n            this.brand = brand;\n        }\n\n        public String getName() {\n            return name;\n        }\n\n        public void setName(String name) {\n            this.name = name;\n        }\n\n        public Product() {\n        }\n\n        public Product(String brand, String name) {\n            this.brand = brand;\n            try {\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            this.name = name;\n\n            System.out.println();\n        }\n\n        public synchronized void setProduct(String brand, String name){\n            this.setBrand(brand);\n            try {\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            this.setName(name);\n\n            System.out.println(\"生产者生产了：\"+this.getBrand()+\"--->\"\n                    +this.getName());\n\n        }\n\n        public synchronized void getProduct(){\n\n            System.out.println(\"消费者消费了：\"+this.getBrand()+\"--->\"\n                    +this.getName());\n\n        }\n    }\n// 生产者\n    class ProcuderThread implements Runnable{\n        private Product p;\n\n        public ProcuderThread(Product p) {\n            this.p = p;\n        }\n\n        @Override\n        public void run() {\n            for (int i = 1; i <=10 ; i++) {\n\n                    if(i%2==0){\n                        p.setProduct(\"德芙\",\"巧克力\");\n                    }else{\n                        p.setProduct(\"青岛\",\"啤酒\");\n                    }\n\n                    System.out.println(\"生产者生产了：\"+this.p.getBrand()+\"--->\"\n                            +this.p.getName());\n\n            }\n        }\n    }\n\n// 消费者\n    class ClientThread implements Runnable {\n        private Product p;\n\n        public ClientThread(Product p) {\n            this.p = p;\n        }\n\n        @Override\n        public void run() {\n            for (int i =1; i <=10 ; i++) {\n\n                p.getProduct();\n            }\n        }\n    }\n\n```\n\n\n\n-   Lock锁\n\n\n\n\n\n\n\n\n\n\n\n\n\n### 10.7 线程池：\n\n\n\n>   -   第一次使用时，创建多个线程，存入集合中【集合中的线程可以复用】\n>   -   使用时，取出线程\n>   -   用完后，重写存入线程池\n>\n>   \n>\n>    \n>\n>   JDK1.5 之后，自带线程池，无需 用户 自己使用 集合 创建线程池。\n>\n>   -   `java.util.concurrent.Executors;` =》生产 线程池 的工厂类\n>   -   `ExecutorService newFixedThreadPool( 线程数 );` 生成线程池的方法\n>   -   `submit( 线程);`\n>   -   `shudown();`\n>\n>    \n>\n>   线程池的好处：\n>\n>   -   提高速度\n>   -   降低消耗\n\n\n\n\n\n```java\npackage ThreadPoolDemo;\n\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\n\n// 线程类\n    class TestThread implements Runnable{\n        @Override\n        public void run() {\n            System.out.println(\"这是:\"+Thread.currentThread().getName());\n        }\n    }\n\n// main方法\n    public class Demo {\n        public static void main(String[] args) {\n\n// 创建 1个可存放3个线程 的线程池\n            ExecutorService service = Executors.newFixedThreadPool(3);\n\n// 创建2个线程，并提交给 线程池\n            service.submit(new TestThread());\n            service.submit(new TestThread());\n\n            service.shutdownNow();\n\n        }\n    }\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 11. 网络编程\n\n整体过程：\n\n-   服务器：启动，监听端口\n-   客户端：主动连接 服务器\n\n\n\nJava中专门用于TCP通信的类：\n\n-   客户端：`java.net.Socket` ，创建对象，发起连接\n-   服务器：`java.net.ServerSocket`，创建对象，开启服务\n\n\n\n在TCP通信中，传输了`字节流对象`, 该流对象是`属于客户端`的流，服务器共用客户端的流。\n\n\n\nSocket：\n\n>   套接字，是 包含了 IP地址+端口号的网络单位。\n\n\n\nSocket的常用方法：\n\n>   构造方法：\n>\n>   -   客户端：`public Socket(String host目标主机, int port目标端口);`\n>   -   服务器：`public ServerSocket(int port);`\n>\n>    \n>\n>   客户端-成员方法：\n>\n>   -   `getInputStream();`  // 获取输入流\n>   -   `getOutputStream();` // 获取输出流\n>   -   `close()`  // 关闭套接字\n>\n>    \n>\n>   服务器-成员方法：\n>\n>   -   `accept()` // 获取客户端的Socket\n>   -   `getInputStream();` // 获取输入流\n>   -   `getOutputStream();` // 获取输出流\n>   -   `close()`  // 关闭套接字\n\n\n\n```java\n/*\n*\t步骤：【客户端】\n*\t\t1. 创建客户端Scocket，构造方法中传入IP、端口\n*\t\t2. 获取客户端的输出流 getOutputStream()\n*\t\t3. 输出流的 write()来向服务器发送数据\n*\t\t4. 获取客户端的输入流 getInputStream()\n*\t\t5. 输入流的 read()来读取数据\n*\t\t6. 释放资源 close()\n\n\n\n*\t步骤：【服务器】\n*\t\t1. 创建服务器Scocket对象，构造方法中传入端口\n*\t\t2. accept()获取客户端的Socket,\n*\t\t3. socket.getInputStream() 来获取输入流  =》 read()\n*\t\t4. socket.getOutputStream() 来获取输出流 =》 write()\n*\t\t6. 释放资源【客户端的Socket、服务器的Socket】 close()\n*\n\n\n\n*  注意：\n*\t\t1. 网络通信，必须使用Socket提供的流对象，不能使用自己创建的流。\n*\t\t2. Socket创建时，会向服务器发起请求，如果服务器未开启，则出现异常，否则可以正常通信。\n*/\n\n\n// 服务端：=======================================\n\n        package TCPDemo;\n\n        import java.io.IOException;\n        import java.io.InputStream;\n        import java.io.OutputStream;\n        import java.net.ServerSocket;\n        import java.net.Socket;\n        import java.nio.charset.StandardCharsets;\n\n        public class Demo2 {\n            public static void main(String[] args) throws IOException{               \n             \n                ServerSocket socketServer = new ServerSocket(8888);\n              \n                Socket client = socketServer.accept();\n                \n                InputStream is = client.getInputStream();\n\n                byte[] buffer = new byte[1024];\n                int len=is.read(buffer);\n\n                System.out.println(new String(buffer,0,len));\n\n\n                OutputStream os = client.getOutputStream();\n                os.write(\"收到，谢谢\".getBytes(StandardCharsets.UTF_8));\n\n\n                client.close();\n                socketServer.close();\n\n            }\n        }\n\n\n\n// 客户端：=======================================\n\n         package TCPDemo;\n\n        import java.io.IOException;\n        import java.io.InputStream;\n        import java.io.OutputStream;\n        import java.net.Socket;\n        import java.nio.charset.StandardCharsets;\n\n        public class Demo {\n            public static void main(String[] args)throws IOException {\n\n\n                Socket socketClient = new Socket(\"127.0.0.1\",8888);\n                \n                OutputStream o = socketClient.getOutputStream();\n                \n                o.write(\"你好，服务器\".getBytes(StandardCharsets.UTF_8));\n\n\n                InputStream is = socketClient.getInputStream();\n                \n                byte[] buffer = new byte[1024];\n                int len=is.read(buffer);\n                System.out.println(new String(buffer,0,len));\n\n\n                socketClient.close();\n\n\n            }\n        }\n\n\n```\n\n\n\n\n\n#### 案例1：文件上传、下载\n\n步骤：\n\n-   客户端：获取`本地上传的输入流`，使用`网络Socket输出流`上传文件。接收服务器的“上传成功”\n-   服务器：获取`网络Socket输入流`，使用`本地下载输出流`下载文件。给客户端发送“上传成功”。\n\n\n\n优化思路：将服务端的代码，放入Thread中，并开启多线程。\n\n```java\n// 服务端：=======================================\n\npackage TCPDemo;\n\nimport java.io.*;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Random;\n\npublic class FileUploadServer {\n    public static void main(String[] args)throws Exception{\n\n        ServerSocket server = new ServerSocket(8888);\n\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    // 死循环，让服务器一直监听客户端\n                    while(true){\n\n\n\n                        Socket client = server.accept();\n\n                        InputStream is = client.getInputStream();\n\n\n                        File file = new File(\"E:\\\\2-demo\");\n\n                        if(!file.exists()){\n                            file.mkdirs();\n\n                        }\n\n\n                        byte[] buffer = new byte[1024];\n\n                        int len = is.read(buffer);\n\n// 自定义文件的命名规则：域名+毫秒值+随机数\n                        String filename = \"\\\\txt-\"\n                                +System.currentTimeMillis()\n                                +new Random().nextInt(200)\n                                +\".txt\";\n\n\n                        FileOutputStream fos = new FileOutputStream(file+filename);\n\n                        fos.write(buffer);\n\n\n                        OutputStream os = client.getOutputStream();\n                        os.write(\"上传成功\".getBytes(StandardCharsets.UTF_8));\n\n\n                        fos.close();\n                        client.close();\n\n                    }\n\n                }catch (Exception e){\n                    e.printStackTrace();\n                }\n            }\n        }).start();\n\n    }\n}\n\n\n\n\n// 客户端：=======================================\n        package TCPDemo;\n\n        import java.io.FileInputStream;\n        import java.io.OutputStream;\n        import java.net.Socket;\n        import java.nio.charset.StandardCharsets;\n\n        public class FileUploadClient {\n            public static void main(String[] args) throws Exception{\n\n                FileInputStream fis = new FileInputStream(\"E:\\\\0-demo\\\\1.txt\");\n                \n                Socket client = new Socket(\"127.0.0.1\",8888);\n                \n                OutputStream os = client.getOutputStream();\n                \n                byte[] buffer = new byte[1024];\n                int len;\n                \n// 读取数据【可能死循环，因为读到文件结束符后，没有将结束符写入文件，因此read()阻塞，程序不结束】                \n                while((len=fis.read(buffer))!=-1){\n                     os.write(buffer,0,len);\n                }\n// 解决死循环问题                \n                client.shutdownOutput();\n                \n// 打印数据【可能死循环，因为读到文件结束符后，没有将结束符写入文件，因此read()阻塞，程序不结束】                      \n                InputStream is = client.getInputStream();\n                \n                while((len=is.read(buffer))!=-1){\n                    System.out.println(new String(buffer,0,len));\n                }\n\n                fis.close();\n                is.close();\n                os.close();\n                client.close();\n\n\n\n            }\n        }\n\n\n\n\n```\n\n\n\n\n\n#### 案例二：模拟 B/S进行通信\n\n```java\n// 服务端：Java\n// 客户端：浏览器\n\n\nimport java.io.*;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.nio.charset.StandardCharsets;\n\npublic class Demo {\n    public static void main(String[] args) throws Exception {\n\n        ServerSocket server = new ServerSocket(8888);\n\n        while (true) {\n\n            Socket clientSocket = server.accept();\n            new Thread(new Runnable() {\n                @Override\n                public void run() {\n\n                    try {\n\n\n                        InputStream is = clientSocket.getInputStream();\n\n                        BufferedReader br = new BufferedReader(new InputStreamReader(is));\n\n                        // http请求的第一行\n                        String line = br.readLine();\n                        String[] arr = line.split(\" \");\n                        String htmlpath = arr[1].substring(1);\n\n                        FileInputStream fis = new FileInputStream(htmlpath);\n                        OutputStream os = clientSocket.getOutputStream();\n\n                        //固定写法\n                        os.write(\"HTTP/1.1 200 OK\\r\\n\".getBytes());\n                        os.write(\"Content-Type:text/html\\r\\n\".getBytes());\n                        os.write(\"\\r\\n\".getBytes());\n\n\n                        // 在浏览器输出页面\n                        byte[] buff = new byte[1024];\n                        int len = 0;\n                        while ((len = fis.read(buff)) != -1) {\n                            os.write(buff, 0, len);\n                        }\n\n\n                        fis.close();\n                        br.close();\n                        clientSocket.close();\n\n\n                    } catch (Exception e) {\n                        e.printStackTrace();\n                    }\n\n                }\n            }).start();\n\n        }\n\n    }\n}\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 12. Junit单元测试\n\n\n\n![测试-分类](https://z3.ax1x.com/2021/05/27/2CT5h8.png)\n\nJunit：\n\n>   一种白盒测试工具。\n\n\n\n#### 12.1 Junit的使用：【@Test】\n\n```java\n/*\t步骤：\n*\t\t1. 定义1个测试类\n\t\t\t 建议：\n               - 包名：xxx.xxxx.test;  => 如： cn.itcast.test;\n\t\t\t   - 类名：测试类的类名以被测试类的名字+Test组成：类名Test =》 如：CalcTest\n\t\t\n\t\t2. 定义1个测试方法：=》如：void testAdd()\n        \t 建议：\n        \t \t- 方法名： 以test开头\n        \t \t- 方法返回值： void\n        \t \t- 参数：无需参数\n\t\t3. 在方法定义位置前，加上注解@Test ,使得方法可以独立运行【无需main方法】\n        \n        4. 导入Junit工具的依赖包\n        \t- 【点击@Test旁边的小灯泡，添加进classPath】\n        \n        5. 在测试方法中：\n        \t- 创建被测试的对象，调用被测试的方法。\n        \t\n        6. 运行\n        \n        7. 判断结果：\n        \t- 红色：测试失败\n        \t- 绿色：测试通过\n        \t\n        8. 断言，将当前结果与正确结果比较\t\n        \tAssert.assertEquals(正确值，当前值);\n*\n*\n*/\n\n\npackage demo.test;\n\nimport org.junit.Test;\nimport demo.junit.Calculator;// 自定义的被测试类\n\npublic class CalcTest {\n\n    // 测试add方法\n    @Test\n    public void testAdd(){\n        Calculator c = new  Calculator();\n        int rst = c.add(1,2);\n        Assert.assertEquals(3,rst);\n    }\n    \n    // 测试sub方法\n    @Test\n    public void testSub(){\n        Calculator c = new Calculator();\n        int rst = c.sub(2,1);\n        Assert.assertEquals(1,2);\n    }\n    \n}\n\n```\n\n\n\n\n\n#### 12.2 Junit的使用：【@Before 和 @After】\n\n```java\npackage demo.test;\n\nimport org.junit.After;\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\nimport demo.junit.Calculator;// 自定义的被测试类\n\npublic class CalcTest {\n\n    /*\n    *   定义1个 init方法，用于在申请资源,每个测试方法在执行前都会自动调用init( )\n    *\n    *\n    * */\n    @Before\n    public void init(){\n        System.out.println(\"申请资源-init()\");\n    }\n\n\n    /*\n     *   定义1个 close（），用于在释放资源,每个测试方法在执行后都会自动调用init( )\n     *\n     *\n     * */\n    @After\n    public void close(){\n        System.out.println(\"释放资源-after()\");\n\n    }\n\n\n\n    @Test\n    public void testAdd(){\n        System.out.println(\"testAdd方法执行\");\n        Calculator c = new  Calculator();\n        int rst = c.add(1,2);\n        //System.out.println(rst);\n        Assert.assertEquals(3,rst);\n    }\n\n    @Test\n    public void testSub(){\n        System.out.println(\"testSub方法执行\");\n        Calculator c = new Calculator();\n        int rst = c.sub(2,1);\n        Assert.assertEquals(1,2);\n    }\n}\n\n```\n\n\n\n\n\n\n\n## 13. 反射\n\n-   [Java--反射CSDN博客](https://blog.csdn.net/Zzh1110/article/details/104101124)\n\n-   [狂神说-反射](https://www.bilibili.com/video/BV1p4411P7V3?p=5)\n\n    \n\n\n\n**反射** 【框架设计的灵魂】：\n\n>   定义：将类的组成部分，封装为各个对象。\n>\n>   可以在`运行`的时候，`获取类`的相关信息。【是Java作为`准动态语言`的标志】\n\n\n\n-   正常过程：\n\n>   导包 =》new 对象 =》 得到 实例化对象\n\n-   反射过程：\n\n>   获取实例化对象 =》getClass( )来得到类信息 =》找到所在的包名\n\n\n\n### 13.1 Java代码的三个阶段：\n\n-   源代码阶段：编写代码【成员变量+成员方法+构造方法】\n-   类对象阶段：通过类加载器，将代码读入 JVM【在这个阶段，源码中的1个类，被拆成3个Class对象】\n-   运行时阶段：运行代码\n\n\n\n![Java代码的三个阶段](https://z3.ax1x.com/2021/05/29/2kTPf0.png)\n\n\n\n\n\n反射的好处：\n\n>   -   可以在代码运行的时候，来操作对象。【例如：IDE的代码提示功能，就是利用了反射的原理，在类对象阶段加载Methods数组】\n>   -   解耦\n\n\n\n\n\n代码演示：\n\n```java\n/*\n*   1. 获取字节码【类名.class】：\n\t\t\tClass personClass = Person.class;\n\t\t\t\n\t2. 常用方法：\n\t\n\t    0-设置访问权限【忽略安全检查】：true\n        \tdeclaredField_1.setAccessible(true);\n        \t\n\t    1-字段：\n\t\t\t- 获取类中，所有public的字段(属性):\n\t\t\t\t Field[] fields = personClass.getFields();\n\t\t\t\t \n\t\t\t- 获取类中，指定的public的字段(属性):\t \n\t\t\t\t Field field_1 = personClass.getField(字段名);\n\t\t\t\t \t\t\t\t \n\t\t\t- 获取类中，所有的字段【包括private,但获取private的前提是先设置权限】:\t \n\t\t\t\t Field[] declaredFields = personClass.getDeclaredFields();\n\t\t\t\t \n\t\t\t\t \n\t\t\t- 获取类中，指定的字段【包括private,但获取private的前提是先设置权限】:\t \n\t\t\t\t Field declaredField = personClass.getDeclaredField(“name”);\n                 \n                 \n        2-构造器： \n            - 获取类中，所有的构造器\n   \t\t\tConstructor<?>[] Constructors = personClass.getConstructors();\n\t\t\t\n\t\t\t-获取类中，指定的构造器\n        \tConstructor<T> Constructor = personClass.getConstructor(类<?>...参数类型);\n        \n            - 获取类中，所有的已经声明的构造器\n             Constructor[] declaredConstructors = personClass.getDeclaredConstructors();\n             \n\t\t \t-获取类中，指定的已经声明的构造器\n    \t\t Constructor declaredConstructor = personClass.getDeclaredConstructor(类<?>...参数类型);\n    \t\t \n    \t\t \n       3-成员方法：\n       \n        \tMethod[] methods = personClass.getMethods();\n        \t\n        \tMethod method = personClass.getMethod(String name,类<?>...参数类型);\n\n        \tMethod[] declaredMethods = personClass.getDeclaredMethods();\n\n        \tMethod declaredMethod = personClass.getDeclaredMethod(String name,类<?>...参数类型);\n     4-获取类名：\n     \t\tString class_name = personClass.getName();\n\n*\n*\n*/\n\n\n\n\n\nimport java.lang.reflect.Field;\n\n// Person类\n    class Person{\n        private String name;\n        private int age;\n        \n        // 以下省略了get/set访问器\n        。。。\n            \n        public Person() {\n        }\n        public Person(String name, int age) {\n            this.name = name;\n            this.age = age;\n        }\n\n        \n    }\n\npublic class Demo {\n\n    public static void main(String[] args) throws Exception{\n// 字段相关：=================================================\n        // 利用反射来获取字节码，找到Person类\n        Class personClass = Person.class;\n        // 获取Person中 所有 public 的字段【属性】\n        Field[] fields = personClass.getFields();\n        \n        // 打印所有public属性\n        for (Field field : fields) {\n            System.out.println(field);\n        }\n        \n        \n        \n        \n        \n        // 创建对象\n        Person p = new Person(\"张三\",20,1);\n        // 获取Person类中的public字段 a类\n        Field a = personClass.getField(\"a\");\n        \n        // 获取 对象p中的属性a的值的对象\n        Object value = a.get(p);\n        System.out.println(value); // 1\n        \n        // 设置 对象p中的属性a的值\n        a.set(p,123);\n        System.out.println(p); // Person{name='张三', age=20, a=123}\n        \n        \n\n        \n        // 获取声明过的属性【包括：private类型的】\n        Field declaredField_name = personClass.getDeclaredField(\"name\");\n        // 设置访问权限【忽略安全检查】：true\n        declaredField_name.setAccessible(true);\n        // 获取 具体字段值的 对象\n        Object val2 = declaredField_name.get(p);\n        System.out.println(val2);\n        \n// 构造器相关：=================================================      \n\t\tClass<Person> personClass = Person.class;\n        \n\t\t//获取构造器\nConstructor constructor1= personClass.getConstructor(String.class,int.class,int.class);\n\n    \t// 打印结果：public Person(java.lang.String,int,int)\n    \tSystem.out.println(constructor);\n\n    \t// 1.创建对象-有参【构造器-newInstance方法】\n        Object person_1 = constructor1.newInstance(\"张三\",23,1);\n        // 2.创建对象-无参【构造器-newInstance方法】\n        Object person_2 = constructor1.newInstance();\n        // 3.创建对象-无参【Class类-newInstance方法，已弃用】\n        Object person_3 = personClass.newInstance();\n        \n        // Person{name='张三', age=23, a=1}\n        System.out.println(person_1);\n        \n\n        \n// 成员方法相关：=================================================             \n        \n        \n        Class<Person> personClass = Person.class;\n        // 获取指定的方法【方法无参数时】\n        Method eat_method = personClass.getMethod(\"eat\");\n        System.out.println(eat_method);\n        \n        Person p = new Person(\"张三\",20,1);\n        //调用eat方法\n        eat_method.invoke(p);  //我eat\n        \n        \n        \n        // 获取指定的方法【方法有参数时,传入：方法名+参数的反射类】        \n        Method eat_2 = personClass.getMethod(\"eat\", String.class);\n        Person p2 = new Person(\"李四\",24,3);\n        eat_2.invoke(p2,\"香蕉\"); //我eat:香蕉\n        \n        \n        \n        \n        // 获取类名\n        String class_name = personClass.getName();\n        System.out.println(class_name);\n\n    }\n    \n}\n\n\n\n\n```\n\n\n\n\n\n\n\n### 13.2 案例1：\n\n目标：\n\n>   写一个工具，在不改变任何代码的前提下，可以用来：\n>\n>   -   创建任意对象\n>   -   执行任意方法\n\n\n\n实现思路:\n\n>   -   需要：配置文件、反射\n\n\n\n实现步骤：\n\n>   -   将需要创建的`对象的全类名` 和 需要调用的`方法` 定义在`配置文件`中。\n>   -   加载`配置文件`。\n>   -   利用`反射`来加载 `所需的类`到`内存`中。\n>   -   创建对象\n>   -   执行方法\n\n\n\n```java\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.lang.reflect.Member;\nimport java.lang.reflect.Method;\nimport java.util.Properties;\n\npublic class ReflectTest {\n    public static void main(String[] args) throws Exception{\n        \n        // 创建properties对象\n        Properties prop = new Properties();\n        \n        //获取类加载器，通过类加载器，加载class目录下的配置文件的输入流\n        ClassLoader classLoader_1 = ReflectTest.class.getClassLoader();\n        InputStream is = classLoader_1.getResourceAsStream(\"pro.properties\");\n\n        //利用配置文件的输入流，加载配置文件\n        prop.load(is);\n\n        //获取具体的配置\n        String className_1 = prop.getProperty(\"className\");\n        String methodName_1 = prop.getProperty(\"methodName\");\n\n        //获取Class类\n        Class<?> cls = Class.forName(className_1);\n        // 创建类对象\n        Object  c = cls.newInstance();\n\n        //获取方法类\n        Class<?> cls2 = Class.forName(methodName_1);\n        Method m1 = cls2.getMethod(methodName_1);\n\n        //调用方法\n        m1.invoke(c);\n\n    }\n}\n\n\n\n\n```\n\n\n\n\n\n### 13.3 获取Class对象的3种方式：\n\n-   源代码阶段：`Class.forName(全类名);\t`// 全类名：`包名.类名`\n-   类加载阶段：`类名.class 属性;`\n-   运行时阶段：`对象名.getClass( ); `  // getClass( )定义在Object类中\n\n结论：\n\n>    同一个字节码文件，在程序的一次运行中，只会加载一次，不论用哪种方式获取的Class对象，最终只会是同一个。\n\n\n\n\n\n\n\n### 13.4 Class对象的功能：\n\n-   获取` 成员变量`：`getFields();`\n\n-   获取 `成员方法`：`getMethods()`\n\n-   获取 `构造方法`：`getConstructors();`\n\n-   获取 `类名`：`getClassName();`\n\n    \n\n\n\n### 13.5 类加载的过程：\n\n![Java内存分析](https://z3.ax1x.com/2021/05/30/2V5Aqe.png)\n\n\n\n\n\n![Java-类加载的过程](https://z3.ax1x.com/2021/05/30/2V5KRP.png)\n\n![类加载的详细过程](https://z3.ax1x.com/2021/05/30/2V5jQf.png)\n\n\n\n## 14. 注解（Annotation）\n\n-   [Java--自定义注解-CSDN博客](https://blog.csdn.net/Zzh1110/article/details/104887317)\n-   [狂神说-注解和反射](https://www.bilibili.com/video/BV1p4411P7V3?p=1)\n\n\n\n### 14.1 注解-概念:\n\n\n\n>   -   `注释`：给`人`看的备注\n>   -   `注解`：给`计算机`看的备注，也叫`元数据`，`JDK1.5`开始引入的特性。\n\n\n\n\n\n### 14.2 注解的作用：\n\n\n\n>   -   编写文档：生成doc文档\n>   -   代码分析：使用反射\n>   -   编译检查：如：Ovverride\n\n\n\n```java\n/**\n*\n*\t注解doc演示\n*\t@author cyw\n*\t@version 1.0\n*\t@since 1.5\n*/\n\n// 在cmd中，进入该文件所在的目录，输入：javadoc AnnoDemo.java ,可以得到该类的文档\n\npublic class AnnoDemo{\n    \n    /**\n\t*\t@param a 整数\n\t*\t@param b整数\n\t*\t@return 两数之和\n\t*/\n        public add(int a,int b){\n            return a+b;\n        }\n    \n}\n\n\n\n```\n\n\n\n\n\n\n\n\n\n### 14.2  JDK中内置的注解：\n\n-   `@Override`: 检查被标注的方法是否是继承自 父类/接口。\n-   `@Deprecated`: 标注的内容已过时。\n-   `@SuppressWarnings`: 压制警告 =》 `@@SuppressWarnings(\"all\")`\n\n\n\n```java\n\n// 压制所有警告：IDE不要弹出警告信息    \n\t@SuppressWarnings(\"all\")\n    public class AnnoDemo{\n\n        // 用于标记：方法已过时\n            @Deprecated\n            public add_1(int a,int b){\n                return a+b;\n            }\n\n\n            public add_2(int a,int b){\n                return a+b;\n            }\n\n    }\n```\n\n\n\n\n\n\n\n### 14.3 自定义注解：\n\n-   格式：【`元注解 + public @interface 注解名{ }`】\n\n```java\n元注解\npublic @interface 注解名{\n    \n}    \n\n\n// 例如：\n    public @interface MyAnno{\n\n    } \n\n\t@MyAnno\n\tpublic void sayHello(){\n        System.out.println(\"你好\");\n    }\n```\n\n\n\n-   注解的`本质`：【继承了Annotion类的1个`接口`】\n\n```java\npublic interface MyAnno extends java.lang.annotion,Annotion{\n    \n} \n```\n\n\n\n-   注解的`属性`：【注解接口中的`抽象方法`】\n\n    >   1.  只要定义了注解的属性，则该注解的属性必须赋完值才能使用。\n    >\n    >   2.  可以使用default关键字，来给注解的属性赋默认值。\n    >   3.  如果注解只有1个属性，且该属性的名字为value，使用时，可以只传值，不写属性名。\n    >   4.  数组在数值时，在数组的值的最外面，用 { } 包裹；数组只有1个值时，可省略大括号。\n    >\n    >   \n\n\n\n\n\n-   注解中抽象方法（注解的属性）的返回值的类型【5种】：\n\n>   -   基本类型\n>   -   字符串\n>   -   枚举\n>   -   注解\n>   -   以上4种的数组\n\n```java\n    public @interface MyAnno{\n\t\tint show_1();\t//基本类型\n        String show_2();\n        MyAnno show_3();\n        String[] show_4();\n \n    } \n\n```\n\n\n\n\n\n实例：\n\n```java\n    public @interface MyAnno{\n        String name_method();\n\t\tint age_method();\n    }\n\n\n    @MyAnno(name_method=\"张三\",age_method = 13)\n    public void Eat(){\n        System.out.println(\"你好\");\n    }\n```\n\n\n\n#### 14.3.1 元注解：\n\n概念：\n\n>   元注解：修饰注解的注解。\n\n\n\n常见的元注解：\n\n-   `@Target`：描述`作用的位置`。如：作用在方法\n    -   ElementType：【一种枚举类型】\n        -   TYPE：作用在`类`上\n        -   METHOD：作用在`方法`上\n        -   FIELD：作用在`成员变量`\n-   `@Retention`：描述 注解 `保留的阶段`。如：保留在源码阶段\n    -   RetentionPolicy：【一种枚举类型】\n        -   SOURCE：源码阶段\n        -   CLASS：class类对象阶段\n        -   RUNTIME：运行时阶段【最常用】\n-   `@Documented`：描述 注解 `是否被抽取到API文档`中。\n-   `@Inheritied`：描述 注解 `是否被子类继承`。\n\n\n\n\n\n#### 14.3.2 注解的使用:\n\n-   获取 注解使用的`位置的对象`\n-   利用位置对象 获取 `注解对象`: obj.getAnnotion(注解名.class)\n-   调用注解中的`抽象方法`\n\n\n\n\n\n```java\n\n@Target(ElementType.TYPE)\t\t// 元注解，Target元注解,指定自定义注解的使用位置，TYPE：给类使用\n@Retention(RetentionPolicy.RUNTIME)\t// 元注解，Retention元注解,指定自定义注解的使用时期\npublic @interface myAnnoDemo{\n    String name() default \"ZhangSan\";\n}\n\n//使用注解\n@myAnnoDemo(name=\"lisi\")\nclass TestClass{\n    public static void show(){\n        System.out.println();\n    }\n}\n\n```\n\n\n\n\n\n\n\n","slug":"Java SE","published":1,"date":"2021-06-02T02:49:19.122Z","updated":"2021-06-01T07:36:09.363Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckpexftro004vlcvd93n19dlg","content":"<h1 id=\"Java-SE-入门笔记\"><a href=\"#Java-SE-入门笔记\" class=\"headerlink\" title=\"Java SE -入门笔记\"></a>Java SE -入门笔记</h1><p>[toc]</p>\n<h2 id=\"0-前置知识\"><a href=\"#0-前置知识\" class=\"headerlink\" title=\"0. 前置知识\"></a>0. 前置知识</h2><p>文档：</p>\n<ul>\n<li>  <a href=\"https://www.runoob.com/java/java-tutorial.html\">Java 教程 | 菜鸟教程 (runoob.com)</a></li>\n<li>  <a href=\"https://tool.oschina.net/apidocs/apidoc?api=jdk-zh\">在线文档-jdk-zh</a></li>\n<li>  <a href=\"https://blog.csdn.net/Zzh1110/article/details/105069644\">JavaSE-博客-笔记-网传</a></li>\n</ul>\n<h3 id=\"0-1-Java-的文件结构\"><a href=\"#0-1-Java-的文件结构\" class=\"headerlink\" title=\"0.1 Java 的文件结构 :\"></a>0.1 Java 的<strong>文件结构</strong> :</h3><blockquote>\n<p>  项目 -&gt;  模块（包）-&gt;  .java文件 -&gt; 类 </p>\n<p>  包的命名规范：</p>\n<ol>\n<li> 由字母、数字下划线组成，不能以数字开头，字母全部小写。</li>\n<li> 不同路径通过点(.)来分割，如：<code>java.lang</code></li>\n<li> 为了保证包名唯一性，一般使用域名反写来命名包，如：<code>com.baidu.music</code></li>\n</ol>\n<p>  新建包：<code>project -&gt; 右键 src -&gt; new -&gt; package</code></p>\n<p>   按包名展开：<code>左侧导航栏 -&gt; 齿轮 -&gt;  去掉 compact middle packages的勾</code></p>\n</blockquote>\n<h3 id=\"0-2-运行环境介绍\"><a href=\"#0-2-运行环境介绍\" class=\"headerlink\" title=\"0.2 运行环境介绍\"></a>0.2 运行环境介绍</h3><ul>\n<li>  JVM：运行，java虚拟机</li>\n<li>  JRE：运行，（JVM+lib类库 =》真正可以执行.class文件）</li>\n<li>  JDK：开发，4个主要的文件夹：<code>bin、include、lib、 jre</code></li>\n</ul>\n<p>范围：</p>\n<blockquote>\n<p>   JDK &gt; JRE &gt;JVM</p>\n</blockquote>\n<p><code>JDK</code>是用于java程序的<code>开发</code>,而<code>JRE</code>则是只能运行class而<code>没有编译的功能</code>。</p>\n<p>Java的能够“一次编译，到处运行”的原因：</p>\n<blockquote>\n<p>  Java虚拟机在执行字节码（.class文件）时，把字节码解释成具体平台上的机器指令执行。</p>\n</blockquote>\n<h3 id=\"0-3-cmd中的Java指令\"><a href=\"#0-3-cmd中的Java指令\" class=\"headerlink\" title=\"0.3 cmd中的Java指令\"></a>0.3 cmd中的Java指令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javac 文件名</span><br><span class=\"line\"></span><br><span class=\"line\">java 类名</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"1-环境配置-快捷键\"><a href=\"#1-环境配置-快捷键\" class=\"headerlink\" title=\"1. 环境配置 + 快捷键\"></a>1. 环境配置 + 快捷键</h2><h3 id=\"1-1-JDK-下载：\"><a href=\"#1-1-JDK-下载：\" class=\"headerlink\" title=\"1.1 JDK-下载：\"></a>1.1 JDK-下载：</h3><ul>\n<li>   <a href=\"https://www.oracle.com/java/technologies/javase-downloads.html\">JDK-官网下载</a> </li>\n<li>   <a href=\"https://www.programmer-box.com/?ref=jdk_1.6\">JDK-下载url</a></li>\n<li>  <a href=\"https://blog.csdn.net/Marvin_996_ICU/article/details/106240065\">JDK的下载、安装和环境配置教程</a></li>\n<li>  <a href=\"https://blog.csdn.net/panjiabin321/article/details/89391210\">JDK12安装配置-Win10</a></li>\n</ul>\n<h3 id=\"1-2-IDEA下载：\"><a href=\"#1-2-IDEA下载：\" class=\"headerlink\" title=\"1.2 IDEA下载：\"></a>1.2 IDEA下载：</h3><ul>\n<li>  <a href=\"https://www.jetbrains.com/zh-cn/idea/download/#section=windows\">IntelliJ IDEA下载</a></li>\n<li>  <a href=\"https://mp.weixin.qq.com/s?__biz=MzU0MTg5NDkzNA==&mid=2247491865&idx=1&sn=9085c37f2b10a3495d68f5d0b66623a2&chksm=fb205160cc57d876a540fb31dcf8990b2d600855d3a195ccc565683899de64bb055401345920&scene=21#wechat_redirect\">IDEA 2019 下载+安装教程</a></li>\n<li>  <a href=\"https://pan.baidu.com/s/1Yhq_7dP0MOayyEJ-g4_27A\">JetBrains 2021 最新版本全家桶激活</a>  提取码：ute8</li>\n</ul>\n<h4 id=\"1-2-1-IDEA的配置：\"><a href=\"#1-2-1-IDEA的配置：\" class=\"headerlink\" title=\"1.2.1 IDEA的配置：\"></a>1.2.1 IDEA的配置：</h4><ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1FZ4y1H7rh?p=174&spm_id_from=pageDriver\">IDEA-配置-视频</a></li>\n</ul>\n<blockquote>\n<ol>\n<li> 新建Project时，需要选择已安装的JDK</li>\n<li> 更改字号：file -&gt; settings -&gt; editor  -&gt; font 或者 general-&gt;mouse control -&gt; 勾选change font size whith ctrl mouse</li>\n<li> 更改快捷键【例如】：file -&gt; settings -&gt; keymap -&gt; 齿轮图标 -&gt; duplicate -&gt; 展开 main Menu -&gt; 展开 code -&gt; code complete -&gt; 展开 -&gt; 选中 -&gt; 右键 -&gt; add keyboard shutcut -&gt; 输入快捷键 -&gt; ok</li>\n<li>方法分隔符：file -&gt; settings -&gt; editor -&gt; general -&gt; appearance -&gt; show method seperator</li>\n</ol>\n</blockquote>\n<h4 id=\"1-2-2-常用快捷键：\"><a href=\"#1-2-2-常用快捷键：\" class=\"headerlink\" title=\"1.2.2 常用快捷键：\"></a>1.2.2 常用快捷键：</h4><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>快捷键</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>打印</td>\n<td>sout</td>\n</tr>\n<tr>\n<td>main 函数</td>\n<td>psvm 或 main</td>\n</tr>\n<tr>\n<td>代码提示</td>\n<td>alt + /</td>\n</tr>\n<tr>\n<td>自动导包（修正代码）</td>\n<td>alt  + enter</td>\n</tr>\n<tr>\n<td>复制光标所在行，并插入到光标的下一行</td>\n<td>ctrl + d</td>\n</tr>\n<tr>\n<td>删除一行</td>\n<td>ctrl + y</td>\n</tr>\n<tr>\n<td>格式化代码</td>\n<td>ctrl + alt +L</td>\n</tr>\n<tr>\n<td>单行注释</td>\n<td>ctrl + /</td>\n</tr>\n<tr>\n<td>多行注释</td>\n<td>ctrl + shift + /</td>\n</tr>\n<tr>\n<td>自动生成代码（get / set /toString）</td>\n<td>alt  + insert</td>\n</tr>\n<tr>\n<td>移动当前代码行</td>\n<td>alt + shift +  上下箭头</td>\n</tr>\n<tr>\n<td>快速写 遍历数组的代码</td>\n<td>数组名.fori + enter</td>\n</tr>\n<tr>\n<td>快速生成代码块，如：for、if、try-catch</td>\n<td>ctrl + alt + T</td>\n</tr>\n<tr>\n<td>快速生成 for 代码块</td>\n<td>fori</td>\n</tr>\n<tr>\n<td>快速生成 增强型 for</td>\n<td>iter   或者 foreach</td>\n</tr>\n<tr>\n<td>搜索类</td>\n<td>ctrl + n</td>\n</tr>\n<tr>\n<td>查看子类</td>\n<td>ctrl + h</td>\n</tr>\n</tbody></table>\n<h2 id=\"2-数据类型\"><a href=\"#2-数据类型\" class=\"headerlink\" title=\"2. 数据类型\"></a>2. 数据类型</h2><p><img src=\"https://z3.ax1x.com/2021/05/24/gjUjoj.png\" alt=\"数据类型\"></p>\n<h3 id=\"2-1-char-和-byte-的差别：\"><a href=\"#2-1-char-和-byte-的差别：\" class=\"headerlink\" title=\"2.1 char 和 byte 的差别：\"></a>2.1 char 和 byte 的差别：</h3><ul>\n<li>  char 是无符号型的，可以表示一个整数，不能表示负数；char可以表中文字符，</li>\n<li>  byte 是有符号型的，可以表示 -128—127 的数，byte不可以表中文字符</li>\n</ul>\n<h2 id=\"3-运算符\"><a href=\"#3-运算符\" class=\"headerlink\" title=\"3. 运算符\"></a>3. 运算符</h2><p><img src=\"https://z3.ax1x.com/2021/05/24/gjaKl6.png\" alt=\"运算符\"></p>\n<h2 id=\"4-数组\"><a href=\"#4-数组\" class=\"headerlink\" title=\"4. 数组\"></a>4. 数组</h2><blockquote>\n<ol>\n<li><p> 数组 直接打印: 得到的是<code>地址</code></p>\n</li>\n<li><p>数组反转：对称位置的元素交换</p>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"4-1-数组的初始化：【4种】\"><a href=\"#4-1-数组的初始化：【4种】\" class=\"headerlink\" title=\"4.1 数组的初始化：【4种】\"></a>4.1 数组的初始化：【4种】</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 静态[指定内容]：</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 格式： 数据类型 [] 数组名= new 数据类型[]&#123;数组的内容&#125;;</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//==============================================</span></span><br><span class=\"line\"><span class=\"comment\">//动态[指定长度]</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 格式：数据类型[] 数组名称 = new 数据类型[长度]</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\tarr[<span class=\"number\">0</span>] =<span class=\"number\">12</span>;</span><br><span class=\"line\">\t\tarr[<span class=\"number\">1</span>] = <span class=\"number\">15</span>;</span><br><span class=\"line\">\t\tarr[<span class=\"number\">2</span>] = <span class=\"number\">45</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//==============================================</span></span><br><span class=\"line\"><span class=\"comment\">//省略：</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 数据类型[] 数组名称 = &#123;数组的内容&#125;；</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//==============================================</span></span><br><span class=\"line\"><span class=\"comment\">//拆分成2步：</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 格式: 数据类型[] 数组名称；</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 数组名称 = new 数据类型[]&#123;数组内容&#125;； (采用省略格式则不能分步骤写)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] arr;</span><br><span class=\"line\">\t\tarr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h2 id=\"5-内存区域的划分\"><a href=\"#5-内存区域的划分\" class=\"headerlink\" title=\"5. 内存区域的划分\"></a>5. 内存区域的划分</h2><ul>\n<li>  栈(stack)：</li>\n</ul>\n<blockquote>\n<p>  存放方法的局部变量，运行方法<br>  【局部变量 的特点：一旦超出作用域就会从内存中消失】</p>\n</blockquote>\n<ul>\n<li>  堆(heap)：</li>\n</ul>\n<blockquote>\n<p>  new出来的东西都放在堆中(为：引用类型)，如 ：数组<br>  【堆内的东西都有一个16进制的地址值】</p>\n</blockquote>\n<ul>\n<li>  方法区(method area)：</li>\n</ul>\n<blockquote>\n<p>  存储<code>.class</code>的相关信息，包含：方法信息</p>\n</blockquote>\n<ul>\n<li>  本地方法栈(native method stack)</li>\n</ul>\n<ul>\n<li>  寄存器(register)：与cpu相关</li>\n</ul>\n<h2 id=\"6-面向对象\"><a href=\"#6-面向对象\" class=\"headerlink\" title=\"6. 面向对象\"></a>6. 面向对象</h2><p> 面向对象的三大特性：</p>\n<ul>\n<li>  封装性(如： private, 方法等)</li>\n<li>  继承性(extend ,super等)</li>\n<li>  多态性(<strong>子类</strong>继承<strong>父类</strong>的方法后可以 <strong>覆盖重写</strong>override)</li>\n</ul>\n<h3 id=\"6-1-类：\"><a href=\"#6-1-类：\" class=\"headerlink\" title=\"6.1 类：\"></a>6.1 类：</h3><blockquote>\n<ol>\n<li><p><code>类</code> = <code>属性</code> +<code> 方法</code>     // 方法也就是行为、函数。</p>\n</li>\n<li><p>JAVA的<code>类</code>：<code>成员变量</code>(在类内部，即：属性) <strong>+</strong> <code>成员方法</code>+<code>构造方法</code>        // 普通变量：写在函数的内部。 </p>\n</li>\n<li><p><code>方法</code> ：只能有<code>1个返回值</code>。如果想<strong>返回多个数</strong>，可以将<strong>返回值定义为数组</strong>，并返回数组首地址。 </p>\n</li>\n<li><p>JavaBean：标准类，类中至少要包括：<code>无参构造方法</code>，<code>全参构造方法</code>，<code>属性 + getter + setter</code></p>\n</li>\n<li><p> 构造方法：在创建对象(new)时，自动调用。【快捷键：<code>alter + insert</code>】</p>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"6-1-1-构造方法：\"><a href=\"#6-1-1-构造方法：\" class=\"headerlink\" title=\"6.1.1 构造方法：\"></a>6.1.1 构造方法：</h4><blockquote>\n<ol>\n<li><code>构造方法的名称</code>必须与所在的<code>类的名称</code>完全相同，大小写也要一样。<br> 【普通方法首字小写，构造方法首字大写】 </li>\n<li>  构造方法<code>不能写返回值类型</code>，连void也不要写。</li>\n<li> 构造方法<code>不能return </code>返回值。</li>\n<li> 如果<code>没有写</code>构造方法，那么编译器会<code>自动赠送</code>1个构造方法。</li>\n<li> 只要自己编<code>写了构造方法</code>，编译器就<code>不会赠送</code>构造方法。</li>\n<li> 可以在定义构造方法时，将所需的参数定义在方法的参数列表中， 可以在创建对象时传入参数。但是还是需要写<code>getter和setter 方法</code>，目的是<code>方便修改参数的值</code>。</li>\n</ol>\n</blockquote>\n<h4 id=\"6-1-2-成员变量-与-局部变量-的区别：\"><a href=\"#6-1-2-成员变量-与-局部变量-的区别：\" class=\"headerlink\" title=\"6.1.2 成员变量 与 局部变量 的区别：\"></a>6.1.2 成员变量 与 局部变量 的区别：</h4><blockquote>\n<ol>\n<li><p><code>成员变量</code>：定义在 <code>类</code> 的内部，在<strong>类</strong>中都可以<strong>使用</strong>，有<code>默认值 </code> 。</p>\n</li>\n<li><p> <code>局部变量</code>：定义在 <code>方法内部</code>，只能在 <strong>方法内部</strong>使用，<code>没有默认值</code>，使用要<strong>先赋值</strong> 。</p>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"6-1-3-成员变量-与-局部变量-重名时-的优先级：\"><a href=\"#6-1-3-成员变量-与-局部变量-重名时-的优先级：\" class=\"headerlink\" title=\"6.1.3 成员变量 与 局部变量 重名时 的优先级：\"></a>6.1.3 成员变量 与 局部变量 重名时 的优先级：</h4><blockquote>\n<ol>\n<li> 默认根据<code>就近原则</code>，<code>优先</code>使用 <code>局部变量</code>。</li>\n<li> 如果想使用<code>成员变量</code>，可以使用<code>this关键字</code>，如： <code>this.name</code> 。</li>\n<li> <code>this</code> 一定是写在<code>方法内部</code>的，用于在<code>变量名相同</code>时，<code>做区分</code> 。</li>\n</ol>\n</blockquote>\n<h4 id=\"6-1-4-Override-方法重写-Overload-方法重载：\"><a href=\"#6-1-4-Override-方法重写-Overload-方法重载：\" class=\"headerlink\" title=\"6.1.4 Override 方法重写 + Overload 方法重载：\"></a>6.1.4 Override 方法重写 + Overload 方法重载：</h4><ul>\n<li>  <a href=\"https://blog.csdn.net/weixin_44502804/article/details/90523478\">方法重写与方法重载的区别-url</a></li>\n</ul>\n<blockquote>\n<p>  <code>Override 方法重写</code>： </p>\n<ol>\n<li><p> 子类继承父类/接口 后，换掉同名的方法中的处理语句。</p>\n</li>\n<li><p> 方法重写前后：返回值类型、方法名、参数必须一致。</p>\n</li>\n<li><p> 重写后，访问权限必须更宽松，如：重写前 =&gt; protected，重写后 =&gt; public</p>\n</li>\n</ol>\n<p>  <code>Overload 方法重载</code>：</p>\n<ol>\n<li> 在一个类里面，返回类型可以相同也可以不同，方法名一致，而参数不同。</li>\n</ol>\n</blockquote>\n<p>覆盖重写Override：【需要先：继承】</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 父类：属性 + 无参构造 + 全参构造 + getter + setter + Eat()</span></span><br><span class=\"line\"><span class=\"comment\">// 子类：属性 + 无参构造 + 全参构造 + getter + setter + 覆盖重写的Eat()</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 父类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Father</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Father</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Father</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 子类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Son</span> <span class=\"keyword\">extends</span> <span class=\"title\">Father</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Son</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Son</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;son：我要吃 -&gt; 水果&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//main</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FaterAndSonDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Father father = <span class=\"keyword\">new</span> Father(<span class=\"string\">&quot;刘备&quot;</span>);</span><br><span class=\"line\">        Son son = <span class=\"keyword\">new</span> Son(<span class=\"string\">&quot;阿斗&quot;</span>);</span><br><span class=\"line\">        father.eat();</span><br><span class=\"line\">        son.eat();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>覆盖重载Overload：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 以下代码 省略了 构造方法+ getter + setter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Calc</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> b;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> c;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//方法重载1</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">sum</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">//方法重载2</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">float</span> <span class=\"title\">sum</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b,<span class=\"keyword\">float</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a+b+c;</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"6-1-5-内部类：【4种】\"><a href=\"#6-1-5-内部类：【4种】\" class=\"headerlink\" title=\"6.1.5 内部类：【4种】\"></a>6.1.5 内部类：【4种】</h4><blockquote>\n<p>  <code>内部类</code>：1个类 定义在 另一个类 的内部 =》<code>内部类</code>(public / protected / private)。 外面的类叫<code>外部类</code>(只能public)。</p>\n<p>  <strong>注意</strong>：<code>内部类</code>可以访问<code>外部类</code>的所有<code>成员变量</code>和<code>成员方法</code>。</p>\n</blockquote>\n<ul>\n<li>  <a href=\"https://blog.csdn.net/weixin_42762133/article/details/82890555?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160906466316780279191862%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=160906466316780279191862&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-3-82890555.pc_search_result_cache&utm_term=Java\">Java内部类</a></li>\n</ul>\n<ol>\n<li> 成员内部类：</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 定义 外部类、外部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 定义 成员内部类、内部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. 在 main 中，new 外部类对象</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. 格式：外部类名.内部类名 变量名 = 外部类对象.new 内部类名();</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OutAndInnerClassDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        Outer outer = <span class=\"keyword\">new</span> Outer();</span><br><span class=\"line\">        Outer.Inner inner = outer.<span class=\"function\">new <span class=\"title\">Inner</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//外部类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Outer</span></span>&#123;  </span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Outer</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">         System.out.println(<span class=\"string\">&quot;外部类&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//内部类</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Inner</span></span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Inner</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">             System.out.println(<span class=\"string\">&quot;内部类&quot;</span>);</span><br><span class=\"line\">        &#125;      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"2\">\n<li> 静态内部类：</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 定义 外部类、外部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 定义 静态内部类、内部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. 在 main 中，</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. 格式：外部类名.静态内部类名 变量名 = new 外部类名.静态内部类名();</span></span><br><span class=\"line\"><span class=\"comment\"> * 5. </span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OutAndInnerClassDemo2</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Outer2.Inner inner = <span class=\"keyword\">new</span> Outer2.Inner();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//外部类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Outer2</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Outer2</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;外部类&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//静态内部类</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Inner</span></span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Inner</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;静态内部类&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<ol start=\"3\">\n<li> 方法内部类：【在方法内部：定义、创建new、使用(调用)】</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 定义 外部类、外部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 定义 外部类的方法，该方法中的内部类、内部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. 在 外部类的方法中 new 内部类的对象：内部类名 变量名 = new 内部类名();</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. 在 main 中，</span></span><br><span class=\"line\"><span class=\"comment\"> * 5. 格式：</span></span><br><span class=\"line\"><span class=\"comment\"> \t\t\t外部类 变量名= new 外部类();</span></span><br><span class=\"line\"><span class=\"comment\"> \t\t\t变量名.外部类方法名();</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//main</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OutAndInnerClassDemo3</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Outer3 o3 = <span class=\"keyword\">new</span> Outer3();</span><br><span class=\"line\">        o3.Func1();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 外部类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Outer3</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Outer3</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;外部类 -&gt; 创建&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// 外部类方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">Func1</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;外部类的方法 -&gt; 调用&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 内部类</span></span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Inner3</span></span>&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Inner3</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;内部类 -&gt; 创建&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">            <span class=\"comment\">// 内部类方法调用</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">say</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;内部类的方法 -&gt; 调用&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Inner3 i3 = <span class=\"keyword\">new</span> Inner3();</span><br><span class=\"line\">        i3.say();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<ol start=\"4\">\n<li> 匿名内部类：【方法中 return 1个 new出的对象】  </li>\n</ol>\n<p><strong>注意</strong>：匿名内部类 没有 构造方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 定义 接口</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 定义 外部类、外部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. 定义 外部类的方法，该方法返回1个匿名内部类的对象的定义，在该匿名内部类的对象的定义中重写接口中的方法</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. 在 main 中，</span></span><br><span class=\"line\"><span class=\"comment\"> * 5. 格式：</span></span><br><span class=\"line\"><span class=\"comment\"> \t\t\t外部类 变量名= new 外部类();</span></span><br><span class=\"line\"><span class=\"comment\"> \t\t\t变量名.外部类方法名().重写的方法名();</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OutAndInnerClassDemo4</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Outer4 o4 = <span class=\"keyword\">new</span> Outer4();</span><br><span class=\"line\">        o4.getInner4().eat();\t\t\t\t<span class=\"comment\">//注意 连续调用 方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Inner4</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//外部类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Outer4</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Outer4</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;外部类 -&gt; 创建&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//外部类的方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Inner4 <span class=\"title\">getInner4</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> Inner4()&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;匿名内部类 -&gt; 方法&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;\t\t\t<span class=\"comment\">// 注意分号</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"6-1-6-类的使用：\"><a href=\"#6-1-6-类的使用：\" class=\"headerlink\" title=\"6.1.6 类的使用：\"></a>6.1.6 类的使用：</h4><blockquote>\n<ol>\n<li> 导包：<code>import java.util.*;</code></li>\n<li> 创建：<code>Animals cat = new Animals();</code></li>\n<li> 使用：<code>cat.eat();</code></li>\n</ol>\n</blockquote>\n<p>注意：</p>\n<ul>\n<li><p>  <code>java.lang</code> 下的包<code>不用导</code></p>\n</li>\n<li><p>  <code>同一package</code>下的类也<code>不用导</code></p>\n</li>\n<li><p>  <code>导包语句</code>必须写在 <code>package 包名</code>后，<code>类名前</code></p>\n</li>\n<li><p>  包名-格式：<code>package net.java.util;</code></p>\n</li>\n</ul>\n<h4 id=\"6-1-7-静态变量-与-静态方法：\"><a href=\"#6-1-7-静态变量-与-静态方法：\" class=\"headerlink\" title=\"6.1.7 静态变量 与 静态方法：\"></a>6.1.7 静态变量 与 静态方法：</h4><blockquote>\n<p>  <code>静态变量</code>：带有 <code>static </code>关键字的<code>变量</code></p>\n<p>  <code>静态方法</code>：带有 <code>static</code> 关键字的<code>方法</code></p>\n</blockquote>\n<p><strong>注意</strong>：【凡是带<code>static</code> 的<code>变量、方法、代码块</code>】</p>\n<ul>\n<li>  <code>属于</code>整个<code>类</code>，而不仅仅 属于一个<strong>对象</strong></li>\n<li>  只创建<code>1次</code></li>\n<li>  可以直接用 <code>类名.变量</code>调用</li>\n<li>  不能使用 <code>this</code>,<code>super</code>关键字：因为静态方法可以通过类名来调用，而这是可能还没有创建对象，更谈不上继承。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 静态代码块：</span></span><br><span class=\"line\"><span class=\"keyword\">static</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//语句块</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 静态方法</span></span><br><span class=\"line\"><span class=\"comment\">// 格式： </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">PrintMe</span><span class=\"params\">()</span></span>&#123;.......&#125;\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用：[对于本类当中的静态方法，可以省略类名称，直接静态方法]</span></span><br><span class=\"line\">    类名称.静态变量;</span><br><span class=\"line\">    类名称.静态方法();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"6-2-接口：\"><a href=\"#6-2-接口：\" class=\"headerlink\" title=\"6.2 接口：\"></a>6.2 接口：</h3><blockquote>\n<ol>\n<li> 接口就是各个类的规范，</li>\n<li> 接口是一种 <code>引用的数据类型</code> ，其中：最重要的是<code>抽象方法</code></li>\n</ol>\n</blockquote>\n<h4 id=\"6-2-1-格式：\"><a href=\"#6-2-1-格式：\" class=\"headerlink\" title=\"6.2.1 格式：\"></a>6.2.1 格式：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> 接口名称</span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">// 接口内容  </span></span><br><span class=\"line\">&#125;  </span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"6-2-2-接口内容：\"><a href=\"#6-2-2-接口内容：\" class=\"headerlink\" title=\"6.2.2 接口内容：\"></a>6.2.2 接口内容：</h4><blockquote>\n<ul>\n<li>JDK 1.7 的接口可以包含：<ul>\n<li>  常量</li>\n<li>  抽象方法</li>\n</ul>\n</li>\n<li>JDK 1.8 的接口还可以额外包含<ul>\n<li>  默认方法</li>\n<li>  静态方法</li>\n</ul>\n</li>\n<li>JDK 1.9 的接口还可以额外包含<ul>\n<li>  私有方法</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><strong>注意</strong> ：</p>\n<blockquote>\n<ol>\n<li><p>接口中的抽象方法，修饰符必须是 public abstract </p>\n<p> 【如：<code>public abstract void methodAbstract( );</code>】， 可以省略但不能换成别的 。 </p>\n</li>\n<li><p><code>接口</code>无法直接使用，只能让1个 “实现类” 来 “实现” 该接口 。</p>\n<p> 【类似 抽象类的继承】</p>\n</li>\n<li><p> <code>实现类</code> 除非是1个由abstract修饰的抽象类，否则<code>必须覆盖重写</code>所有<code>抽象方法</code>。</p>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"6-2-3-接口的使用：\"><a href=\"#6-2-3-接口的使用：\" class=\"headerlink\" title=\"6.2.3 接口的使用：\"></a>6.2.3 接口的使用：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> *\t1. 定义接口 + 接口内容</span></span><br><span class=\"line\"><span class=\"comment\"> *\t2. 定义接口的 &quot;实现类&quot;</span></span><br><span class=\"line\"><span class=\"comment\"> *\t3. 在 &quot;实现类&quot; 中，覆盖重写 接口的抽象方法</span></span><br><span class=\"line\"><span class=\"comment\"> *\t4. main方法中 new出 &quot;实现类的对象&quot;，&quot;实现类的对象&quot; 调用 重写后的方法</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MyIntface</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">Say</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义实现类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ToDoClass</span> <span class=\"keyword\">implements</span> <span class=\"title\">MyIntface</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Say</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;你好！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IntfaceDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        ToDoClass a = <span class=\"keyword\">new</span> ToDoClass();</span><br><span class=\"line\">        a.Say();</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n<h3 id=\"6-3-四大特性：\"><a href=\"#6-3-四大特性：\" class=\"headerlink\" title=\"6.3 四大特性：\"></a>6.3 四大特性：</h3><p> 面向对象的三大特性：</p>\n<blockquote>\n<ul>\n<li>  封装性(如： private, 方法等)</li>\n<li>  继承性(extend ,super等)</li>\n<li>  多态性(<strong>子类</strong>继承<strong>父类</strong>的方法后可以 <strong>覆盖重写</strong>override)</li>\n</ul>\n</blockquote>\n<h4 id=\"6-3-1-封装性：\"><a href=\"#6-3-1-封装性：\" class=\"headerlink\" title=\"6.3.1 封装性：\"></a>6.3.1 封装性：</h4><p>封装性有两种：【变量，方法】</p>\n<p>private关键字：     </p>\n<blockquote>\n<ol>\n<li> 只有在写了private 的类中可以直接访问该属性,    </li>\n<li> 有<code>private 关键字</code>就必须在类中<code>定义</code> 2个专门 访问、设置 该属性的方法<code> getter、setter</code> 。</li>\n</ol>\n<p>  setNum(int num)【有参数，无返回值】         </p>\n<p>  getNum( )【无参数，有返回值】</p>\n</blockquote>\n<h4 id=\"6-3-2-继承性：\"><a href=\"#6-3-2-继承性：\" class=\"headerlink\" title=\"6.3.2 继承性：\"></a>6.3.2 继承性：</h4><p>继承性：</p>\n<blockquote>\n<ol>\n<li> 继承是<code>多态性的前提</code>；</li>\n<li> 承解决了共性的问题（把<code>几个类</code>中都有的<code>属性、方法</code>放到<code>1个父类中</code>，每个<code>子类 继承 父类</code>）</li>\n</ol>\n</blockquote>\n<p>父类与子类：</p>\n<blockquote>\n<ol>\n<li> 父类：基类，超类</li>\n<li> 子类：派生类</li>\n</ol>\n</blockquote>\n<p>在继承关系中，子类就是父类的一种。</p>\n<p>例如： 父类是员工，子类是老师，老师也是一种员工 =》 老师 is 员工</p>\n<p>继承过程中，成员变量的访问特点：</p>\n<blockquote>\n<ol>\n<li> 子类有，则<code>优先使用 子类的成员变量</code>。</li>\n<li> <code>子类 </code>知道 <code>父类的变量、方法</code>，父类不知道子类的变量、方法。</li>\n<li> 父子的<code>变量、方法</code> 重名时，优先使用<code>子类</code></li>\n</ol>\n</blockquote>\n<p><code>父类的变量</code>，<code>子类的变量</code>，方法的<code>局部变量</code> 重名时：</p>\n<blockquote>\n<ol>\n<li> 访问 父类的变量：super.变量名</li>\n<li> 访问 本类的变量： this.成员变量名</li>\n<li> 访问 方法的局部变量： 直接写变量名</li>\n</ol>\n</blockquote>\n<p>父类、子类、继承的使用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 父类【普通的类的定义】：\t</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> 父类名称</span>&#123;&#125;\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 子类：</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> 子类名称 <span class=\"keyword\">extends</span> 父类名称</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 例如：</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//父类</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Employee</span> </span>&#123;</span><br><span class=\"line\">\t\t\tString name;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> age;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//子类 -&gt; 继承父类</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Teacher</span> <span class=\"keyword\">extends</span> <span class=\"title\">Employee</span> </span>&#123;</span><br><span class=\"line\">\t\t\tString Tno;</span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"6-3-3-抽象性：\"><a href=\"#6-3-3-抽象性：\" class=\"headerlink\" title=\"6.3.3 抽象性：\"></a>6.3.3 抽象性：</h4><p>抽象：</p>\n<blockquote>\n<p>  一个父类有一个没法具体描述的方法：<br>  如：</p>\n<ul>\n<li>  <code>子类 cat</code> 有 <code>eatFish( )</code> 的方法，</li>\n<li>  <code>父类 Animal </code>有<code>eat( ) </code>的方法，但没法细说具体执行过程。</li>\n</ul>\n</blockquote>\n<p>抽象方法-格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法 返回值前 加上 abstract 关键字，去掉大括号&#123;&#125;，直接以分号；结束。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//抽象方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">Eat</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><strong>注意</strong> ：</p>\n<blockquote>\n<ol>\n<li><p><code>抽象方法</code> 只能 定义在<code>抽象类内</code> 【在 class前加上 abstract】，但 <code>抽象类</code>不一定有 <code>抽象方法</code>，没有抽象方法的 抽象类 同样 不能直接new,它有特殊用途。  </p>\n</li>\n<li><p>子类 必须 覆盖重写 父类 所有的 抽象方法。 【除非子类也是抽象类】</p>\n<p> 抽象方法覆盖重写 即：去掉 抽象方法的 abstract关键字，补上{ } </p>\n<p> 【可以鼠标点击 extends 行 按下 alt + enter】</p>\n</li>\n</ol>\n</blockquote>\n<p>抽象类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//抽象类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animals</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"comment\">//抽象方法,没有普通方法的&#123;&#125;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">Eat</span><span class=\"params\">()</span></span>;\t\t</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><code>抽象类</code> 与 <code>抽象方法</code>的使用：</p>\n<blockquote>\n<p>  抽象类的 对象 无法直接 new 。</p>\n<p>  即： 不能 Animal a = new Animal( );</p>\n<p>  必须<code>先</code>用一个子类 <code>继承</code>一个父类，<code>再覆盖重写</code>其抽象方法。</p>\n</blockquote>\n<p><code>main方法中</code>使用<code>抽象类</code>的<code>执行顺序</code>：</p>\n<ol>\n<li> 子类 调用 super( )，执行抽象父类构造方法。</li>\n<li> 执行 子类构造方法。</li>\n<li> 执行 子类的抽象方法。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> *\t1. 在抽象类中 定义 抽象方法</span></span><br><span class=\"line\"><span class=\"comment\"> *\t2. 子类继承抽象类，覆盖重写 抽象类的 所有抽象方法</span></span><br><span class=\"line\"><span class=\"comment\"> * \t3. main方法中，new 子类对象</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 抽象类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animals</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//抽象方法,没有普通方法的&#123;&#125;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">Eat</span><span class=\"params\">()</span></span>;\t\t\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 子类 继承 抽象类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animals</span> </span>&#123;\t\t</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">Eat</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;cat eat&quot;</span>.toUpperCase());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        Cat c = <span class=\"keyword\">new</span> Cat();</span><br><span class=\"line\">        c.Eat();</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h4 id=\"6-3-4-多态性：\"><a href=\"#6-3-4-多态性：\" class=\"headerlink\" title=\"6.3.4 多态性：\"></a>6.3.4 多态性：</h4><ul>\n<li>  <a href=\"https://www.cnblogs.com/jack204/archive/2012/10/29/2745150.html\">Java多态性理解</a></li>\n</ul>\n<p>多态性的条件：</p>\n<ul>\n<li>  继承</li>\n<li>  重写</li>\n<li>  父类变量 引用 子类对象</li>\n</ul>\n<p>实现多态的技术：</p>\n<blockquote>\n<p>  动态绑定（dynamic binding），是指在<code>执行期间判断</code>所引用对象的<code>实际类型</code>，根据其实际的类型调用其相应的方法。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 左边是父类/接口，右边new的是子类</span></span><br><span class=\"line\"><span class=\"comment\">// 编译时，arr是List；</span></span><br><span class=\"line\"><span class=\"comment\">// 运行时，arr是ArrayList</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tList&lt;Integer&gt; arr = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"6-4-包装类\"><a href=\"#6-4-包装类\" class=\"headerlink\" title=\"6.4 包装类\"></a>6.4 包装类</h3><ul>\n<li>  <a href=\"https://www.yiibai.com/java/wrapper-class-in-java.html\">Java包装类-url</a></li>\n<li>  <a href=\"https://blog.csdn.net/Hushboom/article/details/104798466\">Java泛型和包装类</a></li>\n</ul>\n<h4 id=\"6-4-1-包装类是什么：【自动装箱-自动拆箱】\"><a href=\"#6-4-1-包装类是什么：【自动装箱-自动拆箱】\" class=\"headerlink\" title=\"6.4.1 包装类是什么：【自动装箱 + 自动拆箱】\"></a>6.4.1 包装类是什么：【自动装箱 + 自动拆箱】</h4><p>包装类 = 基本类型 + 常用方法</p>\n<p>将一个类型变成一个类。</p>\n<blockquote>\n<ul>\n<li><p>  <code>原始数据类型 </code>=转换为=》<code>对象</code></p>\n</li>\n<li><p>  <code>对象</code> =转换为=》 <code>原始数据类型</code></p>\n</li>\n<li><p>可用于实现<code> 多态性</code></p>\n</li>\n</ul>\n<p>  *<code>JDK1.5</code>*开始可以进行<code>自动装箱，自动拆箱</code>：</p>\n<ul>\n<li>  自动装箱： 自动将 <code>基本类型 =&gt; 包装类</code></li>\n<li>  自动拆箱： 自动将 <code>包装类 =&gt; 基本类型</code></li>\n</ul>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gja30e.png\" alt=\"包装类\"></p>\n<h4 id=\"6-4-2-泛型：\"><a href=\"#6-4-2-泛型：\" class=\"headerlink\" title=\"6.4.2 泛型：\"></a>6.4.2 泛型：</h4><p><code>泛型 &lt;=&gt; &lt;包装类&gt;</code> </p>\n<p>泛型常用于：指定<code>某个集合</code>只能保存<code>某种数据类型的数据</code>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 泛型就是下面的 &lt;String&gt;，其中String是包装类</span></span><br><span class=\"line\"></span><br><span class=\"line\">List&lt;String&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();`\t<span class=\"comment\">// 一种体现多态性的写法，左边是父类型，右边是子类型</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"7-常用的类\"><a href=\"#7-常用的类\" class=\"headerlink\" title=\"7. 常用的类\"></a>7. 常用的类</h2><h3 id=\"7-1-Math类：\"><a href=\"#7-1-Math类：\" class=\"headerlink\" title=\"7.1 Math类：\"></a>7.1 Math类：</h3><p>Math的所属路径：<code>java.lang.Math</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.cyw2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 取整        </span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> a = Math.floor(<span class=\"number\">1.4</span>);\t<span class=\"comment\">//向下取整，无论正负数(取小的)</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> b = Math.round(<span class=\"number\">1.4</span>); <span class=\"comment\">//四舍五入(负数入的时候向0进位)</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> c = Math.ceil(<span class=\"number\">1.4</span>);\t<span class=\"comment\">//向上取整，无论正负数(取大的)    </span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;1.4 =&gt; floor &quot;</span>+a);  <span class=\"comment\">// 1.0</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;1.4 =&gt; round &quot;</span>+b);  <span class=\"comment\">// 1.0</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;1.4 =&gt; ceil &quot;</span>+c);   <span class=\"comment\">// 2.0</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;==============&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">    </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 随机数          </span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> d = Math.random();   <span class=\"comment\">//返回1个[0,1)之间的double类型的小数</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        System.out.println(d);</span><br><span class=\"line\">   </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 比大小        </span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> max = Math.max(<span class=\"number\">12</span>,<span class=\"number\">34</span>);  <span class=\"comment\">// 返回参数中的最大值</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> min = Math.min(<span class=\"number\">12</span>,<span class=\"number\">34</span>);  <span class=\"comment\">// 返回参数中的最小值</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        System.out.println(max);</span><br><span class=\"line\">        System.out.println(min);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;==============&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 三角函数</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">double</span> e = Math.toRadians(<span class=\"number\">45.0</span>);    <span class=\"comment\">// 将角度制 转为 弧度制</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> f = Math.tan(e);             <span class=\"comment\">// 计算tan(PI/4)</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> g = Math.rint(f);</span><br><span class=\"line\">        </span><br><span class=\"line\">        System.out.println(g);   <span class=\"comment\">// 将计算结果 转化成 最接近的整数</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;==============&quot;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 数值 与 字符串 相互转化</span></span><br><span class=\"line\">        String h = Integer.toString(<span class=\"number\">123</span>);</span><br><span class=\"line\">        System.out.println(h);</span><br><span class=\"line\">        </span><br><span class=\"line\">        String i = <span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = Interager.parseInt(i);</span><br><span class=\"line\">        </span><br><span class=\"line\">        System.out.println(j);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;==============&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 多次方 与 开根号     </span></span><br><span class=\"line\">               </span><br><span class=\"line\">        <span class=\"keyword\">double</span> k = Math.sqrt(<span class=\"number\">100.0</span>);\t<span class=\"comment\">// 开根号</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> L = Math.pow(<span class=\"number\">10.0</span>,<span class=\"number\">2.0</span>);\t<span class=\"comment\">// 多次方</span></span><br><span class=\"line\">        System.out.println(k);</span><br><span class=\"line\">        System.out.println(L);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"7-2-Charater类：\"><a href=\"#7-2-Charater类：\" class=\"headerlink\" title=\"7.2 Charater类：\"></a>7.2 Charater类：</h3><p>常用方法：</p>\n<ul>\n<li>  <code>判断</code>字符类型：是否是 <code>字母、数字、空白符、大写、小写</code></li>\n<li>  转化大小写：转化成 <code>大写、小写、字符串</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义\t</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> ch = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tCharacter ch = <span class=\"keyword\">new</span> Character(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> uniChar = <span class=\"string\">&#x27;\\u039A&#x27;</span>;  <span class=\"comment\">// Unicode 字符表示形式</span></span><br><span class=\"line\"> </span><br><span class=\"line\">\t<span class=\"comment\">// 字符数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">char</span>[] charArray =&#123; <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;e&#x27;</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\tCharacter ch = <span class=\"keyword\">new</span> Character(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 常用方法：</span></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> a = <span class=\"string\">&#x27;A&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">boolean</span> isLetter = Character.isLetter(a);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(isLetter);\t<span class=\"comment\">// true</span></span><br><span class=\"line\">    System.out.println(Character.isDigit(a));\t<span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"7-3-String类：\"><a href=\"#7-3-String类：\" class=\"headerlink\" title=\"7.3 String类：\"></a>7.3 String类：</h3><p>String 类是不可改变的，一旦创建了 String 对象，那它的值就无法改变了。</p>\n<p>要想改变<code> String 对象的值</code>，可以使用 <code>StringBuffer</code> 和 <code>StringBuilder </code>类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 存放在 堆中的字符串常量池中</span></span><br><span class=\"line\">\tString str = <span class=\"string\">&quot;Runoob&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用构造函数</span></span><br><span class=\"line\">\tString str2 = <span class=\"keyword\">new</span> String(<span class=\"string\">&quot;Runoob&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 字符串长度</span></span><br><span class=\"line\">\tstr = <span class=\"string\">&quot;abc&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = str.length(); </span><br><span class=\"line\">\tSystem.out.println(len);\t<span class=\"comment\">// 3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 字符串的拼接</span></span><br><span class=\"line\">\tString str2 = <span class=\"string\">&quot;我的名字是 &quot;</span>.concat(<span class=\"string\">&quot;Runoob&quot;</span>);\t</span><br><span class=\"line\">\tString str3 = <span class=\"string\">&quot;我的名字是 &quot;</span>+<span class=\"string\">&quot;Runoob&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 格式化拼接字符串</span></span><br><span class=\"line\">\tString fs;</span><br><span class=\"line\">\tfs = String.format(<span class=\"string\">&quot;a的值为%f, 整型变量的值为&quot;</span> </span><br><span class=\"line\">                    %d, 字符串变量的值为          </span><br><span class=\"line\">                    %s<span class=\"string\">&quot;, floatVar, intVar, stringVar);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 返回指定位置的字符</span></span><br><span class=\"line\"><span class=\"string\">\tString str1 = &quot;</span>abc<span class=\"string\">&quot;;</span></span><br><span class=\"line\"><span class=\"string\">\tchar ch = str1.charAt(0);</span></span><br><span class=\"line\"><span class=\"string\">\tSystem.out.println(cg);\t// a</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 返回字符串中指定字符的第一个索引</span></span><br><span class=\"line\"><span class=\"string\">\tString str1 = &quot;</span>abc<span class=\"string\">&quot;;</span></span><br><span class=\"line\"><span class=\"string\">\tint index = str1.indexOf(&#x27;b&#x27;);</span></span><br><span class=\"line\"><span class=\"string\">\tSystem.out.println(index);\t// 1</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 截取从参数位置到最后的字符串: substring(索引)</span></span><br><span class=\"line\"><span class=\"string\">// 截取从[索引1,索引2)的字符串: substring(索引1,索引2)\t\t</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">\tString str1 = &quot;</span>hello<span class=\"string\">&quot;;</span></span><br><span class=\"line\"><span class=\"string\">\tString str2 = str1.substring(0);  \t//str2 = &quot;</span>hello<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span></span><br><span class=\"line\"><span class=\"string\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span></span><br><span class=\"line\"><span class=\"string\">\tString str3 = str1.substring(1,4);\t//str3 = &quot;</span>ell<span class=\"string\">&quot;;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 字符串的转化</span></span><br><span class=\"line\"><span class=\"string\">\t//将字符串拆为字符数组,并将字符数组作为返回值: toCharArray();</span></span><br><span class=\"line\"><span class=\"string\">\t//获取当前字符串底层的字节数组: getBytes();</span></span><br><span class=\"line\"><span class=\"string\">\t//替换字符串，返回新字符串: replace(old,new);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">//字符串的分割</span></span><br><span class=\"line\"><span class=\"string\">\t//split(正则表达式)：按指定规则分割字符串，并返回字符数组，若想用. 作为分割符，需要写 \\\\.</span></span><br><span class=\"line\"><span class=\"string\">\t\t</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>字符串在内存中的创建过程：</p>\n<blockquote>\n<p>  以 String str1 = “abc” 为例 </p>\n<p>  内存中情况：      </p>\n<ol>\n<li><p> 在 <code>栈</code>中开辟 <code>变量的空间</code>，     </p>\n</li>\n<li><p>  在 <code>堆</code>中的 <code>字符串常量池</code> 中<code>创建String 对象</code>     </p>\n</li>\n<li><p> 在 <code>堆</code>中 创建 <code>byte[]     </code></p>\n</li>\n<li><p> <code>String 对象</code>引用<code> byte[] 的地址</code>     </p>\n</li>\n<li><p> <code>栈</code>中的变量 引用 <code>String 对象 的地址</code></p>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"7-4-StringBuffer-类-与-StringBuilder-类：\"><a href=\"#7-4-StringBuffer-类-与-StringBuilder-类：\" class=\"headerlink\" title=\"7.4 StringBuffer 类 与 StringBuilder 类：\"></a>7.4 StringBuffer 类 与 StringBuilder 类：</h3><p>StringBuffer 和 StringBuilder 都可用来创建字符串，<br>区别：</p>\n<ul>\n<li>  StringBuffer ：速度慢，但在多线程时安全</li>\n<li>  StringBuilder ：速度快，但在多线程时不安全【StringBuilder 更常用】</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 10 为容量</span></span><br><span class=\"line\">        StringBuilder sb_1 = <span class=\"keyword\">new</span> StringBuilder(<span class=\"number\">10</span>);</span><br><span class=\"line\">        sb_1.append(<span class=\"string\">&quot;大家好&quot;</span>);</span><br><span class=\"line\">        System.out.println(sb_1);  </span><br><span class=\"line\">       </span><br><span class=\"line\">        sb.insert(<span class=\"number\">8</span>, <span class=\"string\">&quot;Java&quot;</span>);</span><br><span class=\"line\">        System.out.println(sb_1); </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 5为开始位置，8为结束位置</span></span><br><span class=\"line\">        sb.delete(<span class=\"number\">5</span>,<span class=\"number\">8</span>);</span><br><span class=\"line\">        System.out.println(sb_1);  </span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h3 id=\"7-5-Date类：\"><a href=\"#7-5-Date类：\" class=\"headerlink\" title=\"7.5 Date类：\"></a>7.5 Date类：</h3><p><code>import java.util.Date;</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 2个构造函数</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tDate d1 = <span class=\"keyword\">new</span> Date();</span><br><span class=\"line\"></span><br><span class=\"line\">\tDate d1 = <span class=\"keyword\">new</span> Date(<span class=\"keyword\">long</span> millisec);\t<span class=\"comment\">// millisec: 从 1970-1-1 到 现在 的毫秒数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取millisec：long getTime( )</span></span><br><span class=\"line\"><span class=\"comment\">// 设置millisec：void setTime(long time)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//比较时间：假设A、B是两个时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tA.before(B);\t<span class=\"comment\">//  时间A 在 时间B 前，则 返回true</span></span><br><span class=\"line\">\tA.after(B);\t\t<span class=\"comment\">//  时间A 在 时间B 后，则 返回true</span></span><br><span class=\"line\">\tA.equals(B);\t<span class=\"comment\">//  时间A 与 时间B 相等，则 返回true</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 格式化的时间、日期</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tDate dNow = <span class=\"keyword\">new</span> Date( );</span><br><span class=\"line\">\tSimpleDateFormat sdf = <span class=\"keyword\">new</span> SimpleDateFormat (<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">&quot;当前时间为: &quot;</span> + sdf.format(dNow));</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"7-6-Calender类：\"><a href=\"#7-6-Calender类：\" class=\"headerlink\" title=\"7.6 Calender类：\"></a>7.6 Calender类：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//当前日期</span></span><br><span class=\"line\">\tCalendar c = Calendar.getInstance();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建指定日期</span></span><br><span class=\"line\">\tCalendar c1 = Calendar.getInstance();</span><br><span class=\"line\"></span><br><span class=\"line\">\tc1.set(<span class=\"number\">2009</span>, <span class=\"number\">6</span> - <span class=\"number\">1</span>, <span class=\"number\">12</span>);\t<span class=\"comment\">// 设置 年、月、日</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取日期的相关信息</span></span><br><span class=\"line\">\tCalendar c1 = Calendar.getInstance();</span><br><span class=\"line\">\t<span class=\"comment\">// 获得年份</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> year = c1.get(Calendar.YEAR);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得月份</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> month = c1.get(Calendar.MONTH) + <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得日期</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> date = c1.get(Calendar.DATE);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得小时</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> hour = c1.get(Calendar.HOUR_OF_DAY);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得分钟</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> minute = c1.get(Calendar.MINUTE);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得秒</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> second = c1.get(Calendar.SECOND);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得星期几【注意（这个与Date类是不同的）：1代表星期日、2代表星期一、3代表星期二，以此类推】</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> day = c1.get(Calendar.DAY_OF_WEEK);</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h3 id=\"7-7-Scanner-类：\"><a href=\"#7-7-Scanner-类：\" class=\"headerlink\" title=\"7.7 Scanner 类：\"></a>7.7 Scanner 类：</h3><p><code>import java.util.Scanner;  </code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Scanner sc = new Scanner(System.in);</span></span><br><span class=\"line\"><span class=\"comment\"> * ``sc.hasNextInt()   \t &lt;=&gt;  sc.nextInt()</span></span><br><span class=\"line\"><span class=\"comment\"> * ``sc.hasNextFloat()   &lt;=&gt;  sc.nextFloat()</span></span><br><span class=\"line\"><span class=\"comment\"> * ``sc.hasNextDouble()  &lt;=&gt;  sc.nextDouble()</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从键盘接收数据【next() 按字符】</span></span><br><span class=\"line\">        Scanner sc1 = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sc1.hasNext()) &#123;</span><br><span class=\"line\">                String str1 = sc1.next();</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;输入的数据为：&quot;</span> + str1);</span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">        sc1.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从键盘接收数据【nextLine() 按行，接收回车之前的所有字符，包括空白符】</span></span><br><span class=\"line\">\t    Scanner sc2 = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        <span class=\"comment\">// 从键盘接收数据</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">// nextLine方式接收字符串</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;nextLine方式接收：&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 判断是否还有输入</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sc2.hasNextLine()) &#123;</span><br><span class=\"line\">            String str2 = sc2.nextLine();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;输入的数据为：&quot;</span> + str2);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scan.close();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n<h3 id=\"7-8-Regex-正则表达式：\"><a href=\"#7-8-Regex-正则表达式：\" class=\"headerlink\" title=\"7.8 Regex-正则表达式：\"></a>7.8 Regex-正则表达式：</h3><p><code>import java.util.regex.*;</code></p>\n<p>java.util.regex 包主要包括以下三个类：</p>\n<ul>\n<li>  Pattern 类：<code>表达式</code></li>\n<li>  Matcher 类：<code>匹配引擎</code></li>\n<li>  PatternSyntaxException类：<code>语法错误</code></li>\n</ul>\n<p>Java中的<code>\\\\</code> 等价于 其他语言中的 <code>\\</code>: </p>\n<ul>\n<li>   <code>\\b</code>表示匹配删除，<code>\\\\b</code>表示匹配边界</li>\n<li>  例如：要匹配 str1 = ”(hello)“，正则必须为<code>\\\\(hello\\\\)</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t1. 匹配1个字符：.</span></span><br><span class=\"line\"><span class=\"comment\">*\t2。匹配前面的1个字符 0次~多次：* 等价于&#123;0,&#125;，例如：ab* 即：ab&#123;0,&#125;   =&gt;匹配：[a,ab]</span></span><br><span class=\"line\"><span class=\"comment\">*\t3。匹配前面的1个字符 1次~多次：+ 等价于&#123;1,&#125;，例如：ab+ 即：ab&#123;1,&#125;   =&gt;匹配：[ab，abb]</span></span><br><span class=\"line\"><span class=\"comment\">*\t4。匹配前面的1个字符 0次~1次：? 等价于&#123;0,1&#125;，例如：ab? 即：ab&#123;0,1&#125;  =&gt;匹配：[a,ab]</span></span><br><span class=\"line\"><span class=\"comment\">*\t4。非贪心匹配，尽可能短，用于匹配修饰符之后：? ，例如：ab? 即：a*? =&gt;匹配：a</span></span><br><span class=\"line\"><span class=\"comment\">*\t6. 匹配特殊字符：\\ ,例如：\\\\d 表示匹配 \\d ,即：匹配1个数字【java中的 \\\\ 相当于 其他语言中 \\】</span></span><br><span class=\"line\"><span class=\"comment\">*\t7. 匹配以指定字符开头的字串：^字符,例如：^a 表示匹配以a开头的字串</span></span><br><span class=\"line\"><span class=\"comment\">*\t8. 匹配以指定字符结尾的字串：字符$,例如：a$ 表示匹配以a结尾的字串</span></span><br><span class=\"line\"><span class=\"comment\">*\t9. 匹配其中的一个，相当于&quot;或&quot;：(字符1|字符2),例如：fu(c|n)  =&gt; 匹配：[fuc,fun]</span></span><br><span class=\"line\"><span class=\"comment\">*\t10. 匹配指定字符集中的任意一个：[字符1字符2字符3],例如：fu[abc] =&gt; 匹配：[fua,fub,fuc]</span></span><br><span class=\"line\"><span class=\"comment\">*\t11. 匹配指定连续的字符集中的任意一个：[字符1-字符3],例如：fu[a-c] =&gt; 匹配：[fua,fub,fuc]</span></span><br><span class=\"line\"><span class=\"comment\">*\t12. 不匹配指定数组中的任意一个：[^字符1字符2字符3],例如：fu[^abc] =&gt; 不匹配：[fua,fub,fuc]</span></span><br><span class=\"line\"><span class=\"comment\">*\t12. 不匹配指定数组中的任意一个：[^字符1-字符3],例如：fu[^a-c] =&gt; 不匹配：[fua,fub,fuc]</span></span><br><span class=\"line\"><span class=\"comment\">*\t13. 匹配以指定字符结尾的字串：字符$,例如：a$ 表示匹配以a结尾的字串</span></span><br><span class=\"line\"><span class=\"comment\">*\t14. 只匹配边界位置的字符：\\b 例如：&quot;er\\b&quot; 匹配=&gt; never , 不匹配=&gt; verb</span></span><br><span class=\"line\"><span class=\"comment\">*\t15. 不匹配边界位置的字符：\\B 例如：&quot;er\\B&quot; 不匹配=&gt; never , 匹配=&gt; verb</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        String str1 = <span class=\"string\">&quot;Hello World 123,Hello Man 456! &quot;</span>;</span><br><span class=\"line\">        String pattern = <span class=\"string\">&quot;.*Hello.*&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> isMatch = Pattern.matches(pattern,str1);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;字符串中是否能否找到Hello：&quot;</span>+isMatch);\t<span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h3 id=\"7-9-try-catch-异常处理：\"><a href=\"#7-9-try-catch-异常处理：\" class=\"headerlink\" title=\"7.9 try-catch 异常处理：\"></a>7.9 try-catch 异常处理：</h3><p>所有的异常类是从 <code>java.lang.Exception 类</code>继承的子类</p>\n<p><a href=\"https://www.runoob.com/java/java-exceptions.html\">Java 异常处理 | 菜鸟教程 (runoob.com)</a></p>\n<p>异常：</p>\n<ul>\n<li>  <code>检查性异常</code>：最容易犯，编译时不能忽略，如：打开不存在的文件</li>\n<li>  <code>运行时异常</code>：可以避免，编译时可被忽略，如：空指针异常、下标越界异常、算数异常（如：除数为0）、类型转化异常</li>\n<li>  <code>错误</code>（编译错误、运行错误、逻辑错误）：脱离控制，如：堆栈溢出、虚拟机错误、线程死锁</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gjachn.png\" alt=\"异常处理-使用技巧\"></p>\n<p>声明异常：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 声明异常：try-catch 或 在定义方法时：方法名()throws 异常&#123; &#125;</span></span><br><span class=\"line\"><span class=\"comment\">*\t声明异常的注意事项：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 只有父类声明了某个异常，子类才能声明该种异常/该种异常的子类</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t   \t【父类有，子类才能有】</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 子类重写父类的方法时，也要声明 父类已经声明的异常 或 父类已经声明的异常的子类异常</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 越是子类的异常，越要先catch</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用 try-catch 来声明异常</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    file = <span class=\"keyword\">new</span> FileInputStream(fileName);</span><br><span class=\"line\">    x = (<span class=\"keyword\">byte</span>) file.read();</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(FileNotFoundException f) &#123; <span class=\"comment\">// Not valid!</span></span><br><span class=\"line\">    f.printStackTrace();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(IOException i) &#123;</span><br><span class=\"line\">    i.printStackTrace();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">finally</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 无论是否有异常，都会执行的代码</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用 throws关键字 来声明异常</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">className</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deposit</span><span class=\"params\">(<span class=\"keyword\">double</span> amount)</span> <span class=\"keyword\">throws</span> RemoteException</span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// Method implementation</span></span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RemoteException();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//Remainder of class definition</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>在 Java 中你可以自定义异常。编写自己的异常类时需要记住下面的几点。</p>\n<ul>\n<li>  所有异常都必须是 Throwable 的子类。</li>\n<li>  如果希望写一个<code>检查性异常类</code>【编译不通过的异常】，则需要继承 Exception 类。=》try-catch 或 throws</li>\n<li>  如果你想写一个<code>运行时异常类</code>【运行不通过的异常】，那么需要继承 RuntimeException 类。</li>\n</ul>\n<p>出现算数异常：除数不能为0</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 出现算数异常：除数不能为0</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> a=<span class=\"number\">10</span>,b=<span class=\"number\">0</span>;</span><br><span class=\"line\">        System.out.println(div(a,b));</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 除法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">div</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a/b;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>自定义异常-步骤：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t自定义异常-步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 创建异常类，该异常类继承 Exception类</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 重写 异常类的构造方法</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t手动抛出异常-步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 选择1个合适的异常类</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 创建异常类的对象</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. 抛出对象</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 异常类</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">myException</span> <span class=\"keyword\">extends</span> <span class=\"title\">Exception</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">myException</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">myException</span><span class=\"params\">(String msg)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(msg);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 父类</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Father</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> myException</span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;我是父类的-eat&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 女儿类</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Daughter</span> <span class=\"keyword\">extends</span> <span class=\"title\">Father</span></span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">//main方法</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">                   Father daughter = <span class=\"keyword\">new</span> Daughter();</span><br><span class=\"line\"></span><br><span class=\"line\">                   <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                       daughter.eat();</span><br><span class=\"line\">                   &#125;<span class=\"keyword\">catch</span> (myException e)&#123;</span><br><span class=\"line\">                        e.printStackTrace(); <span class=\"comment\">// 打印堆栈的轨迹</span></span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">//女儿类的 eat()</span></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> myException </span>&#123;\t<span class=\"comment\">//子类声明的异常必须 小于等于 父类声明的异常</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;我是女儿类的-eat&quot;</span>);</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;我是女儿类的-eat&quot;</span>);</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;我是女儿类的-eat&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 打印3次&quot;我是女儿类的-eat&quot;后，马上抛出异常</span></span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> myException(<span class=\"string\">&quot;我吃太多了~&quot;</span>);\t</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gjaI74.png\" alt=\"异常-层次图\"></p>\n<h2 id=\"8-Stream、IO、File\"><a href=\"#8-Stream、IO、File\" class=\"headerlink\" title=\"8. Stream、IO、File\"></a>8. Stream、IO、File</h2><p><code>import java.io.*;</code></p>\n<p>需要定义<code> IO异常</code></p>\n<ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1Tz4y1X7H7?from=search&seid=14230994899231979002\">Java-IO-视频</a></li>\n<li>  <a href=\"https://www.cnblogs.com/coderzjz/p/13670088.html\">Java-IO-笔记</a></li>\n</ul>\n<h3 id=\"8-1-Stream的介绍：\"><a href=\"#8-1-Stream的介绍：\" class=\"headerlink\" title=\"8.1 Stream的介绍：\"></a>8.1 Stream的介绍：</h3><p><code>流-Stream</code>:</p>\n<blockquote>\n<p>  一个<code>数据的序列</code>。【以 <strong>内存</strong> 为参照物】</p>\n<ul>\n<li><p>  <code>输入流</code>表示<strong>计算机</strong>从一个源<code>读取数据 =&gt; 内存</code>，</p>\n</li>\n<li><p>  <code>输出流</code>表示<strong>计算机</strong>向一个目标<code>写入数据 =&gt; 存储设备</code>。【必须 flush( ) 才能写入】</p>\n</li>\n</ul>\n</blockquote>\n<p>字节流：可以复制 文本、图片、二进制文件</p>\n<p>字符流：可以复制 文本文件（包括中文）</p>\n<p>流的分类：</p>\n<blockquote>\n<ol>\n<li><p>按方向：</p>\n<ul>\n<li>  输入流：<code>读取数据 =&gt; 内存</code></li>\n<li>输出流：<code>写入数据 =&gt; 存储设备</code></li>\n</ul>\n</li>\n<li><p>按单位：</p>\n<ul>\n<li>  字节流</li>\n<li>字符流:（只能：读写文本）</li>\n</ul>\n</li>\n<li><p>按功能：</p>\n<ul>\n<li>  节点流：读写 数据</li>\n<li>  过滤流：增强 功能</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gjaXjK.png\" alt=\"IO流\"></p>\n<h3 id=\"8-2-Stream的常用类：\"><a href=\"#8-2-Stream的常用类：\" class=\"headerlink\" title=\"8.2 Stream的常用类：\"></a>8.2 Stream的常用类：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t字节输入流：InputStream【读数据】\t</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. read()\t\t\t\t\t\t\t\t// 读取下一个字节</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. read(byte[] b)\t\t\t\t\t\t// 读取下面多个字节</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. read(byte[] b,int offset,int maxlen)\t// 读取下面多个字节</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. close()\t\t\t\t\t\t\t\t// 关闭资源</span></span><br><span class=\"line\"><span class=\"comment\">*\t步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t1. 创建 FileInputStream</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t2. 创建 byte[]</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t3. 在 FileInputStream调用 read(byte数组)上</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t字节输出流：OutputStream【写数据】</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. write(int b)\t\t\t\t\t\t\t\t// 输出指定字节</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. write(byte[] b)\t\t\t\t\t\t\t// 输出指定字节数组</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. write(byte[] h,int offset,int len)\t\t// 输出指定位置和长度的多个字节</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. flush()\t\t\t\t\t\t\t\t\t// 刷新缓冲区，并 写入数据</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t5. close()\t\t\t\t\t\t\t\t\t// 关闭资源</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// FileInputStream : InputStream的子类</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// main方法，声明IO异常        </span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 假设&#x27;E:\\abc.txt&#x27; 已经存在，且内容为：abc012</span></span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 创建文件输入流</span></span><br><span class=\"line\">            FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;e:\\\\abc.txt&quot;</span>);</span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 如果 存在字节，则输出，继续循环,</span></span><br><span class=\"line\">            <span class=\"comment\">// 最终输出：97 98 99 48 49 50 读取完毕！【其中，数字：表示字节的ASCII码】</span></span><br><span class=\"line\"><span class=\"comment\">// 读取单个字节</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ( (data=fis.read()) != -<span class=\"number\">1</span>   )&#123;</span><br><span class=\"line\">                    System.out.println(data);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            fis.close();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;读取完毕！&quot;</span>);</span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 读取多个字节            </span></span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] buf  = <span class=\"keyword\">new</span>  <span class=\"keyword\">byte</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> count = <span class=\"number\">0</span> ;\t\t\t\t<span class=\"comment\">// 返回 读取的字节个数</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>( (count = fis.read(buf) ) ！=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                   System.out.println(<span class=\"keyword\">new</span> String(buf));\t<span class=\"comment\">// 输出 读取的字节的字符形式</span></span><br><span class=\"line\">            &#125;         </span><br><span class=\"line\">            fis.close();</span><br><span class=\"line\">             System.out.println(<span class=\"string\">&quot;读取完毕！&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// FileOutputStream : OutputStream的子类</span></span><br><span class=\"line\">        <span class=\"comment\">// 构造方法：FileOutputStream(路径,[append=false])</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;e:\\\\abc.txt&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 写入单个字节</span></span><br><span class=\"line\">        fos.write(<span class=\"number\">97</span>);\t\t<span class=\"comment\">// 输出：a</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 写入多个字节</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buf = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[]&#123;<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"string\">&#x27;e&#x27;</span>,<span class=\"string\">&#x27;f&#x27;</span>&#125;;</span><br><span class=\"line\">        fos.write(buf);\t\t<span class=\"comment\">// 输出：def</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">\t\t<span class=\"comment\">// 写入多个字符</span></span><br><span class=\"line\">        String str1 = <span class=\"string\">&quot;这是一个字符串&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buf2 = str1.getBytes();</span><br><span class=\"line\">        fos.write(buf2);\t<span class=\"comment\">// 输出：&quot;这是一个字符串&quot;</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        fos.close();    </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;输出完毕&quot;</span>);\t<span class=\"comment\">// 最终输出：adef这是一个字符串</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"8-3-案例-文件复制：\"><a href=\"#8-3-案例-文件复制：\" class=\"headerlink\" title=\"8.3 案例-文件复制：\"></a>8.3 案例-文件复制：</h3><p>【先输入流-读取，再输出流-写入】</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 目标：将&quot;E:\\A,jpeg &quot; 复制到 ”E:\\0\\B。jpg“</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建输入、输出流</span></span><br><span class=\"line\">            FileInputStream fis= <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;E:\\\\A.jpeg&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;E:\\\\0\\\\B.jpeg&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 创建缓存区 67KB</span></span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] buf = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">67</span>*<span class=\"number\">1024</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 读取的字节个数</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">while</span>((count = fis.read(buf)) != -<span class=\"number\">1</span>) &#123; <span class=\"comment\">// 固定写法</span></span><br><span class=\"line\"><span class=\"comment\">// 写入文件</span></span><br><span class=\"line\">               fos.write(buf,<span class=\"number\">0</span>,count);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"><span class=\"comment\">// 关闭资源        </span></span><br><span class=\"line\">        \tfis.close();</span><br><span class=\"line\">        \tfos.close();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;复制完毕&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"8-4-字节缓存流：\"><a href=\"#8-4-字节缓存流：\" class=\"headerlink\" title=\"8.4 字节缓存流：\"></a>8.4 字节缓存流：</h3><p><code>java.io.BufferedInputStream</code></p>\n<p><code>java.io.BufferedOutputStream</code></p>\n<p>需要与 InputStream或 其子类 配合使用。</p>\n<p>目的：</p>\n<blockquote>\n<ol>\n<li><p> 调高IO效率，减少访问磁盘</p>\n</li>\n<li><p>数据存储在缓冲区，flush( )将数据写入文件，也可直接close( )</p>\n<p> 【close( )也会调用flush( ),将内容写入文件】</p>\n</li>\n</ol>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t1. new InputStream</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t2. new BufferedInputStream</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t3. 读取缓存，输出</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t4.关闭资源</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 缓冲输入流</span></span><br><span class=\"line\"><span class=\"comment\">// BufferedInputStream </span></span><br><span class=\"line\">        FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;e:\\\\abc.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        BufferedInputStream bis = <span class=\"keyword\">new</span> BufferedInputStream(fis);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> data=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读取：&quot;adef&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>((data = bis.read()) !=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 打印结果：97:a  100:d  101:e  102:f </span></span><br><span class=\"line\">            System.out.print(data+<span class=\"string\">&quot;:&quot;</span>+(<span class=\"keyword\">char</span>)data+<span class=\"string\">&quot;  &quot;</span>);</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        bis.close();</span><br><span class=\"line\">\t\tfis();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 缓冲输出流</span></span><br><span class=\"line\"><span class=\"comment\">// BufferedOutputStream【最后必须 flush() 或 close() 才能 写入成功】</span></span><br><span class=\"line\">\t    FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;e:\\\\def.txt&quot;</span>);</span><br><span class=\"line\">        BufferedOutputStream bos  = <span class=\"keyword\">new</span> BufferedOutputStream(fos);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i&lt;<span class=\"number\">10</span>)&#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            bos.write(<span class=\"string\">&quot;Hello\\n&quot;</span>.getBytes());</span><br><span class=\"line\">            bos.flush();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\tbos.close();</span><br><span class=\"line\">\t\tfos();</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"8-5-对象流（序列化-反序列化）：\"><a href=\"#8-5-对象流（序列化-反序列化）：\" class=\"headerlink\" title=\"8.5 对象流（序列化 / 反序列化）：\"></a>8.5 对象流（序列化 / 反序列化）：</h3><ul>\n<li><p>  ObjectOutputStream</p>\n</li>\n<li><p>  ObjectInputStream</p>\n</li>\n</ul>\n<p>对象流：【需要结合 InputStream / OutputStream】</p>\n<blockquote>\n<ol>\n<li> 增强了 缓冲区的功能</li>\n<li> 增强了 读写 基本数据类型 + 字符串</li>\n<li> 增强了 读写对象：readObject( ) 和 writeObject( obj)</li>\n</ol>\n</blockquote>\n<p><code>使用 Stream 传输 Object 的过程</code>：</p>\n<ul>\n<li><p>  序列化【写入】：ObjectOutputStream，<code>1个类要想序列化，必须 implements Serializable接口</code></p>\n</li>\n<li><p>  反序列化【读取】：ObjectInputStream</p>\n</li>\n</ul>\n<h4 id=\"8-5-1-序列化：【写入Object-到-文件】\"><a href=\"#8-5-1-序列化：【写入Object-到-文件】\" class=\"headerlink\" title=\"8.5.1 序列化：【写入Object 到 文件】\"></a>8.5.1 序列化：【写入Object 到 文件】</h4><p><strong>注意</strong>： </p>\n<ul>\n<li>  被 写入文件（序列化）的类 必须实现 <code>可序列化接口</code> 。</li>\n<li>  如果<code>某个属性不想被序列化</code>，可以使用transient来修饰 某个类里 的 某个属性：<code>private transient int age;</code> 。</li>\n<li>  <code>静态属性</code>不可以序列化。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t类：Student</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 属性：name,age【如果是class类型的属性，则该属性也需要implements Serializable接口】</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. implements Serializable接口</span></span><br><span class=\"line\"><span class=\"comment\">\t\t3. 类要有序列化版本ID（快捷键自动添加），该ID可以保证序列化、反序列化的类是同一个</span></span><br><span class=\"line\"><span class=\"comment\">*\t</span></span><br><span class=\"line\"><span class=\"comment\">*\t序列化-步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. new 文件输出流、对象输出流</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 序列化(写入对象)</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. 关闭资源</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Student类</span></span><br><span class=\"line\"><span class=\"comment\">// 【注意：】1个类要想序列化，必须 implements Serializable接口</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">100L</span>;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 以下省略了 ：构造方法、getter、setter</span></span><br><span class=\"line\">   \t\t<span class=\"comment\">// ……</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建文件输出流、对象输出流</span></span><br><span class=\"line\">\tFileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;e:\\\\ghi.txt&quot;</span>);</span><br><span class=\"line\">    ObjectOutputStream oos = <span class=\"keyword\">new</span> ObjectOutputStream(fos);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 序列化： ObjectOutputStream</span></span><br><span class=\"line\">    Student ZhangSan = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张三&quot;</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">    oos.writeObject(ZhangSan);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">    oos.close();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"8-5-2-反序列化：【读取文件中的Object】\"><a href=\"#8-5-2-反序列化：【读取文件中的Object】\" class=\"headerlink\" title=\"8.5.2 反序列化：【读取文件中的Object】\"></a>8.5.2 反序列化：【读取文件中的Object】</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t类：上面已经 序列化的类Student</span></span><br><span class=\"line\"><span class=\"comment\">*\t</span></span><br><span class=\"line\"><span class=\"comment\">*\t反序列化-步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. new 文件输入流、对象输入流</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 反序列化(读取对象，并强制转化为Student类)</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. 关闭资源</span></span><br><span class=\"line\"><span class=\"comment\">*/</span>       </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 反序列化</span></span><br><span class=\"line\">\t FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;e:\\\\ghi.txt&quot;</span>);</span><br><span class=\"line\">     ObjectInputStream ois = <span class=\"keyword\">new</span> ObjectInputStream(fis);</span><br><span class=\"line\"></span><br><span class=\"line\">     Student stu1 = (Student) ois.readObject();</span><br><span class=\"line\">     System.out.println(stu1.getName());\t<span class=\"comment\">// 张三</span></span><br><span class=\"line\">     System.out.println(stu1.getAge());\t\t<span class=\"comment\">// 20</span></span><br><span class=\"line\">\t ois.close();</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"8-6-字符流：\"><a href=\"#8-6-字符流：\" class=\"headerlink\" title=\"8.6 字符流：\"></a>8.6 字符流：</h3><h4 id=\"8-6-1-字符编码：\"><a href=\"#8-6-1-字符编码：\" class=\"headerlink\" title=\"8.6.1 字符编码：\"></a>8.6.1 字符编码：</h4><ul>\n<li>  <code>ISO-8859-1</code>：【1个Byte表示】ASCII，希腊语、阿拉伯语、泰语等</li>\n<li>  <code>UTF-8</code>：UniCode的可变长编码</li>\n<li>  <code>GB-2312</code>：【1-2 Btye】简体中文</li>\n<li>  <code>GBK</code>：【1-2 Btye】简体中文 + 扩展（GB-2312的升级版）</li>\n<li>  <code>Big5</code>：台湾-繁体中文</li>\n</ul>\n<p><strong>注意：</strong><code> 编码方式</code> 与 <code>解码方式</code> 不一致 =》<code>乱码</code></p>\n<h4 id=\"8-6-2-字符流：\"><a href=\"#8-6-2-字符流：\" class=\"headerlink\" title=\"8.6.2 字符流：\"></a>8.6.2 字符流：</h4><p>字符流 =》 <code>java.io.Reader</code> 和 <code>java.io.Writer</code></p>\n<p>字符流常用子类：<code>FileReader</code>  和 <code>FileWriter</code> </p>\n<p>FileReader：【可显示中文(默认UTF-8编码)】</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 每次读取1个 </span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tFileReader fr = <span class=\"keyword\">new</span> FileReader(<span class=\"string\">&quot;e:\\\\0\\\\1.txt&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> data= <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>( (data=fr.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println((<span class=\"keyword\">char</span>)data);\t\t<span class=\"comment\">// 打印：好好学习</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\tfr.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用缓冲区读取</span></span><br><span class=\"line\"></span><br><span class=\"line\">       FileReader fr = <span class=\"keyword\">new</span> FileReader(<span class=\"string\">&quot;e:\\\\0\\\\1.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] buf = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[<span class=\"number\">4</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> count= <span class=\"number\">0</span>; </span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>( (count = fr.read(buf)) != -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            System.out.println(<span class=\"keyword\">new</span> String(buf,<span class=\"number\">0</span>,count));\t<span class=\"comment\">// 打印：好好学习</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\tfr.close();</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>FileWriter：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      </span><br><span class=\"line\">FileWriter fw = <span class=\"keyword\">new</span> FileWriter(<span class=\"string\">&quot;e:\\\\0\\\\1.txt&quot;</span>);</span><br><span class=\"line\">      fw.write(<span class=\"string\">&quot;天天向上&quot;</span>);</span><br><span class=\"line\">      fw.close();\t\t\t<span class=\"comment\">// 输出：天天向上</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h4 id=\"8-6-2-字符流-复制文本文件：\"><a href=\"#8-6-2-字符流-复制文本文件：\" class=\"headerlink\" title=\"8.6.2 字符流-复制文本文件：\"></a>8.6.2 字符流-复制文本文件：</h4><p><code>FileReader  + FileWriter  </code>： 复制<strong>文本文件</strong>【<code>无法复制：图片、二进制文件</code>】</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 字符流-复制文本文件        </span></span><br><span class=\"line\">\t\tFileReader fr = <span class=\"keyword\">new</span> FileReader(<span class=\"string\">&quot;e:\\\\1.txt&quot;</span>);</span><br><span class=\"line\">        FileWriter fw = <span class=\"keyword\">new</span> FileWriter(<span class=\"string\">&quot;e:\\\\0\\\\2.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] buf = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>((count = fr.read(buf)) != -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            fw.write(<span class=\"keyword\">new</span> String(buf,<span class=\"number\">0</span>,count));</span><br><span class=\"line\">            fw.flush();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        fw.close();</span><br><span class=\"line\">        fr.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"8-6-3-字符缓冲流\"><a href=\"#8-6-3-字符缓冲流\" class=\"headerlink\" title=\"8.6.3 字符缓冲流:\"></a>8.6.3 字符缓冲流:</h4><ul>\n<li>  BufferedReader：输入</li>\n<li>  BufferedWriter：输出【原样打印】</li>\n<li>  PrintWriter：输出【原样打印、换行打印】</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 字符缓冲-输入流【第一种】:BufferedReader</span></span><br><span class=\"line\"></span><br><span class=\"line\">        FileReader fr = <span class=\"keyword\">new</span> FileReader(<span class=\"string\">&quot;e:\\\\1.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(fr);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] buf = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> count =<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>((count=br.read(buf))!= -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println(buf);\t<span class=\"comment\">// 打印：天天向上-1 天天向上-2 天天向上-3</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 字符缓冲-输入流【第二种】:BufferedReader</span></span><br><span class=\"line\">        FileReader fr = <span class=\"keyword\">new</span> FileReader(<span class=\"string\">&quot;e:\\\\1.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(fr);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] buf = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        String line = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>((line=br.readLine()) != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            System.out.println(line);</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 字符缓冲-输出流: BufferedWriter</span></span><br><span class=\"line\"></span><br><span class=\"line\">        FileWriter fw = <span class=\"keyword\">new</span> FileWriter(<span class=\"string\">&quot;e:\\\\1.txt&quot;</span>);</span><br><span class=\"line\">        BufferedWriter bw = <span class=\"keyword\">new</span> BufferedWriter(fw);</span><br><span class=\"line\">        bw.write(<span class=\"string\">&quot;好好学习&quot;</span>);</span><br><span class=\"line\">        bw.newLine();\t<span class=\"comment\">// 换行</span></span><br><span class=\"line\">        bw.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// PrintWriter</span></span><br><span class=\"line\">\t<span class=\"comment\">// 原样打印</span></span><br><span class=\"line\">        PrintWriter pw = <span class=\"keyword\">new</span> PrintWriter(<span class=\"string\">&quot;e:\\\\2.txt&quot;</span>);</span><br><span class=\"line\">        pw.println(<span class=\"number\">97</span>);</span><br><span class=\"line\">        pw.println(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        pw.flush();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// </span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"8-7-桥转换流：\"><a href=\"#8-7-桥转换流：\" class=\"headerlink\" title=\"8.7 桥转换流：\"></a>8.7 桥转换流：</h3><p><code>java.io.InputStreamReader</code> 和 <code>java.io.OutputStreamWriter</code></p>\n<p>转化：</p>\n<ul>\n<li>  <code>字节流</code> =转为=》<code>字符流</code></li>\n<li>  可设置<code>编码</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1个1个读取   </span></span><br><span class=\"line\">\t\tFileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;e:\\\\1.txt&quot;</span>);</span><br><span class=\"line\">        InputStreamReader isr = <span class=\"keyword\">new</span> InputStreamReader(fis,<span class=\"string\">&quot;utf-8&quot;</span>);\t<span class=\"comment\">// 指定打开的编码</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> data=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>((data= isr.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println((<span class=\"keyword\">char</span>)data);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(isr.getEncoding());\t\t<span class=\"comment\">// 获取当前编码</span></span><br><span class=\"line\">        isr.close();</span><br><span class=\"line\">        fis.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出：</span></span><br><span class=\"line\">        FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;e:\\\\1.txt&quot;</span>);</span><br><span class=\"line\">        OutputStreamWriter osw = <span class=\"keyword\">new</span> OutputStreamWriter(fos);</span><br><span class=\"line\">        osw.write(<span class=\"string\">&quot;霓虹，你好\\r\\n我是第二行&quot;</span>);</span><br><span class=\"line\">        osw.flush();</span><br><span class=\"line\">\t\tfos.close();</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"8-8-File类：\"><a href=\"#8-8-File类：\" class=\"headerlink\" title=\"8.8 File类：\"></a>8.8 File类：</h3><p><code>File类</code>：代表物理磁盘中的<code>文件、文件夹</code>。</p>\n<p>File类-使用：</p>\n<ul>\n<li>分隔符<ul>\n<li>  File.pathSeparatorChar：路径分隔符（\\）</li>\n<li>  File.separator：名称分隔符（;）</li>\n</ul>\n</li>\n<li>  文件操作</li>\n<li>  文件夹操作</li>\n</ul>\n<h4 id=\"8-8-1-文件操作：\"><a href=\"#8-8-1-文件操作：\" class=\"headerlink\" title=\"8.8.1 文件操作：\"></a>8.8.1 文件操作：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">creFile</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 创建文件对象，无论是否：真实存在        </span></span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;e:\\\\3.txt&quot;</span>);\t</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 按段是否：创建成功 createNewFile()</span></span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> isCreSuccess = file.createNewFile();\t</span><br><span class=\"line\">        System.out.println(isCreSuccess);\t</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 判断是否：已存在 file.exists()        </span></span><br><span class=\"line\">        System.out.println(file.exists());\t</span><br><span class=\"line\">   </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 判断是否：删除  file.delete()       </span></span><br><span class=\"line\">        System.out.println(file.delete());</span><br><span class=\"line\">     </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// JVM退出时，删除        </span></span><br><span class=\"line\">        file.deleteOnExit();</span><br><span class=\"line\"> </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 获取绝对路径   file.getAbsoluteFile()</span></span><br><span class=\"line\">         System.out.println(file.getAbsoluteFile());  <span class=\"comment\">// e:\\3.txt</span></span><br><span class=\"line\">  </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 获取路径 file.getPath()      </span></span><br><span class=\"line\">         System.out.println(file.getPath()); <span class=\"comment\">// e:\\3.txt</span></span><br><span class=\"line\">     </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 获取路径 file.getName()        </span></span><br><span class=\"line\">        System.out.println(file.getName());\t<span class=\"comment\">// 3.txt</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 获取父目录 file.getParent()           </span></span><br><span class=\"line\">        System.out.println(file.getParent());\t<span class=\"comment\">// e:\\</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 获取文件的创建时间 file.length()       </span></span><br><span class=\"line\">        System.out.println(file.length());</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 获取文件的 最后修改时间的毫秒数 file.lastModified()</span></span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">new</span> Date(file.lastModified()).toString());</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 查看读、写权限        </span></span><br><span class=\"line\">        System.out.println(file.canRead());</span><br><span class=\"line\">        System.out.println(file.canWrite());</span><br><span class=\"line\">        System.out.println(file.canExecute());</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 判断 文件、文件夹        </span></span><br><span class=\"line\">        System.out.println(file.isFile());</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 判断是否 隐藏        </span></span><br><span class=\"line\">        System.out.println(file.isHidden());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h4 id=\"8-8-2-文件夹操作：\"><a href=\"#8-8-2-文件夹操作：\" class=\"headerlink\" title=\"8.8.2 文件夹操作：\"></a>8.8.2 文件夹操作：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">creDir</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">       </span><br><span class=\"line\"><span class=\"comment\">//创建文件夹对象</span></span><br><span class=\"line\">        File dir =<span class=\"keyword\">new</span> File(<span class=\"string\">&quot;e:\\\\0\\\\1&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 判断是否存在</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!dir.exists())&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 创建单层目录: dir.mkdir();\t        </span></span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 创建多层目录: dir.mkdirs();</span></span><br><span class=\"line\">            dir.mkdirs();\t<span class=\"comment\">// 返回 true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除文件夹       </span></span><br><span class=\"line\">        dir.delete();</span><br><span class=\"line\"></span><br><span class=\"line\">       </span><br><span class=\"line\">       </span><br><span class=\"line\"><span class=\"comment\">// 列出所有的文件名              </span></span><br><span class=\"line\">        String[] arr = dir.list();</span><br><span class=\"line\">       </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(String f : arr)&#123;</span><br><span class=\"line\">            System.out.println(f);            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">       </span><br><span class=\"line\">       </span><br><span class=\"line\">       </span><br><span class=\"line\"><span class=\"comment\">// ... 所有的方法都与文件的一样</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"8-8-3-FileFilter接口：\"><a href=\"#8-8-3-FileFilter接口：\" class=\"headerlink\" title=\"8.8.3 FileFilter接口：\"></a>8.8.3 FileFilter接口：</h4><p>【按条件 筛选出 文件、文件夹】</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 传入FileFilter匿名对象，如果是jpg,</span></span><br><span class=\"line\"></span><br><span class=\"line\">       File[] arr = dir.listFiles(<span class=\"keyword\">new</span> FileFilter() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">accept</span><span class=\"params\">(File pathname)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(pathname.getName().endsWith(<span class=\"string\">&quot;.txt&quot;</span>))&#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 符合条件的返回true</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出：符合条件的文件名</span></span><br><span class=\"line\">       <span class=\"keyword\">for</span>(File f:arr)&#123;</span><br><span class=\"line\">           System.out.println(f.getName());</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"9-集合框架\"><a href=\"#9-集合框架\" class=\"headerlink\" title=\"9. 集合框架\"></a>9. 集合框架</h2><ul>\n<li>  <a href=\"https://blog.csdn.net/Zzh1110/article/details/105518682\">JavaSE–集合介绍</a></li>\n<li>  <a href=\"https://www.bilibili.com/video/BV1zD4y1Q7Fw?p=2\">千锋-Java集合框架详解-bilibili</a></li>\n<li>  <a href=\"https://www.cnblogs.com/coderzjz/p/13587167.html\">Java集合-简要笔记</a></li>\n<li>  <a href=\"https://lazydog036.gitee.io/2020/10/29/JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/\">JAVA集合框架详解</a></li>\n</ul>\n<h3 id=\"9-1-引入：\"><a href=\"#9-1-引入：\" class=\"headerlink\" title=\"9.1 引入：\"></a>9.1 引入：</h3><p><code>数组、链表、集合</code>等，都是<code>存放多个数据</code>的1种容器，都用于在<code>内存中存储</code>（而不是持久化存储：txt,abi,jpg）。</p>\n<p><code>数组</code>：【有序存储，元素可重复】</p>\n<ul>\n<li>  特点：指定长度后，长度不可再次更改，只能存放同一种类型的数据。 int [ ] arr = new int[ ];</li>\n<li>  缺点：长度固定，不可更改；添加、删除元素时，效率低；没有现成的方法或属性来获取数组长度</li>\n</ul>\n<p>为解决<code>数组</code>的上述<code>缺点</code>，引入了<code>集合</code>。</p>\n<ul>\n<li>  集合只能存储<code>引用类型</code>   ：</li>\n</ul>\n<blockquote>\n<p>  =&gt; 必须<code>自动装箱、自动拆箱</code>来将  <code>基本类型 </code> 转化为  <code>引用类型</code> 。     </p>\n</blockquote>\n<ul>\n<li>  为什么学习不同的集合？</li>\n</ul>\n<blockquote>\n<p>  不同的集合，在底层的数据结构的实现不同。</p>\n</blockquote>\n<ul>\n<li>  数组 与 集合 的区别：</li>\n</ul>\n<blockquote>\n<ol>\n<li> 数组长度固定，集合长度不固定。</li>\n<li> 数组可以存储基本类型+引用类型，集合只能存储引用类型（因此需要 自动装箱、自动拆箱）。</li>\n</ol>\n</blockquote>\n<ul>\n<li>  集合的包的位置：<code>import java.uitl.*;</code></li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gjdpAH.png\" alt=\"collection集合\"></p>\n<h3 id=\"9-2-Collection集合的操作：\"><a href=\"#9-2-Collection集合的操作：\" class=\"headerlink\" title=\"9.2 Collection集合的操作：\"></a>9.2 Collection集合的操作：</h3><p>Collection、List、Set是接口，不能直接new，而要借助他们的子类如：ArrayList、LinkedList、HashSet、TreeSet。</p>\n<h4 id=\"9-2-1-Collection-集合接口：\"><a href=\"#9-2-1-Collection-集合接口：\" class=\"headerlink\" title=\"9.2.1 Collection 集合接口：\"></a>9.2.1 Collection 集合接口：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* 集合的操作：</span></span><br><span class=\"line\"><span class=\"comment\">*\t1. 添加：add(obj),</span></span><br><span class=\"line\"><span class=\"comment\">*\t2. 删除：remove(),clear();</span></span><br><span class=\"line\"><span class=\"comment\">*\t3. 遍历：foreach语句，迭代器</span></span><br><span class=\"line\"><span class=\"comment\">*\t4. 判断：contains(),isEmpty(),equals()</span></span><br><span class=\"line\"><span class=\"comment\">*\t5. 获取：get()</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加：</span></span><br><span class=\"line\"></span><br><span class=\"line\">            Collection coll = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">            coll.add(<span class=\"string\">&quot;苹果&quot;</span>);</span><br><span class=\"line\">            coll.add(<span class=\"string\">&quot;西瓜&quot;</span>);</span><br><span class=\"line\">            System.out.println(“元素个数：”+coll.size());</span><br><span class=\"line\">            System.out.println(coll);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除：</span></span><br><span class=\"line\"></span><br><span class=\"line\">            coll.remove(<span class=\"string\">&quot;苹果&quot;</span>);</span><br><span class=\"line\">            System.out.println(coll);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 清空:</span></span><br><span class=\"line\">            coll.clear();</span><br><span class=\"line\">            System.out.println(coll);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历的2种方式【重点】：</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t1. 增强的for</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t2. 迭代器【专门用于遍历集合的接口】：</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t\thaNext(),有元素则返回true</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t\tnext(),获取下一个元素</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t\tremove()，移除当前元素</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 增强for</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Object obj:coll) &#123;</span><br><span class=\"line\">                String s = (String)obj;\t<span class=\"comment\">// 强制转化为真实的类型</span></span><br><span class=\"line\">                System.out.println(obj);</span><br><span class=\"line\">            &#125;\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 使用迭代器【注意：在迭代时，不能: 集合.remove(),</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 否则会报：并发修改异常;但可以 it.remove()】</span></span><br><span class=\"line\">            Iterator it = coll.iterator();</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">                String s = (String)it.next();</span><br><span class=\"line\">                System.out.println(s);</span><br><span class=\"line\">                it.remove();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(coll.size());\t<span class=\"comment\">// 0</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br><span class=\"line\"><span class=\"comment\">// 判断：存在-&gt; coll.contains();   </span></span><br><span class=\"line\"><span class=\"comment\">//      是否为空 -&gt; coll.isEmpty();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tSystem.out.println(coll.contains(<span class=\"string\">&quot;香蕉&quot;</span>));、</span><br><span class=\"line\">            System.out.println(coll.isEmpty(香蕉));</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"9-2-2-List-集合子接口：\"><a href=\"#9-2-2-List-集合子接口：\" class=\"headerlink\" title=\"9.2.2 List 集合子接口：\"></a>9.2.2 List 集合子接口：</h4><p>有序、可重复、有下标</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* List集合的操作：</span></span><br><span class=\"line\"><span class=\"comment\">*\t1. 添加：add(obj),addAll(index,collection)，add(index,obj);</span></span><br><span class=\"line\"><span class=\"comment\">*\t2. 删除：remove(),clear();</span></span><br><span class=\"line\"><span class=\"comment\">*   3. 保留元素：retainAll(collection);</span></span><br><span class=\"line\"><span class=\"comment\">*\t4. 遍历：foreach语句，</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t迭代器:</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\tIterator()、</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\tlistIterator()、</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\tlistIterator(index)【迭代方向可 先从前面开始，也可先从后开始】</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t</span></span><br><span class=\"line\"><span class=\"comment\">*\t5. 判断：contains(obj),isEmpty(),equals(obj)</span></span><br><span class=\"line\"><span class=\"comment\">*\t6. 获取：get(index),subList(from_index,to_index), indexOf(obj)</span></span><br><span class=\"line\"><span class=\"comment\">*\t7. 修改元素：set(index,obj)</span></span><br><span class=\"line\"><span class=\"comment\">*\t8. 转化为数组：toA</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ListIterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以下内容放入main中</span></span><br><span class=\"line\"></span><br><span class=\"line\">        List list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        list.add(<span class=\"string\">&quot;苹果&quot;</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">&quot;西瓜&quot;</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">&quot;香蕉&quot;</span>);</span><br><span class=\"line\">        System.out.println(list);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tListIterator it = list.listIterator();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// listIterator迭代器，从 前往后 迭代</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">            System.out.println(it.next());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// listIterator迭代器，从 后往前 迭代【先将指针移到最后，再从后往前打印】</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">           it.next();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(it.hasPrevious())&#123;</span><br><span class=\"line\">            System.out.println(it.previous());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// indexOf()</span></span><br><span class=\"line\"> \t\tSystem.out.println(list.indexOf(<span class=\"string\">&quot;香蕉&quot;</span>)); <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// remove(index)  ; remove((Object)obj)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tList list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        list.add(<span class=\"number\">20</span>);</span><br><span class=\"line\">        list.add(<span class=\"number\">30</span>);</span><br><span class=\"line\">        list.add(<span class=\"number\">40</span>);</span><br><span class=\"line\">        list.add(<span class=\"number\">50</span>);</span><br><span class=\"line\">        list.add(<span class=\"number\">60</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(list);</span><br><span class=\"line\"></span><br><span class=\"line\">        list.remove((Object)<span class=\"number\">20</span>);</span><br><span class=\"line\">\t\tlist.remove(<span class=\"number\">0</span>);  <span class=\"comment\">// 与上1行效果一致</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(list);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// subList(from_idx,to_idx) 返回子集,范围 [from_idx,to_idx)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"9-2-3-List-接口的常用实现类：\"><a href=\"#9-2-3-List-接口的常用实现类：\" class=\"headerlink\" title=\"9.2.3 List 接口的常用实现类：\"></a>9.2.3 List 接口的常用实现类：</h4><ul>\n<li>  ArrayList【重点】：数组，查询快、增删慢，线程不安全【jdk1.2】</li>\n</ul>\n<blockquote>\n<p>   源码分析：</p>\n<ol>\n<li> 默认容量（default_capacity）：当没有元素时，0；有1个元素时，10</li>\n<li> 数组（elementData）</li>\n<li> 当前大小（size）：</li>\n</ol>\n</blockquote>\n<ul>\n<li>  LinkedList：双链表，增删快、查询慢</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\tLinkedList常用方法：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. add()，addAll()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. remove(),removeAll()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. addFirst(),addLast()</span></span><br><span class=\"line\"><span class=\"comment\">* \t\t4. removeFirst(),removeLast()</span></span><br><span class=\"line\"><span class=\"comment\">* \t\t5. clear()</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        LinkedList ll = <span class=\"keyword\">new</span> LinkedList();</span><br><span class=\"line\"></span><br><span class=\"line\">        Student s1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张1&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">        Student s2 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张2&quot;</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        Student s3 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张3&quot;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加</span></span><br><span class=\"line\">        ll.add(s1);</span><br><span class=\"line\">        ll.add(s2);</span><br><span class=\"line\">        ll.add(s3);</span><br><span class=\"line\">        System.out.println(ll);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//删除</span></span><br><span class=\"line\">        ll.remove(s2);</span><br><span class=\"line\">        System.out.println(ll);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 头插</span></span><br><span class=\"line\">        ll.addFirst(s2);</span><br><span class=\"line\">        System.out.println(ll);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 头删</span></span><br><span class=\"line\">        ll.removeFirst();</span><br><span class=\"line\">        System.out.println(ll);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 尾插</span></span><br><span class=\"line\">        ll.addLast(s2);</span><br><span class=\"line\">        System.out.println(ll);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 尾删</span></span><br><span class=\"line\">        ll.removeLast();</span><br><span class=\"line\">        System.out.println(ll);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历【向后】</span></span><br><span class=\"line\">        ListIterator it = ll.listIterator();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">            System.out.println(it.next());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历【向前】</span></span><br><span class=\"line\">         <span class=\"keyword\">while</span>(it.hasPrevious())&#123;</span><br><span class=\"line\">                System.out.println(it.previous());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<ul>\n<li>  Vector：数组，查询快、增删慢，线程安全，【jdk1.0】</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\tVector集合 演示：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tadd()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tremove()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tsize()</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t遍历： 枚举器</span></span><br><span class=\"line\"><span class=\"comment\">* </span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        Vector v = <span class=\"keyword\">new</span> Vector();</span><br><span class=\"line\">        v.add(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">        v.add(<span class=\"string\">&quot;里斯&quot;</span>);</span><br><span class=\"line\">        v.add(<span class=\"string\">&quot;威武&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 枚举器，遍历Vector</span></span><br><span class=\"line\">        Enumeration en = v.elements();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(en.hasMoreElements())&#123;</span><br><span class=\"line\">            System.out.println(en.nextElement());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// firstElement()</span></span><br><span class=\"line\"><span class=\"comment\">// lastElement()</span></span><br><span class=\"line\"><span class=\"comment\">// elementAt(idx)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println( v.firstElement());</span><br><span class=\"line\">        System.out.println( v.lastElement());</span><br><span class=\"line\">        System.out.println( v.elementAt(<span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h4 id=\"9-2-4-Set-集合：\"><a href=\"#9-2-4-Set-集合：\" class=\"headerlink\" title=\"9.2.4 Set 集合：\"></a>9.2.4 Set 集合：</h4><p>只有包含 Collection 集合中的方法，没有自己额外的方法。</p>\n<ul>\n<li><p>  HashSet：基于hashcode来保证不重复。当hashcodec重复时，equals方法被调用，如果equals方法返回true，则 拒绝添加 新的那个重复元素。【存储结构：哈希表，数组+链表】</p>\n</li>\n<li><p>  TreeSet：基于排列顺序来保证不重复。【存储结构：红黑树】</p>\n</li>\n</ul>\n<h5 id=\"HashSet：\"><a href=\"#HashSet：\" class=\"headerlink\" title=\"HashSet：\"></a>HashSet：</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*  HashSet:</span></span><br><span class=\"line\"><span class=\"comment\">*\t存储过程：【需要在类里 重写 hashcode()、equals()】</span></span><br><span class=\"line\"><span class=\"comment\">\t\t【1】 根据hashcode查找保存的位置，位置处无元素，则存入，否则执行第二步</span></span><br><span class=\"line\"><span class=\"comment\">\t\t【2】 执行euqals(),若返回false,则表示元素不重复，以链表形式存入。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t小结：先比较hashcode【同一地址】,再equals()【同一值】</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">* \t\t1. add(obj)</span></span><br><span class=\"line\"><span class=\"comment\">* \t\t2. remove(obj)</span></span><br><span class=\"line\"><span class=\"comment\">* \t\t3. clear()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. contains(obj)</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. isEmpty()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t6. 遍历：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t - 增强型for</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t - 迭代器</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        HashSet&lt;Student&gt; s = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        Student s1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张1&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">        Student s2 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张2&quot;</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        Student s3 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张3&quot;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        s.add(s1);</span><br><span class=\"line\">        s.add(s2);</span><br><span class=\"line\">        s.add(s3);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加</span></span><br><span class=\"line\">        s.add(s3);</span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除</span></span><br><span class=\"line\">        s.remove(s2);</span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 包含元素</span></span><br><span class=\"line\">  \t\tSystem.out.println( s.contains(s2) ); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 是否为空</span></span><br><span class=\"line\">  \t\tSystem.out.println( s.isEmpty() ); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历【增强for】</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Student item : s) &#123;</span><br><span class=\"line\">            System.out.println(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历【迭代器】</span></span><br><span class=\"line\">        Iterator&lt;Student&gt; it = s.iterator();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">            System.out.println(it.next());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 【Student类中】重写hashcode方法，</span></span><br><span class=\"line\"><span class=\"comment\">// 注意：此处写法不严谨，使用质数31来参与运算，解决散列冲突: 31*i = (31&lt;&lt;5)-i</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">hashCode</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n1 = <span class=\"keyword\">this</span>.name.hashCode();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n2 = <span class=\"keyword\">this</span>.age;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n1+n2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 【Student类中】重写equals方法</span></span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object obj)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(obj == <span class=\"keyword\">this</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(obj == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(obj <span class=\"keyword\">instanceof</span> Student)&#123;</span><br><span class=\"line\">            Student s = (Student) obj;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.name.equals(s.getName())&amp;&amp;<span class=\"keyword\">this</span>.age==s.getAge())&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h5 id=\"TreeSet：\"><a href=\"#TreeSet：\" class=\"headerlink\" title=\"TreeSet：\"></a>TreeSet：</h5><p>【红黑树，即：二叉查找树】</p>\n<ul>\n<li>  按 <code>排列顺序</code> 实现  <code>元素不重复</code></li>\n<li>  实现了<code> SortedSet 接口</code>， 对元素 进行<code>自动排序</code></li>\n<li>  元素类 必须<code>实现 Comparable 接口</code>，指定 <code>排序规则</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*  TreeSet:</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">* \t\t1. add(obj)</span></span><br><span class=\"line\"><span class=\"comment\">* \t\t2. remove(obj)</span></span><br><span class=\"line\"><span class=\"comment\">* \t\t3. clear()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. contains(obj)</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. isEmpty()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t6. 遍历：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t - 增强型for</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t - 迭代器</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Student类中 实现 Comparable 接口，重写 CompareTo() </span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Student o)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n1 = <span class=\"keyword\">this</span>.name.compareTo(o.getName());</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n2 = <span class=\"keyword\">this</span>.age-o.getAge();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n1==<span class=\"number\">0</span>?n2:n1;\t<span class=\"comment\">// 返回0，表示元素重复</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 或者 main方法中，在new Student类时,传入匿名内部类，指定 比较规则</span></span><br><span class=\"line\"></span><br><span class=\"line\">        TreeSet&lt;Student&gt; s = <span class=\"keyword\">new</span> TreeSet&lt;&gt;(<span class=\"keyword\">new</span> Comparator&lt;Student&gt;() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Student o1, Student o2)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> n1 = o1.getAge() - o2.getAge();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> n2 = o1.getName().compareTo(o2.getName());</span><br><span class=\"line\">                <span class=\"keyword\">return</span> n1==<span class=\"number\">0</span>?n2:n1;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main</span></span><br><span class=\"line\">\t\tTreeSet&lt;Student&gt; s = <span class=\"keyword\">new</span> TreeSet&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        Student s1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张1&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">        Student s2 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张2&quot;</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        Student s3 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张3&quot;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        s.add(s1);</span><br><span class=\"line\">        s.add(s2);</span><br><span class=\"line\">        s.add(s3);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加</span></span><br><span class=\"line\">        s.add(s3);</span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除</span></span><br><span class=\"line\">        s.remove(s2);</span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 包含元素</span></span><br><span class=\"line\">  \t\tSystem.out.println( s.contains(s2) ); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 是否为空</span></span><br><span class=\"line\">  \t\tSystem.out.println( s.isEmpty() ); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历【增强for】</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Student item : s) &#123;</span><br><span class=\"line\">            System.out.println(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历【迭代器】</span></span><br><span class=\"line\">        Iterator&lt;Student&gt; it = s.iterator();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">            System.out.println(it.next());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"TreeSet-案例：\"><a href=\"#TreeSet-案例：\" class=\"headerlink\" title=\"TreeSet-案例：\"></a>TreeSet-案例：</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> CollectionDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Comparator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeSet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TreeSetDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/*  todo:</span></span><br><span class=\"line\"><span class=\"comment\">    *       按照字符串的长度进行排序</span></span><br><span class=\"line\"><span class=\"comment\">    *           beijing:7,guangzhou:9,shanghai:8</span></span><br><span class=\"line\"><span class=\"comment\">    * */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// main</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        TreeSet&lt;String&gt; t = <span class=\"keyword\">new</span> TreeSet&lt;&gt;(<span class=\"keyword\">new</span> Comparator&lt;String&gt;() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(String o1, String o2)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> n1 = o1.length() - o2.length();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> n2 = o1.compareTo(o2);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> n1==<span class=\"number\">0</span>?n2:n1;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        t.add(<span class=\"string\">&quot;beijing:7&quot;</span>);</span><br><span class=\"line\">        t.add(<span class=\"string\">&quot;guangzhou:9&quot;</span>);</span><br><span class=\"line\">        t.add(<span class=\"string\">&quot;shanghai:8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(t);\t<span class=\"comment\">// [beijing:7, shanghai:8, guangzhou:9]</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"9-3-泛型\"><a href=\"#9-3-泛型\" class=\"headerlink\" title=\"9.3 泛型\"></a>9.3 泛型</h3><p>注意：<code>6.4.2 </code>中也提到了泛型</p>\n<ol>\n<li> 泛型-定义：</li>\n</ol>\n<blockquote>\n<p>  把<code>数据类型</code>当作<code>参数</code>,且<code>传入</code>的数据类型必须是<code>引用类型</code>【<code>基本类型</code> 必须使用 其<code>包装类 </code>作为参数】</p>\n<p>  例如：</p>\n<p>   <code>ArrayList&lt;Integer&gt; arr = new ArrayList&lt; &gt;( );</code></p>\n</blockquote>\n<ol start=\"2\">\n<li> 常见形式：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  泛型类</li>\n<li>  泛型接口</li>\n<li>  泛型方法</li>\n</ul>\n</blockquote>\n<ol start=\"3\">\n<li> 语法：<code>&lt;T,… &gt;</code>  ，其中的 T可以换成<code>E,K,V</code></li>\n</ol>\n<ol start=\"4\">\n<li> 好处：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  提高代码复用性</li>\n<li>  提高代码安全性，防止 类型转化异常</li>\n</ul>\n</blockquote>\n<ol start=\"5\">\n<li> 泛型在集合框架中的应用：</li>\n</ol>\n<blockquote>\n<p>  可以指定某个集合只能传入某个类型的数据。</p>\n<p>  【不指定<code>泛型</code>，<code>默认</code>传入<code>Object类型</code>，因此需 <code>强制转化</code>类型】</p>\n</blockquote>\n<h4 id=\"9-3-1-泛型类：\"><a href=\"#9-3-1-泛型类：\" class=\"headerlink\" title=\"9.3.1 泛型类：\"></a>9.3.1 泛型类：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t泛型类的语法： 类名&lt;T&gt;&#123; &#125;</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. T为数据类型的 占位符，可以有多个，每个占位符之间用逗号隔开</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. T可以用来 声明 变量</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. T可以用来 作为 参数</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. T可以用来 作为 返回值</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t5. 不能 使用T的构造方法：不能 new T()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t6. 不同的泛型对象 不能 相互赋值</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 泛型类</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyGeneral</span>&lt;<span class=\"title\">T</span>&gt;</span>&#123;    </span><br><span class=\"line\"></span><br><span class=\"line\">            T t1; </span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">(T t1)</span></span>&#123;</span><br><span class=\"line\">                System.out.println(t1);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">getT1</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> t1;</span><br><span class=\"line\">            &#125;   </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main</span></span><br><span class=\"line\"></span><br><span class=\"line\">        MyGeneral&lt;String&gt; m1 = <span class=\"keyword\">new</span> MyGeneral&lt;&gt;(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">        System.out.println( m1.getT1()); <span class=\"comment\">// 张三</span></span><br><span class=\"line\">        m1.show(<span class=\"string\">&quot;你好&quot;</span>);\t<span class=\"comment\">//你好</span></span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">        MyGeneral&lt;Integer&gt; m2 = <span class=\"keyword\">new</span> MyGeneral&lt;&gt;(<span class=\"number\">123</span>);</span><br><span class=\"line\">        System.out.println(m2.getT1()); <span class=\"comment\">// 123</span></span><br><span class=\"line\">        m2.show(<span class=\"number\">456</span>); <span class=\"comment\">// 456</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"9-3-2-泛型接口：\"><a href=\"#9-3-2-泛型接口：\" class=\"headerlink\" title=\"9.3.2 泛型接口：\"></a>9.3.2 泛型接口：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* \t泛型接口：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 不能创建 泛型常量</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 泛型接口</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">myInt</span>&lt;<span class=\"title\">T</span>&gt;</span>&#123;</span><br><span class=\"line\">            <span class=\"function\">T <span class=\"title\">show</span><span class=\"params\">(T t1)</span></span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 1. 泛型接口-实现类【在实现接口时，确定要传入的类型】</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">myIntClass</span> <span class=\"keyword\">implements</span> <span class=\"title\">myInt</span>&lt;<span class=\"title\">String</span>&gt;</span>&#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span></span><br><span class=\"line\">                    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">show</span><span class=\"params\">(String t1)</span> </span>&#123;</span><br><span class=\"line\">                        System.out.println(t1);</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> t1;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        <span class=\"comment\">// main</span></span><br><span class=\"line\">                myIntClass myInt_1 = <span class=\"keyword\">new</span> myIntClass();</span><br><span class=\"line\">                myInt_1.show(<span class=\"string\">&quot;你好&quot;</span>);\t<span class=\"comment\">// 你好</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 2. 泛型接口-实现类【在创建对象时，确定要传入的类型】</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">myIntClass2</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">myInt</span>&lt;<span class=\"title\">T</span>&gt;</span>&#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span></span><br><span class=\"line\">                    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">show</span><span class=\"params\">(T t1)</span> </span>&#123;</span><br><span class=\"line\">                        System.out.println(t1);</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> t1;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// main</span></span><br><span class=\"line\">                myIntClass2&lt;Integer&gt; myInt_2 = <span class=\"keyword\">new</span> myIntClass2&lt;&gt;();</span><br><span class=\"line\">                myInt_2.show(<span class=\"number\">123</span>);\t<span class=\"comment\">// 123</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h4 id=\"9-3-3-泛型方法：\"><a href=\"#9-3-3-泛型方法：\" class=\"headerlink\" title=\"9.3.3 泛型方法：\"></a>9.3.3 泛型方法：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">myGer</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\"> <span class=\"comment\">// 泛型方法：   </span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">(T t1)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;这是泛型方法:&quot;</span> + t1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 泛型方法 T由 传入的数据的类型 来决定</span></span><br><span class=\"line\">        myGer ger = <span class=\"keyword\">new</span> myGer();</span><br><span class=\"line\">        ger.show(<span class=\"number\">123</span>);\t\t<span class=\"comment\">//这是泛型方法:123</span></span><br><span class=\"line\">        ger.show(<span class=\"string\">&quot;你好&quot;</span>);\t\t<span class=\"comment\">//这是泛型方法:你好</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h3 id=\"9-4-Map-集合：\"><a href=\"#9-4-Map-集合：\" class=\"headerlink\" title=\"9.4 Map 集合：\"></a>9.4 Map 集合：</h3><p><img src=\"https://z3.ax1x.com/2021/05/24/gjdYbF.png\" alt=\"Map集合\"></p>\n<ol>\n<li> 特点：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  用于存储 <code>无序、无下标</code>的<code>键值对</code></li>\n<li>  键：无序、无下标、不重复</li>\n<li>  值：无序、无下标、可重复</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\tMap:</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tentrySet();</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tput(key,value);</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tget(key);</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tkeySet();</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tvalues();</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String,String&gt; m = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加</span></span><br><span class=\"line\">        m.put(<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;a-&gt;10&quot;</span>);</span><br><span class=\"line\">        m.put(<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;b-&gt;20&quot;</span>);</span><br><span class=\"line\">        m.put(<span class=\"string\">&quot;c&quot;</span>,<span class=\"string\">&quot;c-&gt;30&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(m);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除</span></span><br><span class=\"line\">\t\tm.remove(<span class=\"string\">&quot;c&quot;</span>);</span><br><span class=\"line\">        System.out.println(m);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历-【keySet】</span></span><br><span class=\"line\">\t    Set&lt;String&gt; keyset = m.keySet();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String k : keyset) &#123;</span><br><span class=\"line\">            System.out.println(k+<span class=\"string\">&quot;---&quot;</span>m.get(k));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历-【entrySet】</span></span><br><span class=\"line\">\t\tSet&lt;Map.Entry&lt;String,String&gt;&gt;  entries = m.entrySet();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Map.Entry&lt;String,String&gt; item: entries ) &#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            System.out.println(item.getKey()+<span class=\"string\">&quot;---&quot;</span>+item.getValue());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"9-4-1-HashMap\"><a href=\"#9-4-1-HashMap\" class=\"headerlink\" title=\"9.4.1 HashMap\"></a>9.4.1 HashMap</h4><p>默认容量：16。</p>\n<p>75%时，开始扩容。</p>\n<p>数组长度&gt;8 且 链表长度&gt;64时，使用红黑树。</p>\n<p><code>为实现每一项的键和值都不一样，需要重写 hashcode()、equals() 【可使用IED的快捷键】</code></p>\n<p>HashMap源码分析-小结：</p>\n<blockquote>\n<ul>\n<li>  HashMap 刚创建时，table为null【为节省空间】，当添加第一个元素时，table的容量为16。</li>\n<li>  元素个数大于阈值（容量的75%)时，会进行扩容为原来的2倍，目的是减少需要调整的元素个数。</li>\n<li>  JDK1.8 ，当每个链表长度 大于8，元素个数 大于等于64时，调整为红黑树，目的是提高元素的效率。</li>\n<li>  JDK1.8 ，当每个链表长度 小于6时，使用链表。</li>\n<li>  JDK1.8以前，使用头插法；JDK1.8以后，使用尾插法。</li>\n</ul>\n</blockquote>\n<p>案例：</p>\n<p>统计字符串中每个字符的出现次数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        String s = sc.nextLine();</span><br><span class=\"line\"></span><br><span class=\"line\">        HashMap&lt;Character,Integer&gt; hm = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] arr = s.toCharArray();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">char</span> item: arr) &#123;</span><br><span class=\"line\"><span class=\"comment\">// hashmap中如果有该字符，则更新value</span></span><br><span class=\"line\"><span class=\"comment\">// 没有该字符，则直接插入当前字符的键值对            </span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(hm.containsKey(item))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> t = hm.get(item);</span><br><span class=\"line\">                hm.put(item,++t);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                hm.put(item,<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;现在的字符串：&quot;</span>+s);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;现在的HashMap：&quot;</span>+hm);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n<h4 id=\"9-4-2-TreeMap\"><a href=\"#9-4-2-TreeMap\" class=\"headerlink\" title=\"9.4.2 TreeMap\"></a>9.4.2 TreeMap</h4><p>存储：红黑树</p>\n<p>对 key 自动排序</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t注意：参数类Student 必须 implents Comparable接口</span></span><br><span class=\"line\"><span class=\"comment\">*\t</span></span><br><span class=\"line\"><span class=\"comment\">*     put()</span></span><br><span class=\"line\"><span class=\"comment\">*\t  remove()</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">遍历：</span></span><br><span class=\"line\"><span class=\"comment\">\t1. keySet();</span></span><br><span class=\"line\"><span class=\"comment\">\t2. Entry</span></span><br><span class=\"line\"><span class=\"comment\">*/</span>     </span><br><span class=\"line\"></span><br><span class=\"line\">\t\tStudent s1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张1&quot;</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">        Student s2 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张2&quot;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">        Student s3 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张3&quot;</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        TreeMap&lt;Student, String&gt; tm = <span class=\"keyword\">new</span> TreeMap&lt;&gt;();</span><br><span class=\"line\">        tm.put(s1, <span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">        tm.put(s2, <span class=\"string\">&quot;2&quot;</span>);</span><br><span class=\"line\">        tm.put(s3, <span class=\"string\">&quot;3&quot;</span>);</span><br><span class=\"line\">        System.out.println(tm);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历-1</span></span><br><span class=\"line\">        Set&lt;Student&gt; set = tm.keySet();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Student k:set ) &#123;</span><br><span class=\"line\">            System.out.println(k+<span class=\"string\">&quot;---&quot;</span>+tm.get(k));            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历-2</span></span><br><span class=\"line\"></span><br><span class=\"line\">  \t\tMap.Entry&lt;Student,String&gt;&gt; entries = tm.entrySet();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Map.Entry&lt;Student,String&gt; item: entries)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            System.out.println(item.getKey()+<span class=\"string\">&quot;---&quot;</span>+item.getValue());</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"9-5-Collections-工具类：\"><a href=\"#9-5-Collections-工具类：\" class=\"headerlink\" title=\"9.5 Collections 工具类：\"></a>9.5 Collections 工具类：</h3><p><strong>方法</strong>：</p>\n<ul>\n<li>  <code>public static void reverse(List&lt;?&gt; list)</code>//反转集合中元素的顺序</li>\n<li>  <code>public static void shuffle(List&lt;?&gt; list)</code>//随机重置集合元素的顺序</li>\n<li>  <code>public static void sort(List&lt;T&gt; list)</code>//升序排序（元素类型必须实现Comparable接口）</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      \t</span><br><span class=\"line\">\t\tArrayList&lt;Integer&gt; arr = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        arr.add(<span class=\"number\">10</span>);</span><br><span class=\"line\">        arr.add(<span class=\"number\">20</span>);</span><br><span class=\"line\">        arr.add(<span class=\"number\">30</span>);</span><br><span class=\"line\">        arr.add(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(arr);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 打乱顺序</span></span><br><span class=\"line\">        Collections.shuffle(arr);        </span><br><span class=\"line\">        System.out.println(arr);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//排序</span></span><br><span class=\"line\">    \tCollections.sort(arr);</span><br><span class=\"line\">        System.out.println(arr);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 二分查找</span></span><br><span class=\"line\">        System.out.println( Collections.binarySearch(arr,<span class=\"number\">20</span>) );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//反转</span></span><br><span class=\"line\">    \tCollections.reverse(arr);</span><br><span class=\"line\">        System.out.println(arr);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h2 id=\"10-多线程\"><a href=\"#10-多线程\" class=\"headerlink\" title=\"10. 多线程\"></a>10. 多线程</h2><ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1V4411p7EF\">狂神说Java多线程详解</a></li>\n<li>  <a href=\"https://www.bilibili.com/video/BV1cb4y1X7kz?p=115\">赵姗姗-b站-多线程</a></li>\n<li>  <a href=\"https://www.cnblogs.com/13roky/p/14707360.html#1-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\">Java多线程详解</a></li>\n</ul>\n<ol>\n<li>  并发 与 并行：</li>\n</ol>\n<blockquote>\n<ul>\n<li><p>  并发：在一段<strong>时间段</strong>内执行多个程序</p>\n</li>\n<li><p>  并行：在一个<strong>时间点</strong>执行多个程序</p>\n</li>\n</ul>\n</blockquote>\n<ol start=\"2\">\n<li>  进程 和 线程 ：</li>\n</ol>\n<blockquote>\n<p>  进程：1个正在运行的程序【资源分配的基本单位】<br>  线程：1个进程通常由多个线程组成（最少有1个main线程)【资源调度的基本单位】</p>\n<p>  <strong>多线程的好处</strong> ：效率高，多个线程之间互不影响</p>\n</blockquote>\n<ol start=\"3\">\n<li>  线程的调度：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  分时调度：所有线程轮流使用CPU</li>\n<li>  抢占调度：让<code>优先级</code>高的线程先使用CPU，如果优先级一样，则随机选一个【<code>Java使用: 抢占调度</code>】</li>\n</ul>\n</blockquote>\n<ol start=\"4\">\n<li> 主线程：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  主线程：执行 main 方法的线程</li>\n<li>  单线程程序：java默认情况只有1个线程=》main线程</li>\n<li>  JVM 的 main方法进栈 并 执行main 方法 =》产生1条进栈的路（main线程）</li>\n</ul>\n</blockquote>\n<ol start=\"5\">\n<li> 最常见的线程操作：</li>\n</ol>\n<blockquote>\n<ul>\n<li><p>  设置线程名：setName( )</p>\n</li>\n<li><p>  获取线程名：getName( )</p>\n</li>\n<li><p>  获取当前线程：Thread.currentThread( )</p>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"10-1-多线程的实现：\"><a href=\"#10-1-多线程的实现：\" class=\"headerlink\" title=\"10.1 多线程的实现：\"></a>10.1 多线程的实现：</h3><h4 id=\"10-1-1-方式1【继承Thread类-重点】\"><a href=\"#10-1-1-方式1【继承Thread类-重点】\" class=\"headerlink\" title=\"10.1.1 方式1【继承Thread类-重点】\"></a>10.1.1 方式1【继承Thread类-重点】</h4><p>步骤：</p>\n<ul>\n<li>  <code>继承Thread类</code>【java.lang.Thread类】形成子类。</li>\n<li>  override <code>重写 </code>Thread类的 <code>run 方法</code>【线程要干什么】。</li>\n<li>  main中 <code>new 1个 线程对象</code>。</li>\n<li>  <code>线程对象.start( ) </code>【启动线程】，JVM会自动调用 run( )来执行任务。</li>\n<li>  最终：main线程 和 新的线程 并发执行。</li>\n</ul>\n<p><strong>注意：</strong></p>\n<ul>\n<li>  多次重复启动1个 线程是非法的。【尤其是在 该线程已经 执行完毕后】</li>\n<li>  java 是执行线程是<code> 抢占式</code>，线程的<code>优先级越高</code>，越<code>优先执行</code>。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadsDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. 继承Thread类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 重写 run()方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">1000</span>; i++) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;多线程执行-&quot;</span>+i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3. main 函数中 new 线程对象，调用 start()</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Thread th1 = <span class=\"keyword\">new</span> TestThread();</span><br><span class=\"line\"></span><br><span class=\"line\">        th1.start();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;<span class=\"number\">1000</span> ; i++) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;main线程执行~~&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"案例1-多线程下载图片：\"><a href=\"#案例1-多线程下载图片：\" class=\"headerlink\" title=\"案例1-多线程下载图片：\"></a>案例1-多线程下载图片：</h5><ul>\n<li><p>前提：</p>\n<ul>\n<li>  下载、导入jar包： commons-io.jar包 </li>\n</ul>\n<blockquote>\n<p>  导入Jar包的步骤：</p>\n<ol>\n<li> 新建 lib文件夹</li>\n<li> 将 jar包 托入lib文件夹</li>\n<li> 打开 file -&gt; project Structure -&gt; lib -&gt; 点击 “+” -&gt; 应用</li>\n</ol>\n</blockquote>\n<ul>\n<li>导入该案例所需的工具类：<ul>\n<li>   <code>import org.apache.commons.io.FileUtils;</code></li>\n<li>  <code>import java.net.URL;</code>  </li>\n<li>   <code>import java.io.File;</code></li>\n<li>  <code>import java.io.IOException;</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t1. 类： </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\tWebDownLoader类，TestThread2类</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下载器类</span></span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebDownLoader</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">download</span><span class=\"params\">(String url,String name)</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    FileUtils.copyURLToFile(<span class=\"keyword\">new</span> URL(url),<span class=\"keyword\">new</span> File(name));</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;IO异常-在 download 方法中&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多线程-下载图片</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread2</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestThread2</span><span class=\"params\">(String url, String name)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.url = url;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 重写线程类的 run方法        </span></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            WebDownLoader wd = <span class=\"keyword\">new</span> WebDownLoader();</span><br><span class=\"line\">            wd.download(<span class=\"keyword\">this</span>.url,<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;下载的文件名为：&quot;</span>+<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// main方法</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            String base_url=<span class=\"string\">&quot;https://t7.baidu.com/it/u=&quot;</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">            TestThread2 downTh1 = <span class=\"keyword\">new</span> TestThread2(base_url+<span class=\"string\">&quot;1595072465,3644073269&amp;fm=193&amp;f=GIF&quot;</span>,<span class=\"string\">&quot;图片-1.jpg&quot;</span>);</span><br><span class=\"line\">            TestThread2 downTh2 = <span class=\"keyword\">new</span> TestThread2(base_url+<span class=\"string\">&quot;825057118,3516313570&amp;fm=193&amp;f=GIF&quot;</span>,<span class=\"string\">&quot;图片-2.jpg&quot;</span>);</span><br><span class=\"line\">            TestThread2 downTh3 = <span class=\"keyword\">new</span> TestThread2(base_url+<span class=\"string\">&quot;3435942975,1552946865&amp;fm=193&amp;f=GIF&quot;</span>,<span class=\"string\">&quot;图片-3.jpg&quot;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 开启多线程，进行下载            </span></span><br><span class=\"line\">            downTh1.start();</span><br><span class=\"line\">            downTh2.start();</span><br><span class=\"line\">            downTh3.start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n<h4 id=\"10-1-2-方式2【实现Runnable接口-重点-推荐】\"><a href=\"#10-1-2-方式2【实现Runnable接口-重点-推荐】\" class=\"headerlink\" title=\"10.1.2 方式2【实现Runnable接口-重点-推荐】\"></a>10.1.2 方式2【实现Runnable接口-重点-推荐】</h4><p><code>推荐使用</code></p>\n<p>步骤：</p>\n<ul>\n<li>  实现Runnable接口，重写run( )方法</li>\n<li>  在main方法中，new 1个 实现类【<code>实现类 就是多线程要抢的 资源</code>】</li>\n<li>  将 实现类的对象 作为参数，传入 new Thread( ) 构造方法中</li>\n<li>  线程类.start( )来自动执行run( )</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadsDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 重写 实现类的 run方法</span></span><br><span class=\"line\">   \t <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread3</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;我是多线程&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main函数</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">              <span class=\"comment\">// 创建实现类的对象</span></span><br><span class=\"line\">                TestThread3 tt3 = <span class=\"keyword\">new</span> TestThread3();</span><br><span class=\"line\">              <span class=\"comment\">// 将实现类的对象 传入 Thread类的构造方法中</span></span><br><span class=\"line\">                Thread th1 = <span class=\"keyword\">new</span> Thread(tt3);</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"comment\">// 开启线程  </span></span><br><span class=\"line\">                th1.start();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"案例2-下载图片\"><a href=\"#案例2-下载图片\" class=\"headerlink\" title=\"案例2-下载图片\"></a>案例2-下载图片</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadsDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下载器</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebDownLoader2</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">download</span><span class=\"params\">(String url,String name)</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                FileUtils.copyURLToFile(<span class=\"keyword\">new</span> URL(url),<span class=\"keyword\">new</span> File(name));</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;download方法-&gt; IO异常&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多线程</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread4</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestThread4</span><span class=\"params\">(String url, String name)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.url = url;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            WebDownLoader2 wd2 = <span class=\"keyword\">new</span> WebDownLoader2();</span><br><span class=\"line\">            wd2.download(<span class=\"keyword\">this</span>.url,<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;当前正在下载：&quot;</span>+<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            String url_1 = <span class=\"string\">&quot;https://t7.baidu.com/it/u=3779234486,1094031034&amp;fm=193&amp;f=GIF&quot;</span>;</span><br><span class=\"line\">            String url_2 = <span class=\"string\">&quot;https://t7.baidu.com/it/u=3908717,2002330211&amp;fm=193&amp;f=GIF&quot;</span>;</span><br><span class=\"line\">            String url_3 =<span class=\"string\">&quot;https://t7.baidu.com/it/u=3785402047,1898752523&amp;fm=193&amp;f=GIF&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            TestThread4 tt1 = <span class=\"keyword\">new</span> TestThread4(url_1,<span class=\"string\">&quot;1.jpg&quot;</span>);</span><br><span class=\"line\">            TestThread4 tt2 = <span class=\"keyword\">new</span> TestThread4(url_2,<span class=\"string\">&quot;2.jpg&quot;</span>);</span><br><span class=\"line\">            TestThread4 tt3 = <span class=\"keyword\">new</span> TestThread4(url_3,<span class=\"string\">&quot;3.jpg&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(tt1).start();</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(tt2).start();</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(tt3).start();</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"案例3-模拟抢票：\"><a href=\"#案例3-模拟抢票：\" class=\"headerlink\" title=\"案例3-模拟抢票：\"></a>案例3-模拟抢票：</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadsDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多线程操作同一对象时，出现线程不安全，数据紊乱【重复 抢到 同一张票】</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 票-类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread5</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> ticketNum=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"comment\">// 重写run方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ticketNum&lt;=<span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName()+<span class=\"string\">&quot; =&gt; 拿到了第&quot;</span>+(ticketNum--)+<span class=\"string\">&quot;张票&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">200</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">// main方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        TestThread5 t1 = <span class=\"keyword\">new</span> TestThread5();</span><br><span class=\"line\">        TestThread5 t2 = <span class=\"keyword\">new</span> TestThread5();</span><br><span class=\"line\">        TestThread5 t3 = <span class=\"keyword\">new</span> TestThread5();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(t1,<span class=\"string\">&quot;小虹&quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(t2,<span class=\"string\">&quot;小白&quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(t3,<span class=\"string\">&quot;小黄&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"案例4-龟兔赛跑：\"><a href=\"#案例4-龟兔赛跑：\" class=\"headerlink\" title=\"案例4-龟兔赛跑：\"></a>案例4-龟兔赛跑：</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadsDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多线程案例：龟兔赛跑</span></span><br><span class=\"line\"><span class=\"comment\">// &quot;实现类&quot; =》跑道 =》资源</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RaceDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Race race = <span class=\"keyword\">new</span> Race();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(race,<span class=\"string\">&quot;兔子&quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(race,<span class=\"string\">&quot;乌龟&quot;</span>).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Race</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String winner;</span><br><span class=\"line\"><span class=\"comment\">// 重写run方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;=<span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Thread.currentThread().getName().equals(<span class=\"string\">&quot;兔子&quot;</span>) &amp;&amp; i%<span class=\"number\">10</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    Thread.sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">boolean</span> flag = isFinished(i);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(flag)<span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName()+<span class=\"string\">&quot;-&gt; 跑了&quot;</span>+i+<span class=\"string\">&quot;步&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            isFinished(i);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">// 判断是否完成</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isFinished</span><span class=\"params\">(<span class=\"keyword\">int</span> steps)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(winner != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(steps &gt;= <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">                winner = Thread.currentThread().getName();</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;胜利者：&quot;</span>+winner);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"10-1-3-方式3【实现Callable接口-了解】\"><a href=\"#10-1-3-方式3【实现Callable接口-了解】\" class=\"headerlink\" title=\"10.1.3 方式3【实现Callable接口-了解】\"></a>10.1.3 方式3【实现Callable接口-了解】</h4><p>好处：</p>\n<blockquote>\n<ul>\n<li><p>  可以 <code>抛出异常</code></p>\n</li>\n<li><p>  可以 有<code>返回值</code></p>\n</li>\n</ul>\n</blockquote>\n<p>步骤：</p>\n<ul>\n<li>  实现 Callcable接口</li>\n<li>  重写 call( )方法</li>\n<li>  创建目标对象：</li>\n<li>  创建执行服务：<code>  ExecutorService es = Executors.newFixedThreadPool(2);</code></li>\n<li>  提交执行：  <code>Future&lt;Boolean&gt; res1 = es.submit(tc1);</code></li>\n<li>  获取结果：<code> boolean r1 = res1.get();</code></li>\n<li>  关闭服务：<code>  es.shutdownNow();</code></li>\n</ul>\n<h5 id=\"案例5：下载图片\"><a href=\"#案例5：下载图片\" class=\"headerlink\" title=\"案例5：下载图片\"></a>案例5：下载图片</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadsDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下载器类</span></span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">webImageDownLoader</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">download</span><span class=\"params\">(String url,String name)</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    FileUtils.copyURLToFile(<span class=\"keyword\">new</span> URL(url),<span class=\"keyword\">new</span> File(name));</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;下载的文件名为 &quot;</span>+name);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestCallable</span> <span class=\"keyword\">implements</span> <span class=\"title\">Callable</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">            <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestCallable</span><span class=\"params\">(String url, String name)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.url = url;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"><span class=\"comment\">// 重写call()</span></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Boolean <span class=\"title\">call</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                webImageDownLoader wid = <span class=\"keyword\">new</span> webImageDownLoader();</span><br><span class=\"line\">                wid.download(<span class=\"keyword\">this</span>.url,<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main函数</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">                TestCallable tc1 = <span class=\"keyword\">new</span> TestCallable(<span class=\"string\">&quot;https://t7.baidu.com/it/u=1595072465,3644073269&amp;fm=193&amp;f=GIF&quot;</span>,<span class=\"string\">&quot;图片-1.jpg&quot;</span>);</span><br><span class=\"line\">                TestCallable tc2 = <span class=\"keyword\">new</span> TestCallable(<span class=\"string\">&quot;https://t7.baidu.com/it/u=825057118,3516313570&amp;fm=193&amp;f=GIF&quot;</span>,<span class=\"string\">&quot;图片-2.jpg&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 创建执行服务</span></span><br><span class=\"line\">                ExecutorService es = Executors.newFixedThreadPool(<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 提交执行操作</span></span><br><span class=\"line\">                Future&lt;Boolean&gt; res1 = es.submit(tc1);</span><br><span class=\"line\">                Future&lt;Boolean&gt; res2 = es.submit(tc2);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 获取执行结果</span></span><br><span class=\"line\">                    <span class=\"keyword\">boolean</span> r1 = res1.get();</span><br><span class=\"line\">                    <span class=\"keyword\">boolean</span> r2 = res1.get();</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (ExecutionException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 关闭执行服务</span></span><br><span class=\"line\">                es.shutdownNow();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"10-2-静态代理\"><a href=\"#10-2-静态代理\" class=\"headerlink\" title=\"10.2 静态代理\"></a>10.2 静态代理</h3><p>多线程的原理 就利用了 静态代理。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t静态代理：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1.真实对象、代理对象，都要实现 同一个方法</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 好处：代理对象可以做很多招生对象做不了的事。</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StaticProxy</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        WeddingCompany weddingCompany = <span class=\"keyword\">new</span> WeddingCompany(<span class=\"keyword\">new</span> You());</span><br><span class=\"line\">        weddingCompany.HappyMarry();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接口</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Marry</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">HappyMarry</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结婚者【代理对象】</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">You</span> <span class=\"keyword\">implements</span> <span class=\"title\">Marry</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">HappyMarry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;我结婚了，你哼开心~~&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 婚庆公司【真实对象】</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WeddingCompany</span> <span class=\"keyword\">implements</span> <span class=\"title\">Marry</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Marry target;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">WeddingCompany</span><span class=\"params\">(Marry target)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.target = target;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">before</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;布置&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">after</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;收钱&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">// 重写接口的方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">HappyMarry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.before();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.target.HappyMarry();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.after();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"10-3-Lambda-表达式：\"><a href=\"#10-3-Lambda-表达式：\" class=\"headerlink\" title=\"10.3 Lambda 表达式：\"></a>10.3 Lambda 表达式：</h3><p>Lambda表达式，，是函数式编程，它可以作为<strong>匿名内部类</strong>的替代品。</p>\n<p>函数式接口：</p>\n<blockquote>\n<p>  一个接口，如果<code>只有1个抽象方法</code>，则为 <code>函数式接口</code> 。【接口只有1个方法】</p>\n</blockquote>\n<p>类似：<code>        new Thread( ()-&gt; System.out.println(&quot;多线程的学习&quot;)).start();</code></p>\n<p>格式：【函数式接口 =》需要保证：接口中只有1个抽象方法】</p>\n<ul>\n<li>  <code>(参数)-&gt; &#123;表达式1;表达式2;&#125;;</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">myInt</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">Eat</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//...其他内容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>步骤：</p>\n<blockquote>\n<ul>\n<li>  定义1个只有1个方法的接口</li>\n<li>  使用lambda实现方法并创建对象</li>\n<li>  调用方法</li>\n</ul>\n</blockquote>\n<p>函数式接口 =》作为方法的<code>参数 和 返回值类型</code>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">(myInt a)</span></span>&#123;</span><br><span class=\"line\">        a.Eat();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">       <span class=\"comment\">// 方式1：传入接口的实现类  </span></span><br><span class=\"line\">          <span class=\"keyword\">this</span>.show(<span class=\"keyword\">new</span> myIntImpCls());</span><br><span class=\"line\">         </span><br><span class=\"line\">       <span class=\"comment\">// 方式2：传入接口  </span></span><br><span class=\"line\">         <span class=\"keyword\">this</span>.show(<span class=\"keyword\">new</span> myIntInmp()&#123;</span><br><span class=\"line\">             <span class=\"comment\">// 重写接口的方法</span></span><br><span class=\"line\">         &#125;);</span><br><span class=\"line\">         </span><br><span class=\"line\">      <span class=\"comment\">// 方式3：传入Lambda </span></span><br><span class=\"line\">         <span class=\"keyword\">this</span>.show(()-&gt;&#123;System.out.println(<span class=\"string\">&quot;你好&quot;</span>);&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"案例6：\"><a href=\"#案例6：\" class=\"headerlink\" title=\"案例6：\"></a>案例6：</h5><ul>\n<li>  优化前</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Ilike</span></span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span></span>; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Like</span> <span class=\"keyword\">implements</span> <span class=\"title\">Ilike</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;我喜欢lambda &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">// 优化前        </span></span><br><span class=\"line\">       Ilike a = <span class=\"keyword\">new</span> Like();</span><br><span class=\"line\">       a.lambda();</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>  优化后</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Ilike</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span></span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Like</span> <span class=\"keyword\">implements</span> <span class=\"title\">Ilike</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;我喜欢lambda &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123; </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 普通 </span></span><br><span class=\"line\">           Ilike a = <span class=\"keyword\">new</span> Like();</span><br><span class=\"line\">           a.lambda();</span><br><span class=\"line\">       </span><br><span class=\"line\"><span class=\"comment\">//静态内部类</span></span><br><span class=\"line\">           Like2 b = <span class=\"keyword\">new</span> Like2();</span><br><span class=\"line\">           b.lambda();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//局部内部类</span></span><br><span class=\"line\">            <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Like3</span> <span class=\"keyword\">implements</span> <span class=\"title\">Ilike</span></span>&#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;我喜欢lambda &quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;       </span><br><span class=\"line\">            Like3 c = <span class=\"keyword\">new</span> Like3();</span><br><span class=\"line\">            c.lambda();</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 匿名内部类</span></span><br><span class=\"line\">            Ilike d = <span class=\"keyword\">new</span> Ilike() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;        </span><br><span class=\"line\">            d.lambda();</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// lambda</span></span><br><span class=\"line\">            Ilike e = ( )-&gt;&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;I like lambda&quot;</span>);</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            e.lambda();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"lambda表达式的简化：\"><a href=\"#lambda表达式的简化：\" class=\"headerlink\" title=\"lambda表达式的简化：\"></a>lambda表达式的简化：</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> LandaDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Ilike</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 普通 lambda</span></span><br><span class=\"line\">       Ilike a = (<span class=\"keyword\">int</span> i)-&gt;&#123;</span><br><span class=\"line\">           System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\">           System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\">       &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">       a.lambda(<span class=\"number\">123</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 简化参数 lambda</span></span><br><span class=\"line\">        Ilike b = (i)-&gt;&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        b.lambda(<span class=\"number\">123</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 简化括号 lambda【多个参数必须有小括号】</span></span><br><span class=\"line\">        Ilike c = i-&gt;&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        c.lambda(<span class=\"number\">123</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 简化括号 lambda【只适合一行代码的情况下使用】</span></span><br><span class=\"line\">        Ilike d = i-&gt;System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\"></span><br><span class=\"line\">        d.lambda(<span class=\"number\">123</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h3 id=\"10-4-线程的生命周期：\"><a href=\"#10-4-线程的生命周期：\" class=\"headerlink\" title=\"10.4 线程的生命周期：\"></a>10.4 线程的生命周期：</h3><p><code>java.lang.Thread.State</code></p>\n<ul>\n<li>  新生：new Thread( )</li>\n<li>  就绪：线程调用 start( ) 后进入 该状态。【还没 轮到 该线程 使用cpu】</li>\n<li>  运行：线程自动调用run(  )后进入 该状态</li>\n<li>  阻塞：等待</li>\n<li>  消亡：程序正常结束、出现异常、手动 调用已被废弃不用的stop( )</li>\n</ul>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/01/java-thread.jpg\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gvPy6S.png\" alt=\"多线程-状态\"></p>\n<h4 id=\"10-4-1-线程常用方法：\"><a href=\"#10-4-1-线程常用方法：\" class=\"headerlink\" title=\"10.4.1 线程常用方法：\"></a>10.4.1 线程常用方法：</h4><blockquote>\n<ul>\n<li>  start( )：开启线程，自动调用线程中的 run( )</li>\n<li>  run( )：继承自Runnable接口的方法，必须在线程中 覆盖重写。</li>\n<li>  join( )：先start( )，再join( )。一旦 join( )，优先执行完后，才轮到别的线程执行。 【插队、阻塞】</li>\n<li>  currentThread( )：获取当前正在运行的线程。</li>\n<li>  getName( )：获取线程名</li>\n<li>  setName( 线程名 )：设置线程名</li>\n<li>  setPriority( 优先级 )：设置线程的 优先级，传入1~10，默认5。值越大，越可能被调用。</li>\n<li>  sleep(  毫秒数 )：阻塞</li>\n<li>  setDaemon( true )：将子线程 设置为 主线程的伴随线程。主线程停止时，子线程继续执行一段时间后也停止。【先设置，再start( )】</li>\n<li>  wait(毫秒数 )：阻塞，【老板等顾客】，毫秒数过后仍然没有线程调用锁对象的notify( )，则自动唤醒。</li>\n<li>  notify( )：唤醒，【包子做好给顾客】</li>\n</ul>\n</blockquote>\n<p>几个方法的使用顺序：</p>\n<blockquote>\n<ul>\n<li>  setDaemon( true )</li>\n<li>  start( )</li>\n<li>  join( )</li>\n</ul>\n</blockquote>\n<h4 id=\"10-4-2-线程优先级：\"><a href=\"#10-4-2-线程优先级：\" class=\"headerlink\" title=\"10.4.2 线程优先级：\"></a>10.4.2 线程优先级：</h4><blockquote>\n<ul>\n<li>  优先级：1~10，默认优先级为 5</li>\n<li>  优先级 相同时，按时间片，先到先得</li>\n<li>  优先级越高，线程 被CPU先调用 的机率更高</li>\n<li>  join( )可以无视优先级，直接插队【先start( )，再join( )】</li>\n</ul>\n</blockquote>\n<h3 id=\"10-5-线程的同步：\"><a href=\"#10-5-线程的同步：\" class=\"headerlink\" title=\"10.5 线程的同步：\"></a>10.5 线程的同步：</h3><ul>\n<li>  多线程 产生的问题：</li>\n</ul>\n<blockquote>\n<p>  多个线程抢夺到同一个资源</p>\n<p>  如：买票时，买到同一张票。</p>\n</blockquote>\n<ul>\n<li>  解决多线程安全问题：</li>\n</ul>\n<blockquote>\n<p>  加 “锁”【同步、同步监视器】</p>\n</blockquote>\n<p>三种方式：</p>\n<h4 id=\"10-5-1-同步代码块\"><a href=\"#10-5-1-同步代码块\" class=\"headerlink\" title=\"10.5.1 同步代码块\"></a>10.5.1 同步代码块</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 线程类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 同步代码块-形式1           </span></span><br><span class=\"line\">            <span class=\"keyword\">synchronized</span> (<span class=\"keyword\">this</span>)&#123;\t</span><br><span class=\"line\">                <span class=\"comment\">// 这里的this就是要锁住的对象，锁 多了会降低效率。</span></span><br><span class=\"line\">                <span class=\"comment\">// 如果是实现Runnable接口的线程，由于只需new一个线程对象，并将该对象传入多个Thread(),</span></span><br><span class=\"line\">                <span class=\"comment\">// \t\t因此,锁住的是同一个对象。</span></span><br><span class=\"line\">                <span class=\"comment\">// 但如果是继承Thread类的多线程，由于new了多个线程对象，因此锁住的不是同一个对象，</span></span><br><span class=\"line\">                <span class=\"comment\">// \t\t因此,锁没有真的生效。</span></span><br><span class=\"line\">                <span class=\"comment\">// 综上，锁对象 必须要是同一个对象。</span></span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 同步代码块-形式2 </span></span><br><span class=\"line\">            <span class=\"keyword\">static</span> Object obj = <span class=\"keyword\">new</span> Object();</span><br><span class=\"line\">            </span><br><span class=\"line\">             <span class=\"keyword\">synchronized</span> (obj)&#123;              </span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 同步代码块-形式3 【推荐】</span></span><br><span class=\"line\">           <span class=\"comment\">// 将 线程类的字节码 作为 锁对象。</span></span><br><span class=\"line\">             <span class=\"keyword\">synchronized</span> (TestThread.class)&#123;              </span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName());</span><br><span class=\"line\">            &#125;            </span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>小结：</p>\n<blockquote>\n<ul>\n<li>  语法：<code>synchronized( 锁对象)&#123; 语句 &#125;</code></li>\n<li>  锁对象【同步监视器】 必须是 <code>引用类型</code>，且最好使用<code>final 修饰</code>。</li>\n<li>  不要 将String、包装类Interger 作为锁</li>\n<li>  在同步代码块中，<code>不应该 改变锁对象</code>的引用。</li>\n<li>  可以使用一个<code>static类型的无确切的含义的对象</code>来充当 <code>锁对象</code>【同步监视器】</li>\n</ul>\n</blockquote>\n<p>执行过程：</p>\n<blockquote>\n<ul>\n<li>  线程A来到同步代码块，发现“ 锁”处于open状态，于是进入，并close“锁”</li>\n<li>  线程B来到同步代码块，CPU资源切换到线程B，但B发现 “锁” close，于是阻塞。</li>\n<li>线程A 继续接管CPU资源，执行同步代码块的内容，执行完毕后，open“锁”</li>\n</ul>\n<p>  <strong>小结：</strong></p>\n<ul>\n<li>  同步代码块中，可以切换CPU资源，但不能执行同步代码块的内容，因为“锁”，仍处于close状态。</li>\n</ul>\n</blockquote>\n<h4 id=\"10-5-2-同步方法\"><a href=\"#10-5-2-同步方法\" class=\"headerlink\" title=\"10.5.2 同步方法\"></a>10.5.2 同步方法</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 同步方法  </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">sayWhoAmI</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName());</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"><span class=\"comment\">// 调用            </span></span><br><span class=\"line\">            sayWhoAmI();</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"10-5-3-Lock锁\"><a href=\"#10-5-3-Lock锁\" class=\"headerlink\" title=\"10.5.3 Lock锁\"></a>10.5.3 Lock锁</h4><p><code>import java.util.concurrent.locks.Lock;</code></p>\n<ul>\n<li>  在类的成员位置：Lock lock1 = new ReentrantLock( )</li>\n<li>  在线程问题的语句前【try-catch内】：lock1.lock( )</li>\n<li>  语句块</li>\n<li>  在线程问题的语句后【finally语句块中】：lock1.unlock( )</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 锁对象    </span></span><br><span class=\"line\">    Lock lock1 = <span class=\"keyword\">new</span> ReentrantLock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"><span class=\"comment\">// 加锁</span></span><br><span class=\"line\">            lock1.lock();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">// 处理                </span></span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName());</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">finally</span> &#123;   </span><br><span class=\"line\"><span class=\"comment\">// 解锁                </span></span><br><span class=\"line\">                lock1.unlock();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>小结：</p>\n<blockquote>\n<p>  Lock的优点：</p>\n<ul>\n<li>  Lock效率更高</li>\n<li>  可由用户控制，而之前的synchronzied由JVM控制</li>\n<li>  扩展性好，Lock是一个接口，有多个实现类</li>\n</ul>\n<p>  使用优先级：</p>\n<ul>\n<li>  Lock【推荐】 -&gt; 同步代码块 -&gt; 同步方法</li>\n</ul>\n</blockquote>\n<p>线程安全性问题：</p>\n<blockquote>\n<p>  可能导致<code>死锁</code> =》 <code>尽可能不</code>使用 同步资源的<code>嵌套</code></p>\n</blockquote>\n<h3 id=\"10-6-线程通信问题：\"><a href=\"#10-6-线程通信问题：\" class=\"headerlink\" title=\"10.6 线程通信问题：\"></a>10.6 线程通信问题：</h3><h4 id=\"10-6-1生产者与消费者问题\"><a href=\"#10-6-1生产者与消费者问题\" class=\"headerlink\" title=\"10.6.1生产者与消费者问题\"></a>10.6.1生产者与消费者问题</h4><p>经典问题：</p>\n<ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1op4y1S7KK?from=search&seid=13986664181595566652\">生产者与消费者问题-视频1：</a></li>\n<li>  <a href=\"https://www.bilibili.com/video/BV1Lb411z71t/?spm_id_from=trigger_reload\">生产者与消费者问题-视频2</a></li>\n</ul>\n<blockquote>\n<p>  生产者：生产商品，放入仓库</p>\n<p>  消费者：消费商品，取出仓库 </p>\n<p>  以上两个线程共享资源【仓库】，但每个线程 执行的操作不同，需要线程之间的通信，来同步仓库中的商品数。</p>\n</blockquote>\n<p>代码分析：</p>\n<ul>\n<li>  生产者：</li>\n<li>  消费者：</li>\n<li>  商品：品牌、名字</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gx9XeH.png\" alt=\"多线程-生产者和消费者\"></p>\n<h4 id=\"10-6-2-解决线程通信问题：\"><a href=\"#10-6-2-解决线程通信问题：\" class=\"headerlink\" title=\"10.6.2 解决线程通信问题：\"></a>10.6.2 解决线程通信问题：</h4><p>例子：</p>\n<blockquote>\n<p>  生产者：包子铺老板。</p>\n<p>  消费者：顾客</p>\n<p>  顾客：告诉老板 购买的包子数，顾客调用<code>wait( )</code>，放弃CPU执行，进入<code>waiting无限等待</code>状态</p>\n<p>  老板：花5s做包子，调用<code>notify( )</code>，告知唤醒 顾客来拿包子。</p>\n<p>  <strong>注意：</strong></p>\n<ul>\n<li>  老板、顾客都要使用 <code>同步代码块</code> 包裹。</li>\n<li>  同步代码块的<code>锁对象</code>必须<code>唯一</code>。</li>\n<li>  只有<code>锁对象</code>才能调用<code> wait( )</code>，和<code>notify( )</code>。</li>\n</ul>\n</blockquote>\n<p>综上：</p>\n<ul>\n<li>  吃、做包子【包子和包子铺互斥，因此包子为 锁对象】</li>\n<li>  修改标志</li>\n<li>  唤醒对方</li>\n</ul>\n<ul>\n<li>  同步代码块</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t分别在生产者类、消费者类中使用同步代码块</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            Product p = <span class=\"keyword\">new</span> Product();</span><br><span class=\"line\"></span><br><span class=\"line\">            ProcuderThread pt = <span class=\"keyword\">new</span> ProcuderThread(p);</span><br><span class=\"line\"></span><br><span class=\"line\">            ClientThread ct =<span class=\"keyword\">new</span> ClientThread(p);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(pt).start();</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(ct).start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String brand;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBrand</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> brand;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBrand</span><span class=\"params\">(String brand)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.brand = brand;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Product</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Product</span><span class=\"params\">(String brand, String name)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.brand = brand;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 生产者</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProcuderThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> Product p;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ProcuderThread</span><span class=\"params\">(Product p)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.p = p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;=<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">synchronized</span> (p)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 生产巧克力</span></span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.p.setBrand(<span class=\"string\">&quot;德芙&quot;</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                            Thread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                            e.printStackTrace();</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.p.setName(<span class=\"string\">&quot;巧克力&quot;</span>);</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 生产啤酒</span></span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.p.setBrand(<span class=\"string\">&quot;青岛&quot;</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                            Thread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                            e.printStackTrace();</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.p.setName(<span class=\"string\">&quot;啤酒&quot;</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;生产者生产了：&quot;</span>+<span class=\"keyword\">this</span>.p.getBrand()+<span class=\"string\">&quot;---&gt;&quot;</span></span><br><span class=\"line\">                            +<span class=\"keyword\">this</span>.p.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//消费者</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ClientThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> Product p;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ClientThread</span><span class=\"params\">(Product p)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.p = p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i =<span class=\"number\">1</span>; i &lt;=<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">synchronized</span> (p)&#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;消费者消费了：&quot;</span>+<span class=\"keyword\">this</span>.p.getBrand()+<span class=\"string\">&quot;---&gt;&quot;</span></span><br><span class=\"line\">                            +<span class=\"keyword\">this</span>.p.getName());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<ul>\n<li>  同步方法</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t在产品类中使用同步代码块</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Product p = <span class=\"keyword\">new</span> Product();</span><br><span class=\"line\"></span><br><span class=\"line\">        ProcuderThread pt = <span class=\"keyword\">new</span> ProcuderThread(p);</span><br><span class=\"line\"></span><br><span class=\"line\">        ClientThread ct =<span class=\"keyword\">new</span> ClientThread(p);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(pt).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(ct).start();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String brand;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBrand</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> brand;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBrand</span><span class=\"params\">(String brand)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.brand = brand;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Product</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Product</span><span class=\"params\">(String brand, String name)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.brand = brand;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">setProduct</span><span class=\"params\">(String brand, String name)</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.setBrand(brand);</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.setName(name);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;生产者生产了：&quot;</span>+<span class=\"keyword\">this</span>.getBrand()+<span class=\"string\">&quot;---&gt;&quot;</span></span><br><span class=\"line\">                    +<span class=\"keyword\">this</span>.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">getProduct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;消费者消费了：&quot;</span>+<span class=\"keyword\">this</span>.getBrand()+<span class=\"string\">&quot;---&gt;&quot;</span></span><br><span class=\"line\">                    +<span class=\"keyword\">this</span>.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">// 生产者</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProcuderThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> Product p;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ProcuderThread</span><span class=\"params\">(Product p)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.p = p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;=<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                        p.setProduct(<span class=\"string\">&quot;德芙&quot;</span>,<span class=\"string\">&quot;巧克力&quot;</span>);</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        p.setProduct(<span class=\"string\">&quot;青岛&quot;</span>,<span class=\"string\">&quot;啤酒&quot;</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;生产者生产了：&quot;</span>+<span class=\"keyword\">this</span>.p.getBrand()+<span class=\"string\">&quot;---&gt;&quot;</span></span><br><span class=\"line\">                            +<span class=\"keyword\">this</span>.p.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 消费者</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ClientThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> Product p;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ClientThread</span><span class=\"params\">(Product p)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.p = p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i =<span class=\"number\">1</span>; i &lt;=<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                p.getProduct();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>  Lock锁</li>\n</ul>\n<h3 id=\"10-7-线程池：\"><a href=\"#10-7-线程池：\" class=\"headerlink\" title=\"10.7 线程池：\"></a>10.7 线程池：</h3><blockquote>\n<ul>\n<li>  第一次使用时，创建多个线程，存入集合中【集合中的线程可以复用】</li>\n<li>  使用时，取出线程</li>\n<li>  用完后，重写存入线程池</li>\n</ul>\n<p>  JDK1.5 之后，自带线程池，无需 用户 自己使用 集合 创建线程池。</p>\n<ul>\n<li>  <code>java.util.concurrent.Executors;</code> =》生产 线程池 的工厂类</li>\n<li>  <code>ExecutorService newFixedThreadPool( 线程数 );</code> 生成线程池的方法</li>\n<li>  <code>submit( 线程);</code></li>\n<li>  <code>shudown();</code></li>\n</ul>\n<p>  线程池的好处：</p>\n<ul>\n<li>  提高速度</li>\n<li>  降低消耗</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadPoolDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ExecutorService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Executors;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 线程类</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;这是:&quot;</span>+Thread.currentThread().getName());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建 1个可存放3个线程 的线程池</span></span><br><span class=\"line\">            ExecutorService service = Executors.newFixedThreadPool(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建2个线程，并提交给 线程池</span></span><br><span class=\"line\">            service.submit(<span class=\"keyword\">new</span> TestThread());</span><br><span class=\"line\">            service.submit(<span class=\"keyword\">new</span> TestThread());</span><br><span class=\"line\"></span><br><span class=\"line\">            service.shutdownNow();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"11-网络编程\"><a href=\"#11-网络编程\" class=\"headerlink\" title=\"11. 网络编程\"></a>11. 网络编程</h2><p>整体过程：</p>\n<ul>\n<li>  服务器：启动，监听端口</li>\n<li>  客户端：主动连接 服务器</li>\n</ul>\n<p>Java中专门用于TCP通信的类：</p>\n<ul>\n<li>  客户端：<code>java.net.Socket</code> ，创建对象，发起连接</li>\n<li>  服务器：<code>java.net.ServerSocket</code>，创建对象，开启服务</li>\n</ul>\n<p>在TCP通信中，传输了<code>字节流对象</code>, 该流对象是<code>属于客户端</code>的流，服务器共用客户端的流。</p>\n<p>Socket：</p>\n<blockquote>\n<p>  套接字，是 包含了 IP地址+端口号的网络单位。</p>\n</blockquote>\n<p>Socket的常用方法：</p>\n<blockquote>\n<p>  构造方法：</p>\n<ul>\n<li>  客户端：<code>public Socket(String host目标主机, int port目标端口);</code></li>\n<li>  服务器：<code>public ServerSocket(int port);</code></li>\n</ul>\n<p>  客户端-成员方法：</p>\n<ul>\n<li>  <code>getInputStream();</code>  // 获取输入流</li>\n<li>  <code>getOutputStream();</code> // 获取输出流</li>\n<li>  <code>close()</code>  // 关闭套接字</li>\n</ul>\n<p>  服务器-成员方法：</p>\n<ul>\n<li>  <code>accept()</code> // 获取客户端的Socket</li>\n<li>  <code>getInputStream();</code> // 获取输入流</li>\n<li>  <code>getOutputStream();</code> // 获取输出流</li>\n<li>  <code>close()</code>  // 关闭套接字</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t步骤：【客户端】</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 创建客户端Scocket，构造方法中传入IP、端口</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 获取客户端的输出流 getOutputStream()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. 输出流的 write()来向服务器发送数据</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. 获取客户端的输入流 getInputStream()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t5. 输入流的 read()来读取数据</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t6. 释放资源 close()</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*\t步骤：【服务器】</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 创建服务器Scocket对象，构造方法中传入端口</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. accept()获取客户端的Socket,</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. socket.getInputStream() 来获取输入流  =》 read()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. socket.getOutputStream() 来获取输出流 =》 write()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t6. 释放资源【客户端的Socket、服务器的Socket】 close()</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*  注意：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 网络通信，必须使用Socket提供的流对象，不能使用自己创建的流。</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. Socket创建时，会向服务器发起请求，如果服务器未开启，则出现异常，否则可以正常通信。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 服务端：=======================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">package</span> TCPDemo;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.nio.charset.StandardCharsets;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;               </span><br><span class=\"line\">             </span><br><span class=\"line\">                ServerSocket socketServer = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">8888</span>);</span><br><span class=\"line\">              </span><br><span class=\"line\">                Socket client = socketServer.accept();</span><br><span class=\"line\">                </span><br><span class=\"line\">                InputStream is = client.getInputStream();</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">                <span class=\"keyword\">int</span> len=is.read(buffer);</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(<span class=\"keyword\">new</span> String(buffer,<span class=\"number\">0</span>,len));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                OutputStream os = client.getOutputStream();</span><br><span class=\"line\">                os.write(<span class=\"string\">&quot;收到，谢谢&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                client.close();</span><br><span class=\"line\">                socketServer.close();</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 客户端：=======================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"keyword\">package</span> TCPDemo;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.nio.charset.StandardCharsets;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span><span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                Socket socketClient = <span class=\"keyword\">new</span> Socket(<span class=\"string\">&quot;127.0.0.1&quot;</span>,<span class=\"number\">8888</span>);</span><br><span class=\"line\">                </span><br><span class=\"line\">                OutputStream o = socketClient.getOutputStream();</span><br><span class=\"line\">                </span><br><span class=\"line\">                o.write(<span class=\"string\">&quot;你好，服务器&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                InputStream is = socketClient.getInputStream();</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">                <span class=\"keyword\">int</span> len=is.read(buffer);</span><br><span class=\"line\">                System.out.println(<span class=\"keyword\">new</span> String(buffer,<span class=\"number\">0</span>,len));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                socketClient.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"案例1：文件上传、下载\"><a href=\"#案例1：文件上传、下载\" class=\"headerlink\" title=\"案例1：文件上传、下载\"></a>案例1：文件上传、下载</h4><p>步骤：</p>\n<ul>\n<li>  客户端：获取<code>本地上传的输入流</code>，使用<code>网络Socket输出流</code>上传文件。接收服务器的“上传成功”</li>\n<li>  服务器：获取<code>网络Socket输入流</code>，使用<code>本地下载输出流</code>下载文件。给客户端发送“上传成功”。</li>\n</ul>\n<p>优化思路：将服务端的代码，放入Thread中，并开启多线程。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 服务端：=======================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> TCPDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.StandardCharsets;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileUploadServer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span><span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ServerSocket server = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">8888</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 死循环，让服务器一直监听客户端</span></span><br><span class=\"line\">                    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        Socket client = server.accept();</span><br><span class=\"line\"></span><br><span class=\"line\">                        InputStream is = client.getInputStream();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;E:\\\\2-demo&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(!file.exists())&#123;</span><br><span class=\"line\">                            file.mkdirs();</span><br><span class=\"line\"></span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">int</span> len = is.read(buffer);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义文件的命名规则：域名+毫秒值+随机数</span></span><br><span class=\"line\">                        String filename = <span class=\"string\">&quot;\\\\txt-&quot;</span></span><br><span class=\"line\">                                +System.currentTimeMillis()</span><br><span class=\"line\">                                +<span class=\"keyword\">new</span> Random().nextInt(<span class=\"number\">200</span>)</span><br><span class=\"line\">                                +<span class=\"string\">&quot;.txt&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(file+filename);</span><br><span class=\"line\"></span><br><span class=\"line\">                        fos.write(buffer);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        OutputStream os = client.getOutputStream();</span><br><span class=\"line\">                        os.write(<span class=\"string\">&quot;上传成功&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        fos.close();</span><br><span class=\"line\">                        client.close();</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).start();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 客户端：=======================================</span></span><br><span class=\"line\">        <span class=\"keyword\">package</span> TCPDemo;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.nio.charset.StandardCharsets;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileUploadClient</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;E:\\\\0-demo\\\\1.txt&quot;</span>);</span><br><span class=\"line\">                </span><br><span class=\"line\">                Socket client = <span class=\"keyword\">new</span> Socket(<span class=\"string\">&quot;127.0.0.1&quot;</span>,<span class=\"number\">8888</span>);</span><br><span class=\"line\">                </span><br><span class=\"line\">                OutputStream os = client.getOutputStream();</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">                <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">                </span><br><span class=\"line\"><span class=\"comment\">// 读取数据【可能死循环，因为读到文件结束符后，没有将结束符写入文件，因此read()阻塞，程序不结束】                </span></span><br><span class=\"line\">                <span class=\"keyword\">while</span>((len=fis.read(buffer))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                     os.write(buffer,<span class=\"number\">0</span>,len);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"><span class=\"comment\">// 解决死循环问题                </span></span><br><span class=\"line\">                client.shutdownOutput();</span><br><span class=\"line\">                </span><br><span class=\"line\"><span class=\"comment\">// 打印数据【可能死循环，因为读到文件结束符后，没有将结束符写入文件，因此read()阻塞，程序不结束】                      </span></span><br><span class=\"line\">                InputStream is = client.getInputStream();</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">while</span>((len=is.read(buffer))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"keyword\">new</span> String(buffer,<span class=\"number\">0</span>,len));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                fis.close();</span><br><span class=\"line\">                is.close();</span><br><span class=\"line\">                os.close();</span><br><span class=\"line\">                client.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"案例二：模拟-B-S进行通信\"><a href=\"#案例二：模拟-B-S进行通信\" class=\"headerlink\" title=\"案例二：模拟 B/S进行通信\"></a>案例二：模拟 B/S进行通信</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 服务端：Java</span></span><br><span class=\"line\"><span class=\"comment\">// 客户端：浏览器</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.StandardCharsets;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ServerSocket server = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">8888</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            Socket clientSocket = server.accept();</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        InputStream is = clientSocket.getInputStream();</span><br><span class=\"line\"></span><br><span class=\"line\">                        BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(is));</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// http请求的第一行</span></span><br><span class=\"line\">                        String line = br.readLine();</span><br><span class=\"line\">                        String[] arr = line.split(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">                        String htmlpath = arr[<span class=\"number\">1</span>].substring(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                        FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(htmlpath);</span><br><span class=\"line\">                        OutputStream os = clientSocket.getOutputStream();</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">//固定写法</span></span><br><span class=\"line\">                        os.write(<span class=\"string\">&quot;HTTP/1.1 200 OK\\r\\n&quot;</span>.getBytes());</span><br><span class=\"line\">                        os.write(<span class=\"string\">&quot;Content-Type:text/html\\r\\n&quot;</span>.getBytes());</span><br><span class=\"line\">                        os.write(<span class=\"string\">&quot;\\r\\n&quot;</span>.getBytes());</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// 在浏览器输出页面</span></span><br><span class=\"line\">                        <span class=\"keyword\">byte</span>[] buff = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">                        <span class=\"keyword\">int</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">while</span> ((len = fis.read(buff)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                            os.write(buff, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        fis.close();</span><br><span class=\"line\">                        br.close();</span><br><span class=\"line\">                        clientSocket.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;).start();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"12-Junit单元测试\"><a href=\"#12-Junit单元测试\" class=\"headerlink\" title=\"12. Junit单元测试\"></a>12. Junit单元测试</h2><p><img src=\"https://z3.ax1x.com/2021/05/27/2CT5h8.png\" alt=\"测试-分类\"></p>\n<p>Junit：</p>\n<blockquote>\n<p>  一种白盒测试工具。</p>\n</blockquote>\n<h4 id=\"12-1-Junit的使用：【-Test】\"><a href=\"#12-1-Junit的使用：【-Test】\" class=\"headerlink\" title=\"12.1 Junit的使用：【@Test】\"></a>12.1 Junit的使用：【@Test】</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*\t步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 定义1个测试类</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t 建议：</span></span><br><span class=\"line\"><span class=\"comment\">               - 包名：xxx.xxxx.test;  =&gt; 如： cn.itcast.test;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t   - 类名：测试类的类名以被测试类的名字+Test组成：类名Test =》 如：CalcTest</span></span><br><span class=\"line\"><span class=\"comment\">\t\t</span></span><br><span class=\"line\"><span class=\"comment\">\t\t2. 定义1个测试方法：=》如：void testAdd()</span></span><br><span class=\"line\"><span class=\"comment\">        \t 建议：</span></span><br><span class=\"line\"><span class=\"comment\">        \t \t- 方法名： 以test开头</span></span><br><span class=\"line\"><span class=\"comment\">        \t \t- 方法返回值： void</span></span><br><span class=\"line\"><span class=\"comment\">        \t \t- 参数：无需参数</span></span><br><span class=\"line\"><span class=\"comment\">\t\t3. 在方法定义位置前，加上注解@Test ,使得方法可以独立运行【无需main方法】</span></span><br><span class=\"line\"><span class=\"comment\">        </span></span><br><span class=\"line\"><span class=\"comment\">        4. 导入Junit工具的依赖包</span></span><br><span class=\"line\"><span class=\"comment\">        \t- 【点击@Test旁边的小灯泡，添加进classPath】</span></span><br><span class=\"line\"><span class=\"comment\">        </span></span><br><span class=\"line\"><span class=\"comment\">        5. 在测试方法中：</span></span><br><span class=\"line\"><span class=\"comment\">        \t- 创建被测试的对象，调用被测试的方法。</span></span><br><span class=\"line\"><span class=\"comment\">        \t</span></span><br><span class=\"line\"><span class=\"comment\">        6. 运行</span></span><br><span class=\"line\"><span class=\"comment\">        </span></span><br><span class=\"line\"><span class=\"comment\">        7. 判断结果：</span></span><br><span class=\"line\"><span class=\"comment\">        \t- 红色：测试失败</span></span><br><span class=\"line\"><span class=\"comment\">        \t- 绿色：测试通过</span></span><br><span class=\"line\"><span class=\"comment\">        \t</span></span><br><span class=\"line\"><span class=\"comment\">        8. 断言，将当前结果与正确结果比较\t</span></span><br><span class=\"line\"><span class=\"comment\">        \tAssert.assertEquals(正确值，当前值);</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> demo.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> demo.junit.Calculator;<span class=\"comment\">// 自定义的被测试类</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CalcTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 测试add方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAdd</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        Calculator c = <span class=\"keyword\">new</span>  Calculator();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rst = c.add(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        Assert.assertEquals(<span class=\"number\">3</span>,rst);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 测试sub方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testSub</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        Calculator c = <span class=\"keyword\">new</span> Calculator();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rst = c.sub(<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        Assert.assertEquals(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"12-2-Junit的使用：【-Before-和-After】\"><a href=\"#12-2-Junit的使用：【-Before-和-After】\" class=\"headerlink\" title=\"12.2 Junit的使用：【@Before 和 @After】\"></a>12.2 Junit的使用：【@Before 和 @After】</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.After;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Assert;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Before;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> demo.junit.Calculator;<span class=\"comment\">// 自定义的被测试类</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CalcTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    *   定义1个 init方法，用于在申请资源,每个测试方法在执行前都会自动调用init( )</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    * */</span></span><br><span class=\"line\">    <span class=\"meta\">@Before</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;申请资源-init()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     *   定义1个 close（），用于在释放资源,每个测试方法在执行后都会自动调用init( )</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * */</span></span><br><span class=\"line\">    <span class=\"meta\">@After</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;释放资源-after()&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAdd</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;testAdd方法执行&quot;</span>);</span><br><span class=\"line\">        Calculator c = <span class=\"keyword\">new</span>  Calculator();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rst = c.add(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(rst);</span></span><br><span class=\"line\">        Assert.assertEquals(<span class=\"number\">3</span>,rst);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testSub</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;testSub方法执行&quot;</span>);</span><br><span class=\"line\">        Calculator c = <span class=\"keyword\">new</span> Calculator();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rst = c.sub(<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        Assert.assertEquals(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"13-反射\"><a href=\"#13-反射\" class=\"headerlink\" title=\"13. 反射\"></a>13. 反射</h2><ul>\n<li><p>  <a href=\"https://blog.csdn.net/Zzh1110/article/details/104101124\">Java–反射CSDN博客</a></p>\n</li>\n<li><p><a href=\"https://www.bilibili.com/video/BV1p4411P7V3?p=5\">狂神说-反射</a></p>\n</li>\n</ul>\n<p><strong>反射</strong> 【框架设计的灵魂】：</p>\n<blockquote>\n<p>  定义：将类的组成部分，封装为各个对象。</p>\n<p>  可以在<code>运行</code>的时候，<code>获取类</code>的相关信息。【是Java作为<code>准动态语言</code>的标志】</p>\n</blockquote>\n<ul>\n<li>  正常过程：</li>\n</ul>\n<blockquote>\n<p>  导包 =》new 对象 =》 得到 实例化对象</p>\n</blockquote>\n<ul>\n<li>  反射过程：</li>\n</ul>\n<blockquote>\n<p>  获取实例化对象 =》getClass( )来得到类信息 =》找到所在的包名</p>\n</blockquote>\n<h3 id=\"13-1-Java代码的三个阶段：\"><a href=\"#13-1-Java代码的三个阶段：\" class=\"headerlink\" title=\"13.1 Java代码的三个阶段：\"></a>13.1 Java代码的三个阶段：</h3><ul>\n<li>  源代码阶段：编写代码【成员变量+成员方法+构造方法】</li>\n<li>  类对象阶段：通过类加载器，将代码读入 JVM【在这个阶段，源码中的1个类，被拆成3个Class对象】</li>\n<li>  运行时阶段：运行代码</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/05/29/2kTPf0.png\" alt=\"Java代码的三个阶段\"></p>\n<p>反射的好处：</p>\n<blockquote>\n<ul>\n<li>  可以在代码运行的时候，来操作对象。【例如：IDE的代码提示功能，就是利用了反射的原理，在类对象阶段加载Methods数组】</li>\n<li>  解耦</li>\n</ul>\n</blockquote>\n<p>代码演示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*   1. 获取字节码【类名.class】：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\tClass personClass = Person.class;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t</span></span><br><span class=\"line\"><span class=\"comment\">\t2. 常用方法：</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t    0-设置访问权限【忽略安全检查】：true</span></span><br><span class=\"line\"><span class=\"comment\">        \tdeclaredField_1.setAccessible(true);</span></span><br><span class=\"line\"><span class=\"comment\">        \t</span></span><br><span class=\"line\"><span class=\"comment\">\t    1-字段：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t- 获取类中，所有public的字段(属性):</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t Field[] fields = personClass.getFields();</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t- 获取类中，指定的public的字段(属性):\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t Field field_1 = personClass.getField(字段名);</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t \t\t\t\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t- 获取类中，所有的字段【包括private,但获取private的前提是先设置权限】:\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t Field[] declaredFields = personClass.getDeclaredFields();</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t- 获取类中，指定的字段【包括private,但获取private的前提是先设置权限】:\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t Field declaredField = personClass.getDeclaredField(“name”);</span></span><br><span class=\"line\"><span class=\"comment\">                 </span></span><br><span class=\"line\"><span class=\"comment\">                 </span></span><br><span class=\"line\"><span class=\"comment\">        2-构造器： </span></span><br><span class=\"line\"><span class=\"comment\">            - 获取类中，所有的构造器</span></span><br><span class=\"line\"><span class=\"comment\">   \t\t\tConstructor&lt;?&gt;[] Constructors = personClass.getConstructors();</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t-获取类中，指定的构造器</span></span><br><span class=\"line\"><span class=\"comment\">        \tConstructor&lt;T&gt; Constructor = personClass.getConstructor(类&lt;?&gt;...参数类型);</span></span><br><span class=\"line\"><span class=\"comment\">        </span></span><br><span class=\"line\"><span class=\"comment\">            - 获取类中，所有的已经声明的构造器</span></span><br><span class=\"line\"><span class=\"comment\">             Constructor[] declaredConstructors = personClass.getDeclaredConstructors();</span></span><br><span class=\"line\"><span class=\"comment\">             </span></span><br><span class=\"line\"><span class=\"comment\">\t\t \t-获取类中，指定的已经声明的构造器</span></span><br><span class=\"line\"><span class=\"comment\">    \t\t Constructor declaredConstructor = personClass.getDeclaredConstructor(类&lt;?&gt;...参数类型);</span></span><br><span class=\"line\"><span class=\"comment\">    \t\t </span></span><br><span class=\"line\"><span class=\"comment\">    \t\t </span></span><br><span class=\"line\"><span class=\"comment\">       3-成员方法：</span></span><br><span class=\"line\"><span class=\"comment\">       </span></span><br><span class=\"line\"><span class=\"comment\">        \tMethod[] methods = personClass.getMethods();</span></span><br><span class=\"line\"><span class=\"comment\">        \t</span></span><br><span class=\"line\"><span class=\"comment\">        \tMethod method = personClass.getMethod(String name,类&lt;?&gt;...参数类型);</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        \tMethod[] declaredMethods = personClass.getDeclaredMethods();</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        \tMethod declaredMethod = personClass.getDeclaredMethod(String name,类&lt;?&gt;...参数类型);</span></span><br><span class=\"line\"><span class=\"comment\">     4-获取类名：</span></span><br><span class=\"line\"><span class=\"comment\">     \t\tString class_name = personClass.getName();</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Person类</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 以下省略了get/set访问器</span></span><br><span class=\"line\">        。。。</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">// 字段相关：=================================================</span></span><br><span class=\"line\">        <span class=\"comment\">// 利用反射来获取字节码，找到Person类</span></span><br><span class=\"line\">        Class personClass = Person.class;</span><br><span class=\"line\">        <span class=\"comment\">// 获取Person中 所有 public 的字段【属性】</span></span><br><span class=\"line\">        Field[] fields = personClass.getFields();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 打印所有public属性</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Field field : fields) &#123;</span><br><span class=\"line\">            System.out.println(field);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 创建对象</span></span><br><span class=\"line\">        Person p = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;张三&quot;</span>,<span class=\"number\">20</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 获取Person类中的public字段 a类</span></span><br><span class=\"line\">        Field a = personClass.getField(<span class=\"string\">&quot;a&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 获取 对象p中的属性a的值的对象</span></span><br><span class=\"line\">        Object value = a.get(p);</span><br><span class=\"line\">        System.out.println(value); <span class=\"comment\">// 1</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 设置 对象p中的属性a的值</span></span><br><span class=\"line\">        a.set(p,<span class=\"number\">123</span>);</span><br><span class=\"line\">        System.out.println(p); <span class=\"comment\">// Person&#123;name=&#x27;张三&#x27;, age=20, a=123&#125;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 获取声明过的属性【包括：private类型的】</span></span><br><span class=\"line\">        Field declaredField_name = personClass.getDeclaredField(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 设置访问权限【忽略安全检查】：true</span></span><br><span class=\"line\">        declaredField_name.setAccessible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 获取 具体字段值的 对象</span></span><br><span class=\"line\">        Object val2 = declaredField_name.get(p);</span><br><span class=\"line\">        System.out.println(val2);</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 构造器相关：=================================================      </span></span><br><span class=\"line\">\t\tClass&lt;Person&gt; personClass = Person.class;</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"comment\">//获取构造器</span></span><br><span class=\"line\">Constructor constructor1= personClass.getConstructor(String.class,<span class=\"keyword\">int</span>.class,<span class=\"keyword\">int</span>.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    \t<span class=\"comment\">// 打印结果：public Person(java.lang.String,int,int)</span></span><br><span class=\"line\">    \tSystem.out.println(constructor);</span><br><span class=\"line\"></span><br><span class=\"line\">    \t<span class=\"comment\">// 1.创建对象-有参【构造器-newInstance方法】</span></span><br><span class=\"line\">        Object person_1 = constructor1.newInstance(<span class=\"string\">&quot;张三&quot;</span>,<span class=\"number\">23</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 2.创建对象-无参【构造器-newInstance方法】</span></span><br><span class=\"line\">        Object person_2 = constructor1.newInstance();</span><br><span class=\"line\">        <span class=\"comment\">// 3.创建对象-无参【Class类-newInstance方法，已弃用】</span></span><br><span class=\"line\">        Object person_3 = personClass.newInstance();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// Person&#123;name=&#x27;张三&#x27;, age=23, a=1&#125;</span></span><br><span class=\"line\">        System.out.println(person_1);</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 成员方法相关：=================================================             </span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        Class&lt;Person&gt; personClass = Person.class;</span><br><span class=\"line\">        <span class=\"comment\">// 获取指定的方法【方法无参数时】</span></span><br><span class=\"line\">        Method eat_method = personClass.getMethod(<span class=\"string\">&quot;eat&quot;</span>);</span><br><span class=\"line\">        System.out.println(eat_method);</span><br><span class=\"line\">        </span><br><span class=\"line\">        Person p = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;张三&quot;</span>,<span class=\"number\">20</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">//调用eat方法</span></span><br><span class=\"line\">        eat_method.invoke(p);  <span class=\"comment\">//我eat</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 获取指定的方法【方法有参数时,传入：方法名+参数的反射类】        </span></span><br><span class=\"line\">        Method eat_2 = personClass.getMethod(<span class=\"string\">&quot;eat&quot;</span>, String.class);</span><br><span class=\"line\">        Person p2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;李四&quot;</span>,<span class=\"number\">24</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">        eat_2.invoke(p2,<span class=\"string\">&quot;香蕉&quot;</span>); <span class=\"comment\">//我eat:香蕉</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 获取类名</span></span><br><span class=\"line\">        String class_name = personClass.getName();</span><br><span class=\"line\">        System.out.println(class_name);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"13-2-案例1：\"><a href=\"#13-2-案例1：\" class=\"headerlink\" title=\"13.2 案例1：\"></a>13.2 案例1：</h3><p>目标：</p>\n<blockquote>\n<p>  写一个工具，在不改变任何代码的前提下，可以用来：</p>\n<ul>\n<li>  创建任意对象</li>\n<li>  执行任意方法</li>\n</ul>\n</blockquote>\n<p>实现思路:</p>\n<blockquote>\n<ul>\n<li>  需要：配置文件、反射</li>\n</ul>\n</blockquote>\n<p>实现步骤：</p>\n<blockquote>\n<ul>\n<li>  将需要创建的<code>对象的全类名</code> 和 需要调用的<code>方法</code> 定义在<code>配置文件</code>中。</li>\n<li>  加载<code>配置文件</code>。</li>\n<li>  利用<code>反射</code>来加载 <code>所需的类</code>到<code>内存</code>中。</li>\n<li>  创建对象</li>\n<li>  执行方法</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Member;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ReflectTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 创建properties对象</span></span><br><span class=\"line\">        Properties prop = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//获取类加载器，通过类加载器，加载class目录下的配置文件的输入流</span></span><br><span class=\"line\">        ClassLoader classLoader_1 = ReflectTest.class.getClassLoader();</span><br><span class=\"line\">        InputStream is = classLoader_1.getResourceAsStream(<span class=\"string\">&quot;pro.properties&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//利用配置文件的输入流，加载配置文件</span></span><br><span class=\"line\">        prop.load(is);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//获取具体的配置</span></span><br><span class=\"line\">        String className_1 = prop.getProperty(<span class=\"string\">&quot;className&quot;</span>);</span><br><span class=\"line\">        String methodName_1 = prop.getProperty(<span class=\"string\">&quot;methodName&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//获取Class类</span></span><br><span class=\"line\">        Class&lt;?&gt; cls = Class.forName(className_1);</span><br><span class=\"line\">        <span class=\"comment\">// 创建类对象</span></span><br><span class=\"line\">        Object  c = cls.newInstance();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//获取方法类</span></span><br><span class=\"line\">        Class&lt;?&gt; cls2 = Class.forName(methodName_1);</span><br><span class=\"line\">        Method m1 = cls2.getMethod(methodName_1);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//调用方法</span></span><br><span class=\"line\">        m1.invoke(c);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"13-3-获取Class对象的3种方式：\"><a href=\"#13-3-获取Class对象的3种方式：\" class=\"headerlink\" title=\"13.3 获取Class对象的3种方式：\"></a>13.3 获取Class对象的3种方式：</h3><ul>\n<li>  源代码阶段：<code>Class.forName(全类名);    </code>// 全类名：<code>包名.类名</code></li>\n<li>  类加载阶段：<code>类名.class 属性;</code></li>\n<li>  运行时阶段：<code>对象名.getClass( ); </code>  // getClass( )定义在Object类中</li>\n</ul>\n<p>结论：</p>\n<blockquote>\n<p>   同一个字节码文件，在程序的一次运行中，只会加载一次，不论用哪种方式获取的Class对象，最终只会是同一个。</p>\n</blockquote>\n<h3 id=\"13-4-Class对象的功能：\"><a href=\"#13-4-Class对象的功能：\" class=\"headerlink\" title=\"13.4 Class对象的功能：\"></a>13.4 Class对象的功能：</h3><ul>\n<li><p>  获取<code> 成员变量</code>：<code>getFields();</code></p>\n</li>\n<li><p>  获取 <code>成员方法</code>：<code>getMethods()</code></p>\n</li>\n<li><p>  获取 <code>构造方法</code>：<code>getConstructors();</code></p>\n</li>\n<li><p>获取 <code>类名</code>：<code>getClassName();</code></p>\n</li>\n</ul>\n<h3 id=\"13-5-类加载的过程：\"><a href=\"#13-5-类加载的过程：\" class=\"headerlink\" title=\"13.5 类加载的过程：\"></a>13.5 类加载的过程：</h3><p><img src=\"https://z3.ax1x.com/2021/05/30/2V5Aqe.png\" alt=\"Java内存分析\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/05/30/2V5KRP.png\" alt=\"Java-类加载的过程\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/05/30/2V5jQf.png\" alt=\"类加载的详细过程\"></p>\n<h2 id=\"14-注解（Annotation）\"><a href=\"#14-注解（Annotation）\" class=\"headerlink\" title=\"14. 注解（Annotation）\"></a>14. 注解（Annotation）</h2><ul>\n<li>  <a href=\"https://blog.csdn.net/Zzh1110/article/details/104887317\">Java–自定义注解-CSDN博客</a></li>\n<li>  <a href=\"https://www.bilibili.com/video/BV1p4411P7V3?p=1\">狂神说-注解和反射</a></li>\n</ul>\n<h3 id=\"14-1-注解-概念\"><a href=\"#14-1-注解-概念\" class=\"headerlink\" title=\"14.1 注解-概念:\"></a>14.1 注解-概念:</h3><blockquote>\n<ul>\n<li>  <code>注释</code>：给<code>人</code>看的备注</li>\n<li>  <code>注解</code>：给<code>计算机</code>看的备注，也叫<code>元数据</code>，<code>JDK1.5</code>开始引入的特性。</li>\n</ul>\n</blockquote>\n<h3 id=\"14-2-注解的作用：\"><a href=\"#14-2-注解的作用：\" class=\"headerlink\" title=\"14.2 注解的作用：\"></a>14.2 注解的作用：</h3><blockquote>\n<ul>\n<li>  编写文档：生成doc文档</li>\n<li>  代码分析：使用反射</li>\n<li>  编译检查：如：Ovverride</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t注解doc演示</span></span><br><span class=\"line\"><span class=\"comment\">*\t<span class=\"doctag\">@author</span> cyw</span></span><br><span class=\"line\"><span class=\"comment\">*\t<span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\">*\t<span class=\"doctag\">@since</span> 1.5</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在cmd中，进入该文件所在的目录，输入：javadoc AnnoDemo.java ,可以得到该类的文档</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AnnoDemo</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t*\t<span class=\"doctag\">@param</span> a 整数</span></span><br><span class=\"line\"><span class=\"comment\">\t*\t<span class=\"doctag\">@param</span> b整数</span></span><br><span class=\"line\"><span class=\"comment\">\t*\t<span class=\"doctag\">@return</span> 两数之和</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h3 id=\"14-2-JDK中内置的注解：\"><a href=\"#14-2-JDK中内置的注解：\" class=\"headerlink\" title=\"14.2  JDK中内置的注解：\"></a>14.2  JDK中内置的注解：</h3><ul>\n<li>  <code>@Override</code>: 检查被标注的方法是否是继承自 父类/接口。</li>\n<li>  <code>@Deprecated</code>: 标注的内容已过时。</li>\n<li>  <code>@SuppressWarnings</code>: 压制警告 =》 <code>@@SuppressWarnings(&quot;all&quot;)</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 压制所有警告：IDE不要弹出警告信息    </span></span><br><span class=\"line\">\t<span class=\"meta\">@SuppressWarnings(&quot;all&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AnnoDemo</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 用于标记：方法已过时</span></span><br><span class=\"line\">            <span class=\"meta\">@Deprecated</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">add_1</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">add_2</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"14-3-自定义注解：\"><a href=\"#14-3-自定义注解：\" class=\"headerlink\" title=\"14.3 自定义注解：\"></a>14.3 自定义注解：</h3><ul>\n<li>  格式：【<code>元注解 + public @interface 注解名&#123; &#125;</code>】</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">元注解</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> 注解名&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 例如：</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> MyAnno&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@MyAnno</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sayHello</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;你好&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>  注解的<code>本质</code>：【继承了Annotion类的1个<code>接口</code>】</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MyAnno</span> <span class=\"keyword\">extends</span> <span class=\"title\">java</span>.<span class=\"title\">lang</span>.<span class=\"title\">annotion</span>,<span class=\"title\">Annotion</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><p>注解的<code>属性</code>：【注解接口中的<code>抽象方法</code>】</p>\n<blockquote>\n<ol>\n<li><p> 只要定义了注解的属性，则该注解的属性必须赋完值才能使用。</p>\n</li>\n<li><p> 可以使用default关键字，来给注解的属性赋默认值。</p>\n</li>\n<li><p> 如果注解只有1个属性，且该属性的名字为value，使用时，可以只传值，不写属性名。</p>\n</li>\n<li><p>数组在数值时，在数组的值的最外面，用 { } 包裹；数组只有1个值时，可省略大括号。</p>\n</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n<ul>\n<li>  注解中抽象方法（注解的属性）的返回值的类型【5种】：</li>\n</ul>\n<blockquote>\n<ul>\n<li>  基本类型</li>\n<li>  字符串</li>\n<li>  枚举</li>\n<li>  注解</li>\n<li>  以上4种的数组</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> MyAnno&#123;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">show_1</span><span class=\"params\">()</span></span>;\t<span class=\"comment\">//基本类型</span></span><br><span class=\"line\">      <span class=\"function\">String <span class=\"title\">show_2</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">      <span class=\"function\">MyAnno <span class=\"title\">show_3</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">      String[] show_4();</span><br><span class=\"line\"> </span><br><span class=\"line\">  &#125; </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>实例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> MyAnno&#123;</span><br><span class=\"line\">      <span class=\"function\">String <span class=\"title\">name_method</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">age_method</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@MyAnno(name_method=&quot;张三&quot;,age_method = 13)</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Eat</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;你好&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"14-3-1-元注解：\"><a href=\"#14-3-1-元注解：\" class=\"headerlink\" title=\"14.3.1 元注解：\"></a>14.3.1 元注解：</h4><p>概念：</p>\n<blockquote>\n<p>  元注解：修饰注解的注解。</p>\n</blockquote>\n<p>常见的元注解：</p>\n<ul>\n<li><code>@Target</code>：描述<code>作用的位置</code>。如：作用在方法<ul>\n<li>ElementType：【一种枚举类型】<ul>\n<li>  TYPE：作用在<code>类</code>上</li>\n<li>  METHOD：作用在<code>方法</code>上</li>\n<li>  FIELD：作用在<code>成员变量</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>@Retention</code>：描述 注解 <code>保留的阶段</code>。如：保留在源码阶段<ul>\n<li>RetentionPolicy：【一种枚举类型】<ul>\n<li>  SOURCE：源码阶段</li>\n<li>  CLASS：class类对象阶段</li>\n<li>  RUNTIME：运行时阶段【最常用】</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>  <code>@Documented</code>：描述 注解 <code>是否被抽取到API文档</code>中。</li>\n<li>  <code>@Inheritied</code>：描述 注解 <code>是否被子类继承</code>。</li>\n</ul>\n<h4 id=\"14-3-2-注解的使用\"><a href=\"#14-3-2-注解的使用\" class=\"headerlink\" title=\"14.3.2 注解的使用:\"></a>14.3.2 注解的使用:</h4><ul>\n<li>  获取 注解使用的<code>位置的对象</code></li>\n<li>  利用位置对象 获取 <code>注解对象</code>: obj.getAnnotion(注解名.class)</li>\n<li>  调用注解中的<code>抽象方法</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Target(ElementType.TYPE)</span>\t\t<span class=\"comment\">// 元注解，Target元注解,指定自定义注解的使用位置，TYPE：给类使用</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span>\t<span class=\"comment\">// 元注解，Retention元注解,指定自定义注解的使用时期</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> myAnnoDemo&#123;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">name</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;ZhangSan&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用注解</span></span><br><span class=\"line\"><span class=\"meta\">@myAnnoDemo(name=&quot;lisi&quot;)</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestClass</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n","site":{"data":{}},"cover":"https://z3.ax1x.com/2021/06/01/2KV1yj.png","excerpt":"","more":"<h1 id=\"Java-SE-入门笔记\"><a href=\"#Java-SE-入门笔记\" class=\"headerlink\" title=\"Java SE -入门笔记\"></a>Java SE -入门笔记</h1><p>[toc]</p>\n<h2 id=\"0-前置知识\"><a href=\"#0-前置知识\" class=\"headerlink\" title=\"0. 前置知识\"></a>0. 前置知识</h2><p>文档：</p>\n<ul>\n<li>  <a href=\"https://www.runoob.com/java/java-tutorial.html\">Java 教程 | 菜鸟教程 (runoob.com)</a></li>\n<li>  <a href=\"https://tool.oschina.net/apidocs/apidoc?api=jdk-zh\">在线文档-jdk-zh</a></li>\n<li>  <a href=\"https://blog.csdn.net/Zzh1110/article/details/105069644\">JavaSE-博客-笔记-网传</a></li>\n</ul>\n<h3 id=\"0-1-Java-的文件结构\"><a href=\"#0-1-Java-的文件结构\" class=\"headerlink\" title=\"0.1 Java 的文件结构 :\"></a>0.1 Java 的<strong>文件结构</strong> :</h3><blockquote>\n<p>  项目 -&gt;  模块（包）-&gt;  .java文件 -&gt; 类 </p>\n<p>  包的命名规范：</p>\n<ol>\n<li> 由字母、数字下划线组成，不能以数字开头，字母全部小写。</li>\n<li> 不同路径通过点(.)来分割，如：<code>java.lang</code></li>\n<li> 为了保证包名唯一性，一般使用域名反写来命名包，如：<code>com.baidu.music</code></li>\n</ol>\n<p>  新建包：<code>project -&gt; 右键 src -&gt; new -&gt; package</code></p>\n<p>   按包名展开：<code>左侧导航栏 -&gt; 齿轮 -&gt;  去掉 compact middle packages的勾</code></p>\n</blockquote>\n<h3 id=\"0-2-运行环境介绍\"><a href=\"#0-2-运行环境介绍\" class=\"headerlink\" title=\"0.2 运行环境介绍\"></a>0.2 运行环境介绍</h3><ul>\n<li>  JVM：运行，java虚拟机</li>\n<li>  JRE：运行，（JVM+lib类库 =》真正可以执行.class文件）</li>\n<li>  JDK：开发，4个主要的文件夹：<code>bin、include、lib、 jre</code></li>\n</ul>\n<p>范围：</p>\n<blockquote>\n<p>   JDK &gt; JRE &gt;JVM</p>\n</blockquote>\n<p><code>JDK</code>是用于java程序的<code>开发</code>,而<code>JRE</code>则是只能运行class而<code>没有编译的功能</code>。</p>\n<p>Java的能够“一次编译，到处运行”的原因：</p>\n<blockquote>\n<p>  Java虚拟机在执行字节码（.class文件）时，把字节码解释成具体平台上的机器指令执行。</p>\n</blockquote>\n<h3 id=\"0-3-cmd中的Java指令\"><a href=\"#0-3-cmd中的Java指令\" class=\"headerlink\" title=\"0.3 cmd中的Java指令\"></a>0.3 cmd中的Java指令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javac 文件名</span><br><span class=\"line\"></span><br><span class=\"line\">java 类名</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"1-环境配置-快捷键\"><a href=\"#1-环境配置-快捷键\" class=\"headerlink\" title=\"1. 环境配置 + 快捷键\"></a>1. 环境配置 + 快捷键</h2><h3 id=\"1-1-JDK-下载：\"><a href=\"#1-1-JDK-下载：\" class=\"headerlink\" title=\"1.1 JDK-下载：\"></a>1.1 JDK-下载：</h3><ul>\n<li>   <a href=\"https://www.oracle.com/java/technologies/javase-downloads.html\">JDK-官网下载</a> </li>\n<li>   <a href=\"https://www.programmer-box.com/?ref=jdk_1.6\">JDK-下载url</a></li>\n<li>  <a href=\"https://blog.csdn.net/Marvin_996_ICU/article/details/106240065\">JDK的下载、安装和环境配置教程</a></li>\n<li>  <a href=\"https://blog.csdn.net/panjiabin321/article/details/89391210\">JDK12安装配置-Win10</a></li>\n</ul>\n<h3 id=\"1-2-IDEA下载：\"><a href=\"#1-2-IDEA下载：\" class=\"headerlink\" title=\"1.2 IDEA下载：\"></a>1.2 IDEA下载：</h3><ul>\n<li>  <a href=\"https://www.jetbrains.com/zh-cn/idea/download/#section=windows\">IntelliJ IDEA下载</a></li>\n<li>  <a href=\"https://mp.weixin.qq.com/s?__biz=MzU0MTg5NDkzNA==&mid=2247491865&idx=1&sn=9085c37f2b10a3495d68f5d0b66623a2&chksm=fb205160cc57d876a540fb31dcf8990b2d600855d3a195ccc565683899de64bb055401345920&scene=21#wechat_redirect\">IDEA 2019 下载+安装教程</a></li>\n<li>  <a href=\"https://pan.baidu.com/s/1Yhq_7dP0MOayyEJ-g4_27A\">JetBrains 2021 最新版本全家桶激活</a>  提取码：ute8</li>\n</ul>\n<h4 id=\"1-2-1-IDEA的配置：\"><a href=\"#1-2-1-IDEA的配置：\" class=\"headerlink\" title=\"1.2.1 IDEA的配置：\"></a>1.2.1 IDEA的配置：</h4><ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1FZ4y1H7rh?p=174&spm_id_from=pageDriver\">IDEA-配置-视频</a></li>\n</ul>\n<blockquote>\n<ol>\n<li> 新建Project时，需要选择已安装的JDK</li>\n<li> 更改字号：file -&gt; settings -&gt; editor  -&gt; font 或者 general-&gt;mouse control -&gt; 勾选change font size whith ctrl mouse</li>\n<li> 更改快捷键【例如】：file -&gt; settings -&gt; keymap -&gt; 齿轮图标 -&gt; duplicate -&gt; 展开 main Menu -&gt; 展开 code -&gt; code complete -&gt; 展开 -&gt; 选中 -&gt; 右键 -&gt; add keyboard shutcut -&gt; 输入快捷键 -&gt; ok</li>\n<li>方法分隔符：file -&gt; settings -&gt; editor -&gt; general -&gt; appearance -&gt; show method seperator</li>\n</ol>\n</blockquote>\n<h4 id=\"1-2-2-常用快捷键：\"><a href=\"#1-2-2-常用快捷键：\" class=\"headerlink\" title=\"1.2.2 常用快捷键：\"></a>1.2.2 常用快捷键：</h4><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>快捷键</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>打印</td>\n<td>sout</td>\n</tr>\n<tr>\n<td>main 函数</td>\n<td>psvm 或 main</td>\n</tr>\n<tr>\n<td>代码提示</td>\n<td>alt + /</td>\n</tr>\n<tr>\n<td>自动导包（修正代码）</td>\n<td>alt  + enter</td>\n</tr>\n<tr>\n<td>复制光标所在行，并插入到光标的下一行</td>\n<td>ctrl + d</td>\n</tr>\n<tr>\n<td>删除一行</td>\n<td>ctrl + y</td>\n</tr>\n<tr>\n<td>格式化代码</td>\n<td>ctrl + alt +L</td>\n</tr>\n<tr>\n<td>单行注释</td>\n<td>ctrl + /</td>\n</tr>\n<tr>\n<td>多行注释</td>\n<td>ctrl + shift + /</td>\n</tr>\n<tr>\n<td>自动生成代码（get / set /toString）</td>\n<td>alt  + insert</td>\n</tr>\n<tr>\n<td>移动当前代码行</td>\n<td>alt + shift +  上下箭头</td>\n</tr>\n<tr>\n<td>快速写 遍历数组的代码</td>\n<td>数组名.fori + enter</td>\n</tr>\n<tr>\n<td>快速生成代码块，如：for、if、try-catch</td>\n<td>ctrl + alt + T</td>\n</tr>\n<tr>\n<td>快速生成 for 代码块</td>\n<td>fori</td>\n</tr>\n<tr>\n<td>快速生成 增强型 for</td>\n<td>iter   或者 foreach</td>\n</tr>\n<tr>\n<td>搜索类</td>\n<td>ctrl + n</td>\n</tr>\n<tr>\n<td>查看子类</td>\n<td>ctrl + h</td>\n</tr>\n</tbody></table>\n<h2 id=\"2-数据类型\"><a href=\"#2-数据类型\" class=\"headerlink\" title=\"2. 数据类型\"></a>2. 数据类型</h2><p><img src=\"https://z3.ax1x.com/2021/05/24/gjUjoj.png\" alt=\"数据类型\"></p>\n<h3 id=\"2-1-char-和-byte-的差别：\"><a href=\"#2-1-char-和-byte-的差别：\" class=\"headerlink\" title=\"2.1 char 和 byte 的差别：\"></a>2.1 char 和 byte 的差别：</h3><ul>\n<li>  char 是无符号型的，可以表示一个整数，不能表示负数；char可以表中文字符，</li>\n<li>  byte 是有符号型的，可以表示 -128—127 的数，byte不可以表中文字符</li>\n</ul>\n<h2 id=\"3-运算符\"><a href=\"#3-运算符\" class=\"headerlink\" title=\"3. 运算符\"></a>3. 运算符</h2><p><img src=\"https://z3.ax1x.com/2021/05/24/gjaKl6.png\" alt=\"运算符\"></p>\n<h2 id=\"4-数组\"><a href=\"#4-数组\" class=\"headerlink\" title=\"4. 数组\"></a>4. 数组</h2><blockquote>\n<ol>\n<li><p> 数组 直接打印: 得到的是<code>地址</code></p>\n</li>\n<li><p>数组反转：对称位置的元素交换</p>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"4-1-数组的初始化：【4种】\"><a href=\"#4-1-数组的初始化：【4种】\" class=\"headerlink\" title=\"4.1 数组的初始化：【4种】\"></a>4.1 数组的初始化：【4种】</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 静态[指定内容]：</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 格式： 数据类型 [] 数组名= new 数据类型[]&#123;数组的内容&#125;;</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//==============================================</span></span><br><span class=\"line\"><span class=\"comment\">//动态[指定长度]</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 格式：数据类型[] 数组名称 = new 数据类型[长度]</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\tarr[<span class=\"number\">0</span>] =<span class=\"number\">12</span>;</span><br><span class=\"line\">\t\tarr[<span class=\"number\">1</span>] = <span class=\"number\">15</span>;</span><br><span class=\"line\">\t\tarr[<span class=\"number\">2</span>] = <span class=\"number\">45</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//==============================================</span></span><br><span class=\"line\"><span class=\"comment\">//省略：</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 数据类型[] 数组名称 = &#123;数组的内容&#125;；</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//==============================================</span></span><br><span class=\"line\"><span class=\"comment\">//拆分成2步：</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 格式: 数据类型[] 数组名称；</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 数组名称 = new 数据类型[]&#123;数组内容&#125;； (采用省略格式则不能分步骤写)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] arr;</span><br><span class=\"line\">\t\tarr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h2 id=\"5-内存区域的划分\"><a href=\"#5-内存区域的划分\" class=\"headerlink\" title=\"5. 内存区域的划分\"></a>5. 内存区域的划分</h2><ul>\n<li>  栈(stack)：</li>\n</ul>\n<blockquote>\n<p>  存放方法的局部变量，运行方法<br>  【局部变量 的特点：一旦超出作用域就会从内存中消失】</p>\n</blockquote>\n<ul>\n<li>  堆(heap)：</li>\n</ul>\n<blockquote>\n<p>  new出来的东西都放在堆中(为：引用类型)，如 ：数组<br>  【堆内的东西都有一个16进制的地址值】</p>\n</blockquote>\n<ul>\n<li>  方法区(method area)：</li>\n</ul>\n<blockquote>\n<p>  存储<code>.class</code>的相关信息，包含：方法信息</p>\n</blockquote>\n<ul>\n<li>  本地方法栈(native method stack)</li>\n</ul>\n<ul>\n<li>  寄存器(register)：与cpu相关</li>\n</ul>\n<h2 id=\"6-面向对象\"><a href=\"#6-面向对象\" class=\"headerlink\" title=\"6. 面向对象\"></a>6. 面向对象</h2><p> 面向对象的三大特性：</p>\n<ul>\n<li>  封装性(如： private, 方法等)</li>\n<li>  继承性(extend ,super等)</li>\n<li>  多态性(<strong>子类</strong>继承<strong>父类</strong>的方法后可以 <strong>覆盖重写</strong>override)</li>\n</ul>\n<h3 id=\"6-1-类：\"><a href=\"#6-1-类：\" class=\"headerlink\" title=\"6.1 类：\"></a>6.1 类：</h3><blockquote>\n<ol>\n<li><p><code>类</code> = <code>属性</code> +<code> 方法</code>     // 方法也就是行为、函数。</p>\n</li>\n<li><p>JAVA的<code>类</code>：<code>成员变量</code>(在类内部，即：属性) <strong>+</strong> <code>成员方法</code>+<code>构造方法</code>        // 普通变量：写在函数的内部。 </p>\n</li>\n<li><p><code>方法</code> ：只能有<code>1个返回值</code>。如果想<strong>返回多个数</strong>，可以将<strong>返回值定义为数组</strong>，并返回数组首地址。 </p>\n</li>\n<li><p>JavaBean：标准类，类中至少要包括：<code>无参构造方法</code>，<code>全参构造方法</code>，<code>属性 + getter + setter</code></p>\n</li>\n<li><p> 构造方法：在创建对象(new)时，自动调用。【快捷键：<code>alter + insert</code>】</p>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"6-1-1-构造方法：\"><a href=\"#6-1-1-构造方法：\" class=\"headerlink\" title=\"6.1.1 构造方法：\"></a>6.1.1 构造方法：</h4><blockquote>\n<ol>\n<li><code>构造方法的名称</code>必须与所在的<code>类的名称</code>完全相同，大小写也要一样。<br> 【普通方法首字小写，构造方法首字大写】 </li>\n<li>  构造方法<code>不能写返回值类型</code>，连void也不要写。</li>\n<li> 构造方法<code>不能return </code>返回值。</li>\n<li> 如果<code>没有写</code>构造方法，那么编译器会<code>自动赠送</code>1个构造方法。</li>\n<li> 只要自己编<code>写了构造方法</code>，编译器就<code>不会赠送</code>构造方法。</li>\n<li> 可以在定义构造方法时，将所需的参数定义在方法的参数列表中， 可以在创建对象时传入参数。但是还是需要写<code>getter和setter 方法</code>，目的是<code>方便修改参数的值</code>。</li>\n</ol>\n</blockquote>\n<h4 id=\"6-1-2-成员变量-与-局部变量-的区别：\"><a href=\"#6-1-2-成员变量-与-局部变量-的区别：\" class=\"headerlink\" title=\"6.1.2 成员变量 与 局部变量 的区别：\"></a>6.1.2 成员变量 与 局部变量 的区别：</h4><blockquote>\n<ol>\n<li><p><code>成员变量</code>：定义在 <code>类</code> 的内部，在<strong>类</strong>中都可以<strong>使用</strong>，有<code>默认值 </code> 。</p>\n</li>\n<li><p> <code>局部变量</code>：定义在 <code>方法内部</code>，只能在 <strong>方法内部</strong>使用，<code>没有默认值</code>，使用要<strong>先赋值</strong> 。</p>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"6-1-3-成员变量-与-局部变量-重名时-的优先级：\"><a href=\"#6-1-3-成员变量-与-局部变量-重名时-的优先级：\" class=\"headerlink\" title=\"6.1.3 成员变量 与 局部变量 重名时 的优先级：\"></a>6.1.3 成员变量 与 局部变量 重名时 的优先级：</h4><blockquote>\n<ol>\n<li> 默认根据<code>就近原则</code>，<code>优先</code>使用 <code>局部变量</code>。</li>\n<li> 如果想使用<code>成员变量</code>，可以使用<code>this关键字</code>，如： <code>this.name</code> 。</li>\n<li> <code>this</code> 一定是写在<code>方法内部</code>的，用于在<code>变量名相同</code>时，<code>做区分</code> 。</li>\n</ol>\n</blockquote>\n<h4 id=\"6-1-4-Override-方法重写-Overload-方法重载：\"><a href=\"#6-1-4-Override-方法重写-Overload-方法重载：\" class=\"headerlink\" title=\"6.1.4 Override 方法重写 + Overload 方法重载：\"></a>6.1.4 Override 方法重写 + Overload 方法重载：</h4><ul>\n<li>  <a href=\"https://blog.csdn.net/weixin_44502804/article/details/90523478\">方法重写与方法重载的区别-url</a></li>\n</ul>\n<blockquote>\n<p>  <code>Override 方法重写</code>： </p>\n<ol>\n<li><p> 子类继承父类/接口 后，换掉同名的方法中的处理语句。</p>\n</li>\n<li><p> 方法重写前后：返回值类型、方法名、参数必须一致。</p>\n</li>\n<li><p> 重写后，访问权限必须更宽松，如：重写前 =&gt; protected，重写后 =&gt; public</p>\n</li>\n</ol>\n<p>  <code>Overload 方法重载</code>：</p>\n<ol>\n<li> 在一个类里面，返回类型可以相同也可以不同，方法名一致，而参数不同。</li>\n</ol>\n</blockquote>\n<p>覆盖重写Override：【需要先：继承】</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 父类：属性 + 无参构造 + 全参构造 + getter + setter + Eat()</span></span><br><span class=\"line\"><span class=\"comment\">// 子类：属性 + 无参构造 + 全参构造 + getter + setter + 覆盖重写的Eat()</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 父类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Father</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Father</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Father</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 子类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Son</span> <span class=\"keyword\">extends</span> <span class=\"title\">Father</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Son</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Son</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;son：我要吃 -&gt; 水果&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//main</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FaterAndSonDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Father father = <span class=\"keyword\">new</span> Father(<span class=\"string\">&quot;刘备&quot;</span>);</span><br><span class=\"line\">        Son son = <span class=\"keyword\">new</span> Son(<span class=\"string\">&quot;阿斗&quot;</span>);</span><br><span class=\"line\">        father.eat();</span><br><span class=\"line\">        son.eat();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>覆盖重载Overload：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 以下代码 省略了 构造方法+ getter + setter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Calc</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> b;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> c;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//方法重载1</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">sum</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">//方法重载2</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">float</span> <span class=\"title\">sum</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b,<span class=\"keyword\">float</span> c)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a+b+c;</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"6-1-5-内部类：【4种】\"><a href=\"#6-1-5-内部类：【4种】\" class=\"headerlink\" title=\"6.1.5 内部类：【4种】\"></a>6.1.5 内部类：【4种】</h4><blockquote>\n<p>  <code>内部类</code>：1个类 定义在 另一个类 的内部 =》<code>内部类</code>(public / protected / private)。 外面的类叫<code>外部类</code>(只能public)。</p>\n<p>  <strong>注意</strong>：<code>内部类</code>可以访问<code>外部类</code>的所有<code>成员变量</code>和<code>成员方法</code>。</p>\n</blockquote>\n<ul>\n<li>  <a href=\"https://blog.csdn.net/weixin_42762133/article/details/82890555?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160906466316780279191862%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=160906466316780279191862&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-3-82890555.pc_search_result_cache&utm_term=Java\">Java内部类</a></li>\n</ul>\n<ol>\n<li> 成员内部类：</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 定义 外部类、外部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 定义 成员内部类、内部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. 在 main 中，new 外部类对象</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. 格式：外部类名.内部类名 变量名 = 外部类对象.new 内部类名();</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OutAndInnerClassDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        Outer outer = <span class=\"keyword\">new</span> Outer();</span><br><span class=\"line\">        Outer.Inner inner = outer.<span class=\"function\">new <span class=\"title\">Inner</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//外部类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Outer</span></span>&#123;  </span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Outer</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">         System.out.println(<span class=\"string\">&quot;外部类&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//内部类</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Inner</span></span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Inner</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">             System.out.println(<span class=\"string\">&quot;内部类&quot;</span>);</span><br><span class=\"line\">        &#125;      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"2\">\n<li> 静态内部类：</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 定义 外部类、外部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 定义 静态内部类、内部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. 在 main 中，</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. 格式：外部类名.静态内部类名 变量名 = new 外部类名.静态内部类名();</span></span><br><span class=\"line\"><span class=\"comment\"> * 5. </span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OutAndInnerClassDemo2</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Outer2.Inner inner = <span class=\"keyword\">new</span> Outer2.Inner();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//外部类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Outer2</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Outer2</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;外部类&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//静态内部类</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Inner</span></span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Inner</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;静态内部类&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<ol start=\"3\">\n<li> 方法内部类：【在方法内部：定义、创建new、使用(调用)】</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 定义 外部类、外部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 定义 外部类的方法，该方法中的内部类、内部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. 在 外部类的方法中 new 内部类的对象：内部类名 变量名 = new 内部类名();</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. 在 main 中，</span></span><br><span class=\"line\"><span class=\"comment\"> * 5. 格式：</span></span><br><span class=\"line\"><span class=\"comment\"> \t\t\t外部类 变量名= new 外部类();</span></span><br><span class=\"line\"><span class=\"comment\"> \t\t\t变量名.外部类方法名();</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//main</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OutAndInnerClassDemo3</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Outer3 o3 = <span class=\"keyword\">new</span> Outer3();</span><br><span class=\"line\">        o3.Func1();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 外部类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Outer3</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Outer3</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;外部类 -&gt; 创建&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// 外部类方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">Func1</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;外部类的方法 -&gt; 调用&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 内部类</span></span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Inner3</span></span>&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Inner3</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;内部类 -&gt; 创建&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">            <span class=\"comment\">// 内部类方法调用</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">say</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;内部类的方法 -&gt; 调用&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Inner3 i3 = <span class=\"keyword\">new</span> Inner3();</span><br><span class=\"line\">        i3.say();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<ol start=\"4\">\n<li> 匿名内部类：【方法中 return 1个 new出的对象】  </li>\n</ol>\n<p><strong>注意</strong>：匿名内部类 没有 构造方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 定义 接口</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 定义 外部类、外部类属性、构造方法、getter、setter</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. 定义 外部类的方法，该方法返回1个匿名内部类的对象的定义，在该匿名内部类的对象的定义中重写接口中的方法</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. 在 main 中，</span></span><br><span class=\"line\"><span class=\"comment\"> * 5. 格式：</span></span><br><span class=\"line\"><span class=\"comment\"> \t\t\t外部类 变量名= new 外部类();</span></span><br><span class=\"line\"><span class=\"comment\"> \t\t\t变量名.外部类方法名().重写的方法名();</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OutAndInnerClassDemo4</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Outer4 o4 = <span class=\"keyword\">new</span> Outer4();</span><br><span class=\"line\">        o4.getInner4().eat();\t\t\t\t<span class=\"comment\">//注意 连续调用 方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Inner4</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//外部类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Outer4</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Outer4</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;外部类 -&gt; 创建&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//外部类的方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Inner4 <span class=\"title\">getInner4</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> Inner4()&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;匿名内部类 -&gt; 方法&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;\t\t\t<span class=\"comment\">// 注意分号</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"6-1-6-类的使用：\"><a href=\"#6-1-6-类的使用：\" class=\"headerlink\" title=\"6.1.6 类的使用：\"></a>6.1.6 类的使用：</h4><blockquote>\n<ol>\n<li> 导包：<code>import java.util.*;</code></li>\n<li> 创建：<code>Animals cat = new Animals();</code></li>\n<li> 使用：<code>cat.eat();</code></li>\n</ol>\n</blockquote>\n<p>注意：</p>\n<ul>\n<li><p>  <code>java.lang</code> 下的包<code>不用导</code></p>\n</li>\n<li><p>  <code>同一package</code>下的类也<code>不用导</code></p>\n</li>\n<li><p>  <code>导包语句</code>必须写在 <code>package 包名</code>后，<code>类名前</code></p>\n</li>\n<li><p>  包名-格式：<code>package net.java.util;</code></p>\n</li>\n</ul>\n<h4 id=\"6-1-7-静态变量-与-静态方法：\"><a href=\"#6-1-7-静态变量-与-静态方法：\" class=\"headerlink\" title=\"6.1.7 静态变量 与 静态方法：\"></a>6.1.7 静态变量 与 静态方法：</h4><blockquote>\n<p>  <code>静态变量</code>：带有 <code>static </code>关键字的<code>变量</code></p>\n<p>  <code>静态方法</code>：带有 <code>static</code> 关键字的<code>方法</code></p>\n</blockquote>\n<p><strong>注意</strong>：【凡是带<code>static</code> 的<code>变量、方法、代码块</code>】</p>\n<ul>\n<li>  <code>属于</code>整个<code>类</code>，而不仅仅 属于一个<strong>对象</strong></li>\n<li>  只创建<code>1次</code></li>\n<li>  可以直接用 <code>类名.变量</code>调用</li>\n<li>  不能使用 <code>this</code>,<code>super</code>关键字：因为静态方法可以通过类名来调用，而这是可能还没有创建对象，更谈不上继承。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 静态代码块：</span></span><br><span class=\"line\"><span class=\"keyword\">static</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//语句块</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 静态方法</span></span><br><span class=\"line\"><span class=\"comment\">// 格式： </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">PrintMe</span><span class=\"params\">()</span></span>&#123;.......&#125;\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用：[对于本类当中的静态方法，可以省略类名称，直接静态方法]</span></span><br><span class=\"line\">    类名称.静态变量;</span><br><span class=\"line\">    类名称.静态方法();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"6-2-接口：\"><a href=\"#6-2-接口：\" class=\"headerlink\" title=\"6.2 接口：\"></a>6.2 接口：</h3><blockquote>\n<ol>\n<li> 接口就是各个类的规范，</li>\n<li> 接口是一种 <code>引用的数据类型</code> ，其中：最重要的是<code>抽象方法</code></li>\n</ol>\n</blockquote>\n<h4 id=\"6-2-1-格式：\"><a href=\"#6-2-1-格式：\" class=\"headerlink\" title=\"6.2.1 格式：\"></a>6.2.1 格式：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> 接口名称</span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">// 接口内容  </span></span><br><span class=\"line\">&#125;  </span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"6-2-2-接口内容：\"><a href=\"#6-2-2-接口内容：\" class=\"headerlink\" title=\"6.2.2 接口内容：\"></a>6.2.2 接口内容：</h4><blockquote>\n<ul>\n<li>JDK 1.7 的接口可以包含：<ul>\n<li>  常量</li>\n<li>  抽象方法</li>\n</ul>\n</li>\n<li>JDK 1.8 的接口还可以额外包含<ul>\n<li>  默认方法</li>\n<li>  静态方法</li>\n</ul>\n</li>\n<li>JDK 1.9 的接口还可以额外包含<ul>\n<li>  私有方法</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><strong>注意</strong> ：</p>\n<blockquote>\n<ol>\n<li><p>接口中的抽象方法，修饰符必须是 public abstract </p>\n<p> 【如：<code>public abstract void methodAbstract( );</code>】， 可以省略但不能换成别的 。 </p>\n</li>\n<li><p><code>接口</code>无法直接使用，只能让1个 “实现类” 来 “实现” 该接口 。</p>\n<p> 【类似 抽象类的继承】</p>\n</li>\n<li><p> <code>实现类</code> 除非是1个由abstract修饰的抽象类，否则<code>必须覆盖重写</code>所有<code>抽象方法</code>。</p>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"6-2-3-接口的使用：\"><a href=\"#6-2-3-接口的使用：\" class=\"headerlink\" title=\"6.2.3 接口的使用：\"></a>6.2.3 接口的使用：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> *\t1. 定义接口 + 接口内容</span></span><br><span class=\"line\"><span class=\"comment\"> *\t2. 定义接口的 &quot;实现类&quot;</span></span><br><span class=\"line\"><span class=\"comment\"> *\t3. 在 &quot;实现类&quot; 中，覆盖重写 接口的抽象方法</span></span><br><span class=\"line\"><span class=\"comment\"> *\t4. main方法中 new出 &quot;实现类的对象&quot;，&quot;实现类的对象&quot; 调用 重写后的方法</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MyIntface</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">Say</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义实现类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ToDoClass</span> <span class=\"keyword\">implements</span> <span class=\"title\">MyIntface</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Say</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;你好！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IntfaceDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        ToDoClass a = <span class=\"keyword\">new</span> ToDoClass();</span><br><span class=\"line\">        a.Say();</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n<h3 id=\"6-3-四大特性：\"><a href=\"#6-3-四大特性：\" class=\"headerlink\" title=\"6.3 四大特性：\"></a>6.3 四大特性：</h3><p> 面向对象的三大特性：</p>\n<blockquote>\n<ul>\n<li>  封装性(如： private, 方法等)</li>\n<li>  继承性(extend ,super等)</li>\n<li>  多态性(<strong>子类</strong>继承<strong>父类</strong>的方法后可以 <strong>覆盖重写</strong>override)</li>\n</ul>\n</blockquote>\n<h4 id=\"6-3-1-封装性：\"><a href=\"#6-3-1-封装性：\" class=\"headerlink\" title=\"6.3.1 封装性：\"></a>6.3.1 封装性：</h4><p>封装性有两种：【变量，方法】</p>\n<p>private关键字：     </p>\n<blockquote>\n<ol>\n<li> 只有在写了private 的类中可以直接访问该属性,    </li>\n<li> 有<code>private 关键字</code>就必须在类中<code>定义</code> 2个专门 访问、设置 该属性的方法<code> getter、setter</code> 。</li>\n</ol>\n<p>  setNum(int num)【有参数，无返回值】         </p>\n<p>  getNum( )【无参数，有返回值】</p>\n</blockquote>\n<h4 id=\"6-3-2-继承性：\"><a href=\"#6-3-2-继承性：\" class=\"headerlink\" title=\"6.3.2 继承性：\"></a>6.3.2 继承性：</h4><p>继承性：</p>\n<blockquote>\n<ol>\n<li> 继承是<code>多态性的前提</code>；</li>\n<li> 承解决了共性的问题（把<code>几个类</code>中都有的<code>属性、方法</code>放到<code>1个父类中</code>，每个<code>子类 继承 父类</code>）</li>\n</ol>\n</blockquote>\n<p>父类与子类：</p>\n<blockquote>\n<ol>\n<li> 父类：基类，超类</li>\n<li> 子类：派生类</li>\n</ol>\n</blockquote>\n<p>在继承关系中，子类就是父类的一种。</p>\n<p>例如： 父类是员工，子类是老师，老师也是一种员工 =》 老师 is 员工</p>\n<p>继承过程中，成员变量的访问特点：</p>\n<blockquote>\n<ol>\n<li> 子类有，则<code>优先使用 子类的成员变量</code>。</li>\n<li> <code>子类 </code>知道 <code>父类的变量、方法</code>，父类不知道子类的变量、方法。</li>\n<li> 父子的<code>变量、方法</code> 重名时，优先使用<code>子类</code></li>\n</ol>\n</blockquote>\n<p><code>父类的变量</code>，<code>子类的变量</code>，方法的<code>局部变量</code> 重名时：</p>\n<blockquote>\n<ol>\n<li> 访问 父类的变量：super.变量名</li>\n<li> 访问 本类的变量： this.成员变量名</li>\n<li> 访问 方法的局部变量： 直接写变量名</li>\n</ol>\n</blockquote>\n<p>父类、子类、继承的使用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 父类【普通的类的定义】：\t</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> 父类名称</span>&#123;&#125;\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 子类：</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> 子类名称 <span class=\"keyword\">extends</span> 父类名称</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 例如：</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//父类</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Employee</span> </span>&#123;</span><br><span class=\"line\">\t\t\tString name;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> age;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//子类 -&gt; 继承父类</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Teacher</span> <span class=\"keyword\">extends</span> <span class=\"title\">Employee</span> </span>&#123;</span><br><span class=\"line\">\t\t\tString Tno;</span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"6-3-3-抽象性：\"><a href=\"#6-3-3-抽象性：\" class=\"headerlink\" title=\"6.3.3 抽象性：\"></a>6.3.3 抽象性：</h4><p>抽象：</p>\n<blockquote>\n<p>  一个父类有一个没法具体描述的方法：<br>  如：</p>\n<ul>\n<li>  <code>子类 cat</code> 有 <code>eatFish( )</code> 的方法，</li>\n<li>  <code>父类 Animal </code>有<code>eat( ) </code>的方法，但没法细说具体执行过程。</li>\n</ul>\n</blockquote>\n<p>抽象方法-格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法 返回值前 加上 abstract 关键字，去掉大括号&#123;&#125;，直接以分号；结束。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//抽象方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">Eat</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><strong>注意</strong> ：</p>\n<blockquote>\n<ol>\n<li><p><code>抽象方法</code> 只能 定义在<code>抽象类内</code> 【在 class前加上 abstract】，但 <code>抽象类</code>不一定有 <code>抽象方法</code>，没有抽象方法的 抽象类 同样 不能直接new,它有特殊用途。  </p>\n</li>\n<li><p>子类 必须 覆盖重写 父类 所有的 抽象方法。 【除非子类也是抽象类】</p>\n<p> 抽象方法覆盖重写 即：去掉 抽象方法的 abstract关键字，补上{ } </p>\n<p> 【可以鼠标点击 extends 行 按下 alt + enter】</p>\n</li>\n</ol>\n</blockquote>\n<p>抽象类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//抽象类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animals</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"comment\">//抽象方法,没有普通方法的&#123;&#125;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">Eat</span><span class=\"params\">()</span></span>;\t\t</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><code>抽象类</code> 与 <code>抽象方法</code>的使用：</p>\n<blockquote>\n<p>  抽象类的 对象 无法直接 new 。</p>\n<p>  即： 不能 Animal a = new Animal( );</p>\n<p>  必须<code>先</code>用一个子类 <code>继承</code>一个父类，<code>再覆盖重写</code>其抽象方法。</p>\n</blockquote>\n<p><code>main方法中</code>使用<code>抽象类</code>的<code>执行顺序</code>：</p>\n<ol>\n<li> 子类 调用 super( )，执行抽象父类构造方法。</li>\n<li> 执行 子类构造方法。</li>\n<li> 执行 子类的抽象方法。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> *\t1. 在抽象类中 定义 抽象方法</span></span><br><span class=\"line\"><span class=\"comment\"> *\t2. 子类继承抽象类，覆盖重写 抽象类的 所有抽象方法</span></span><br><span class=\"line\"><span class=\"comment\"> * \t3. main方法中，new 子类对象</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 抽象类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animals</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//抽象方法,没有普通方法的&#123;&#125;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">Eat</span><span class=\"params\">()</span></span>;\t\t\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 子类 继承 抽象类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animals</span> </span>&#123;\t\t</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">Eat</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;cat eat&quot;</span>.toUpperCase());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        Cat c = <span class=\"keyword\">new</span> Cat();</span><br><span class=\"line\">        c.Eat();</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h4 id=\"6-3-4-多态性：\"><a href=\"#6-3-4-多态性：\" class=\"headerlink\" title=\"6.3.4 多态性：\"></a>6.3.4 多态性：</h4><ul>\n<li>  <a href=\"https://www.cnblogs.com/jack204/archive/2012/10/29/2745150.html\">Java多态性理解</a></li>\n</ul>\n<p>多态性的条件：</p>\n<ul>\n<li>  继承</li>\n<li>  重写</li>\n<li>  父类变量 引用 子类对象</li>\n</ul>\n<p>实现多态的技术：</p>\n<blockquote>\n<p>  动态绑定（dynamic binding），是指在<code>执行期间判断</code>所引用对象的<code>实际类型</code>，根据其实际的类型调用其相应的方法。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 左边是父类/接口，右边new的是子类</span></span><br><span class=\"line\"><span class=\"comment\">// 编译时，arr是List；</span></span><br><span class=\"line\"><span class=\"comment\">// 运行时，arr是ArrayList</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tList&lt;Integer&gt; arr = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"6-4-包装类\"><a href=\"#6-4-包装类\" class=\"headerlink\" title=\"6.4 包装类\"></a>6.4 包装类</h3><ul>\n<li>  <a href=\"https://www.yiibai.com/java/wrapper-class-in-java.html\">Java包装类-url</a></li>\n<li>  <a href=\"https://blog.csdn.net/Hushboom/article/details/104798466\">Java泛型和包装类</a></li>\n</ul>\n<h4 id=\"6-4-1-包装类是什么：【自动装箱-自动拆箱】\"><a href=\"#6-4-1-包装类是什么：【自动装箱-自动拆箱】\" class=\"headerlink\" title=\"6.4.1 包装类是什么：【自动装箱 + 自动拆箱】\"></a>6.4.1 包装类是什么：【自动装箱 + 自动拆箱】</h4><p>包装类 = 基本类型 + 常用方法</p>\n<p>将一个类型变成一个类。</p>\n<blockquote>\n<ul>\n<li><p>  <code>原始数据类型 </code>=转换为=》<code>对象</code></p>\n</li>\n<li><p>  <code>对象</code> =转换为=》 <code>原始数据类型</code></p>\n</li>\n<li><p>可用于实现<code> 多态性</code></p>\n</li>\n</ul>\n<p>  *<code>JDK1.5</code>*开始可以进行<code>自动装箱，自动拆箱</code>：</p>\n<ul>\n<li>  自动装箱： 自动将 <code>基本类型 =&gt; 包装类</code></li>\n<li>  自动拆箱： 自动将 <code>包装类 =&gt; 基本类型</code></li>\n</ul>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gja30e.png\" alt=\"包装类\"></p>\n<h4 id=\"6-4-2-泛型：\"><a href=\"#6-4-2-泛型：\" class=\"headerlink\" title=\"6.4.2 泛型：\"></a>6.4.2 泛型：</h4><p><code>泛型 &lt;=&gt; &lt;包装类&gt;</code> </p>\n<p>泛型常用于：指定<code>某个集合</code>只能保存<code>某种数据类型的数据</code>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 泛型就是下面的 &lt;String&gt;，其中String是包装类</span></span><br><span class=\"line\"></span><br><span class=\"line\">List&lt;String&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();`\t<span class=\"comment\">// 一种体现多态性的写法，左边是父类型，右边是子类型</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"7-常用的类\"><a href=\"#7-常用的类\" class=\"headerlink\" title=\"7. 常用的类\"></a>7. 常用的类</h2><h3 id=\"7-1-Math类：\"><a href=\"#7-1-Math类：\" class=\"headerlink\" title=\"7.1 Math类：\"></a>7.1 Math类：</h3><p>Math的所属路径：<code>java.lang.Math</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.cyw2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 取整        </span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> a = Math.floor(<span class=\"number\">1.4</span>);\t<span class=\"comment\">//向下取整，无论正负数(取小的)</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> b = Math.round(<span class=\"number\">1.4</span>); <span class=\"comment\">//四舍五入(负数入的时候向0进位)</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> c = Math.ceil(<span class=\"number\">1.4</span>);\t<span class=\"comment\">//向上取整，无论正负数(取大的)    </span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;1.4 =&gt; floor &quot;</span>+a);  <span class=\"comment\">// 1.0</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;1.4 =&gt; round &quot;</span>+b);  <span class=\"comment\">// 1.0</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;1.4 =&gt; ceil &quot;</span>+c);   <span class=\"comment\">// 2.0</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;==============&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">    </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 随机数          </span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> d = Math.random();   <span class=\"comment\">//返回1个[0,1)之间的double类型的小数</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        System.out.println(d);</span><br><span class=\"line\">   </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 比大小        </span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> max = Math.max(<span class=\"number\">12</span>,<span class=\"number\">34</span>);  <span class=\"comment\">// 返回参数中的最大值</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> min = Math.min(<span class=\"number\">12</span>,<span class=\"number\">34</span>);  <span class=\"comment\">// 返回参数中的最小值</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        System.out.println(max);</span><br><span class=\"line\">        System.out.println(min);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;==============&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 三角函数</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">double</span> e = Math.toRadians(<span class=\"number\">45.0</span>);    <span class=\"comment\">// 将角度制 转为 弧度制</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> f = Math.tan(e);             <span class=\"comment\">// 计算tan(PI/4)</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> g = Math.rint(f);</span><br><span class=\"line\">        </span><br><span class=\"line\">        System.out.println(g);   <span class=\"comment\">// 将计算结果 转化成 最接近的整数</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;==============&quot;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 数值 与 字符串 相互转化</span></span><br><span class=\"line\">        String h = Integer.toString(<span class=\"number\">123</span>);</span><br><span class=\"line\">        System.out.println(h);</span><br><span class=\"line\">        </span><br><span class=\"line\">        String i = <span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = Interager.parseInt(i);</span><br><span class=\"line\">        </span><br><span class=\"line\">        System.out.println(j);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;==============&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 多次方 与 开根号     </span></span><br><span class=\"line\">               </span><br><span class=\"line\">        <span class=\"keyword\">double</span> k = Math.sqrt(<span class=\"number\">100.0</span>);\t<span class=\"comment\">// 开根号</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> L = Math.pow(<span class=\"number\">10.0</span>,<span class=\"number\">2.0</span>);\t<span class=\"comment\">// 多次方</span></span><br><span class=\"line\">        System.out.println(k);</span><br><span class=\"line\">        System.out.println(L);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"7-2-Charater类：\"><a href=\"#7-2-Charater类：\" class=\"headerlink\" title=\"7.2 Charater类：\"></a>7.2 Charater类：</h3><p>常用方法：</p>\n<ul>\n<li>  <code>判断</code>字符类型：是否是 <code>字母、数字、空白符、大写、小写</code></li>\n<li>  转化大小写：转化成 <code>大写、小写、字符串</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义\t</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> ch = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tCharacter ch = <span class=\"keyword\">new</span> Character(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> uniChar = <span class=\"string\">&#x27;\\u039A&#x27;</span>;  <span class=\"comment\">// Unicode 字符表示形式</span></span><br><span class=\"line\"> </span><br><span class=\"line\">\t<span class=\"comment\">// 字符数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">char</span>[] charArray =&#123; <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;e&#x27;</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\tCharacter ch = <span class=\"keyword\">new</span> Character(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 常用方法：</span></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> a = <span class=\"string\">&#x27;A&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">boolean</span> isLetter = Character.isLetter(a);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(isLetter);\t<span class=\"comment\">// true</span></span><br><span class=\"line\">    System.out.println(Character.isDigit(a));\t<span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"7-3-String类：\"><a href=\"#7-3-String类：\" class=\"headerlink\" title=\"7.3 String类：\"></a>7.3 String类：</h3><p>String 类是不可改变的，一旦创建了 String 对象，那它的值就无法改变了。</p>\n<p>要想改变<code> String 对象的值</code>，可以使用 <code>StringBuffer</code> 和 <code>StringBuilder </code>类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 存放在 堆中的字符串常量池中</span></span><br><span class=\"line\">\tString str = <span class=\"string\">&quot;Runoob&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用构造函数</span></span><br><span class=\"line\">\tString str2 = <span class=\"keyword\">new</span> String(<span class=\"string\">&quot;Runoob&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 字符串长度</span></span><br><span class=\"line\">\tstr = <span class=\"string\">&quot;abc&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = str.length(); </span><br><span class=\"line\">\tSystem.out.println(len);\t<span class=\"comment\">// 3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 字符串的拼接</span></span><br><span class=\"line\">\tString str2 = <span class=\"string\">&quot;我的名字是 &quot;</span>.concat(<span class=\"string\">&quot;Runoob&quot;</span>);\t</span><br><span class=\"line\">\tString str3 = <span class=\"string\">&quot;我的名字是 &quot;</span>+<span class=\"string\">&quot;Runoob&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 格式化拼接字符串</span></span><br><span class=\"line\">\tString fs;</span><br><span class=\"line\">\tfs = String.format(<span class=\"string\">&quot;a的值为%f, 整型变量的值为&quot;</span> </span><br><span class=\"line\">                    %d, 字符串变量的值为          </span><br><span class=\"line\">                    %s<span class=\"string\">&quot;, floatVar, intVar, stringVar);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 返回指定位置的字符</span></span><br><span class=\"line\"><span class=\"string\">\tString str1 = &quot;</span>abc<span class=\"string\">&quot;;</span></span><br><span class=\"line\"><span class=\"string\">\tchar ch = str1.charAt(0);</span></span><br><span class=\"line\"><span class=\"string\">\tSystem.out.println(cg);\t// a</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 返回字符串中指定字符的第一个索引</span></span><br><span class=\"line\"><span class=\"string\">\tString str1 = &quot;</span>abc<span class=\"string\">&quot;;</span></span><br><span class=\"line\"><span class=\"string\">\tint index = str1.indexOf(&#x27;b&#x27;);</span></span><br><span class=\"line\"><span class=\"string\">\tSystem.out.println(index);\t// 1</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 截取从参数位置到最后的字符串: substring(索引)</span></span><br><span class=\"line\"><span class=\"string\">// 截取从[索引1,索引2)的字符串: substring(索引1,索引2)\t\t</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">\tString str1 = &quot;</span>hello<span class=\"string\">&quot;;</span></span><br><span class=\"line\"><span class=\"string\">\tString str2 = str1.substring(0);  \t//str2 = &quot;</span>hello<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span></span><br><span class=\"line\"><span class=\"string\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span></span><br><span class=\"line\"><span class=\"string\">\tString str3 = str1.substring(1,4);\t//str3 = &quot;</span>ell<span class=\"string\">&quot;;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 字符串的转化</span></span><br><span class=\"line\"><span class=\"string\">\t//将字符串拆为字符数组,并将字符数组作为返回值: toCharArray();</span></span><br><span class=\"line\"><span class=\"string\">\t//获取当前字符串底层的字节数组: getBytes();</span></span><br><span class=\"line\"><span class=\"string\">\t//替换字符串，返回新字符串: replace(old,new);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">//字符串的分割</span></span><br><span class=\"line\"><span class=\"string\">\t//split(正则表达式)：按指定规则分割字符串，并返回字符数组，若想用. 作为分割符，需要写 \\\\.</span></span><br><span class=\"line\"><span class=\"string\">\t\t</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>字符串在内存中的创建过程：</p>\n<blockquote>\n<p>  以 String str1 = “abc” 为例 </p>\n<p>  内存中情况：      </p>\n<ol>\n<li><p> 在 <code>栈</code>中开辟 <code>变量的空间</code>，     </p>\n</li>\n<li><p>  在 <code>堆</code>中的 <code>字符串常量池</code> 中<code>创建String 对象</code>     </p>\n</li>\n<li><p> 在 <code>堆</code>中 创建 <code>byte[]     </code></p>\n</li>\n<li><p> <code>String 对象</code>引用<code> byte[] 的地址</code>     </p>\n</li>\n<li><p> <code>栈</code>中的变量 引用 <code>String 对象 的地址</code></p>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"7-4-StringBuffer-类-与-StringBuilder-类：\"><a href=\"#7-4-StringBuffer-类-与-StringBuilder-类：\" class=\"headerlink\" title=\"7.4 StringBuffer 类 与 StringBuilder 类：\"></a>7.4 StringBuffer 类 与 StringBuilder 类：</h3><p>StringBuffer 和 StringBuilder 都可用来创建字符串，<br>区别：</p>\n<ul>\n<li>  StringBuffer ：速度慢，但在多线程时安全</li>\n<li>  StringBuilder ：速度快，但在多线程时不安全【StringBuilder 更常用】</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 10 为容量</span></span><br><span class=\"line\">        StringBuilder sb_1 = <span class=\"keyword\">new</span> StringBuilder(<span class=\"number\">10</span>);</span><br><span class=\"line\">        sb_1.append(<span class=\"string\">&quot;大家好&quot;</span>);</span><br><span class=\"line\">        System.out.println(sb_1);  </span><br><span class=\"line\">       </span><br><span class=\"line\">        sb.insert(<span class=\"number\">8</span>, <span class=\"string\">&quot;Java&quot;</span>);</span><br><span class=\"line\">        System.out.println(sb_1); </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 5为开始位置，8为结束位置</span></span><br><span class=\"line\">        sb.delete(<span class=\"number\">5</span>,<span class=\"number\">8</span>);</span><br><span class=\"line\">        System.out.println(sb_1);  </span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h3 id=\"7-5-Date类：\"><a href=\"#7-5-Date类：\" class=\"headerlink\" title=\"7.5 Date类：\"></a>7.5 Date类：</h3><p><code>import java.util.Date;</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 2个构造函数</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tDate d1 = <span class=\"keyword\">new</span> Date();</span><br><span class=\"line\"></span><br><span class=\"line\">\tDate d1 = <span class=\"keyword\">new</span> Date(<span class=\"keyword\">long</span> millisec);\t<span class=\"comment\">// millisec: 从 1970-1-1 到 现在 的毫秒数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取millisec：long getTime( )</span></span><br><span class=\"line\"><span class=\"comment\">// 设置millisec：void setTime(long time)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//比较时间：假设A、B是两个时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tA.before(B);\t<span class=\"comment\">//  时间A 在 时间B 前，则 返回true</span></span><br><span class=\"line\">\tA.after(B);\t\t<span class=\"comment\">//  时间A 在 时间B 后，则 返回true</span></span><br><span class=\"line\">\tA.equals(B);\t<span class=\"comment\">//  时间A 与 时间B 相等，则 返回true</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 格式化的时间、日期</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tDate dNow = <span class=\"keyword\">new</span> Date( );</span><br><span class=\"line\">\tSimpleDateFormat sdf = <span class=\"keyword\">new</span> SimpleDateFormat (<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">&quot;当前时间为: &quot;</span> + sdf.format(dNow));</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"7-6-Calender类：\"><a href=\"#7-6-Calender类：\" class=\"headerlink\" title=\"7.6 Calender类：\"></a>7.6 Calender类：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//当前日期</span></span><br><span class=\"line\">\tCalendar c = Calendar.getInstance();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建指定日期</span></span><br><span class=\"line\">\tCalendar c1 = Calendar.getInstance();</span><br><span class=\"line\"></span><br><span class=\"line\">\tc1.set(<span class=\"number\">2009</span>, <span class=\"number\">6</span> - <span class=\"number\">1</span>, <span class=\"number\">12</span>);\t<span class=\"comment\">// 设置 年、月、日</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取日期的相关信息</span></span><br><span class=\"line\">\tCalendar c1 = Calendar.getInstance();</span><br><span class=\"line\">\t<span class=\"comment\">// 获得年份</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> year = c1.get(Calendar.YEAR);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得月份</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> month = c1.get(Calendar.MONTH) + <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得日期</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> date = c1.get(Calendar.DATE);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得小时</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> hour = c1.get(Calendar.HOUR_OF_DAY);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得分钟</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> minute = c1.get(Calendar.MINUTE);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得秒</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> second = c1.get(Calendar.SECOND);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得星期几【注意（这个与Date类是不同的）：1代表星期日、2代表星期一、3代表星期二，以此类推】</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> day = c1.get(Calendar.DAY_OF_WEEK);</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h3 id=\"7-7-Scanner-类：\"><a href=\"#7-7-Scanner-类：\" class=\"headerlink\" title=\"7.7 Scanner 类：\"></a>7.7 Scanner 类：</h3><p><code>import java.util.Scanner;  </code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Scanner sc = new Scanner(System.in);</span></span><br><span class=\"line\"><span class=\"comment\"> * ``sc.hasNextInt()   \t &lt;=&gt;  sc.nextInt()</span></span><br><span class=\"line\"><span class=\"comment\"> * ``sc.hasNextFloat()   &lt;=&gt;  sc.nextFloat()</span></span><br><span class=\"line\"><span class=\"comment\"> * ``sc.hasNextDouble()  &lt;=&gt;  sc.nextDouble()</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从键盘接收数据【next() 按字符】</span></span><br><span class=\"line\">        Scanner sc1 = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sc1.hasNext()) &#123;</span><br><span class=\"line\">                String str1 = sc1.next();</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;输入的数据为：&quot;</span> + str1);</span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">        sc1.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从键盘接收数据【nextLine() 按行，接收回车之前的所有字符，包括空白符】</span></span><br><span class=\"line\">\t    Scanner sc2 = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        <span class=\"comment\">// 从键盘接收数据</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">// nextLine方式接收字符串</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;nextLine方式接收：&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 判断是否还有输入</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sc2.hasNextLine()) &#123;</span><br><span class=\"line\">            String str2 = sc2.nextLine();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;输入的数据为：&quot;</span> + str2);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scan.close();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n<h3 id=\"7-8-Regex-正则表达式：\"><a href=\"#7-8-Regex-正则表达式：\" class=\"headerlink\" title=\"7.8 Regex-正则表达式：\"></a>7.8 Regex-正则表达式：</h3><p><code>import java.util.regex.*;</code></p>\n<p>java.util.regex 包主要包括以下三个类：</p>\n<ul>\n<li>  Pattern 类：<code>表达式</code></li>\n<li>  Matcher 类：<code>匹配引擎</code></li>\n<li>  PatternSyntaxException类：<code>语法错误</code></li>\n</ul>\n<p>Java中的<code>\\\\</code> 等价于 其他语言中的 <code>\\</code>: </p>\n<ul>\n<li>   <code>\\b</code>表示匹配删除，<code>\\\\b</code>表示匹配边界</li>\n<li>  例如：要匹配 str1 = ”(hello)“，正则必须为<code>\\\\(hello\\\\)</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t1. 匹配1个字符：.</span></span><br><span class=\"line\"><span class=\"comment\">*\t2。匹配前面的1个字符 0次~多次：* 等价于&#123;0,&#125;，例如：ab* 即：ab&#123;0,&#125;   =&gt;匹配：[a,ab]</span></span><br><span class=\"line\"><span class=\"comment\">*\t3。匹配前面的1个字符 1次~多次：+ 等价于&#123;1,&#125;，例如：ab+ 即：ab&#123;1,&#125;   =&gt;匹配：[ab，abb]</span></span><br><span class=\"line\"><span class=\"comment\">*\t4。匹配前面的1个字符 0次~1次：? 等价于&#123;0,1&#125;，例如：ab? 即：ab&#123;0,1&#125;  =&gt;匹配：[a,ab]</span></span><br><span class=\"line\"><span class=\"comment\">*\t4。非贪心匹配，尽可能短，用于匹配修饰符之后：? ，例如：ab? 即：a*? =&gt;匹配：a</span></span><br><span class=\"line\"><span class=\"comment\">*\t6. 匹配特殊字符：\\ ,例如：\\\\d 表示匹配 \\d ,即：匹配1个数字【java中的 \\\\ 相当于 其他语言中 \\】</span></span><br><span class=\"line\"><span class=\"comment\">*\t7. 匹配以指定字符开头的字串：^字符,例如：^a 表示匹配以a开头的字串</span></span><br><span class=\"line\"><span class=\"comment\">*\t8. 匹配以指定字符结尾的字串：字符$,例如：a$ 表示匹配以a结尾的字串</span></span><br><span class=\"line\"><span class=\"comment\">*\t9. 匹配其中的一个，相当于&quot;或&quot;：(字符1|字符2),例如：fu(c|n)  =&gt; 匹配：[fuc,fun]</span></span><br><span class=\"line\"><span class=\"comment\">*\t10. 匹配指定字符集中的任意一个：[字符1字符2字符3],例如：fu[abc] =&gt; 匹配：[fua,fub,fuc]</span></span><br><span class=\"line\"><span class=\"comment\">*\t11. 匹配指定连续的字符集中的任意一个：[字符1-字符3],例如：fu[a-c] =&gt; 匹配：[fua,fub,fuc]</span></span><br><span class=\"line\"><span class=\"comment\">*\t12. 不匹配指定数组中的任意一个：[^字符1字符2字符3],例如：fu[^abc] =&gt; 不匹配：[fua,fub,fuc]</span></span><br><span class=\"line\"><span class=\"comment\">*\t12. 不匹配指定数组中的任意一个：[^字符1-字符3],例如：fu[^a-c] =&gt; 不匹配：[fua,fub,fuc]</span></span><br><span class=\"line\"><span class=\"comment\">*\t13. 匹配以指定字符结尾的字串：字符$,例如：a$ 表示匹配以a结尾的字串</span></span><br><span class=\"line\"><span class=\"comment\">*\t14. 只匹配边界位置的字符：\\b 例如：&quot;er\\b&quot; 匹配=&gt; never , 不匹配=&gt; verb</span></span><br><span class=\"line\"><span class=\"comment\">*\t15. 不匹配边界位置的字符：\\B 例如：&quot;er\\B&quot; 不匹配=&gt; never , 匹配=&gt; verb</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        String str1 = <span class=\"string\">&quot;Hello World 123,Hello Man 456! &quot;</span>;</span><br><span class=\"line\">        String pattern = <span class=\"string\">&quot;.*Hello.*&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> isMatch = Pattern.matches(pattern,str1);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;字符串中是否能否找到Hello：&quot;</span>+isMatch);\t<span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h3 id=\"7-9-try-catch-异常处理：\"><a href=\"#7-9-try-catch-异常处理：\" class=\"headerlink\" title=\"7.9 try-catch 异常处理：\"></a>7.9 try-catch 异常处理：</h3><p>所有的异常类是从 <code>java.lang.Exception 类</code>继承的子类</p>\n<p><a href=\"https://www.runoob.com/java/java-exceptions.html\">Java 异常处理 | 菜鸟教程 (runoob.com)</a></p>\n<p>异常：</p>\n<ul>\n<li>  <code>检查性异常</code>：最容易犯，编译时不能忽略，如：打开不存在的文件</li>\n<li>  <code>运行时异常</code>：可以避免，编译时可被忽略，如：空指针异常、下标越界异常、算数异常（如：除数为0）、类型转化异常</li>\n<li>  <code>错误</code>（编译错误、运行错误、逻辑错误）：脱离控制，如：堆栈溢出、虚拟机错误、线程死锁</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gjachn.png\" alt=\"异常处理-使用技巧\"></p>\n<p>声明异常：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 声明异常：try-catch 或 在定义方法时：方法名()throws 异常&#123; &#125;</span></span><br><span class=\"line\"><span class=\"comment\">*\t声明异常的注意事项：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 只有父类声明了某个异常，子类才能声明该种异常/该种异常的子类</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t   \t【父类有，子类才能有】</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 子类重写父类的方法时，也要声明 父类已经声明的异常 或 父类已经声明的异常的子类异常</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 越是子类的异常，越要先catch</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用 try-catch 来声明异常</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    file = <span class=\"keyword\">new</span> FileInputStream(fileName);</span><br><span class=\"line\">    x = (<span class=\"keyword\">byte</span>) file.read();</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(FileNotFoundException f) &#123; <span class=\"comment\">// Not valid!</span></span><br><span class=\"line\">    f.printStackTrace();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(IOException i) &#123;</span><br><span class=\"line\">    i.printStackTrace();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">finally</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 无论是否有异常，都会执行的代码</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用 throws关键字 来声明异常</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">className</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deposit</span><span class=\"params\">(<span class=\"keyword\">double</span> amount)</span> <span class=\"keyword\">throws</span> RemoteException</span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// Method implementation</span></span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RemoteException();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//Remainder of class definition</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>在 Java 中你可以自定义异常。编写自己的异常类时需要记住下面的几点。</p>\n<ul>\n<li>  所有异常都必须是 Throwable 的子类。</li>\n<li>  如果希望写一个<code>检查性异常类</code>【编译不通过的异常】，则需要继承 Exception 类。=》try-catch 或 throws</li>\n<li>  如果你想写一个<code>运行时异常类</code>【运行不通过的异常】，那么需要继承 RuntimeException 类。</li>\n</ul>\n<p>出现算数异常：除数不能为0</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 出现算数异常：除数不能为0</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> a=<span class=\"number\">10</span>,b=<span class=\"number\">0</span>;</span><br><span class=\"line\">        System.out.println(div(a,b));</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 除法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">div</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a/b;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>自定义异常-步骤：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t自定义异常-步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 创建异常类，该异常类继承 Exception类</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 重写 异常类的构造方法</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t手动抛出异常-步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 选择1个合适的异常类</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 创建异常类的对象</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. 抛出对象</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 异常类</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">myException</span> <span class=\"keyword\">extends</span> <span class=\"title\">Exception</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">myException</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">myException</span><span class=\"params\">(String msg)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(msg);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 父类</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Father</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> myException</span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;我是父类的-eat&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 女儿类</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Daughter</span> <span class=\"keyword\">extends</span> <span class=\"title\">Father</span></span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">//main方法</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">                   Father daughter = <span class=\"keyword\">new</span> Daughter();</span><br><span class=\"line\"></span><br><span class=\"line\">                   <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                       daughter.eat();</span><br><span class=\"line\">                   &#125;<span class=\"keyword\">catch</span> (myException e)&#123;</span><br><span class=\"line\">                        e.printStackTrace(); <span class=\"comment\">// 打印堆栈的轨迹</span></span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">//女儿类的 eat()</span></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> myException </span>&#123;\t<span class=\"comment\">//子类声明的异常必须 小于等于 父类声明的异常</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;我是女儿类的-eat&quot;</span>);</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;我是女儿类的-eat&quot;</span>);</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;我是女儿类的-eat&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 打印3次&quot;我是女儿类的-eat&quot;后，马上抛出异常</span></span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> myException(<span class=\"string\">&quot;我吃太多了~&quot;</span>);\t</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gjaI74.png\" alt=\"异常-层次图\"></p>\n<h2 id=\"8-Stream、IO、File\"><a href=\"#8-Stream、IO、File\" class=\"headerlink\" title=\"8. Stream、IO、File\"></a>8. Stream、IO、File</h2><p><code>import java.io.*;</code></p>\n<p>需要定义<code> IO异常</code></p>\n<ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1Tz4y1X7H7?from=search&seid=14230994899231979002\">Java-IO-视频</a></li>\n<li>  <a href=\"https://www.cnblogs.com/coderzjz/p/13670088.html\">Java-IO-笔记</a></li>\n</ul>\n<h3 id=\"8-1-Stream的介绍：\"><a href=\"#8-1-Stream的介绍：\" class=\"headerlink\" title=\"8.1 Stream的介绍：\"></a>8.1 Stream的介绍：</h3><p><code>流-Stream</code>:</p>\n<blockquote>\n<p>  一个<code>数据的序列</code>。【以 <strong>内存</strong> 为参照物】</p>\n<ul>\n<li><p>  <code>输入流</code>表示<strong>计算机</strong>从一个源<code>读取数据 =&gt; 内存</code>，</p>\n</li>\n<li><p>  <code>输出流</code>表示<strong>计算机</strong>向一个目标<code>写入数据 =&gt; 存储设备</code>。【必须 flush( ) 才能写入】</p>\n</li>\n</ul>\n</blockquote>\n<p>字节流：可以复制 文本、图片、二进制文件</p>\n<p>字符流：可以复制 文本文件（包括中文）</p>\n<p>流的分类：</p>\n<blockquote>\n<ol>\n<li><p>按方向：</p>\n<ul>\n<li>  输入流：<code>读取数据 =&gt; 内存</code></li>\n<li>输出流：<code>写入数据 =&gt; 存储设备</code></li>\n</ul>\n</li>\n<li><p>按单位：</p>\n<ul>\n<li>  字节流</li>\n<li>字符流:（只能：读写文本）</li>\n</ul>\n</li>\n<li><p>按功能：</p>\n<ul>\n<li>  节点流：读写 数据</li>\n<li>  过滤流：增强 功能</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gjaXjK.png\" alt=\"IO流\"></p>\n<h3 id=\"8-2-Stream的常用类：\"><a href=\"#8-2-Stream的常用类：\" class=\"headerlink\" title=\"8.2 Stream的常用类：\"></a>8.2 Stream的常用类：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t字节输入流：InputStream【读数据】\t</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. read()\t\t\t\t\t\t\t\t// 读取下一个字节</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. read(byte[] b)\t\t\t\t\t\t// 读取下面多个字节</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. read(byte[] b,int offset,int maxlen)\t// 读取下面多个字节</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. close()\t\t\t\t\t\t\t\t// 关闭资源</span></span><br><span class=\"line\"><span class=\"comment\">*\t步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t1. 创建 FileInputStream</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t2. 创建 byte[]</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t3. 在 FileInputStream调用 read(byte数组)上</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t字节输出流：OutputStream【写数据】</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. write(int b)\t\t\t\t\t\t\t\t// 输出指定字节</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. write(byte[] b)\t\t\t\t\t\t\t// 输出指定字节数组</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. write(byte[] h,int offset,int len)\t\t// 输出指定位置和长度的多个字节</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. flush()\t\t\t\t\t\t\t\t\t// 刷新缓冲区，并 写入数据</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t5. close()\t\t\t\t\t\t\t\t\t// 关闭资源</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// FileInputStream : InputStream的子类</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// main方法，声明IO异常        </span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 假设&#x27;E:\\abc.txt&#x27; 已经存在，且内容为：abc012</span></span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 创建文件输入流</span></span><br><span class=\"line\">            FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;e:\\\\abc.txt&quot;</span>);</span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 如果 存在字节，则输出，继续循环,</span></span><br><span class=\"line\">            <span class=\"comment\">// 最终输出：97 98 99 48 49 50 读取完毕！【其中，数字：表示字节的ASCII码】</span></span><br><span class=\"line\"><span class=\"comment\">// 读取单个字节</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ( (data=fis.read()) != -<span class=\"number\">1</span>   )&#123;</span><br><span class=\"line\">                    System.out.println(data);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            fis.close();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;读取完毕！&quot;</span>);</span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 读取多个字节            </span></span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] buf  = <span class=\"keyword\">new</span>  <span class=\"keyword\">byte</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> count = <span class=\"number\">0</span> ;\t\t\t\t<span class=\"comment\">// 返回 读取的字节个数</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>( (count = fis.read(buf) ) ！=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                   System.out.println(<span class=\"keyword\">new</span> String(buf));\t<span class=\"comment\">// 输出 读取的字节的字符形式</span></span><br><span class=\"line\">            &#125;         </span><br><span class=\"line\">            fis.close();</span><br><span class=\"line\">             System.out.println(<span class=\"string\">&quot;读取完毕！&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// FileOutputStream : OutputStream的子类</span></span><br><span class=\"line\">        <span class=\"comment\">// 构造方法：FileOutputStream(路径,[append=false])</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;e:\\\\abc.txt&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 写入单个字节</span></span><br><span class=\"line\">        fos.write(<span class=\"number\">97</span>);\t\t<span class=\"comment\">// 输出：a</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 写入多个字节</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buf = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[]&#123;<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"string\">&#x27;e&#x27;</span>,<span class=\"string\">&#x27;f&#x27;</span>&#125;;</span><br><span class=\"line\">        fos.write(buf);\t\t<span class=\"comment\">// 输出：def</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">\t\t<span class=\"comment\">// 写入多个字符</span></span><br><span class=\"line\">        String str1 = <span class=\"string\">&quot;这是一个字符串&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buf2 = str1.getBytes();</span><br><span class=\"line\">        fos.write(buf2);\t<span class=\"comment\">// 输出：&quot;这是一个字符串&quot;</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        fos.close();    </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;输出完毕&quot;</span>);\t<span class=\"comment\">// 最终输出：adef这是一个字符串</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"8-3-案例-文件复制：\"><a href=\"#8-3-案例-文件复制：\" class=\"headerlink\" title=\"8.3 案例-文件复制：\"></a>8.3 案例-文件复制：</h3><p>【先输入流-读取，再输出流-写入】</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 目标：将&quot;E:\\A,jpeg &quot; 复制到 ”E:\\0\\B。jpg“</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建输入、输出流</span></span><br><span class=\"line\">            FileInputStream fis= <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;E:\\\\A.jpeg&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;E:\\\\0\\\\B.jpeg&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 创建缓存区 67KB</span></span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] buf = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">67</span>*<span class=\"number\">1024</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 读取的字节个数</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">while</span>((count = fis.read(buf)) != -<span class=\"number\">1</span>) &#123; <span class=\"comment\">// 固定写法</span></span><br><span class=\"line\"><span class=\"comment\">// 写入文件</span></span><br><span class=\"line\">               fos.write(buf,<span class=\"number\">0</span>,count);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"><span class=\"comment\">// 关闭资源        </span></span><br><span class=\"line\">        \tfis.close();</span><br><span class=\"line\">        \tfos.close();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;复制完毕&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"8-4-字节缓存流：\"><a href=\"#8-4-字节缓存流：\" class=\"headerlink\" title=\"8.4 字节缓存流：\"></a>8.4 字节缓存流：</h3><p><code>java.io.BufferedInputStream</code></p>\n<p><code>java.io.BufferedOutputStream</code></p>\n<p>需要与 InputStream或 其子类 配合使用。</p>\n<p>目的：</p>\n<blockquote>\n<ol>\n<li><p> 调高IO效率，减少访问磁盘</p>\n</li>\n<li><p>数据存储在缓冲区，flush( )将数据写入文件，也可直接close( )</p>\n<p> 【close( )也会调用flush( ),将内容写入文件】</p>\n</li>\n</ol>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t1. new InputStream</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t2. new BufferedInputStream</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t3. 读取缓存，输出</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t\t4.关闭资源</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 缓冲输入流</span></span><br><span class=\"line\"><span class=\"comment\">// BufferedInputStream </span></span><br><span class=\"line\">        FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;e:\\\\abc.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        BufferedInputStream bis = <span class=\"keyword\">new</span> BufferedInputStream(fis);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> data=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读取：&quot;adef&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>((data = bis.read()) !=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 打印结果：97:a  100:d  101:e  102:f </span></span><br><span class=\"line\">            System.out.print(data+<span class=\"string\">&quot;:&quot;</span>+(<span class=\"keyword\">char</span>)data+<span class=\"string\">&quot;  &quot;</span>);</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        bis.close();</span><br><span class=\"line\">\t\tfis();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 缓冲输出流</span></span><br><span class=\"line\"><span class=\"comment\">// BufferedOutputStream【最后必须 flush() 或 close() 才能 写入成功】</span></span><br><span class=\"line\">\t    FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;e:\\\\def.txt&quot;</span>);</span><br><span class=\"line\">        BufferedOutputStream bos  = <span class=\"keyword\">new</span> BufferedOutputStream(fos);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i&lt;<span class=\"number\">10</span>)&#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            bos.write(<span class=\"string\">&quot;Hello\\n&quot;</span>.getBytes());</span><br><span class=\"line\">            bos.flush();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\tbos.close();</span><br><span class=\"line\">\t\tfos();</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"8-5-对象流（序列化-反序列化）：\"><a href=\"#8-5-对象流（序列化-反序列化）：\" class=\"headerlink\" title=\"8.5 对象流（序列化 / 反序列化）：\"></a>8.5 对象流（序列化 / 反序列化）：</h3><ul>\n<li><p>  ObjectOutputStream</p>\n</li>\n<li><p>  ObjectInputStream</p>\n</li>\n</ul>\n<p>对象流：【需要结合 InputStream / OutputStream】</p>\n<blockquote>\n<ol>\n<li> 增强了 缓冲区的功能</li>\n<li> 增强了 读写 基本数据类型 + 字符串</li>\n<li> 增强了 读写对象：readObject( ) 和 writeObject( obj)</li>\n</ol>\n</blockquote>\n<p><code>使用 Stream 传输 Object 的过程</code>：</p>\n<ul>\n<li><p>  序列化【写入】：ObjectOutputStream，<code>1个类要想序列化，必须 implements Serializable接口</code></p>\n</li>\n<li><p>  反序列化【读取】：ObjectInputStream</p>\n</li>\n</ul>\n<h4 id=\"8-5-1-序列化：【写入Object-到-文件】\"><a href=\"#8-5-1-序列化：【写入Object-到-文件】\" class=\"headerlink\" title=\"8.5.1 序列化：【写入Object 到 文件】\"></a>8.5.1 序列化：【写入Object 到 文件】</h4><p><strong>注意</strong>： </p>\n<ul>\n<li>  被 写入文件（序列化）的类 必须实现 <code>可序列化接口</code> 。</li>\n<li>  如果<code>某个属性不想被序列化</code>，可以使用transient来修饰 某个类里 的 某个属性：<code>private transient int age;</code> 。</li>\n<li>  <code>静态属性</code>不可以序列化。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t类：Student</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 属性：name,age【如果是class类型的属性，则该属性也需要implements Serializable接口】</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. implements Serializable接口</span></span><br><span class=\"line\"><span class=\"comment\">\t\t3. 类要有序列化版本ID（快捷键自动添加），该ID可以保证序列化、反序列化的类是同一个</span></span><br><span class=\"line\"><span class=\"comment\">*\t</span></span><br><span class=\"line\"><span class=\"comment\">*\t序列化-步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. new 文件输出流、对象输出流</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 序列化(写入对象)</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. 关闭资源</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Student类</span></span><br><span class=\"line\"><span class=\"comment\">// 【注意：】1个类要想序列化，必须 implements Serializable接口</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">100L</span>;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 以下省略了 ：构造方法、getter、setter</span></span><br><span class=\"line\">   \t\t<span class=\"comment\">// ……</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建文件输出流、对象输出流</span></span><br><span class=\"line\">\tFileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;e:\\\\ghi.txt&quot;</span>);</span><br><span class=\"line\">    ObjectOutputStream oos = <span class=\"keyword\">new</span> ObjectOutputStream(fos);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 序列化： ObjectOutputStream</span></span><br><span class=\"line\">    Student ZhangSan = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张三&quot;</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">    oos.writeObject(ZhangSan);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">    oos.close();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"8-5-2-反序列化：【读取文件中的Object】\"><a href=\"#8-5-2-反序列化：【读取文件中的Object】\" class=\"headerlink\" title=\"8.5.2 反序列化：【读取文件中的Object】\"></a>8.5.2 反序列化：【读取文件中的Object】</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t类：上面已经 序列化的类Student</span></span><br><span class=\"line\"><span class=\"comment\">*\t</span></span><br><span class=\"line\"><span class=\"comment\">*\t反序列化-步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. new 文件输入流、对象输入流</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 反序列化(读取对象，并强制转化为Student类)</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. 关闭资源</span></span><br><span class=\"line\"><span class=\"comment\">*/</span>       </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 反序列化</span></span><br><span class=\"line\">\t FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;e:\\\\ghi.txt&quot;</span>);</span><br><span class=\"line\">     ObjectInputStream ois = <span class=\"keyword\">new</span> ObjectInputStream(fis);</span><br><span class=\"line\"></span><br><span class=\"line\">     Student stu1 = (Student) ois.readObject();</span><br><span class=\"line\">     System.out.println(stu1.getName());\t<span class=\"comment\">// 张三</span></span><br><span class=\"line\">     System.out.println(stu1.getAge());\t\t<span class=\"comment\">// 20</span></span><br><span class=\"line\">\t ois.close();</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"8-6-字符流：\"><a href=\"#8-6-字符流：\" class=\"headerlink\" title=\"8.6 字符流：\"></a>8.6 字符流：</h3><h4 id=\"8-6-1-字符编码：\"><a href=\"#8-6-1-字符编码：\" class=\"headerlink\" title=\"8.6.1 字符编码：\"></a>8.6.1 字符编码：</h4><ul>\n<li>  <code>ISO-8859-1</code>：【1个Byte表示】ASCII，希腊语、阿拉伯语、泰语等</li>\n<li>  <code>UTF-8</code>：UniCode的可变长编码</li>\n<li>  <code>GB-2312</code>：【1-2 Btye】简体中文</li>\n<li>  <code>GBK</code>：【1-2 Btye】简体中文 + 扩展（GB-2312的升级版）</li>\n<li>  <code>Big5</code>：台湾-繁体中文</li>\n</ul>\n<p><strong>注意：</strong><code> 编码方式</code> 与 <code>解码方式</code> 不一致 =》<code>乱码</code></p>\n<h4 id=\"8-6-2-字符流：\"><a href=\"#8-6-2-字符流：\" class=\"headerlink\" title=\"8.6.2 字符流：\"></a>8.6.2 字符流：</h4><p>字符流 =》 <code>java.io.Reader</code> 和 <code>java.io.Writer</code></p>\n<p>字符流常用子类：<code>FileReader</code>  和 <code>FileWriter</code> </p>\n<p>FileReader：【可显示中文(默认UTF-8编码)】</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 每次读取1个 </span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tFileReader fr = <span class=\"keyword\">new</span> FileReader(<span class=\"string\">&quot;e:\\\\0\\\\1.txt&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> data= <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>( (data=fr.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println((<span class=\"keyword\">char</span>)data);\t\t<span class=\"comment\">// 打印：好好学习</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\tfr.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用缓冲区读取</span></span><br><span class=\"line\"></span><br><span class=\"line\">       FileReader fr = <span class=\"keyword\">new</span> FileReader(<span class=\"string\">&quot;e:\\\\0\\\\1.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] buf = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[<span class=\"number\">4</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> count= <span class=\"number\">0</span>; </span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>( (count = fr.read(buf)) != -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            System.out.println(<span class=\"keyword\">new</span> String(buf,<span class=\"number\">0</span>,count));\t<span class=\"comment\">// 打印：好好学习</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\tfr.close();</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>FileWriter：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      </span><br><span class=\"line\">FileWriter fw = <span class=\"keyword\">new</span> FileWriter(<span class=\"string\">&quot;e:\\\\0\\\\1.txt&quot;</span>);</span><br><span class=\"line\">      fw.write(<span class=\"string\">&quot;天天向上&quot;</span>);</span><br><span class=\"line\">      fw.close();\t\t\t<span class=\"comment\">// 输出：天天向上</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h4 id=\"8-6-2-字符流-复制文本文件：\"><a href=\"#8-6-2-字符流-复制文本文件：\" class=\"headerlink\" title=\"8.6.2 字符流-复制文本文件：\"></a>8.6.2 字符流-复制文本文件：</h4><p><code>FileReader  + FileWriter  </code>： 复制<strong>文本文件</strong>【<code>无法复制：图片、二进制文件</code>】</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 字符流-复制文本文件        </span></span><br><span class=\"line\">\t\tFileReader fr = <span class=\"keyword\">new</span> FileReader(<span class=\"string\">&quot;e:\\\\1.txt&quot;</span>);</span><br><span class=\"line\">        FileWriter fw = <span class=\"keyword\">new</span> FileWriter(<span class=\"string\">&quot;e:\\\\0\\\\2.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] buf = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>((count = fr.read(buf)) != -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            fw.write(<span class=\"keyword\">new</span> String(buf,<span class=\"number\">0</span>,count));</span><br><span class=\"line\">            fw.flush();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        fw.close();</span><br><span class=\"line\">        fr.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"8-6-3-字符缓冲流\"><a href=\"#8-6-3-字符缓冲流\" class=\"headerlink\" title=\"8.6.3 字符缓冲流:\"></a>8.6.3 字符缓冲流:</h4><ul>\n<li>  BufferedReader：输入</li>\n<li>  BufferedWriter：输出【原样打印】</li>\n<li>  PrintWriter：输出【原样打印、换行打印】</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 字符缓冲-输入流【第一种】:BufferedReader</span></span><br><span class=\"line\"></span><br><span class=\"line\">        FileReader fr = <span class=\"keyword\">new</span> FileReader(<span class=\"string\">&quot;e:\\\\1.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(fr);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] buf = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> count =<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>((count=br.read(buf))!= -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println(buf);\t<span class=\"comment\">// 打印：天天向上-1 天天向上-2 天天向上-3</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 字符缓冲-输入流【第二种】:BufferedReader</span></span><br><span class=\"line\">        FileReader fr = <span class=\"keyword\">new</span> FileReader(<span class=\"string\">&quot;e:\\\\1.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(fr);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] buf = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        String line = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>((line=br.readLine()) != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            System.out.println(line);</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 字符缓冲-输出流: BufferedWriter</span></span><br><span class=\"line\"></span><br><span class=\"line\">        FileWriter fw = <span class=\"keyword\">new</span> FileWriter(<span class=\"string\">&quot;e:\\\\1.txt&quot;</span>);</span><br><span class=\"line\">        BufferedWriter bw = <span class=\"keyword\">new</span> BufferedWriter(fw);</span><br><span class=\"line\">        bw.write(<span class=\"string\">&quot;好好学习&quot;</span>);</span><br><span class=\"line\">        bw.newLine();\t<span class=\"comment\">// 换行</span></span><br><span class=\"line\">        bw.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// PrintWriter</span></span><br><span class=\"line\">\t<span class=\"comment\">// 原样打印</span></span><br><span class=\"line\">        PrintWriter pw = <span class=\"keyword\">new</span> PrintWriter(<span class=\"string\">&quot;e:\\\\2.txt&quot;</span>);</span><br><span class=\"line\">        pw.println(<span class=\"number\">97</span>);</span><br><span class=\"line\">        pw.println(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        pw.flush();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// </span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"8-7-桥转换流：\"><a href=\"#8-7-桥转换流：\" class=\"headerlink\" title=\"8.7 桥转换流：\"></a>8.7 桥转换流：</h3><p><code>java.io.InputStreamReader</code> 和 <code>java.io.OutputStreamWriter</code></p>\n<p>转化：</p>\n<ul>\n<li>  <code>字节流</code> =转为=》<code>字符流</code></li>\n<li>  可设置<code>编码</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1个1个读取   </span></span><br><span class=\"line\">\t\tFileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;e:\\\\1.txt&quot;</span>);</span><br><span class=\"line\">        InputStreamReader isr = <span class=\"keyword\">new</span> InputStreamReader(fis,<span class=\"string\">&quot;utf-8&quot;</span>);\t<span class=\"comment\">// 指定打开的编码</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> data=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>((data= isr.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println((<span class=\"keyword\">char</span>)data);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(isr.getEncoding());\t\t<span class=\"comment\">// 获取当前编码</span></span><br><span class=\"line\">        isr.close();</span><br><span class=\"line\">        fis.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出：</span></span><br><span class=\"line\">        FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;e:\\\\1.txt&quot;</span>);</span><br><span class=\"line\">        OutputStreamWriter osw = <span class=\"keyword\">new</span> OutputStreamWriter(fos);</span><br><span class=\"line\">        osw.write(<span class=\"string\">&quot;霓虹，你好\\r\\n我是第二行&quot;</span>);</span><br><span class=\"line\">        osw.flush();</span><br><span class=\"line\">\t\tfos.close();</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"8-8-File类：\"><a href=\"#8-8-File类：\" class=\"headerlink\" title=\"8.8 File类：\"></a>8.8 File类：</h3><p><code>File类</code>：代表物理磁盘中的<code>文件、文件夹</code>。</p>\n<p>File类-使用：</p>\n<ul>\n<li>分隔符<ul>\n<li>  File.pathSeparatorChar：路径分隔符（\\）</li>\n<li>  File.separator：名称分隔符（;）</li>\n</ul>\n</li>\n<li>  文件操作</li>\n<li>  文件夹操作</li>\n</ul>\n<h4 id=\"8-8-1-文件操作：\"><a href=\"#8-8-1-文件操作：\" class=\"headerlink\" title=\"8.8.1 文件操作：\"></a>8.8.1 文件操作：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">creFile</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 创建文件对象，无论是否：真实存在        </span></span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;e:\\\\3.txt&quot;</span>);\t</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 按段是否：创建成功 createNewFile()</span></span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> isCreSuccess = file.createNewFile();\t</span><br><span class=\"line\">        System.out.println(isCreSuccess);\t</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 判断是否：已存在 file.exists()        </span></span><br><span class=\"line\">        System.out.println(file.exists());\t</span><br><span class=\"line\">   </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 判断是否：删除  file.delete()       </span></span><br><span class=\"line\">        System.out.println(file.delete());</span><br><span class=\"line\">     </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// JVM退出时，删除        </span></span><br><span class=\"line\">        file.deleteOnExit();</span><br><span class=\"line\"> </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 获取绝对路径   file.getAbsoluteFile()</span></span><br><span class=\"line\">         System.out.println(file.getAbsoluteFile());  <span class=\"comment\">// e:\\3.txt</span></span><br><span class=\"line\">  </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 获取路径 file.getPath()      </span></span><br><span class=\"line\">         System.out.println(file.getPath()); <span class=\"comment\">// e:\\3.txt</span></span><br><span class=\"line\">     </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 获取路径 file.getName()        </span></span><br><span class=\"line\">        System.out.println(file.getName());\t<span class=\"comment\">// 3.txt</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 获取父目录 file.getParent()           </span></span><br><span class=\"line\">        System.out.println(file.getParent());\t<span class=\"comment\">// e:\\</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 获取文件的创建时间 file.length()       </span></span><br><span class=\"line\">        System.out.println(file.length());</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 获取文件的 最后修改时间的毫秒数 file.lastModified()</span></span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">new</span> Date(file.lastModified()).toString());</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 查看读、写权限        </span></span><br><span class=\"line\">        System.out.println(file.canRead());</span><br><span class=\"line\">        System.out.println(file.canWrite());</span><br><span class=\"line\">        System.out.println(file.canExecute());</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 判断 文件、文件夹        </span></span><br><span class=\"line\">        System.out.println(file.isFile());</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 判断是否 隐藏        </span></span><br><span class=\"line\">        System.out.println(file.isHidden());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h4 id=\"8-8-2-文件夹操作：\"><a href=\"#8-8-2-文件夹操作：\" class=\"headerlink\" title=\"8.8.2 文件夹操作：\"></a>8.8.2 文件夹操作：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">creDir</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">       </span><br><span class=\"line\"><span class=\"comment\">//创建文件夹对象</span></span><br><span class=\"line\">        File dir =<span class=\"keyword\">new</span> File(<span class=\"string\">&quot;e:\\\\0\\\\1&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 判断是否存在</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!dir.exists())&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 创建单层目录: dir.mkdir();\t        </span></span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 创建多层目录: dir.mkdirs();</span></span><br><span class=\"line\">            dir.mkdirs();\t<span class=\"comment\">// 返回 true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除文件夹       </span></span><br><span class=\"line\">        dir.delete();</span><br><span class=\"line\"></span><br><span class=\"line\">       </span><br><span class=\"line\">       </span><br><span class=\"line\"><span class=\"comment\">// 列出所有的文件名              </span></span><br><span class=\"line\">        String[] arr = dir.list();</span><br><span class=\"line\">       </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(String f : arr)&#123;</span><br><span class=\"line\">            System.out.println(f);            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">       </span><br><span class=\"line\">       </span><br><span class=\"line\">       </span><br><span class=\"line\"><span class=\"comment\">// ... 所有的方法都与文件的一样</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"8-8-3-FileFilter接口：\"><a href=\"#8-8-3-FileFilter接口：\" class=\"headerlink\" title=\"8.8.3 FileFilter接口：\"></a>8.8.3 FileFilter接口：</h4><p>【按条件 筛选出 文件、文件夹】</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 传入FileFilter匿名对象，如果是jpg,</span></span><br><span class=\"line\"></span><br><span class=\"line\">       File[] arr = dir.listFiles(<span class=\"keyword\">new</span> FileFilter() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">accept</span><span class=\"params\">(File pathname)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(pathname.getName().endsWith(<span class=\"string\">&quot;.txt&quot;</span>))&#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 符合条件的返回true</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出：符合条件的文件名</span></span><br><span class=\"line\">       <span class=\"keyword\">for</span>(File f:arr)&#123;</span><br><span class=\"line\">           System.out.println(f.getName());</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"9-集合框架\"><a href=\"#9-集合框架\" class=\"headerlink\" title=\"9. 集合框架\"></a>9. 集合框架</h2><ul>\n<li>  <a href=\"https://blog.csdn.net/Zzh1110/article/details/105518682\">JavaSE–集合介绍</a></li>\n<li>  <a href=\"https://www.bilibili.com/video/BV1zD4y1Q7Fw?p=2\">千锋-Java集合框架详解-bilibili</a></li>\n<li>  <a href=\"https://www.cnblogs.com/coderzjz/p/13587167.html\">Java集合-简要笔记</a></li>\n<li>  <a href=\"https://lazydog036.gitee.io/2020/10/29/JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/\">JAVA集合框架详解</a></li>\n</ul>\n<h3 id=\"9-1-引入：\"><a href=\"#9-1-引入：\" class=\"headerlink\" title=\"9.1 引入：\"></a>9.1 引入：</h3><p><code>数组、链表、集合</code>等，都是<code>存放多个数据</code>的1种容器，都用于在<code>内存中存储</code>（而不是持久化存储：txt,abi,jpg）。</p>\n<p><code>数组</code>：【有序存储，元素可重复】</p>\n<ul>\n<li>  特点：指定长度后，长度不可再次更改，只能存放同一种类型的数据。 int [ ] arr = new int[ ];</li>\n<li>  缺点：长度固定，不可更改；添加、删除元素时，效率低；没有现成的方法或属性来获取数组长度</li>\n</ul>\n<p>为解决<code>数组</code>的上述<code>缺点</code>，引入了<code>集合</code>。</p>\n<ul>\n<li>  集合只能存储<code>引用类型</code>   ：</li>\n</ul>\n<blockquote>\n<p>  =&gt; 必须<code>自动装箱、自动拆箱</code>来将  <code>基本类型 </code> 转化为  <code>引用类型</code> 。     </p>\n</blockquote>\n<ul>\n<li>  为什么学习不同的集合？</li>\n</ul>\n<blockquote>\n<p>  不同的集合，在底层的数据结构的实现不同。</p>\n</blockquote>\n<ul>\n<li>  数组 与 集合 的区别：</li>\n</ul>\n<blockquote>\n<ol>\n<li> 数组长度固定，集合长度不固定。</li>\n<li> 数组可以存储基本类型+引用类型，集合只能存储引用类型（因此需要 自动装箱、自动拆箱）。</li>\n</ol>\n</blockquote>\n<ul>\n<li>  集合的包的位置：<code>import java.uitl.*;</code></li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gjdpAH.png\" alt=\"collection集合\"></p>\n<h3 id=\"9-2-Collection集合的操作：\"><a href=\"#9-2-Collection集合的操作：\" class=\"headerlink\" title=\"9.2 Collection集合的操作：\"></a>9.2 Collection集合的操作：</h3><p>Collection、List、Set是接口，不能直接new，而要借助他们的子类如：ArrayList、LinkedList、HashSet、TreeSet。</p>\n<h4 id=\"9-2-1-Collection-集合接口：\"><a href=\"#9-2-1-Collection-集合接口：\" class=\"headerlink\" title=\"9.2.1 Collection 集合接口：\"></a>9.2.1 Collection 集合接口：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* 集合的操作：</span></span><br><span class=\"line\"><span class=\"comment\">*\t1. 添加：add(obj),</span></span><br><span class=\"line\"><span class=\"comment\">*\t2. 删除：remove(),clear();</span></span><br><span class=\"line\"><span class=\"comment\">*\t3. 遍历：foreach语句，迭代器</span></span><br><span class=\"line\"><span class=\"comment\">*\t4. 判断：contains(),isEmpty(),equals()</span></span><br><span class=\"line\"><span class=\"comment\">*\t5. 获取：get()</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加：</span></span><br><span class=\"line\"></span><br><span class=\"line\">            Collection coll = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">            coll.add(<span class=\"string\">&quot;苹果&quot;</span>);</span><br><span class=\"line\">            coll.add(<span class=\"string\">&quot;西瓜&quot;</span>);</span><br><span class=\"line\">            System.out.println(“元素个数：”+coll.size());</span><br><span class=\"line\">            System.out.println(coll);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除：</span></span><br><span class=\"line\"></span><br><span class=\"line\">            coll.remove(<span class=\"string\">&quot;苹果&quot;</span>);</span><br><span class=\"line\">            System.out.println(coll);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 清空:</span></span><br><span class=\"line\">            coll.clear();</span><br><span class=\"line\">            System.out.println(coll);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历的2种方式【重点】：</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t1. 增强的for</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t2. 迭代器【专门用于遍历集合的接口】：</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t\thaNext(),有元素则返回true</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t\tnext(),获取下一个元素</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t\tremove()，移除当前元素</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 增强for</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Object obj:coll) &#123;</span><br><span class=\"line\">                String s = (String)obj;\t<span class=\"comment\">// 强制转化为真实的类型</span></span><br><span class=\"line\">                System.out.println(obj);</span><br><span class=\"line\">            &#125;\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 使用迭代器【注意：在迭代时，不能: 集合.remove(),</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 否则会报：并发修改异常;但可以 it.remove()】</span></span><br><span class=\"line\">            Iterator it = coll.iterator();</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">                String s = (String)it.next();</span><br><span class=\"line\">                System.out.println(s);</span><br><span class=\"line\">                it.remove();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(coll.size());\t<span class=\"comment\">// 0</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br><span class=\"line\"><span class=\"comment\">// 判断：存在-&gt; coll.contains();   </span></span><br><span class=\"line\"><span class=\"comment\">//      是否为空 -&gt; coll.isEmpty();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tSystem.out.println(coll.contains(<span class=\"string\">&quot;香蕉&quot;</span>));、</span><br><span class=\"line\">            System.out.println(coll.isEmpty(香蕉));</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"9-2-2-List-集合子接口：\"><a href=\"#9-2-2-List-集合子接口：\" class=\"headerlink\" title=\"9.2.2 List 集合子接口：\"></a>9.2.2 List 集合子接口：</h4><p>有序、可重复、有下标</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* List集合的操作：</span></span><br><span class=\"line\"><span class=\"comment\">*\t1. 添加：add(obj),addAll(index,collection)，add(index,obj);</span></span><br><span class=\"line\"><span class=\"comment\">*\t2. 删除：remove(),clear();</span></span><br><span class=\"line\"><span class=\"comment\">*   3. 保留元素：retainAll(collection);</span></span><br><span class=\"line\"><span class=\"comment\">*\t4. 遍历：foreach语句，</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t迭代器:</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\tIterator()、</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\tlistIterator()、</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\tlistIterator(index)【迭代方向可 先从前面开始，也可先从后开始】</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t</span></span><br><span class=\"line\"><span class=\"comment\">*\t5. 判断：contains(obj),isEmpty(),equals(obj)</span></span><br><span class=\"line\"><span class=\"comment\">*\t6. 获取：get(index),subList(from_index,to_index), indexOf(obj)</span></span><br><span class=\"line\"><span class=\"comment\">*\t7. 修改元素：set(index,obj)</span></span><br><span class=\"line\"><span class=\"comment\">*\t8. 转化为数组：toA</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ListIterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以下内容放入main中</span></span><br><span class=\"line\"></span><br><span class=\"line\">        List list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        list.add(<span class=\"string\">&quot;苹果&quot;</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">&quot;西瓜&quot;</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">&quot;香蕉&quot;</span>);</span><br><span class=\"line\">        System.out.println(list);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tListIterator it = list.listIterator();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// listIterator迭代器，从 前往后 迭代</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">            System.out.println(it.next());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// listIterator迭代器，从 后往前 迭代【先将指针移到最后，再从后往前打印】</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">           it.next();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(it.hasPrevious())&#123;</span><br><span class=\"line\">            System.out.println(it.previous());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// indexOf()</span></span><br><span class=\"line\"> \t\tSystem.out.println(list.indexOf(<span class=\"string\">&quot;香蕉&quot;</span>)); <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// remove(index)  ; remove((Object)obj)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tList list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        list.add(<span class=\"number\">20</span>);</span><br><span class=\"line\">        list.add(<span class=\"number\">30</span>);</span><br><span class=\"line\">        list.add(<span class=\"number\">40</span>);</span><br><span class=\"line\">        list.add(<span class=\"number\">50</span>);</span><br><span class=\"line\">        list.add(<span class=\"number\">60</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(list);</span><br><span class=\"line\"></span><br><span class=\"line\">        list.remove((Object)<span class=\"number\">20</span>);</span><br><span class=\"line\">\t\tlist.remove(<span class=\"number\">0</span>);  <span class=\"comment\">// 与上1行效果一致</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(list);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// subList(from_idx,to_idx) 返回子集,范围 [from_idx,to_idx)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"9-2-3-List-接口的常用实现类：\"><a href=\"#9-2-3-List-接口的常用实现类：\" class=\"headerlink\" title=\"9.2.3 List 接口的常用实现类：\"></a>9.2.3 List 接口的常用实现类：</h4><ul>\n<li>  ArrayList【重点】：数组，查询快、增删慢，线程不安全【jdk1.2】</li>\n</ul>\n<blockquote>\n<p>   源码分析：</p>\n<ol>\n<li> 默认容量（default_capacity）：当没有元素时，0；有1个元素时，10</li>\n<li> 数组（elementData）</li>\n<li> 当前大小（size）：</li>\n</ol>\n</blockquote>\n<ul>\n<li>  LinkedList：双链表，增删快、查询慢</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\tLinkedList常用方法：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. add()，addAll()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. remove(),removeAll()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. addFirst(),addLast()</span></span><br><span class=\"line\"><span class=\"comment\">* \t\t4. removeFirst(),removeLast()</span></span><br><span class=\"line\"><span class=\"comment\">* \t\t5. clear()</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        LinkedList ll = <span class=\"keyword\">new</span> LinkedList();</span><br><span class=\"line\"></span><br><span class=\"line\">        Student s1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张1&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">        Student s2 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张2&quot;</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        Student s3 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张3&quot;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加</span></span><br><span class=\"line\">        ll.add(s1);</span><br><span class=\"line\">        ll.add(s2);</span><br><span class=\"line\">        ll.add(s3);</span><br><span class=\"line\">        System.out.println(ll);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//删除</span></span><br><span class=\"line\">        ll.remove(s2);</span><br><span class=\"line\">        System.out.println(ll);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 头插</span></span><br><span class=\"line\">        ll.addFirst(s2);</span><br><span class=\"line\">        System.out.println(ll);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 头删</span></span><br><span class=\"line\">        ll.removeFirst();</span><br><span class=\"line\">        System.out.println(ll);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 尾插</span></span><br><span class=\"line\">        ll.addLast(s2);</span><br><span class=\"line\">        System.out.println(ll);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 尾删</span></span><br><span class=\"line\">        ll.removeLast();</span><br><span class=\"line\">        System.out.println(ll);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历【向后】</span></span><br><span class=\"line\">        ListIterator it = ll.listIterator();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">            System.out.println(it.next());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历【向前】</span></span><br><span class=\"line\">         <span class=\"keyword\">while</span>(it.hasPrevious())&#123;</span><br><span class=\"line\">                System.out.println(it.previous());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<ul>\n<li>  Vector：数组，查询快、增删慢，线程安全，【jdk1.0】</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\tVector集合 演示：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tadd()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tremove()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tsize()</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t遍历： 枚举器</span></span><br><span class=\"line\"><span class=\"comment\">* </span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        Vector v = <span class=\"keyword\">new</span> Vector();</span><br><span class=\"line\">        v.add(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">        v.add(<span class=\"string\">&quot;里斯&quot;</span>);</span><br><span class=\"line\">        v.add(<span class=\"string\">&quot;威武&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 枚举器，遍历Vector</span></span><br><span class=\"line\">        Enumeration en = v.elements();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(en.hasMoreElements())&#123;</span><br><span class=\"line\">            System.out.println(en.nextElement());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// firstElement()</span></span><br><span class=\"line\"><span class=\"comment\">// lastElement()</span></span><br><span class=\"line\"><span class=\"comment\">// elementAt(idx)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println( v.firstElement());</span><br><span class=\"line\">        System.out.println( v.lastElement());</span><br><span class=\"line\">        System.out.println( v.elementAt(<span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h4 id=\"9-2-4-Set-集合：\"><a href=\"#9-2-4-Set-集合：\" class=\"headerlink\" title=\"9.2.4 Set 集合：\"></a>9.2.4 Set 集合：</h4><p>只有包含 Collection 集合中的方法，没有自己额外的方法。</p>\n<ul>\n<li><p>  HashSet：基于hashcode来保证不重复。当hashcodec重复时，equals方法被调用，如果equals方法返回true，则 拒绝添加 新的那个重复元素。【存储结构：哈希表，数组+链表】</p>\n</li>\n<li><p>  TreeSet：基于排列顺序来保证不重复。【存储结构：红黑树】</p>\n</li>\n</ul>\n<h5 id=\"HashSet：\"><a href=\"#HashSet：\" class=\"headerlink\" title=\"HashSet：\"></a>HashSet：</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*  HashSet:</span></span><br><span class=\"line\"><span class=\"comment\">*\t存储过程：【需要在类里 重写 hashcode()、equals()】</span></span><br><span class=\"line\"><span class=\"comment\">\t\t【1】 根据hashcode查找保存的位置，位置处无元素，则存入，否则执行第二步</span></span><br><span class=\"line\"><span class=\"comment\">\t\t【2】 执行euqals(),若返回false,则表示元素不重复，以链表形式存入。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t小结：先比较hashcode【同一地址】,再equals()【同一值】</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">* \t\t1. add(obj)</span></span><br><span class=\"line\"><span class=\"comment\">* \t\t2. remove(obj)</span></span><br><span class=\"line\"><span class=\"comment\">* \t\t3. clear()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. contains(obj)</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. isEmpty()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t6. 遍历：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t - 增强型for</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t - 迭代器</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        HashSet&lt;Student&gt; s = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        Student s1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张1&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">        Student s2 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张2&quot;</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        Student s3 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张3&quot;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        s.add(s1);</span><br><span class=\"line\">        s.add(s2);</span><br><span class=\"line\">        s.add(s3);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加</span></span><br><span class=\"line\">        s.add(s3);</span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除</span></span><br><span class=\"line\">        s.remove(s2);</span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 包含元素</span></span><br><span class=\"line\">  \t\tSystem.out.println( s.contains(s2) ); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 是否为空</span></span><br><span class=\"line\">  \t\tSystem.out.println( s.isEmpty() ); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历【增强for】</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Student item : s) &#123;</span><br><span class=\"line\">            System.out.println(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历【迭代器】</span></span><br><span class=\"line\">        Iterator&lt;Student&gt; it = s.iterator();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">            System.out.println(it.next());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 【Student类中】重写hashcode方法，</span></span><br><span class=\"line\"><span class=\"comment\">// 注意：此处写法不严谨，使用质数31来参与运算，解决散列冲突: 31*i = (31&lt;&lt;5)-i</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">hashCode</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n1 = <span class=\"keyword\">this</span>.name.hashCode();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n2 = <span class=\"keyword\">this</span>.age;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n1+n2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 【Student类中】重写equals方法</span></span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object obj)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(obj == <span class=\"keyword\">this</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(obj == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(obj <span class=\"keyword\">instanceof</span> Student)&#123;</span><br><span class=\"line\">            Student s = (Student) obj;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.name.equals(s.getName())&amp;&amp;<span class=\"keyword\">this</span>.age==s.getAge())&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h5 id=\"TreeSet：\"><a href=\"#TreeSet：\" class=\"headerlink\" title=\"TreeSet：\"></a>TreeSet：</h5><p>【红黑树，即：二叉查找树】</p>\n<ul>\n<li>  按 <code>排列顺序</code> 实现  <code>元素不重复</code></li>\n<li>  实现了<code> SortedSet 接口</code>， 对元素 进行<code>自动排序</code></li>\n<li>  元素类 必须<code>实现 Comparable 接口</code>，指定 <code>排序规则</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*  TreeSet:</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">* \t\t1. add(obj)</span></span><br><span class=\"line\"><span class=\"comment\">* \t\t2. remove(obj)</span></span><br><span class=\"line\"><span class=\"comment\">* \t\t3. clear()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. contains(obj)</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. isEmpty()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t6. 遍历：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t - 增强型for</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t - 迭代器</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Student类中 实现 Comparable 接口，重写 CompareTo() </span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Student o)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n1 = <span class=\"keyword\">this</span>.name.compareTo(o.getName());</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n2 = <span class=\"keyword\">this</span>.age-o.getAge();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n1==<span class=\"number\">0</span>?n2:n1;\t<span class=\"comment\">// 返回0，表示元素重复</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 或者 main方法中，在new Student类时,传入匿名内部类，指定 比较规则</span></span><br><span class=\"line\"></span><br><span class=\"line\">        TreeSet&lt;Student&gt; s = <span class=\"keyword\">new</span> TreeSet&lt;&gt;(<span class=\"keyword\">new</span> Comparator&lt;Student&gt;() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Student o1, Student o2)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> n1 = o1.getAge() - o2.getAge();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> n2 = o1.getName().compareTo(o2.getName());</span><br><span class=\"line\">                <span class=\"keyword\">return</span> n1==<span class=\"number\">0</span>?n2:n1;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main</span></span><br><span class=\"line\">\t\tTreeSet&lt;Student&gt; s = <span class=\"keyword\">new</span> TreeSet&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        Student s1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张1&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">        Student s2 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张2&quot;</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        Student s3 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张3&quot;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        s.add(s1);</span><br><span class=\"line\">        s.add(s2);</span><br><span class=\"line\">        s.add(s3);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加</span></span><br><span class=\"line\">        s.add(s3);</span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除</span></span><br><span class=\"line\">        s.remove(s2);</span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 包含元素</span></span><br><span class=\"line\">  \t\tSystem.out.println( s.contains(s2) ); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 是否为空</span></span><br><span class=\"line\">  \t\tSystem.out.println( s.isEmpty() ); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历【增强for】</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Student item : s) &#123;</span><br><span class=\"line\">            System.out.println(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历【迭代器】</span></span><br><span class=\"line\">        Iterator&lt;Student&gt; it = s.iterator();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">            System.out.println(it.next());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"TreeSet-案例：\"><a href=\"#TreeSet-案例：\" class=\"headerlink\" title=\"TreeSet-案例：\"></a>TreeSet-案例：</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> CollectionDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Comparator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeSet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TreeSetDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/*  todo:</span></span><br><span class=\"line\"><span class=\"comment\">    *       按照字符串的长度进行排序</span></span><br><span class=\"line\"><span class=\"comment\">    *           beijing:7,guangzhou:9,shanghai:8</span></span><br><span class=\"line\"><span class=\"comment\">    * */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// main</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        TreeSet&lt;String&gt; t = <span class=\"keyword\">new</span> TreeSet&lt;&gt;(<span class=\"keyword\">new</span> Comparator&lt;String&gt;() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(String o1, String o2)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> n1 = o1.length() - o2.length();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> n2 = o1.compareTo(o2);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> n1==<span class=\"number\">0</span>?n2:n1;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        t.add(<span class=\"string\">&quot;beijing:7&quot;</span>);</span><br><span class=\"line\">        t.add(<span class=\"string\">&quot;guangzhou:9&quot;</span>);</span><br><span class=\"line\">        t.add(<span class=\"string\">&quot;shanghai:8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(t);\t<span class=\"comment\">// [beijing:7, shanghai:8, guangzhou:9]</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"9-3-泛型\"><a href=\"#9-3-泛型\" class=\"headerlink\" title=\"9.3 泛型\"></a>9.3 泛型</h3><p>注意：<code>6.4.2 </code>中也提到了泛型</p>\n<ol>\n<li> 泛型-定义：</li>\n</ol>\n<blockquote>\n<p>  把<code>数据类型</code>当作<code>参数</code>,且<code>传入</code>的数据类型必须是<code>引用类型</code>【<code>基本类型</code> 必须使用 其<code>包装类 </code>作为参数】</p>\n<p>  例如：</p>\n<p>   <code>ArrayList&lt;Integer&gt; arr = new ArrayList&lt; &gt;( );</code></p>\n</blockquote>\n<ol start=\"2\">\n<li> 常见形式：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  泛型类</li>\n<li>  泛型接口</li>\n<li>  泛型方法</li>\n</ul>\n</blockquote>\n<ol start=\"3\">\n<li> 语法：<code>&lt;T,… &gt;</code>  ，其中的 T可以换成<code>E,K,V</code></li>\n</ol>\n<ol start=\"4\">\n<li> 好处：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  提高代码复用性</li>\n<li>  提高代码安全性，防止 类型转化异常</li>\n</ul>\n</blockquote>\n<ol start=\"5\">\n<li> 泛型在集合框架中的应用：</li>\n</ol>\n<blockquote>\n<p>  可以指定某个集合只能传入某个类型的数据。</p>\n<p>  【不指定<code>泛型</code>，<code>默认</code>传入<code>Object类型</code>，因此需 <code>强制转化</code>类型】</p>\n</blockquote>\n<h4 id=\"9-3-1-泛型类：\"><a href=\"#9-3-1-泛型类：\" class=\"headerlink\" title=\"9.3.1 泛型类：\"></a>9.3.1 泛型类：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t泛型类的语法： 类名&lt;T&gt;&#123; &#125;</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. T为数据类型的 占位符，可以有多个，每个占位符之间用逗号隔开</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. T可以用来 声明 变量</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. T可以用来 作为 参数</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. T可以用来 作为 返回值</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t5. 不能 使用T的构造方法：不能 new T()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t6. 不同的泛型对象 不能 相互赋值</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 泛型类</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyGeneral</span>&lt;<span class=\"title\">T</span>&gt;</span>&#123;    </span><br><span class=\"line\"></span><br><span class=\"line\">            T t1; </span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">(T t1)</span></span>&#123;</span><br><span class=\"line\">                System.out.println(t1);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">getT1</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> t1;</span><br><span class=\"line\">            &#125;   </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main</span></span><br><span class=\"line\"></span><br><span class=\"line\">        MyGeneral&lt;String&gt; m1 = <span class=\"keyword\">new</span> MyGeneral&lt;&gt;(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">        System.out.println( m1.getT1()); <span class=\"comment\">// 张三</span></span><br><span class=\"line\">        m1.show(<span class=\"string\">&quot;你好&quot;</span>);\t<span class=\"comment\">//你好</span></span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">        MyGeneral&lt;Integer&gt; m2 = <span class=\"keyword\">new</span> MyGeneral&lt;&gt;(<span class=\"number\">123</span>);</span><br><span class=\"line\">        System.out.println(m2.getT1()); <span class=\"comment\">// 123</span></span><br><span class=\"line\">        m2.show(<span class=\"number\">456</span>); <span class=\"comment\">// 456</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"9-3-2-泛型接口：\"><a href=\"#9-3-2-泛型接口：\" class=\"headerlink\" title=\"9.3.2 泛型接口：\"></a>9.3.2 泛型接口：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* \t泛型接口：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 不能创建 泛型常量</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 泛型接口</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">myInt</span>&lt;<span class=\"title\">T</span>&gt;</span>&#123;</span><br><span class=\"line\">            <span class=\"function\">T <span class=\"title\">show</span><span class=\"params\">(T t1)</span></span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 1. 泛型接口-实现类【在实现接口时，确定要传入的类型】</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">myIntClass</span> <span class=\"keyword\">implements</span> <span class=\"title\">myInt</span>&lt;<span class=\"title\">String</span>&gt;</span>&#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span></span><br><span class=\"line\">                    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">show</span><span class=\"params\">(String t1)</span> </span>&#123;</span><br><span class=\"line\">                        System.out.println(t1);</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> t1;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        <span class=\"comment\">// main</span></span><br><span class=\"line\">                myIntClass myInt_1 = <span class=\"keyword\">new</span> myIntClass();</span><br><span class=\"line\">                myInt_1.show(<span class=\"string\">&quot;你好&quot;</span>);\t<span class=\"comment\">// 你好</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 2. 泛型接口-实现类【在创建对象时，确定要传入的类型】</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">myIntClass2</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">myInt</span>&lt;<span class=\"title\">T</span>&gt;</span>&#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span></span><br><span class=\"line\">                    <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">show</span><span class=\"params\">(T t1)</span> </span>&#123;</span><br><span class=\"line\">                        System.out.println(t1);</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> t1;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// main</span></span><br><span class=\"line\">                myIntClass2&lt;Integer&gt; myInt_2 = <span class=\"keyword\">new</span> myIntClass2&lt;&gt;();</span><br><span class=\"line\">                myInt_2.show(<span class=\"number\">123</span>);\t<span class=\"comment\">// 123</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h4 id=\"9-3-3-泛型方法：\"><a href=\"#9-3-3-泛型方法：\" class=\"headerlink\" title=\"9.3.3 泛型方法：\"></a>9.3.3 泛型方法：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">myGer</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\"> <span class=\"comment\">// 泛型方法：   </span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">(T t1)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;这是泛型方法:&quot;</span> + t1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 泛型方法 T由 传入的数据的类型 来决定</span></span><br><span class=\"line\">        myGer ger = <span class=\"keyword\">new</span> myGer();</span><br><span class=\"line\">        ger.show(<span class=\"number\">123</span>);\t\t<span class=\"comment\">//这是泛型方法:123</span></span><br><span class=\"line\">        ger.show(<span class=\"string\">&quot;你好&quot;</span>);\t\t<span class=\"comment\">//这是泛型方法:你好</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h3 id=\"9-4-Map-集合：\"><a href=\"#9-4-Map-集合：\" class=\"headerlink\" title=\"9.4 Map 集合：\"></a>9.4 Map 集合：</h3><p><img src=\"https://z3.ax1x.com/2021/05/24/gjdYbF.png\" alt=\"Map集合\"></p>\n<ol>\n<li> 特点：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  用于存储 <code>无序、无下标</code>的<code>键值对</code></li>\n<li>  键：无序、无下标、不重复</li>\n<li>  值：无序、无下标、可重复</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\tMap:</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tentrySet();</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tput(key,value);</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tget(key);</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tkeySet();</span></span><br><span class=\"line\"><span class=\"comment\">*\t\tvalues();</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String,String&gt; m = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加</span></span><br><span class=\"line\">        m.put(<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;a-&gt;10&quot;</span>);</span><br><span class=\"line\">        m.put(<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;b-&gt;20&quot;</span>);</span><br><span class=\"line\">        m.put(<span class=\"string\">&quot;c&quot;</span>,<span class=\"string\">&quot;c-&gt;30&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(m);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除</span></span><br><span class=\"line\">\t\tm.remove(<span class=\"string\">&quot;c&quot;</span>);</span><br><span class=\"line\">        System.out.println(m);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历-【keySet】</span></span><br><span class=\"line\">\t    Set&lt;String&gt; keyset = m.keySet();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String k : keyset) &#123;</span><br><span class=\"line\">            System.out.println(k+<span class=\"string\">&quot;---&quot;</span>m.get(k));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历-【entrySet】</span></span><br><span class=\"line\">\t\tSet&lt;Map.Entry&lt;String,String&gt;&gt;  entries = m.entrySet();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Map.Entry&lt;String,String&gt; item: entries ) &#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            System.out.println(item.getKey()+<span class=\"string\">&quot;---&quot;</span>+item.getValue());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"9-4-1-HashMap\"><a href=\"#9-4-1-HashMap\" class=\"headerlink\" title=\"9.4.1 HashMap\"></a>9.4.1 HashMap</h4><p>默认容量：16。</p>\n<p>75%时，开始扩容。</p>\n<p>数组长度&gt;8 且 链表长度&gt;64时，使用红黑树。</p>\n<p><code>为实现每一项的键和值都不一样，需要重写 hashcode()、equals() 【可使用IED的快捷键】</code></p>\n<p>HashMap源码分析-小结：</p>\n<blockquote>\n<ul>\n<li>  HashMap 刚创建时，table为null【为节省空间】，当添加第一个元素时，table的容量为16。</li>\n<li>  元素个数大于阈值（容量的75%)时，会进行扩容为原来的2倍，目的是减少需要调整的元素个数。</li>\n<li>  JDK1.8 ，当每个链表长度 大于8，元素个数 大于等于64时，调整为红黑树，目的是提高元素的效率。</li>\n<li>  JDK1.8 ，当每个链表长度 小于6时，使用链表。</li>\n<li>  JDK1.8以前，使用头插法；JDK1.8以后，使用尾插法。</li>\n</ul>\n</blockquote>\n<p>案例：</p>\n<p>统计字符串中每个字符的出现次数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        String s = sc.nextLine();</span><br><span class=\"line\"></span><br><span class=\"line\">        HashMap&lt;Character,Integer&gt; hm = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] arr = s.toCharArray();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">char</span> item: arr) &#123;</span><br><span class=\"line\"><span class=\"comment\">// hashmap中如果有该字符，则更新value</span></span><br><span class=\"line\"><span class=\"comment\">// 没有该字符，则直接插入当前字符的键值对            </span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(hm.containsKey(item))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> t = hm.get(item);</span><br><span class=\"line\">                hm.put(item,++t);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                hm.put(item,<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;现在的字符串：&quot;</span>+s);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;现在的HashMap：&quot;</span>+hm);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n<h4 id=\"9-4-2-TreeMap\"><a href=\"#9-4-2-TreeMap\" class=\"headerlink\" title=\"9.4.2 TreeMap\"></a>9.4.2 TreeMap</h4><p>存储：红黑树</p>\n<p>对 key 自动排序</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t注意：参数类Student 必须 implents Comparable接口</span></span><br><span class=\"line\"><span class=\"comment\">*\t</span></span><br><span class=\"line\"><span class=\"comment\">*     put()</span></span><br><span class=\"line\"><span class=\"comment\">*\t  remove()</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">遍历：</span></span><br><span class=\"line\"><span class=\"comment\">\t1. keySet();</span></span><br><span class=\"line\"><span class=\"comment\">\t2. Entry</span></span><br><span class=\"line\"><span class=\"comment\">*/</span>     </span><br><span class=\"line\"></span><br><span class=\"line\">\t\tStudent s1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张1&quot;</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">        Student s2 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张2&quot;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">        Student s3 = <span class=\"keyword\">new</span> Student(<span class=\"string\">&quot;张3&quot;</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        TreeMap&lt;Student, String&gt; tm = <span class=\"keyword\">new</span> TreeMap&lt;&gt;();</span><br><span class=\"line\">        tm.put(s1, <span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">        tm.put(s2, <span class=\"string\">&quot;2&quot;</span>);</span><br><span class=\"line\">        tm.put(s3, <span class=\"string\">&quot;3&quot;</span>);</span><br><span class=\"line\">        System.out.println(tm);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历-1</span></span><br><span class=\"line\">        Set&lt;Student&gt; set = tm.keySet();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Student k:set ) &#123;</span><br><span class=\"line\">            System.out.println(k+<span class=\"string\">&quot;---&quot;</span>+tm.get(k));            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历-2</span></span><br><span class=\"line\"></span><br><span class=\"line\">  \t\tMap.Entry&lt;Student,String&gt;&gt; entries = tm.entrySet();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Map.Entry&lt;Student,String&gt; item: entries)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            System.out.println(item.getKey()+<span class=\"string\">&quot;---&quot;</span>+item.getValue());</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"9-5-Collections-工具类：\"><a href=\"#9-5-Collections-工具类：\" class=\"headerlink\" title=\"9.5 Collections 工具类：\"></a>9.5 Collections 工具类：</h3><p><strong>方法</strong>：</p>\n<ul>\n<li>  <code>public static void reverse(List&lt;?&gt; list)</code>//反转集合中元素的顺序</li>\n<li>  <code>public static void shuffle(List&lt;?&gt; list)</code>//随机重置集合元素的顺序</li>\n<li>  <code>public static void sort(List&lt;T&gt; list)</code>//升序排序（元素类型必须实现Comparable接口）</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      \t</span><br><span class=\"line\">\t\tArrayList&lt;Integer&gt; arr = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        arr.add(<span class=\"number\">10</span>);</span><br><span class=\"line\">        arr.add(<span class=\"number\">20</span>);</span><br><span class=\"line\">        arr.add(<span class=\"number\">30</span>);</span><br><span class=\"line\">        arr.add(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(arr);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 打乱顺序</span></span><br><span class=\"line\">        Collections.shuffle(arr);        </span><br><span class=\"line\">        System.out.println(arr);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//排序</span></span><br><span class=\"line\">    \tCollections.sort(arr);</span><br><span class=\"line\">        System.out.println(arr);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 二分查找</span></span><br><span class=\"line\">        System.out.println( Collections.binarySearch(arr,<span class=\"number\">20</span>) );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//反转</span></span><br><span class=\"line\">    \tCollections.reverse(arr);</span><br><span class=\"line\">        System.out.println(arr);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h2 id=\"10-多线程\"><a href=\"#10-多线程\" class=\"headerlink\" title=\"10. 多线程\"></a>10. 多线程</h2><ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1V4411p7EF\">狂神说Java多线程详解</a></li>\n<li>  <a href=\"https://www.bilibili.com/video/BV1cb4y1X7kz?p=115\">赵姗姗-b站-多线程</a></li>\n<li>  <a href=\"https://www.cnblogs.com/13roky/p/14707360.html#1-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\">Java多线程详解</a></li>\n</ul>\n<ol>\n<li>  并发 与 并行：</li>\n</ol>\n<blockquote>\n<ul>\n<li><p>  并发：在一段<strong>时间段</strong>内执行多个程序</p>\n</li>\n<li><p>  并行：在一个<strong>时间点</strong>执行多个程序</p>\n</li>\n</ul>\n</blockquote>\n<ol start=\"2\">\n<li>  进程 和 线程 ：</li>\n</ol>\n<blockquote>\n<p>  进程：1个正在运行的程序【资源分配的基本单位】<br>  线程：1个进程通常由多个线程组成（最少有1个main线程)【资源调度的基本单位】</p>\n<p>  <strong>多线程的好处</strong> ：效率高，多个线程之间互不影响</p>\n</blockquote>\n<ol start=\"3\">\n<li>  线程的调度：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  分时调度：所有线程轮流使用CPU</li>\n<li>  抢占调度：让<code>优先级</code>高的线程先使用CPU，如果优先级一样，则随机选一个【<code>Java使用: 抢占调度</code>】</li>\n</ul>\n</blockquote>\n<ol start=\"4\">\n<li> 主线程：</li>\n</ol>\n<blockquote>\n<ul>\n<li>  主线程：执行 main 方法的线程</li>\n<li>  单线程程序：java默认情况只有1个线程=》main线程</li>\n<li>  JVM 的 main方法进栈 并 执行main 方法 =》产生1条进栈的路（main线程）</li>\n</ul>\n</blockquote>\n<ol start=\"5\">\n<li> 最常见的线程操作：</li>\n</ol>\n<blockquote>\n<ul>\n<li><p>  设置线程名：setName( )</p>\n</li>\n<li><p>  获取线程名：getName( )</p>\n</li>\n<li><p>  获取当前线程：Thread.currentThread( )</p>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"10-1-多线程的实现：\"><a href=\"#10-1-多线程的实现：\" class=\"headerlink\" title=\"10.1 多线程的实现：\"></a>10.1 多线程的实现：</h3><h4 id=\"10-1-1-方式1【继承Thread类-重点】\"><a href=\"#10-1-1-方式1【继承Thread类-重点】\" class=\"headerlink\" title=\"10.1.1 方式1【继承Thread类-重点】\"></a>10.1.1 方式1【继承Thread类-重点】</h4><p>步骤：</p>\n<ul>\n<li>  <code>继承Thread类</code>【java.lang.Thread类】形成子类。</li>\n<li>  override <code>重写 </code>Thread类的 <code>run 方法</code>【线程要干什么】。</li>\n<li>  main中 <code>new 1个 线程对象</code>。</li>\n<li>  <code>线程对象.start( ) </code>【启动线程】，JVM会自动调用 run( )来执行任务。</li>\n<li>  最终：main线程 和 新的线程 并发执行。</li>\n</ul>\n<p><strong>注意：</strong></p>\n<ul>\n<li>  多次重复启动1个 线程是非法的。【尤其是在 该线程已经 执行完毕后】</li>\n<li>  java 是执行线程是<code> 抢占式</code>，线程的<code>优先级越高</code>，越<code>优先执行</code>。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadsDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. 继承Thread类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 重写 run()方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">1000</span>; i++) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;多线程执行-&quot;</span>+i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3. main 函数中 new 线程对象，调用 start()</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Thread th1 = <span class=\"keyword\">new</span> TestThread();</span><br><span class=\"line\"></span><br><span class=\"line\">        th1.start();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;<span class=\"number\">1000</span> ; i++) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;main线程执行~~&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"案例1-多线程下载图片：\"><a href=\"#案例1-多线程下载图片：\" class=\"headerlink\" title=\"案例1-多线程下载图片：\"></a>案例1-多线程下载图片：</h5><ul>\n<li><p>前提：</p>\n<ul>\n<li>  下载、导入jar包： commons-io.jar包 </li>\n</ul>\n<blockquote>\n<p>  导入Jar包的步骤：</p>\n<ol>\n<li> 新建 lib文件夹</li>\n<li> 将 jar包 托入lib文件夹</li>\n<li> 打开 file -&gt; project Structure -&gt; lib -&gt; 点击 “+” -&gt; 应用</li>\n</ol>\n</blockquote>\n<ul>\n<li>导入该案例所需的工具类：<ul>\n<li>   <code>import org.apache.commons.io.FileUtils;</code></li>\n<li>  <code>import java.net.URL;</code>  </li>\n<li>   <code>import java.io.File;</code></li>\n<li>  <code>import java.io.IOException;</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t1. 类： </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\tWebDownLoader类，TestThread2类</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下载器类</span></span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebDownLoader</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">download</span><span class=\"params\">(String url,String name)</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    FileUtils.copyURLToFile(<span class=\"keyword\">new</span> URL(url),<span class=\"keyword\">new</span> File(name));</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;IO异常-在 download 方法中&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多线程-下载图片</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread2</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestThread2</span><span class=\"params\">(String url, String name)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.url = url;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 重写线程类的 run方法        </span></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            WebDownLoader wd = <span class=\"keyword\">new</span> WebDownLoader();</span><br><span class=\"line\">            wd.download(<span class=\"keyword\">this</span>.url,<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;下载的文件名为：&quot;</span>+<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// main方法</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            String base_url=<span class=\"string\">&quot;https://t7.baidu.com/it/u=&quot;</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">            TestThread2 downTh1 = <span class=\"keyword\">new</span> TestThread2(base_url+<span class=\"string\">&quot;1595072465,3644073269&amp;fm=193&amp;f=GIF&quot;</span>,<span class=\"string\">&quot;图片-1.jpg&quot;</span>);</span><br><span class=\"line\">            TestThread2 downTh2 = <span class=\"keyword\">new</span> TestThread2(base_url+<span class=\"string\">&quot;825057118,3516313570&amp;fm=193&amp;f=GIF&quot;</span>,<span class=\"string\">&quot;图片-2.jpg&quot;</span>);</span><br><span class=\"line\">            TestThread2 downTh3 = <span class=\"keyword\">new</span> TestThread2(base_url+<span class=\"string\">&quot;3435942975,1552946865&amp;fm=193&amp;f=GIF&quot;</span>,<span class=\"string\">&quot;图片-3.jpg&quot;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 开启多线程，进行下载            </span></span><br><span class=\"line\">            downTh1.start();</span><br><span class=\"line\">            downTh2.start();</span><br><span class=\"line\">            downTh3.start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n<h4 id=\"10-1-2-方式2【实现Runnable接口-重点-推荐】\"><a href=\"#10-1-2-方式2【实现Runnable接口-重点-推荐】\" class=\"headerlink\" title=\"10.1.2 方式2【实现Runnable接口-重点-推荐】\"></a>10.1.2 方式2【实现Runnable接口-重点-推荐】</h4><p><code>推荐使用</code></p>\n<p>步骤：</p>\n<ul>\n<li>  实现Runnable接口，重写run( )方法</li>\n<li>  在main方法中，new 1个 实现类【<code>实现类 就是多线程要抢的 资源</code>】</li>\n<li>  将 实现类的对象 作为参数，传入 new Thread( ) 构造方法中</li>\n<li>  线程类.start( )来自动执行run( )</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadsDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 重写 实现类的 run方法</span></span><br><span class=\"line\">   \t <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread3</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;我是多线程&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main函数</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">              <span class=\"comment\">// 创建实现类的对象</span></span><br><span class=\"line\">                TestThread3 tt3 = <span class=\"keyword\">new</span> TestThread3();</span><br><span class=\"line\">              <span class=\"comment\">// 将实现类的对象 传入 Thread类的构造方法中</span></span><br><span class=\"line\">                Thread th1 = <span class=\"keyword\">new</span> Thread(tt3);</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"comment\">// 开启线程  </span></span><br><span class=\"line\">                th1.start();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"案例2-下载图片\"><a href=\"#案例2-下载图片\" class=\"headerlink\" title=\"案例2-下载图片\"></a>案例2-下载图片</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadsDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下载器</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebDownLoader2</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">download</span><span class=\"params\">(String url,String name)</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                FileUtils.copyURLToFile(<span class=\"keyword\">new</span> URL(url),<span class=\"keyword\">new</span> File(name));</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;download方法-&gt; IO异常&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多线程</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread4</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestThread4</span><span class=\"params\">(String url, String name)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.url = url;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            WebDownLoader2 wd2 = <span class=\"keyword\">new</span> WebDownLoader2();</span><br><span class=\"line\">            wd2.download(<span class=\"keyword\">this</span>.url,<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;当前正在下载：&quot;</span>+<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            String url_1 = <span class=\"string\">&quot;https://t7.baidu.com/it/u=3779234486,1094031034&amp;fm=193&amp;f=GIF&quot;</span>;</span><br><span class=\"line\">            String url_2 = <span class=\"string\">&quot;https://t7.baidu.com/it/u=3908717,2002330211&amp;fm=193&amp;f=GIF&quot;</span>;</span><br><span class=\"line\">            String url_3 =<span class=\"string\">&quot;https://t7.baidu.com/it/u=3785402047,1898752523&amp;fm=193&amp;f=GIF&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            TestThread4 tt1 = <span class=\"keyword\">new</span> TestThread4(url_1,<span class=\"string\">&quot;1.jpg&quot;</span>);</span><br><span class=\"line\">            TestThread4 tt2 = <span class=\"keyword\">new</span> TestThread4(url_2,<span class=\"string\">&quot;2.jpg&quot;</span>);</span><br><span class=\"line\">            TestThread4 tt3 = <span class=\"keyword\">new</span> TestThread4(url_3,<span class=\"string\">&quot;3.jpg&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(tt1).start();</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(tt2).start();</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(tt3).start();</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"案例3-模拟抢票：\"><a href=\"#案例3-模拟抢票：\" class=\"headerlink\" title=\"案例3-模拟抢票：\"></a>案例3-模拟抢票：</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadsDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多线程操作同一对象时，出现线程不安全，数据紊乱【重复 抢到 同一张票】</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 票-类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread5</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> ticketNum=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"comment\">// 重写run方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ticketNum&lt;=<span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName()+<span class=\"string\">&quot; =&gt; 拿到了第&quot;</span>+(ticketNum--)+<span class=\"string\">&quot;张票&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">200</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">// main方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        TestThread5 t1 = <span class=\"keyword\">new</span> TestThread5();</span><br><span class=\"line\">        TestThread5 t2 = <span class=\"keyword\">new</span> TestThread5();</span><br><span class=\"line\">        TestThread5 t3 = <span class=\"keyword\">new</span> TestThread5();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(t1,<span class=\"string\">&quot;小虹&quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(t2,<span class=\"string\">&quot;小白&quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(t3,<span class=\"string\">&quot;小黄&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"案例4-龟兔赛跑：\"><a href=\"#案例4-龟兔赛跑：\" class=\"headerlink\" title=\"案例4-龟兔赛跑：\"></a>案例4-龟兔赛跑：</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadsDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多线程案例：龟兔赛跑</span></span><br><span class=\"line\"><span class=\"comment\">// &quot;实现类&quot; =》跑道 =》资源</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RaceDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Race race = <span class=\"keyword\">new</span> Race();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(race,<span class=\"string\">&quot;兔子&quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(race,<span class=\"string\">&quot;乌龟&quot;</span>).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Race</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String winner;</span><br><span class=\"line\"><span class=\"comment\">// 重写run方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;=<span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Thread.currentThread().getName().equals(<span class=\"string\">&quot;兔子&quot;</span>) &amp;&amp; i%<span class=\"number\">10</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    Thread.sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">boolean</span> flag = isFinished(i);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(flag)<span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName()+<span class=\"string\">&quot;-&gt; 跑了&quot;</span>+i+<span class=\"string\">&quot;步&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            isFinished(i);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">// 判断是否完成</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isFinished</span><span class=\"params\">(<span class=\"keyword\">int</span> steps)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(winner != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(steps &gt;= <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">                winner = Thread.currentThread().getName();</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;胜利者：&quot;</span>+winner);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"10-1-3-方式3【实现Callable接口-了解】\"><a href=\"#10-1-3-方式3【实现Callable接口-了解】\" class=\"headerlink\" title=\"10.1.3 方式3【实现Callable接口-了解】\"></a>10.1.3 方式3【实现Callable接口-了解】</h4><p>好处：</p>\n<blockquote>\n<ul>\n<li><p>  可以 <code>抛出异常</code></p>\n</li>\n<li><p>  可以 有<code>返回值</code></p>\n</li>\n</ul>\n</blockquote>\n<p>步骤：</p>\n<ul>\n<li>  实现 Callcable接口</li>\n<li>  重写 call( )方法</li>\n<li>  创建目标对象：</li>\n<li>  创建执行服务：<code>  ExecutorService es = Executors.newFixedThreadPool(2);</code></li>\n<li>  提交执行：  <code>Future&lt;Boolean&gt; res1 = es.submit(tc1);</code></li>\n<li>  获取结果：<code> boolean r1 = res1.get();</code></li>\n<li>  关闭服务：<code>  es.shutdownNow();</code></li>\n</ul>\n<h5 id=\"案例5：下载图片\"><a href=\"#案例5：下载图片\" class=\"headerlink\" title=\"案例5：下载图片\"></a>案例5：下载图片</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadsDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下载器类</span></span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">webImageDownLoader</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">download</span><span class=\"params\">(String url,String name)</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    FileUtils.copyURLToFile(<span class=\"keyword\">new</span> URL(url),<span class=\"keyword\">new</span> File(name));</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;下载的文件名为 &quot;</span>+name);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestCallable</span> <span class=\"keyword\">implements</span> <span class=\"title\">Callable</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">            <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestCallable</span><span class=\"params\">(String url, String name)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.url = url;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"><span class=\"comment\">// 重写call()</span></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Boolean <span class=\"title\">call</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                webImageDownLoader wid = <span class=\"keyword\">new</span> webImageDownLoader();</span><br><span class=\"line\">                wid.download(<span class=\"keyword\">this</span>.url,<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main函数</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">                TestCallable tc1 = <span class=\"keyword\">new</span> TestCallable(<span class=\"string\">&quot;https://t7.baidu.com/it/u=1595072465,3644073269&amp;fm=193&amp;f=GIF&quot;</span>,<span class=\"string\">&quot;图片-1.jpg&quot;</span>);</span><br><span class=\"line\">                TestCallable tc2 = <span class=\"keyword\">new</span> TestCallable(<span class=\"string\">&quot;https://t7.baidu.com/it/u=825057118,3516313570&amp;fm=193&amp;f=GIF&quot;</span>,<span class=\"string\">&quot;图片-2.jpg&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 创建执行服务</span></span><br><span class=\"line\">                ExecutorService es = Executors.newFixedThreadPool(<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 提交执行操作</span></span><br><span class=\"line\">                Future&lt;Boolean&gt; res1 = es.submit(tc1);</span><br><span class=\"line\">                Future&lt;Boolean&gt; res2 = es.submit(tc2);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 获取执行结果</span></span><br><span class=\"line\">                    <span class=\"keyword\">boolean</span> r1 = res1.get();</span><br><span class=\"line\">                    <span class=\"keyword\">boolean</span> r2 = res1.get();</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (ExecutionException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 关闭执行服务</span></span><br><span class=\"line\">                es.shutdownNow();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"10-2-静态代理\"><a href=\"#10-2-静态代理\" class=\"headerlink\" title=\"10.2 静态代理\"></a>10.2 静态代理</h3><p>多线程的原理 就利用了 静态代理。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t静态代理：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1.真实对象、代理对象，都要实现 同一个方法</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 好处：代理对象可以做很多招生对象做不了的事。</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StaticProxy</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        WeddingCompany weddingCompany = <span class=\"keyword\">new</span> WeddingCompany(<span class=\"keyword\">new</span> You());</span><br><span class=\"line\">        weddingCompany.HappyMarry();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接口</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Marry</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">HappyMarry</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结婚者【代理对象】</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">You</span> <span class=\"keyword\">implements</span> <span class=\"title\">Marry</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">HappyMarry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;我结婚了，你哼开心~~&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 婚庆公司【真实对象】</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WeddingCompany</span> <span class=\"keyword\">implements</span> <span class=\"title\">Marry</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Marry target;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">WeddingCompany</span><span class=\"params\">(Marry target)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.target = target;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">before</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;布置&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">after</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;收钱&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">// 重写接口的方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">HappyMarry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.before();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.target.HappyMarry();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.after();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"10-3-Lambda-表达式：\"><a href=\"#10-3-Lambda-表达式：\" class=\"headerlink\" title=\"10.3 Lambda 表达式：\"></a>10.3 Lambda 表达式：</h3><p>Lambda表达式，，是函数式编程，它可以作为<strong>匿名内部类</strong>的替代品。</p>\n<p>函数式接口：</p>\n<blockquote>\n<p>  一个接口，如果<code>只有1个抽象方法</code>，则为 <code>函数式接口</code> 。【接口只有1个方法】</p>\n</blockquote>\n<p>类似：<code>        new Thread( ()-&gt; System.out.println(&quot;多线程的学习&quot;)).start();</code></p>\n<p>格式：【函数式接口 =》需要保证：接口中只有1个抽象方法】</p>\n<ul>\n<li>  <code>(参数)-&gt; &#123;表达式1;表达式2;&#125;;</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">myInt</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">Eat</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//...其他内容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>步骤：</p>\n<blockquote>\n<ul>\n<li>  定义1个只有1个方法的接口</li>\n<li>  使用lambda实现方法并创建对象</li>\n<li>  调用方法</li>\n</ul>\n</blockquote>\n<p>函数式接口 =》作为方法的<code>参数 和 返回值类型</code>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">(myInt a)</span></span>&#123;</span><br><span class=\"line\">        a.Eat();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">       <span class=\"comment\">// 方式1：传入接口的实现类  </span></span><br><span class=\"line\">          <span class=\"keyword\">this</span>.show(<span class=\"keyword\">new</span> myIntImpCls());</span><br><span class=\"line\">         </span><br><span class=\"line\">       <span class=\"comment\">// 方式2：传入接口  </span></span><br><span class=\"line\">         <span class=\"keyword\">this</span>.show(<span class=\"keyword\">new</span> myIntInmp()&#123;</span><br><span class=\"line\">             <span class=\"comment\">// 重写接口的方法</span></span><br><span class=\"line\">         &#125;);</span><br><span class=\"line\">         </span><br><span class=\"line\">      <span class=\"comment\">// 方式3：传入Lambda </span></span><br><span class=\"line\">         <span class=\"keyword\">this</span>.show(()-&gt;&#123;System.out.println(<span class=\"string\">&quot;你好&quot;</span>);&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"案例6：\"><a href=\"#案例6：\" class=\"headerlink\" title=\"案例6：\"></a>案例6：</h5><ul>\n<li>  优化前</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Ilike</span></span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span></span>; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Like</span> <span class=\"keyword\">implements</span> <span class=\"title\">Ilike</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;我喜欢lambda &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">// 优化前        </span></span><br><span class=\"line\">       Ilike a = <span class=\"keyword\">new</span> Like();</span><br><span class=\"line\">       a.lambda();</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>  优化后</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Ilike</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span></span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Like</span> <span class=\"keyword\">implements</span> <span class=\"title\">Ilike</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;我喜欢lambda &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123; </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 普通 </span></span><br><span class=\"line\">           Ilike a = <span class=\"keyword\">new</span> Like();</span><br><span class=\"line\">           a.lambda();</span><br><span class=\"line\">       </span><br><span class=\"line\"><span class=\"comment\">//静态内部类</span></span><br><span class=\"line\">           Like2 b = <span class=\"keyword\">new</span> Like2();</span><br><span class=\"line\">           b.lambda();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//局部内部类</span></span><br><span class=\"line\">            <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Like3</span> <span class=\"keyword\">implements</span> <span class=\"title\">Ilike</span></span>&#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;我喜欢lambda &quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;       </span><br><span class=\"line\">            Like3 c = <span class=\"keyword\">new</span> Like3();</span><br><span class=\"line\">            c.lambda();</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 匿名内部类</span></span><br><span class=\"line\">            Ilike d = <span class=\"keyword\">new</span> Ilike() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;        </span><br><span class=\"line\">            d.lambda();</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// lambda</span></span><br><span class=\"line\">            Ilike e = ( )-&gt;&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;I like lambda&quot;</span>);</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            e.lambda();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"lambda表达式的简化：\"><a href=\"#lambda表达式的简化：\" class=\"headerlink\" title=\"lambda表达式的简化：\"></a>lambda表达式的简化：</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> LandaDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Ilike</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 普通 lambda</span></span><br><span class=\"line\">       Ilike a = (<span class=\"keyword\">int</span> i)-&gt;&#123;</span><br><span class=\"line\">           System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\">           System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\">       &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">       a.lambda(<span class=\"number\">123</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 简化参数 lambda</span></span><br><span class=\"line\">        Ilike b = (i)-&gt;&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        b.lambda(<span class=\"number\">123</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 简化括号 lambda【多个参数必须有小括号】</span></span><br><span class=\"line\">        Ilike c = i-&gt;&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        c.lambda(<span class=\"number\">123</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 简化括号 lambda【只适合一行代码的情况下使用】</span></span><br><span class=\"line\">        Ilike d = i-&gt;System.out.println(<span class=\"string\">&quot;lambda: &quot;</span>+i);</span><br><span class=\"line\"></span><br><span class=\"line\">        d.lambda(<span class=\"number\">123</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h3 id=\"10-4-线程的生命周期：\"><a href=\"#10-4-线程的生命周期：\" class=\"headerlink\" title=\"10.4 线程的生命周期：\"></a>10.4 线程的生命周期：</h3><p><code>java.lang.Thread.State</code></p>\n<ul>\n<li>  新生：new Thread( )</li>\n<li>  就绪：线程调用 start( ) 后进入 该状态。【还没 轮到 该线程 使用cpu】</li>\n<li>  运行：线程自动调用run(  )后进入 该状态</li>\n<li>  阻塞：等待</li>\n<li>  消亡：程序正常结束、出现异常、手动 调用已被废弃不用的stop( )</li>\n</ul>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/01/java-thread.jpg\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gvPy6S.png\" alt=\"多线程-状态\"></p>\n<h4 id=\"10-4-1-线程常用方法：\"><a href=\"#10-4-1-线程常用方法：\" class=\"headerlink\" title=\"10.4.1 线程常用方法：\"></a>10.4.1 线程常用方法：</h4><blockquote>\n<ul>\n<li>  start( )：开启线程，自动调用线程中的 run( )</li>\n<li>  run( )：继承自Runnable接口的方法，必须在线程中 覆盖重写。</li>\n<li>  join( )：先start( )，再join( )。一旦 join( )，优先执行完后，才轮到别的线程执行。 【插队、阻塞】</li>\n<li>  currentThread( )：获取当前正在运行的线程。</li>\n<li>  getName( )：获取线程名</li>\n<li>  setName( 线程名 )：设置线程名</li>\n<li>  setPriority( 优先级 )：设置线程的 优先级，传入1~10，默认5。值越大，越可能被调用。</li>\n<li>  sleep(  毫秒数 )：阻塞</li>\n<li>  setDaemon( true )：将子线程 设置为 主线程的伴随线程。主线程停止时，子线程继续执行一段时间后也停止。【先设置，再start( )】</li>\n<li>  wait(毫秒数 )：阻塞，【老板等顾客】，毫秒数过后仍然没有线程调用锁对象的notify( )，则自动唤醒。</li>\n<li>  notify( )：唤醒，【包子做好给顾客】</li>\n</ul>\n</blockquote>\n<p>几个方法的使用顺序：</p>\n<blockquote>\n<ul>\n<li>  setDaemon( true )</li>\n<li>  start( )</li>\n<li>  join( )</li>\n</ul>\n</blockquote>\n<h4 id=\"10-4-2-线程优先级：\"><a href=\"#10-4-2-线程优先级：\" class=\"headerlink\" title=\"10.4.2 线程优先级：\"></a>10.4.2 线程优先级：</h4><blockquote>\n<ul>\n<li>  优先级：1~10，默认优先级为 5</li>\n<li>  优先级 相同时，按时间片，先到先得</li>\n<li>  优先级越高，线程 被CPU先调用 的机率更高</li>\n<li>  join( )可以无视优先级，直接插队【先start( )，再join( )】</li>\n</ul>\n</blockquote>\n<h3 id=\"10-5-线程的同步：\"><a href=\"#10-5-线程的同步：\" class=\"headerlink\" title=\"10.5 线程的同步：\"></a>10.5 线程的同步：</h3><ul>\n<li>  多线程 产生的问题：</li>\n</ul>\n<blockquote>\n<p>  多个线程抢夺到同一个资源</p>\n<p>  如：买票时，买到同一张票。</p>\n</blockquote>\n<ul>\n<li>  解决多线程安全问题：</li>\n</ul>\n<blockquote>\n<p>  加 “锁”【同步、同步监视器】</p>\n</blockquote>\n<p>三种方式：</p>\n<h4 id=\"10-5-1-同步代码块\"><a href=\"#10-5-1-同步代码块\" class=\"headerlink\" title=\"10.5.1 同步代码块\"></a>10.5.1 同步代码块</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 线程类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 同步代码块-形式1           </span></span><br><span class=\"line\">            <span class=\"keyword\">synchronized</span> (<span class=\"keyword\">this</span>)&#123;\t</span><br><span class=\"line\">                <span class=\"comment\">// 这里的this就是要锁住的对象，锁 多了会降低效率。</span></span><br><span class=\"line\">                <span class=\"comment\">// 如果是实现Runnable接口的线程，由于只需new一个线程对象，并将该对象传入多个Thread(),</span></span><br><span class=\"line\">                <span class=\"comment\">// \t\t因此,锁住的是同一个对象。</span></span><br><span class=\"line\">                <span class=\"comment\">// 但如果是继承Thread类的多线程，由于new了多个线程对象，因此锁住的不是同一个对象，</span></span><br><span class=\"line\">                <span class=\"comment\">// \t\t因此,锁没有真的生效。</span></span><br><span class=\"line\">                <span class=\"comment\">// 综上，锁对象 必须要是同一个对象。</span></span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 同步代码块-形式2 </span></span><br><span class=\"line\">            <span class=\"keyword\">static</span> Object obj = <span class=\"keyword\">new</span> Object();</span><br><span class=\"line\">            </span><br><span class=\"line\">             <span class=\"keyword\">synchronized</span> (obj)&#123;              </span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">// 同步代码块-形式3 【推荐】</span></span><br><span class=\"line\">           <span class=\"comment\">// 将 线程类的字节码 作为 锁对象。</span></span><br><span class=\"line\">             <span class=\"keyword\">synchronized</span> (TestThread.class)&#123;              </span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName());</span><br><span class=\"line\">            &#125;            </span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>小结：</p>\n<blockquote>\n<ul>\n<li>  语法：<code>synchronized( 锁对象)&#123; 语句 &#125;</code></li>\n<li>  锁对象【同步监视器】 必须是 <code>引用类型</code>，且最好使用<code>final 修饰</code>。</li>\n<li>  不要 将String、包装类Interger 作为锁</li>\n<li>  在同步代码块中，<code>不应该 改变锁对象</code>的引用。</li>\n<li>  可以使用一个<code>static类型的无确切的含义的对象</code>来充当 <code>锁对象</code>【同步监视器】</li>\n</ul>\n</blockquote>\n<p>执行过程：</p>\n<blockquote>\n<ul>\n<li>  线程A来到同步代码块，发现“ 锁”处于open状态，于是进入，并close“锁”</li>\n<li>  线程B来到同步代码块，CPU资源切换到线程B，但B发现 “锁” close，于是阻塞。</li>\n<li>线程A 继续接管CPU资源，执行同步代码块的内容，执行完毕后，open“锁”</li>\n</ul>\n<p>  <strong>小结：</strong></p>\n<ul>\n<li>  同步代码块中，可以切换CPU资源，但不能执行同步代码块的内容，因为“锁”，仍处于close状态。</li>\n</ul>\n</blockquote>\n<h4 id=\"10-5-2-同步方法\"><a href=\"#10-5-2-同步方法\" class=\"headerlink\" title=\"10.5.2 同步方法\"></a>10.5.2 同步方法</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 同步方法  </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">sayWhoAmI</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName());</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"><span class=\"comment\">// 调用            </span></span><br><span class=\"line\">            sayWhoAmI();</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"10-5-3-Lock锁\"><a href=\"#10-5-3-Lock锁\" class=\"headerlink\" title=\"10.5.3 Lock锁\"></a>10.5.3 Lock锁</h4><p><code>import java.util.concurrent.locks.Lock;</code></p>\n<ul>\n<li>  在类的成员位置：Lock lock1 = new ReentrantLock( )</li>\n<li>  在线程问题的语句前【try-catch内】：lock1.lock( )</li>\n<li>  语句块</li>\n<li>  在线程问题的语句后【finally语句块中】：lock1.unlock( )</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 锁对象    </span></span><br><span class=\"line\">    Lock lock1 = <span class=\"keyword\">new</span> ReentrantLock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"><span class=\"comment\">// 加锁</span></span><br><span class=\"line\">            lock1.lock();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">// 处理                </span></span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName());</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">finally</span> &#123;   </span><br><span class=\"line\"><span class=\"comment\">// 解锁                </span></span><br><span class=\"line\">                lock1.unlock();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>小结：</p>\n<blockquote>\n<p>  Lock的优点：</p>\n<ul>\n<li>  Lock效率更高</li>\n<li>  可由用户控制，而之前的synchronzied由JVM控制</li>\n<li>  扩展性好，Lock是一个接口，有多个实现类</li>\n</ul>\n<p>  使用优先级：</p>\n<ul>\n<li>  Lock【推荐】 -&gt; 同步代码块 -&gt; 同步方法</li>\n</ul>\n</blockquote>\n<p>线程安全性问题：</p>\n<blockquote>\n<p>  可能导致<code>死锁</code> =》 <code>尽可能不</code>使用 同步资源的<code>嵌套</code></p>\n</blockquote>\n<h3 id=\"10-6-线程通信问题：\"><a href=\"#10-6-线程通信问题：\" class=\"headerlink\" title=\"10.6 线程通信问题：\"></a>10.6 线程通信问题：</h3><h4 id=\"10-6-1生产者与消费者问题\"><a href=\"#10-6-1生产者与消费者问题\" class=\"headerlink\" title=\"10.6.1生产者与消费者问题\"></a>10.6.1生产者与消费者问题</h4><p>经典问题：</p>\n<ul>\n<li>  <a href=\"https://www.bilibili.com/video/BV1op4y1S7KK?from=search&seid=13986664181595566652\">生产者与消费者问题-视频1：</a></li>\n<li>  <a href=\"https://www.bilibili.com/video/BV1Lb411z71t/?spm_id_from=trigger_reload\">生产者与消费者问题-视频2</a></li>\n</ul>\n<blockquote>\n<p>  生产者：生产商品，放入仓库</p>\n<p>  消费者：消费商品，取出仓库 </p>\n<p>  以上两个线程共享资源【仓库】，但每个线程 执行的操作不同，需要线程之间的通信，来同步仓库中的商品数。</p>\n</blockquote>\n<p>代码分析：</p>\n<ul>\n<li>  生产者：</li>\n<li>  消费者：</li>\n<li>  商品：品牌、名字</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/05/24/gx9XeH.png\" alt=\"多线程-生产者和消费者\"></p>\n<h4 id=\"10-6-2-解决线程通信问题：\"><a href=\"#10-6-2-解决线程通信问题：\" class=\"headerlink\" title=\"10.6.2 解决线程通信问题：\"></a>10.6.2 解决线程通信问题：</h4><p>例子：</p>\n<blockquote>\n<p>  生产者：包子铺老板。</p>\n<p>  消费者：顾客</p>\n<p>  顾客：告诉老板 购买的包子数，顾客调用<code>wait( )</code>，放弃CPU执行，进入<code>waiting无限等待</code>状态</p>\n<p>  老板：花5s做包子，调用<code>notify( )</code>，告知唤醒 顾客来拿包子。</p>\n<p>  <strong>注意：</strong></p>\n<ul>\n<li>  老板、顾客都要使用 <code>同步代码块</code> 包裹。</li>\n<li>  同步代码块的<code>锁对象</code>必须<code>唯一</code>。</li>\n<li>  只有<code>锁对象</code>才能调用<code> wait( )</code>，和<code>notify( )</code>。</li>\n</ul>\n</blockquote>\n<p>综上：</p>\n<ul>\n<li>  吃、做包子【包子和包子铺互斥，因此包子为 锁对象】</li>\n<li>  修改标志</li>\n<li>  唤醒对方</li>\n</ul>\n<ul>\n<li>  同步代码块</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t分别在生产者类、消费者类中使用同步代码块</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            Product p = <span class=\"keyword\">new</span> Product();</span><br><span class=\"line\"></span><br><span class=\"line\">            ProcuderThread pt = <span class=\"keyword\">new</span> ProcuderThread(p);</span><br><span class=\"line\"></span><br><span class=\"line\">            ClientThread ct =<span class=\"keyword\">new</span> ClientThread(p);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(pt).start();</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(ct).start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String brand;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBrand</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> brand;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBrand</span><span class=\"params\">(String brand)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.brand = brand;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Product</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Product</span><span class=\"params\">(String brand, String name)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.brand = brand;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 生产者</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProcuderThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> Product p;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ProcuderThread</span><span class=\"params\">(Product p)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.p = p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;=<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">synchronized</span> (p)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 生产巧克力</span></span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.p.setBrand(<span class=\"string\">&quot;德芙&quot;</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                            Thread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                            e.printStackTrace();</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.p.setName(<span class=\"string\">&quot;巧克力&quot;</span>);</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 生产啤酒</span></span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.p.setBrand(<span class=\"string\">&quot;青岛&quot;</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                            Thread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                            e.printStackTrace();</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.p.setName(<span class=\"string\">&quot;啤酒&quot;</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;生产者生产了：&quot;</span>+<span class=\"keyword\">this</span>.p.getBrand()+<span class=\"string\">&quot;---&gt;&quot;</span></span><br><span class=\"line\">                            +<span class=\"keyword\">this</span>.p.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//消费者</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ClientThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> Product p;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ClientThread</span><span class=\"params\">(Product p)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.p = p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i =<span class=\"number\">1</span>; i &lt;=<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">synchronized</span> (p)&#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;消费者消费了：&quot;</span>+<span class=\"keyword\">this</span>.p.getBrand()+<span class=\"string\">&quot;---&gt;&quot;</span></span><br><span class=\"line\">                            +<span class=\"keyword\">this</span>.p.getName());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<ul>\n<li>  同步方法</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t在产品类中使用同步代码块</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Product p = <span class=\"keyword\">new</span> Product();</span><br><span class=\"line\"></span><br><span class=\"line\">        ProcuderThread pt = <span class=\"keyword\">new</span> ProcuderThread(p);</span><br><span class=\"line\"></span><br><span class=\"line\">        ClientThread ct =<span class=\"keyword\">new</span> ClientThread(p);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(pt).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(ct).start();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String brand;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBrand</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> brand;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBrand</span><span class=\"params\">(String brand)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.brand = brand;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Product</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Product</span><span class=\"params\">(String brand, String name)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.brand = brand;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">setProduct</span><span class=\"params\">(String brand, String name)</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.setBrand(brand);</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.setName(name);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;生产者生产了：&quot;</span>+<span class=\"keyword\">this</span>.getBrand()+<span class=\"string\">&quot;---&gt;&quot;</span></span><br><span class=\"line\">                    +<span class=\"keyword\">this</span>.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">getProduct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;消费者消费了：&quot;</span>+<span class=\"keyword\">this</span>.getBrand()+<span class=\"string\">&quot;---&gt;&quot;</span></span><br><span class=\"line\">                    +<span class=\"keyword\">this</span>.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">// 生产者</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProcuderThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> Product p;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ProcuderThread</span><span class=\"params\">(Product p)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.p = p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;=<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                        p.setProduct(<span class=\"string\">&quot;德芙&quot;</span>,<span class=\"string\">&quot;巧克力&quot;</span>);</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        p.setProduct(<span class=\"string\">&quot;青岛&quot;</span>,<span class=\"string\">&quot;啤酒&quot;</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;生产者生产了：&quot;</span>+<span class=\"keyword\">this</span>.p.getBrand()+<span class=\"string\">&quot;---&gt;&quot;</span></span><br><span class=\"line\">                            +<span class=\"keyword\">this</span>.p.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 消费者</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ClientThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> Product p;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ClientThread</span><span class=\"params\">(Product p)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.p = p;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i =<span class=\"number\">1</span>; i &lt;=<span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                p.getProduct();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>  Lock锁</li>\n</ul>\n<h3 id=\"10-7-线程池：\"><a href=\"#10-7-线程池：\" class=\"headerlink\" title=\"10.7 线程池：\"></a>10.7 线程池：</h3><blockquote>\n<ul>\n<li>  第一次使用时，创建多个线程，存入集合中【集合中的线程可以复用】</li>\n<li>  使用时，取出线程</li>\n<li>  用完后，重写存入线程池</li>\n</ul>\n<p>  JDK1.5 之后，自带线程池，无需 用户 自己使用 集合 创建线程池。</p>\n<ul>\n<li>  <code>java.util.concurrent.Executors;</code> =》生产 线程池 的工厂类</li>\n<li>  <code>ExecutorService newFixedThreadPool( 线程数 );</code> 生成线程池的方法</li>\n<li>  <code>submit( 线程);</code></li>\n<li>  <code>shudown();</code></li>\n</ul>\n<p>  线程池的好处：</p>\n<ul>\n<li>  提高速度</li>\n<li>  降低消耗</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> ThreadPoolDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ExecutorService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Executors;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 线程类</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;这是:&quot;</span>+Thread.currentThread().getName());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建 1个可存放3个线程 的线程池</span></span><br><span class=\"line\">            ExecutorService service = Executors.newFixedThreadPool(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建2个线程，并提交给 线程池</span></span><br><span class=\"line\">            service.submit(<span class=\"keyword\">new</span> TestThread());</span><br><span class=\"line\">            service.submit(<span class=\"keyword\">new</span> TestThread());</span><br><span class=\"line\"></span><br><span class=\"line\">            service.shutdownNow();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"11-网络编程\"><a href=\"#11-网络编程\" class=\"headerlink\" title=\"11. 网络编程\"></a>11. 网络编程</h2><p>整体过程：</p>\n<ul>\n<li>  服务器：启动，监听端口</li>\n<li>  客户端：主动连接 服务器</li>\n</ul>\n<p>Java中专门用于TCP通信的类：</p>\n<ul>\n<li>  客户端：<code>java.net.Socket</code> ，创建对象，发起连接</li>\n<li>  服务器：<code>java.net.ServerSocket</code>，创建对象，开启服务</li>\n</ul>\n<p>在TCP通信中，传输了<code>字节流对象</code>, 该流对象是<code>属于客户端</code>的流，服务器共用客户端的流。</p>\n<p>Socket：</p>\n<blockquote>\n<p>  套接字，是 包含了 IP地址+端口号的网络单位。</p>\n</blockquote>\n<p>Socket的常用方法：</p>\n<blockquote>\n<p>  构造方法：</p>\n<ul>\n<li>  客户端：<code>public Socket(String host目标主机, int port目标端口);</code></li>\n<li>  服务器：<code>public ServerSocket(int port);</code></li>\n</ul>\n<p>  客户端-成员方法：</p>\n<ul>\n<li>  <code>getInputStream();</code>  // 获取输入流</li>\n<li>  <code>getOutputStream();</code> // 获取输出流</li>\n<li>  <code>close()</code>  // 关闭套接字</li>\n</ul>\n<p>  服务器-成员方法：</p>\n<ul>\n<li>  <code>accept()</code> // 获取客户端的Socket</li>\n<li>  <code>getInputStream();</code> // 获取输入流</li>\n<li>  <code>getOutputStream();</code> // 获取输出流</li>\n<li>  <code>close()</code>  // 关闭套接字</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*\t步骤：【客户端】</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 创建客户端Scocket，构造方法中传入IP、端口</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. 获取客户端的输出流 getOutputStream()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. 输出流的 write()来向服务器发送数据</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. 获取客户端的输入流 getInputStream()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t5. 输入流的 read()来读取数据</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t6. 释放资源 close()</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*\t步骤：【服务器】</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 创建服务器Scocket对象，构造方法中传入端口</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. accept()获取客户端的Socket,</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t3. socket.getInputStream() 来获取输入流  =》 read()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t4. socket.getOutputStream() 来获取输出流 =》 write()</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t6. 释放资源【客户端的Socket、服务器的Socket】 close()</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*  注意：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 网络通信，必须使用Socket提供的流对象，不能使用自己创建的流。</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t2. Socket创建时，会向服务器发起请求，如果服务器未开启，则出现异常，否则可以正常通信。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 服务端：=======================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">package</span> TCPDemo;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.nio.charset.StandardCharsets;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;               </span><br><span class=\"line\">             </span><br><span class=\"line\">                ServerSocket socketServer = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">8888</span>);</span><br><span class=\"line\">              </span><br><span class=\"line\">                Socket client = socketServer.accept();</span><br><span class=\"line\">                </span><br><span class=\"line\">                InputStream is = client.getInputStream();</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">                <span class=\"keyword\">int</span> len=is.read(buffer);</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(<span class=\"keyword\">new</span> String(buffer,<span class=\"number\">0</span>,len));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                OutputStream os = client.getOutputStream();</span><br><span class=\"line\">                os.write(<span class=\"string\">&quot;收到，谢谢&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                client.close();</span><br><span class=\"line\">                socketServer.close();</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 客户端：=======================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"keyword\">package</span> TCPDemo;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.nio.charset.StandardCharsets;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span><span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                Socket socketClient = <span class=\"keyword\">new</span> Socket(<span class=\"string\">&quot;127.0.0.1&quot;</span>,<span class=\"number\">8888</span>);</span><br><span class=\"line\">                </span><br><span class=\"line\">                OutputStream o = socketClient.getOutputStream();</span><br><span class=\"line\">                </span><br><span class=\"line\">                o.write(<span class=\"string\">&quot;你好，服务器&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                InputStream is = socketClient.getInputStream();</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">                <span class=\"keyword\">int</span> len=is.read(buffer);</span><br><span class=\"line\">                System.out.println(<span class=\"keyword\">new</span> String(buffer,<span class=\"number\">0</span>,len));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                socketClient.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"案例1：文件上传、下载\"><a href=\"#案例1：文件上传、下载\" class=\"headerlink\" title=\"案例1：文件上传、下载\"></a>案例1：文件上传、下载</h4><p>步骤：</p>\n<ul>\n<li>  客户端：获取<code>本地上传的输入流</code>，使用<code>网络Socket输出流</code>上传文件。接收服务器的“上传成功”</li>\n<li>  服务器：获取<code>网络Socket输入流</code>，使用<code>本地下载输出流</code>下载文件。给客户端发送“上传成功”。</li>\n</ul>\n<p>优化思路：将服务端的代码，放入Thread中，并开启多线程。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 服务端：=======================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> TCPDemo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.StandardCharsets;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileUploadServer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span><span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ServerSocket server = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">8888</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 死循环，让服务器一直监听客户端</span></span><br><span class=\"line\">                    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        Socket client = server.accept();</span><br><span class=\"line\"></span><br><span class=\"line\">                        InputStream is = client.getInputStream();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;E:\\\\2-demo&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(!file.exists())&#123;</span><br><span class=\"line\">                            file.mkdirs();</span><br><span class=\"line\"></span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">int</span> len = is.read(buffer);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义文件的命名规则：域名+毫秒值+随机数</span></span><br><span class=\"line\">                        String filename = <span class=\"string\">&quot;\\\\txt-&quot;</span></span><br><span class=\"line\">                                +System.currentTimeMillis()</span><br><span class=\"line\">                                +<span class=\"keyword\">new</span> Random().nextInt(<span class=\"number\">200</span>)</span><br><span class=\"line\">                                +<span class=\"string\">&quot;.txt&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(file+filename);</span><br><span class=\"line\"></span><br><span class=\"line\">                        fos.write(buffer);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        OutputStream os = client.getOutputStream();</span><br><span class=\"line\">                        os.write(<span class=\"string\">&quot;上传成功&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        fos.close();</span><br><span class=\"line\">                        client.close();</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).start();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 客户端：=======================================</span></span><br><span class=\"line\">        <span class=\"keyword\">package</span> TCPDemo;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\">        <span class=\"keyword\">import</span> java.nio.charset.StandardCharsets;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileUploadClient</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;E:\\\\0-demo\\\\1.txt&quot;</span>);</span><br><span class=\"line\">                </span><br><span class=\"line\">                Socket client = <span class=\"keyword\">new</span> Socket(<span class=\"string\">&quot;127.0.0.1&quot;</span>,<span class=\"number\">8888</span>);</span><br><span class=\"line\">                </span><br><span class=\"line\">                OutputStream os = client.getOutputStream();</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">                <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">                </span><br><span class=\"line\"><span class=\"comment\">// 读取数据【可能死循环，因为读到文件结束符后，没有将结束符写入文件，因此read()阻塞，程序不结束】                </span></span><br><span class=\"line\">                <span class=\"keyword\">while</span>((len=fis.read(buffer))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                     os.write(buffer,<span class=\"number\">0</span>,len);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"><span class=\"comment\">// 解决死循环问题                </span></span><br><span class=\"line\">                client.shutdownOutput();</span><br><span class=\"line\">                </span><br><span class=\"line\"><span class=\"comment\">// 打印数据【可能死循环，因为读到文件结束符后，没有将结束符写入文件，因此read()阻塞，程序不结束】                      </span></span><br><span class=\"line\">                InputStream is = client.getInputStream();</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">while</span>((len=is.read(buffer))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"keyword\">new</span> String(buffer,<span class=\"number\">0</span>,len));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                fis.close();</span><br><span class=\"line\">                is.close();</span><br><span class=\"line\">                os.close();</span><br><span class=\"line\">                client.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"案例二：模拟-B-S进行通信\"><a href=\"#案例二：模拟-B-S进行通信\" class=\"headerlink\" title=\"案例二：模拟 B/S进行通信\"></a>案例二：模拟 B/S进行通信</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 服务端：Java</span></span><br><span class=\"line\"><span class=\"comment\">// 客户端：浏览器</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.StandardCharsets;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ServerSocket server = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">8888</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            Socket clientSocket = server.accept();</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        InputStream is = clientSocket.getInputStream();</span><br><span class=\"line\"></span><br><span class=\"line\">                        BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(is));</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// http请求的第一行</span></span><br><span class=\"line\">                        String line = br.readLine();</span><br><span class=\"line\">                        String[] arr = line.split(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">                        String htmlpath = arr[<span class=\"number\">1</span>].substring(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                        FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(htmlpath);</span><br><span class=\"line\">                        OutputStream os = clientSocket.getOutputStream();</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">//固定写法</span></span><br><span class=\"line\">                        os.write(<span class=\"string\">&quot;HTTP/1.1 200 OK\\r\\n&quot;</span>.getBytes());</span><br><span class=\"line\">                        os.write(<span class=\"string\">&quot;Content-Type:text/html\\r\\n&quot;</span>.getBytes());</span><br><span class=\"line\">                        os.write(<span class=\"string\">&quot;\\r\\n&quot;</span>.getBytes());</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// 在浏览器输出页面</span></span><br><span class=\"line\">                        <span class=\"keyword\">byte</span>[] buff = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">                        <span class=\"keyword\">int</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">while</span> ((len = fis.read(buff)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                            os.write(buff, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        fis.close();</span><br><span class=\"line\">                        br.close();</span><br><span class=\"line\">                        clientSocket.close();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;).start();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<h2 id=\"12-Junit单元测试\"><a href=\"#12-Junit单元测试\" class=\"headerlink\" title=\"12. Junit单元测试\"></a>12. Junit单元测试</h2><p><img src=\"https://z3.ax1x.com/2021/05/27/2CT5h8.png\" alt=\"测试-分类\"></p>\n<p>Junit：</p>\n<blockquote>\n<p>  一种白盒测试工具。</p>\n</blockquote>\n<h4 id=\"12-1-Junit的使用：【-Test】\"><a href=\"#12-1-Junit的使用：【-Test】\" class=\"headerlink\" title=\"12.1 Junit的使用：【@Test】\"></a>12.1 Junit的使用：【@Test】</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*\t步骤：</span></span><br><span class=\"line\"><span class=\"comment\">*\t\t1. 定义1个测试类</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t 建议：</span></span><br><span class=\"line\"><span class=\"comment\">               - 包名：xxx.xxxx.test;  =&gt; 如： cn.itcast.test;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t   - 类名：测试类的类名以被测试类的名字+Test组成：类名Test =》 如：CalcTest</span></span><br><span class=\"line\"><span class=\"comment\">\t\t</span></span><br><span class=\"line\"><span class=\"comment\">\t\t2. 定义1个测试方法：=》如：void testAdd()</span></span><br><span class=\"line\"><span class=\"comment\">        \t 建议：</span></span><br><span class=\"line\"><span class=\"comment\">        \t \t- 方法名： 以test开头</span></span><br><span class=\"line\"><span class=\"comment\">        \t \t- 方法返回值： void</span></span><br><span class=\"line\"><span class=\"comment\">        \t \t- 参数：无需参数</span></span><br><span class=\"line\"><span class=\"comment\">\t\t3. 在方法定义位置前，加上注解@Test ,使得方法可以独立运行【无需main方法】</span></span><br><span class=\"line\"><span class=\"comment\">        </span></span><br><span class=\"line\"><span class=\"comment\">        4. 导入Junit工具的依赖包</span></span><br><span class=\"line\"><span class=\"comment\">        \t- 【点击@Test旁边的小灯泡，添加进classPath】</span></span><br><span class=\"line\"><span class=\"comment\">        </span></span><br><span class=\"line\"><span class=\"comment\">        5. 在测试方法中：</span></span><br><span class=\"line\"><span class=\"comment\">        \t- 创建被测试的对象，调用被测试的方法。</span></span><br><span class=\"line\"><span class=\"comment\">        \t</span></span><br><span class=\"line\"><span class=\"comment\">        6. 运行</span></span><br><span class=\"line\"><span class=\"comment\">        </span></span><br><span class=\"line\"><span class=\"comment\">        7. 判断结果：</span></span><br><span class=\"line\"><span class=\"comment\">        \t- 红色：测试失败</span></span><br><span class=\"line\"><span class=\"comment\">        \t- 绿色：测试通过</span></span><br><span class=\"line\"><span class=\"comment\">        \t</span></span><br><span class=\"line\"><span class=\"comment\">        8. 断言，将当前结果与正确结果比较\t</span></span><br><span class=\"line\"><span class=\"comment\">        \tAssert.assertEquals(正确值，当前值);</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> demo.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> demo.junit.Calculator;<span class=\"comment\">// 自定义的被测试类</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CalcTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 测试add方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAdd</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        Calculator c = <span class=\"keyword\">new</span>  Calculator();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rst = c.add(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        Assert.assertEquals(<span class=\"number\">3</span>,rst);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 测试sub方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testSub</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        Calculator c = <span class=\"keyword\">new</span> Calculator();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rst = c.sub(<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        Assert.assertEquals(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"12-2-Junit的使用：【-Before-和-After】\"><a href=\"#12-2-Junit的使用：【-Before-和-After】\" class=\"headerlink\" title=\"12.2 Junit的使用：【@Before 和 @After】\"></a>12.2 Junit的使用：【@Before 和 @After】</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.After;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Assert;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Before;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> demo.junit.Calculator;<span class=\"comment\">// 自定义的被测试类</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CalcTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    *   定义1个 init方法，用于在申请资源,每个测试方法在执行前都会自动调用init( )</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    * */</span></span><br><span class=\"line\">    <span class=\"meta\">@Before</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;申请资源-init()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     *   定义1个 close（），用于在释放资源,每个测试方法在执行后都会自动调用init( )</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * */</span></span><br><span class=\"line\">    <span class=\"meta\">@After</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;释放资源-after()&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAdd</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;testAdd方法执行&quot;</span>);</span><br><span class=\"line\">        Calculator c = <span class=\"keyword\">new</span>  Calculator();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rst = c.add(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(rst);</span></span><br><span class=\"line\">        Assert.assertEquals(<span class=\"number\">3</span>,rst);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testSub</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;testSub方法执行&quot;</span>);</span><br><span class=\"line\">        Calculator c = <span class=\"keyword\">new</span> Calculator();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> rst = c.sub(<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        Assert.assertEquals(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"13-反射\"><a href=\"#13-反射\" class=\"headerlink\" title=\"13. 反射\"></a>13. 反射</h2><ul>\n<li><p>  <a href=\"https://blog.csdn.net/Zzh1110/article/details/104101124\">Java–反射CSDN博客</a></p>\n</li>\n<li><p><a href=\"https://www.bilibili.com/video/BV1p4411P7V3?p=5\">狂神说-反射</a></p>\n</li>\n</ul>\n<p><strong>反射</strong> 【框架设计的灵魂】：</p>\n<blockquote>\n<p>  定义：将类的组成部分，封装为各个对象。</p>\n<p>  可以在<code>运行</code>的时候，<code>获取类</code>的相关信息。【是Java作为<code>准动态语言</code>的标志】</p>\n</blockquote>\n<ul>\n<li>  正常过程：</li>\n</ul>\n<blockquote>\n<p>  导包 =》new 对象 =》 得到 实例化对象</p>\n</blockquote>\n<ul>\n<li>  反射过程：</li>\n</ul>\n<blockquote>\n<p>  获取实例化对象 =》getClass( )来得到类信息 =》找到所在的包名</p>\n</blockquote>\n<h3 id=\"13-1-Java代码的三个阶段：\"><a href=\"#13-1-Java代码的三个阶段：\" class=\"headerlink\" title=\"13.1 Java代码的三个阶段：\"></a>13.1 Java代码的三个阶段：</h3><ul>\n<li>  源代码阶段：编写代码【成员变量+成员方法+构造方法】</li>\n<li>  类对象阶段：通过类加载器，将代码读入 JVM【在这个阶段，源码中的1个类，被拆成3个Class对象】</li>\n<li>  运行时阶段：运行代码</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/05/29/2kTPf0.png\" alt=\"Java代码的三个阶段\"></p>\n<p>反射的好处：</p>\n<blockquote>\n<ul>\n<li>  可以在代码运行的时候，来操作对象。【例如：IDE的代码提示功能，就是利用了反射的原理，在类对象阶段加载Methods数组】</li>\n<li>  解耦</li>\n</ul>\n</blockquote>\n<p>代码演示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*   1. 获取字节码【类名.class】：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\tClass personClass = Person.class;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t</span></span><br><span class=\"line\"><span class=\"comment\">\t2. 常用方法：</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t    0-设置访问权限【忽略安全检查】：true</span></span><br><span class=\"line\"><span class=\"comment\">        \tdeclaredField_1.setAccessible(true);</span></span><br><span class=\"line\"><span class=\"comment\">        \t</span></span><br><span class=\"line\"><span class=\"comment\">\t    1-字段：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t- 获取类中，所有public的字段(属性):</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t Field[] fields = personClass.getFields();</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t- 获取类中，指定的public的字段(属性):\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t Field field_1 = personClass.getField(字段名);</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t \t\t\t\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t- 获取类中，所有的字段【包括private,但获取private的前提是先设置权限】:\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t Field[] declaredFields = personClass.getDeclaredFields();</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t- 获取类中，指定的字段【包括private,但获取private的前提是先设置权限】:\t </span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t Field declaredField = personClass.getDeclaredField(“name”);</span></span><br><span class=\"line\"><span class=\"comment\">                 </span></span><br><span class=\"line\"><span class=\"comment\">                 </span></span><br><span class=\"line\"><span class=\"comment\">        2-构造器： </span></span><br><span class=\"line\"><span class=\"comment\">            - 获取类中，所有的构造器</span></span><br><span class=\"line\"><span class=\"comment\">   \t\t\tConstructor&lt;?&gt;[] Constructors = personClass.getConstructors();</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t-获取类中，指定的构造器</span></span><br><span class=\"line\"><span class=\"comment\">        \tConstructor&lt;T&gt; Constructor = personClass.getConstructor(类&lt;?&gt;...参数类型);</span></span><br><span class=\"line\"><span class=\"comment\">        </span></span><br><span class=\"line\"><span class=\"comment\">            - 获取类中，所有的已经声明的构造器</span></span><br><span class=\"line\"><span class=\"comment\">             Constructor[] declaredConstructors = personClass.getDeclaredConstructors();</span></span><br><span class=\"line\"><span class=\"comment\">             </span></span><br><span class=\"line\"><span class=\"comment\">\t\t \t-获取类中，指定的已经声明的构造器</span></span><br><span class=\"line\"><span class=\"comment\">    \t\t Constructor declaredConstructor = personClass.getDeclaredConstructor(类&lt;?&gt;...参数类型);</span></span><br><span class=\"line\"><span class=\"comment\">    \t\t </span></span><br><span class=\"line\"><span class=\"comment\">    \t\t </span></span><br><span class=\"line\"><span class=\"comment\">       3-成员方法：</span></span><br><span class=\"line\"><span class=\"comment\">       </span></span><br><span class=\"line\"><span class=\"comment\">        \tMethod[] methods = personClass.getMethods();</span></span><br><span class=\"line\"><span class=\"comment\">        \t</span></span><br><span class=\"line\"><span class=\"comment\">        \tMethod method = personClass.getMethod(String name,类&lt;?&gt;...参数类型);</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        \tMethod[] declaredMethods = personClass.getDeclaredMethods();</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        \tMethod declaredMethod = personClass.getDeclaredMethod(String name,类&lt;?&gt;...参数类型);</span></span><br><span class=\"line\"><span class=\"comment\">     4-获取类名：</span></span><br><span class=\"line\"><span class=\"comment\">     \t\tString class_name = personClass.getName();</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Person类</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 以下省略了get/set访问器</span></span><br><span class=\"line\">        。。。</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">// 字段相关：=================================================</span></span><br><span class=\"line\">        <span class=\"comment\">// 利用反射来获取字节码，找到Person类</span></span><br><span class=\"line\">        Class personClass = Person.class;</span><br><span class=\"line\">        <span class=\"comment\">// 获取Person中 所有 public 的字段【属性】</span></span><br><span class=\"line\">        Field[] fields = personClass.getFields();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 打印所有public属性</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Field field : fields) &#123;</span><br><span class=\"line\">            System.out.println(field);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 创建对象</span></span><br><span class=\"line\">        Person p = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;张三&quot;</span>,<span class=\"number\">20</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 获取Person类中的public字段 a类</span></span><br><span class=\"line\">        Field a = personClass.getField(<span class=\"string\">&quot;a&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 获取 对象p中的属性a的值的对象</span></span><br><span class=\"line\">        Object value = a.get(p);</span><br><span class=\"line\">        System.out.println(value); <span class=\"comment\">// 1</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 设置 对象p中的属性a的值</span></span><br><span class=\"line\">        a.set(p,<span class=\"number\">123</span>);</span><br><span class=\"line\">        System.out.println(p); <span class=\"comment\">// Person&#123;name=&#x27;张三&#x27;, age=20, a=123&#125;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 获取声明过的属性【包括：private类型的】</span></span><br><span class=\"line\">        Field declaredField_name = personClass.getDeclaredField(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 设置访问权限【忽略安全检查】：true</span></span><br><span class=\"line\">        declaredField_name.setAccessible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 获取 具体字段值的 对象</span></span><br><span class=\"line\">        Object val2 = declaredField_name.get(p);</span><br><span class=\"line\">        System.out.println(val2);</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 构造器相关：=================================================      </span></span><br><span class=\"line\">\t\tClass&lt;Person&gt; personClass = Person.class;</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"comment\">//获取构造器</span></span><br><span class=\"line\">Constructor constructor1= personClass.getConstructor(String.class,<span class=\"keyword\">int</span>.class,<span class=\"keyword\">int</span>.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    \t<span class=\"comment\">// 打印结果：public Person(java.lang.String,int,int)</span></span><br><span class=\"line\">    \tSystem.out.println(constructor);</span><br><span class=\"line\"></span><br><span class=\"line\">    \t<span class=\"comment\">// 1.创建对象-有参【构造器-newInstance方法】</span></span><br><span class=\"line\">        Object person_1 = constructor1.newInstance(<span class=\"string\">&quot;张三&quot;</span>,<span class=\"number\">23</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 2.创建对象-无参【构造器-newInstance方法】</span></span><br><span class=\"line\">        Object person_2 = constructor1.newInstance();</span><br><span class=\"line\">        <span class=\"comment\">// 3.创建对象-无参【Class类-newInstance方法，已弃用】</span></span><br><span class=\"line\">        Object person_3 = personClass.newInstance();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// Person&#123;name=&#x27;张三&#x27;, age=23, a=1&#125;</span></span><br><span class=\"line\">        System.out.println(person_1);</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">// 成员方法相关：=================================================             </span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        Class&lt;Person&gt; personClass = Person.class;</span><br><span class=\"line\">        <span class=\"comment\">// 获取指定的方法【方法无参数时】</span></span><br><span class=\"line\">        Method eat_method = personClass.getMethod(<span class=\"string\">&quot;eat&quot;</span>);</span><br><span class=\"line\">        System.out.println(eat_method);</span><br><span class=\"line\">        </span><br><span class=\"line\">        Person p = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;张三&quot;</span>,<span class=\"number\">20</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">//调用eat方法</span></span><br><span class=\"line\">        eat_method.invoke(p);  <span class=\"comment\">//我eat</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 获取指定的方法【方法有参数时,传入：方法名+参数的反射类】        </span></span><br><span class=\"line\">        Method eat_2 = personClass.getMethod(<span class=\"string\">&quot;eat&quot;</span>, String.class);</span><br><span class=\"line\">        Person p2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;李四&quot;</span>,<span class=\"number\">24</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">        eat_2.invoke(p2,<span class=\"string\">&quot;香蕉&quot;</span>); <span class=\"comment\">//我eat:香蕉</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 获取类名</span></span><br><span class=\"line\">        String class_name = personClass.getName();</span><br><span class=\"line\">        System.out.println(class_name);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"13-2-案例1：\"><a href=\"#13-2-案例1：\" class=\"headerlink\" title=\"13.2 案例1：\"></a>13.2 案例1：</h3><p>目标：</p>\n<blockquote>\n<p>  写一个工具，在不改变任何代码的前提下，可以用来：</p>\n<ul>\n<li>  创建任意对象</li>\n<li>  执行任意方法</li>\n</ul>\n</blockquote>\n<p>实现思路:</p>\n<blockquote>\n<ul>\n<li>  需要：配置文件、反射</li>\n</ul>\n</blockquote>\n<p>实现步骤：</p>\n<blockquote>\n<ul>\n<li>  将需要创建的<code>对象的全类名</code> 和 需要调用的<code>方法</code> 定义在<code>配置文件</code>中。</li>\n<li>  加载<code>配置文件</code>。</li>\n<li>  利用<code>反射</code>来加载 <code>所需的类</code>到<code>内存</code>中。</li>\n<li>  创建对象</li>\n<li>  执行方法</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Member;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ReflectTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 创建properties对象</span></span><br><span class=\"line\">        Properties prop = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//获取类加载器，通过类加载器，加载class目录下的配置文件的输入流</span></span><br><span class=\"line\">        ClassLoader classLoader_1 = ReflectTest.class.getClassLoader();</span><br><span class=\"line\">        InputStream is = classLoader_1.getResourceAsStream(<span class=\"string\">&quot;pro.properties&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//利用配置文件的输入流，加载配置文件</span></span><br><span class=\"line\">        prop.load(is);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//获取具体的配置</span></span><br><span class=\"line\">        String className_1 = prop.getProperty(<span class=\"string\">&quot;className&quot;</span>);</span><br><span class=\"line\">        String methodName_1 = prop.getProperty(<span class=\"string\">&quot;methodName&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//获取Class类</span></span><br><span class=\"line\">        Class&lt;?&gt; cls = Class.forName(className_1);</span><br><span class=\"line\">        <span class=\"comment\">// 创建类对象</span></span><br><span class=\"line\">        Object  c = cls.newInstance();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//获取方法类</span></span><br><span class=\"line\">        Class&lt;?&gt; cls2 = Class.forName(methodName_1);</span><br><span class=\"line\">        Method m1 = cls2.getMethod(methodName_1);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//调用方法</span></span><br><span class=\"line\">        m1.invoke(c);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"13-3-获取Class对象的3种方式：\"><a href=\"#13-3-获取Class对象的3种方式：\" class=\"headerlink\" title=\"13.3 获取Class对象的3种方式：\"></a>13.3 获取Class对象的3种方式：</h3><ul>\n<li>  源代码阶段：<code>Class.forName(全类名);    </code>// 全类名：<code>包名.类名</code></li>\n<li>  类加载阶段：<code>类名.class 属性;</code></li>\n<li>  运行时阶段：<code>对象名.getClass( ); </code>  // getClass( )定义在Object类中</li>\n</ul>\n<p>结论：</p>\n<blockquote>\n<p>   同一个字节码文件，在程序的一次运行中，只会加载一次，不论用哪种方式获取的Class对象，最终只会是同一个。</p>\n</blockquote>\n<h3 id=\"13-4-Class对象的功能：\"><a href=\"#13-4-Class对象的功能：\" class=\"headerlink\" title=\"13.4 Class对象的功能：\"></a>13.4 Class对象的功能：</h3><ul>\n<li><p>  获取<code> 成员变量</code>：<code>getFields();</code></p>\n</li>\n<li><p>  获取 <code>成员方法</code>：<code>getMethods()</code></p>\n</li>\n<li><p>  获取 <code>构造方法</code>：<code>getConstructors();</code></p>\n</li>\n<li><p>获取 <code>类名</code>：<code>getClassName();</code></p>\n</li>\n</ul>\n<h3 id=\"13-5-类加载的过程：\"><a href=\"#13-5-类加载的过程：\" class=\"headerlink\" title=\"13.5 类加载的过程：\"></a>13.5 类加载的过程：</h3><p><img src=\"https://z3.ax1x.com/2021/05/30/2V5Aqe.png\" alt=\"Java内存分析\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/05/30/2V5KRP.png\" alt=\"Java-类加载的过程\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/05/30/2V5jQf.png\" alt=\"类加载的详细过程\"></p>\n<h2 id=\"14-注解（Annotation）\"><a href=\"#14-注解（Annotation）\" class=\"headerlink\" title=\"14. 注解（Annotation）\"></a>14. 注解（Annotation）</h2><ul>\n<li>  <a href=\"https://blog.csdn.net/Zzh1110/article/details/104887317\">Java–自定义注解-CSDN博客</a></li>\n<li>  <a href=\"https://www.bilibili.com/video/BV1p4411P7V3?p=1\">狂神说-注解和反射</a></li>\n</ul>\n<h3 id=\"14-1-注解-概念\"><a href=\"#14-1-注解-概念\" class=\"headerlink\" title=\"14.1 注解-概念:\"></a>14.1 注解-概念:</h3><blockquote>\n<ul>\n<li>  <code>注释</code>：给<code>人</code>看的备注</li>\n<li>  <code>注解</code>：给<code>计算机</code>看的备注，也叫<code>元数据</code>，<code>JDK1.5</code>开始引入的特性。</li>\n</ul>\n</blockquote>\n<h3 id=\"14-2-注解的作用：\"><a href=\"#14-2-注解的作用：\" class=\"headerlink\" title=\"14.2 注解的作用：\"></a>14.2 注解的作用：</h3><blockquote>\n<ul>\n<li>  编写文档：生成doc文档</li>\n<li>  代码分析：使用反射</li>\n<li>  编译检查：如：Ovverride</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*\t注解doc演示</span></span><br><span class=\"line\"><span class=\"comment\">*\t<span class=\"doctag\">@author</span> cyw</span></span><br><span class=\"line\"><span class=\"comment\">*\t<span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\">*\t<span class=\"doctag\">@since</span> 1.5</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在cmd中，进入该文件所在的目录，输入：javadoc AnnoDemo.java ,可以得到该类的文档</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AnnoDemo</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t*\t<span class=\"doctag\">@param</span> a 整数</span></span><br><span class=\"line\"><span class=\"comment\">\t*\t<span class=\"doctag\">@param</span> b整数</span></span><br><span class=\"line\"><span class=\"comment\">\t*\t<span class=\"doctag\">@return</span> 两数之和</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h3 id=\"14-2-JDK中内置的注解：\"><a href=\"#14-2-JDK中内置的注解：\" class=\"headerlink\" title=\"14.2  JDK中内置的注解：\"></a>14.2  JDK中内置的注解：</h3><ul>\n<li>  <code>@Override</code>: 检查被标注的方法是否是继承自 父类/接口。</li>\n<li>  <code>@Deprecated</code>: 标注的内容已过时。</li>\n<li>  <code>@SuppressWarnings</code>: 压制警告 =》 <code>@@SuppressWarnings(&quot;all&quot;)</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 压制所有警告：IDE不要弹出警告信息    </span></span><br><span class=\"line\">\t<span class=\"meta\">@SuppressWarnings(&quot;all&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AnnoDemo</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 用于标记：方法已过时</span></span><br><span class=\"line\">            <span class=\"meta\">@Deprecated</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">add_1</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">add_2</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"14-3-自定义注解：\"><a href=\"#14-3-自定义注解：\" class=\"headerlink\" title=\"14.3 自定义注解：\"></a>14.3 自定义注解：</h3><ul>\n<li>  格式：【<code>元注解 + public @interface 注解名&#123; &#125;</code>】</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">元注解</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> 注解名&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 例如：</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> MyAnno&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@MyAnno</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sayHello</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;你好&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>  注解的<code>本质</code>：【继承了Annotion类的1个<code>接口</code>】</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MyAnno</span> <span class=\"keyword\">extends</span> <span class=\"title\">java</span>.<span class=\"title\">lang</span>.<span class=\"title\">annotion</span>,<span class=\"title\">Annotion</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><p>注解的<code>属性</code>：【注解接口中的<code>抽象方法</code>】</p>\n<blockquote>\n<ol>\n<li><p> 只要定义了注解的属性，则该注解的属性必须赋完值才能使用。</p>\n</li>\n<li><p> 可以使用default关键字，来给注解的属性赋默认值。</p>\n</li>\n<li><p> 如果注解只有1个属性，且该属性的名字为value，使用时，可以只传值，不写属性名。</p>\n</li>\n<li><p>数组在数值时，在数组的值的最外面，用 { } 包裹；数组只有1个值时，可省略大括号。</p>\n</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n<ul>\n<li>  注解中抽象方法（注解的属性）的返回值的类型【5种】：</li>\n</ul>\n<blockquote>\n<ul>\n<li>  基本类型</li>\n<li>  字符串</li>\n<li>  枚举</li>\n<li>  注解</li>\n<li>  以上4种的数组</li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> MyAnno&#123;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">show_1</span><span class=\"params\">()</span></span>;\t<span class=\"comment\">//基本类型</span></span><br><span class=\"line\">      <span class=\"function\">String <span class=\"title\">show_2</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">      <span class=\"function\">MyAnno <span class=\"title\">show_3</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">      String[] show_4();</span><br><span class=\"line\"> </span><br><span class=\"line\">  &#125; </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>实例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> MyAnno&#123;</span><br><span class=\"line\">      <span class=\"function\">String <span class=\"title\">name_method</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">age_method</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@MyAnno(name_method=&quot;张三&quot;,age_method = 13)</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Eat</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;你好&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"14-3-1-元注解：\"><a href=\"#14-3-1-元注解：\" class=\"headerlink\" title=\"14.3.1 元注解：\"></a>14.3.1 元注解：</h4><p>概念：</p>\n<blockquote>\n<p>  元注解：修饰注解的注解。</p>\n</blockquote>\n<p>常见的元注解：</p>\n<ul>\n<li><code>@Target</code>：描述<code>作用的位置</code>。如：作用在方法<ul>\n<li>ElementType：【一种枚举类型】<ul>\n<li>  TYPE：作用在<code>类</code>上</li>\n<li>  METHOD：作用在<code>方法</code>上</li>\n<li>  FIELD：作用在<code>成员变量</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>@Retention</code>：描述 注解 <code>保留的阶段</code>。如：保留在源码阶段<ul>\n<li>RetentionPolicy：【一种枚举类型】<ul>\n<li>  SOURCE：源码阶段</li>\n<li>  CLASS：class类对象阶段</li>\n<li>  RUNTIME：运行时阶段【最常用】</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>  <code>@Documented</code>：描述 注解 <code>是否被抽取到API文档</code>中。</li>\n<li>  <code>@Inheritied</code>：描述 注解 <code>是否被子类继承</code>。</li>\n</ul>\n<h4 id=\"14-3-2-注解的使用\"><a href=\"#14-3-2-注解的使用\" class=\"headerlink\" title=\"14.3.2 注解的使用:\"></a>14.3.2 注解的使用:</h4><ul>\n<li>  获取 注解使用的<code>位置的对象</code></li>\n<li>  利用位置对象 获取 <code>注解对象</code>: obj.getAnnotion(注解名.class)</li>\n<li>  调用注解中的<code>抽象方法</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Target(ElementType.TYPE)</span>\t\t<span class=\"comment\">// 元注解，Target元注解,指定自定义注解的使用位置，TYPE：给类使用</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span>\t<span class=\"comment\">// 元注解，Retention元注解,指定自定义注解的使用时期</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> myAnnoDemo&#123;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">name</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;ZhangSan&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用注解</span></span><br><span class=\"line\"><span class=\"meta\">@myAnnoDemo(name=&quot;lisi&quot;)</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestClass</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckpexfs130007lcvd4m95fpzb","category_id":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs1f000tlcvd18cn3m4w"},{"post_id":"ckpexfs130007lcvd4m95fpzb","category_id":"ckpexfs1a000jlcvd7eao742l","_id":"ckpexfs1g000xlcvd4q57ay5z"},{"post_id":"ckpexfs0w0001lcvd46kh5neq","category_id":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs1i0010lcvdaeeebc9e"},{"post_id":"ckpexfs0w0001lcvd46kh5neq","category_id":"ckpexfs1d000olcvdae2h8ph9","_id":"ckpexfs1m0014lcvd1stndibs"},{"post_id":"ckpexfs100003lcvd16xr20bv","category_id":"ckpexfs150009lcvddzyle65k","_id":"ckpexfs1q001ilcvdadmk1m36"},{"post_id":"ckpexfs100003lcvd16xr20bv","category_id":"ckpexfs1n0018lcvd1mhn4ozo","_id":"ckpexfs1r001klcvd3ob52390"},{"post_id":"ckpexfs1p001clcvdc9nqf9p3","category_id":"ckpexfs150009lcvddzyle65k","_id":"ckpexfs1r001nlcvd3qro1l5u"},{"post_id":"ckpexfs1p001clcvdc9nqf9p3","category_id":"ckpexfs1n0018lcvd1mhn4ozo","_id":"ckpexfs1s001plcvd45mz3oa6"},{"post_id":"ckpexfs120006lcvdhk6b5pz3","category_id":"ckpexfs150009lcvddzyle65k","_id":"ckpexfs1t001ulcvd07nyggii"},{"post_id":"ckpexfs120006lcvdhk6b5pz3","category_id":"ckpexfs1n0018lcvd1mhn4ozo","_id":"ckpexfs1t001wlcvd16t998ij"},{"post_id":"ckpexfs1g000zlcvdeytx5bsg","category_id":"ckpexfs1f000ulcvd8bcw2z0l","_id":"ckpexfs1y002glcvdanyae78p"},{"post_id":"ckpexfs1g000zlcvdeytx5bsg","category_id":"ckpexfs1w002blcvd1mks5jh7","_id":"ckpexfs1y002ilcvd4i0e3eb2"},{"post_id":"ckpexfs1j0011lcvde3kehy6u","category_id":"ckpexfs1f000ulcvd8bcw2z0l","_id":"ckpexfs1z002llcvd2e25bhtp"},{"post_id":"ckpexfs1j0011lcvde3kehy6u","category_id":"ckpexfs1w002blcvd1mks5jh7","_id":"ckpexfs1z002mlcvd0pk44nlf"},{"post_id":"ckpexfs19000glcvdai4t3lnp","category_id":"ckpexfs1j0012lcvdbbxkc5vh","_id":"ckpexfs20002rlcvd8yr4h33h"},{"post_id":"ckpexfs19000glcvdai4t3lnp","category_id":"ckpexfs20002plcvdehugdf5f","_id":"ckpexfs20002tlcvd97x8381z"},{"post_id":"ckpexfs1b000llcvd3zz59e2i","category_id":"ckpexfs1t001vlcvdhe9qbo5e","_id":"ckpexfs21002vlcvd49xwfbt8"},{"post_id":"ckpexfs1b000llcvd3zz59e2i","category_id":"ckpexfs20002slcvd4jz53ehh","_id":"ckpexfs21002xlcvdeqp007ra"},{"post_id":"ckpexfs1c000nlcvdg1fwgfzs","category_id":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs21002ylcvddvh515zj"},{"post_id":"ckpexfs1c000nlcvdg1fwgfzs","category_id":"ckpexfs1u001zlcvd6m2o6gwx","_id":"ckpexfs220030lcvd32beaskb"},{"post_id":"ckpexfs1c000nlcvdg1fwgfzs","category_id":"ckpexfs21002ulcvdexsv3l1b","_id":"ckpexfs220031lcvd88719kvk"},{"post_id":"ckpexfs1d000qlcvd6z822ajd","category_id":"ckpexfs1t001vlcvdhe9qbo5e","_id":"ckpexfs220033lcvd2fysguft"},{"post_id":"ckpexfs1d000qlcvd6z822ajd","category_id":"ckpexfs21002wlcvdbn054wi7","_id":"ckpexfs230034lcvd9erp60ye"},{"post_id":"ckpexfs1e000slcvd0lfefgj9","category_id":"ckpexfs1f000ulcvd8bcw2z0l","_id":"ckpexfs230036lcvd11x7aw9r"},{"post_id":"ckpexfs1e000slcvd0lfefgj9","category_id":"ckpexfs1w002blcvd1mks5jh7","_id":"ckpexfs230037lcvdg8ux8ka2"},{"post_id":"ckpexfs1f000wlcvdf3l6ezoh","category_id":"ckpexfs1f000ulcvd8bcw2z0l","_id":"ckpexfs240039lcvd6fctdd1h"},{"post_id":"ckpexfs1f000wlcvdf3l6ezoh","category_id":"ckpexfs1w002blcvd1mks5jh7","_id":"ckpexfs24003alcvd9fyxh0av"},{"post_id":"ckpexfs140008lcvdh72odth8","category_id":"ckpexfs1f000ulcvd8bcw2z0l","_id":"ckpexfs25003clcvddnrw7uqh"},{"post_id":"ckpexfs140008lcvdh72odth8","category_id":"ckpexfs1x002elcvd1zc36hsv","_id":"ckpexfs25003dlcvd0kw029sm"},{"post_id":"ckpexfs140008lcvdh72odth8","category_id":"ckpexfs1f000ulcvd8bcw2z0l","_id":"ckpexfs25003flcvd507m8m1j"},{"post_id":"ckpexfs140008lcvdh72odth8","category_id":"ckpexfs230035lcvdcep64zmh","_id":"ckpexfs25003glcvd5kuv725m"},{"post_id":"ckpexfs1m0016lcvdess0ej06","category_id":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs26003ilcvd5xunb51v"},{"post_id":"ckpexfs1m0016lcvdess0ej06","category_id":"ckpexfs1s001rlcvdcmht0ze9","_id":"ckpexfs26003jlcvd3ot5aph5"},{"post_id":"ckpexfs1m0016lcvdess0ej06","category_id":"ckpexfs230038lcvdgcq6hqfq","_id":"ckpexfs26003klcvdhy69darx"},{"post_id":"ckpexfs15000clcvdbketdfcy","category_id":"ckpexfs1j0012lcvdbbxkc5vh","_id":"ckpexfs26003mlcvdear4e9la"},{"post_id":"ckpexfs15000clcvdbketdfcy","category_id":"ckpexfs1z002klcvd0w989dt0","_id":"ckpexfs26003nlcvdby9ogwvz"},{"post_id":"ckpexfs15000clcvdbketdfcy","category_id":"ckpexfs24003blcvd1o05hoja","_id":"ckpexfs26003olcvd2ce10p93"},{"post_id":"ckpexfs1o001alcvd1i4l5rew","category_id":"ckpexfs1z002nlcvd8c924xt0","_id":"ckpexfs27003qlcvd06z4hswk"},{"post_id":"ckpexfs1o001alcvd1i4l5rew","category_id":"ckpexfs25003elcvdc9rrf5dq","_id":"ckpexfs27003rlcvdgefh1lez"},{"post_id":"ckpexfs16000dlcvdaus02njb","category_id":"ckpexfs1f000ulcvd8bcw2z0l","_id":"ckpexfs27003slcvd54751uhn"},{"post_id":"ckpexfs16000dlcvdaus02njb","category_id":"ckpexfs1x002elcvd1zc36hsv","_id":"ckpexfs27003tlcvda9bnhlcy"},{"post_id":"ckpexfs16000dlcvdaus02njb","category_id":"ckpexfs1f000ulcvd8bcw2z0l","_id":"ckpexfs27003ulcvd7uzeegu1"},{"post_id":"ckpexfs16000dlcvdaus02njb","category_id":"ckpexfs25003hlcvddt3412by","_id":"ckpexfs27003vlcvd8qqab24h"},{"post_id":"ckpexfs1a000ilcvd3o4k8uez","category_id":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs27003wlcvdcb2b96ek"},{"post_id":"ckpexfs1a000ilcvd3o4k8uez","category_id":"ckpexfs1s001rlcvdcmht0ze9","_id":"ckpexfs27003xlcvdgakq8lud"},{"post_id":"ckpexfs1a000ilcvd3o4k8uez","category_id":"ckpexfs20002qlcvdfjq80ddw","_id":"ckpexfs27003ylcvd1t2udway"},{"post_id":"ckpexfs1a000ilcvd3o4k8uez","category_id":"ckpexfs26003llcvd1hgxcglx","_id":"ckpexfs27003zlcvd8bzk21ex"},{"post_id":"ckpexfs1a000ilcvd3o4k8uez","category_id":"ckpexfs26003plcvd57wt56lt","_id":"ckpexfs270040lcvdaclfemxh"},{"post_id":"ckpexfs2h0044lcvd6edw88es","category_id":"ckpexfs1t001vlcvdhe9qbo5e","_id":"ckpexfs2k004blcvdf5v76zoe"},{"post_id":"ckpexfs2h0044lcvd6edw88es","category_id":"ckpexfs20002slcvd4jz53ehh","_id":"ckpexfs2l004elcvd117d70ue"},{"post_id":"ckpexfs2i0046lcvda6io3oer","category_id":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs2l004glcvdd60f89im"},{"post_id":"ckpexfs2i0046lcvda6io3oer","category_id":"ckpexfs1a000jlcvd7eao742l","_id":"ckpexfs2l004ilcvdfspu529q"},{"post_id":"ckpexfs2j0049lcvdcfun2iht","category_id":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs2l004jlcvd7qnwaqh0"},{"post_id":"ckpexfs2j0049lcvdcfun2iht","category_id":"ckpexfs1s001rlcvdcmht0ze9","_id":"ckpexfs2m004klcvd5q4o11a4"},{"post_id":"ckpexfs2j0049lcvdcfun2iht","category_id":"ckpexfs230038lcvdgcq6hqfq","_id":"ckpexfs2m004llcvd2z0j0yec"},{"post_id":"ckpexfs2g0041lcvdahuf7y8c","category_id":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs2m004mlcvdhj8dafhi"},{"post_id":"ckpexfs2g0041lcvdahuf7y8c","category_id":"ckpexfs1d000olcvdae2h8ph9","_id":"ckpexfs2m004nlcvdcikvebya"},{"post_id":"ckpexfs2g0041lcvdahuf7y8c","category_id":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs2m004olcvd7sfgfq44"},{"post_id":"ckpexfs2g0041lcvdahuf7y8c","category_id":"ckpexfs2k004clcvdgsnwegaa","_id":"ckpexfs2m004plcvd1hg0htjw"},{"post_id":"ckpexfs2g0042lcvdcpoafx10","category_id":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexfs2n004qlcvd32q1a38o"},{"post_id":"ckpexfs2g0042lcvdcpoafx10","category_id":"ckpexfs2j0047lcvd4ahy5ghx","_id":"ckpexfs2n004rlcvdcvc4anvi"},{"post_id":"ckpexfs2g0042lcvdcpoafx10","category_id":"ckpexfs2l004hlcvd8m9z63ab","_id":"ckpexfs2n004slcvd4v1heq5k"},{"post_id":"ckpexfs2g0042lcvdcpoafx10","category_id":"ckpexfs1t001vlcvdhe9qbo5e","_id":"ckpexfs2n004tlcvd2lkz603z"},{"post_id":"ckpexfs2g0042lcvdcpoafx10","category_id":"ckpexfs20002slcvd4jz53ehh","_id":"ckpexfs2n004ulcvdfn34dz1z"},{"post_id":"ckpexftro004vlcvd93n19dlg","category_id":"ckpexfs110004lcvd77zn3xzf","_id":"ckpexftrr004zlcvda2w3fj1m"},{"post_id":"ckpexftro004vlcvd93n19dlg","category_id":"ckpexfs2j0047lcvd4ahy5ghx","_id":"ckpexftrr0050lcvdb0fi2wu1"},{"post_id":"ckpexftro004vlcvd93n19dlg","category_id":"ckpexftrq004xlcvdgwcxhw86","_id":"ckpexftrr0051lcvd4s466dg1"}],"PostTag":[{"post_id":"ckpexfs0w0001lcvd46kh5neq","tag_id":"ckpexfs120005lcvd5tst7ifv","_id":"ckpexfs15000blcvd4xv8hyc0"},{"post_id":"ckpexfs100003lcvd16xr20bv","tag_id":"ckpexfs15000alcvdemdtbxf9","_id":"ckpexfs19000hlcvdd71xfd5q"},{"post_id":"ckpexfs120006lcvdhk6b5pz3","tag_id":"ckpexfs15000alcvdemdtbxf9","_id":"ckpexfs1c000mlcvd88ak9o9i"},{"post_id":"ckpexfs130007lcvd4m95fpzb","tag_id":"ckpexfs1a000klcvd0pb5hkz5","_id":"ckpexfs1e000rlcvd3h4uhi4x"},{"post_id":"ckpexfs140008lcvdh72odth8","tag_id":"ckpexfs1d000plcvdfa1ac5h8","_id":"ckpexfs1g000ylcvd6k1n882r"},{"post_id":"ckpexfs15000clcvdbketdfcy","tag_id":"ckpexfs1f000vlcvd7cuj00y3","_id":"ckpexfs1m0015lcvd4clv2xgp"},{"post_id":"ckpexfs16000dlcvdaus02njb","tag_id":"ckpexfs1j0013lcvd9lvkf21x","_id":"ckpexfs1p001blcvd45vv2m9m"},{"post_id":"ckpexfs19000glcvdai4t3lnp","tag_id":"ckpexfs1o0019lcvde6wdb9vx","_id":"ckpexfs1q001flcvdaobl287a"},{"post_id":"ckpexfs1p001clcvdc9nqf9p3","tag_id":"ckpexfs15000alcvdemdtbxf9","_id":"ckpexfs1q001glcvd9w7vhaa1"},{"post_id":"ckpexfs1a000ilcvd3o4k8uez","tag_id":"ckpexfs1p001elcvd4i1age8d","_id":"ckpexfs1r001llcvdhn8j47v0"},{"post_id":"ckpexfs1b000llcvd3zz59e2i","tag_id":"ckpexfs1r001jlcvdc47s79cn","_id":"ckpexfs1s001qlcvd3votd67v"},{"post_id":"ckpexfs1c000nlcvdg1fwgfzs","tag_id":"ckpexfs1s001olcvdg4z7cqpn","_id":"ckpexfs1t001tlcvdde1rbc8u"},{"post_id":"ckpexfs1d000qlcvd6z822ajd","tag_id":"ckpexfs1s001slcvdd3j341ww","_id":"ckpexfs1t001ylcvdban71anq"},{"post_id":"ckpexfs1e000slcvd0lfefgj9","tag_id":"ckpexfs1t001xlcvda9c84bsy","_id":"ckpexfs1u0021lcvd44ufepgw"},{"post_id":"ckpexfs1f000wlcvdf3l6ezoh","tag_id":"ckpexfs1t001xlcvda9c84bsy","_id":"ckpexfs1v0024lcvdh5u8cr0z"},{"post_id":"ckpexfs1g000zlcvdeytx5bsg","tag_id":"ckpexfs1t001xlcvda9c84bsy","_id":"ckpexfs1v0027lcvd2j9v0g0h"},{"post_id":"ckpexfs1j0011lcvde3kehy6u","tag_id":"ckpexfs1t001xlcvda9c84bsy","_id":"ckpexfs1w002alcvd5uzybdmy"},{"post_id":"ckpexfs1m0016lcvdess0ej06","tag_id":"ckpexfs1w0029lcvdgbrta1xg","_id":"ckpexfs1x002dlcvdg5zyd91u"},{"post_id":"ckpexfs1o001alcvd1i4l5rew","tag_id":"ckpexfs1x002clcvdbmkxaidt","_id":"ckpexfs1x002flcvdgalocl0t"},{"post_id":"ckpexfs2g0041lcvdahuf7y8c","tag_id":"ckpexfs120005lcvd5tst7ifv","_id":"ckpexfs2h0043lcvddaqa0v4m"},{"post_id":"ckpexfs2h0044lcvd6edw88es","tag_id":"ckpexfs1r001jlcvdc47s79cn","_id":"ckpexfs2j0048lcvdacuk5cy1"},{"post_id":"ckpexfs2i0046lcvda6io3oer","tag_id":"ckpexfs1a000klcvd0pb5hkz5","_id":"ckpexfs2k004alcvd3w6l390k"},{"post_id":"ckpexfs2j0049lcvdcfun2iht","tag_id":"ckpexfs1w0029lcvdgbrta1xg","_id":"ckpexfs2l004dlcvd1sz146p6"},{"post_id":"ckpexfs2g0042lcvdcpoafx10","tag_id":"ckpexfs2i0045lcvdeds5dhu0","_id":"ckpexfs2l004flcvd86l6f62q"},{"post_id":"ckpexftro004vlcvd93n19dlg","tag_id":"ckpexftrq004wlcvdh8ijbyrt","_id":"ckpexftrr004ylcvd4wj6hj26"}],"Tag":[{"name":"C#","_id":"ckpexfs120005lcvd5tst7ifv"},{"name":"CCNA","_id":"ckpexfs15000alcvdemdtbxf9"},{"name":"Python3","_id":"ckpexfs1a000klcvd0pb5hkz5"},{"name":"HTML","_id":"ckpexfs1d000plcvdfa1ac5h8"},{"name":"Git","_id":"ckpexfs1f000vlcvd7cuj00y3"},{"name":"JavaScript","_id":"ckpexfs1j0013lcvd9lvkf21x"},{"name":"MarkDown","_id":"ckpexfs1o0019lcvde6wdb9vx"},{"name":"Linux","_id":"ckpexfs1p001elcvd4i1age8d"},{"name":"MySQL","_id":"ckpexfs1r001jlcvdc47s79cn"},{"name":"Nginx","_id":"ckpexfs1s001olcvdg4z7cqpn"},{"name":"SQL Server","_id":"ckpexfs1s001slcvdd3j341ww"},{"name":"Vue","_id":"ckpexfs1t001xlcvda9c84bsy"},{"name":"Windows","_id":"ckpexfs1w0029lcvdgbrta1xg"},{"name":"法律","_id":"ckpexfs1x002clcvdbmkxaidt"},{"name":"JDBC","_id":"ckpexfs2i0045lcvdeds5dhu0"},{"name":"Java","_id":"ckpexftrq004wlcvdh8ijbyrt"}]}}