<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ASP.NET —— 入门笔记</title>
    <url>/2021/08/04/ASP.NET%20%E2%80%94%20%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="ASP-NET-入门笔记"><a href="#ASP-NET-入门笔记" class="headerlink" title="ASP.NET-入门笔记"></a>ASP.NET-入门笔记</h1><p>[toc]</p>
<h2 id="1-环境"><a href="#1-环境" class="headerlink" title="1. 环境"></a>1. 环境</h2><h3 id="1-1-工具"><a href="#1-1-工具" class="headerlink" title="1.1 工具"></a>1.1 工具</h3><p>安装顺序：【IIS必须安装在VS前，不然需要在VS的安装路径下找到命令行，注册到 iis】</p>
<ul>
<li>SQL Server2012 </li>
<li> IIS</li>
<li> VS2012 (.NETv2.0) </li>
</ul>
<h3 id="1-2-NET注册IIS【当安装顺序有误时】"><a href="#1-2-NET注册IIS【当安装顺序有误时】" class="headerlink" title="1.2 .NET注册IIS【当安装顺序有误时】"></a>1.2 .NET注册IIS【当安装顺序有误时】</h3><p>微软官网:<code>https://www.microsoft.com/en-us/download/</code><br><a href="https://www.microsoft.com/en-us/download/">微软官网</a></p>
<ul>
<li>asp.net4.0注册：</li>
</ul>
<blockquote>
<p>打开程序-运行-cmd:输入一下命令重新注册IIS<br><code>C:\WINDOWS\Microsoft.NET\Framework64\v4.0.30319\aspnet_regiis.exe -i</code></p>
</blockquote>
<ul>
<li>asp.net2.0注册：</li>
</ul>
<blockquote>
<p><code>C:\WINDOWS\Microsoft.NET\Framework64\v2.0.50727\aspnet_regiis.exe -i</code></p>
</blockquote>
<h3 id="1-3-IIS的安装及配置"><a href="#1-3-IIS的安装及配置" class="headerlink" title="1.3 IIS的安装及配置"></a>1.3 IIS的安装及配置</h3><p><img src="https://img-blog.csdnimg.cn/20201208105135509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/2020120810525914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208105342212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208105514125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208105612468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>一路 “下一步”</p>
<h3 id="1-4-配置IIS"><a href="#1-4-配置IIS" class="headerlink" title="1.4 配置IIS"></a>1.4 配置IIS</h3><p><img src="https://img-blog.csdnimg.cn/20201208111241900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>自己建一个应用程序池<br><img src="https://img-blog.csdnimg.cn/20201208111513633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208111822740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208111920380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208112047663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208112233269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>默认文档的名字=》设为项目中要作为 首页的页面的文件名<br><img src="https://img-blog.csdnimg.cn/20201208112317624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="1-5-使用VS-打开站点，进行编辑代码"><a href="#1-5-使用VS-打开站点，进行编辑代码" class="headerlink" title="1.5 使用VS 打开站点，进行编辑代码"></a>1.5 使用VS 打开站点，进行编辑代码</h3><p><img src="https://img-blog.csdnimg.cn/20201208112846738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208112923434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208113058844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208113141199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208113313339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="2-添加母版页"><a href="#2-添加母版页" class="headerlink" title="2. 添加母版页"></a>2. 添加母版页</h2><p><img src="https://img-blog.csdnimg.cn/20201208113534864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208113623603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020120811391559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="3-添加主题、样式、Skin"><a href="#3-添加主题、样式、Skin" class="headerlink" title="3. 添加主题、样式、Skin"></a>3. 添加主题、样式、Skin</h2><p>一个站点可以有多个主题【但只能应用1个，主题相当于文件夹】，每个主题由 多个css文件和 skin文件构成<br><img src="https://img-blog.csdnimg.cn/20201208114303547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208114407482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>css文件用于调整 html 标签的样式<br>【一般使用<strong>类名</strong>调整<strong>样式</strong>，<strong>ID</strong>供 <strong>后端代码</strong>使用，<strong>skinID</strong>调整<strong>控件样式</strong>】<br>【控件要使用css样式，必须使用 CssClass=”样式名”】<br><img src="https://img-blog.csdnimg.cn/20201208114433403.png" alt="在这里插入图片描述"></p>
<h2 id="3-应用主题"><a href="#3-应用主题" class="headerlink" title="3. 应用主题"></a>3. 应用主题</h2><p><img src="https://img-blog.csdnimg.cn/20201208115644546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>删除原来的页面，添加使用 “主题” 的页面<br><img src="https://img-blog.csdnimg.cn/20201208115925372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208115947923.png" alt="在这里插入图片描述"></p>
<h2 id="3-使用母版页创建页面"><a href="#3-使用母版页创建页面" class="headerlink" title="3. 使用母版页创建页面"></a>3. 使用母版页创建页面</h2><p><img src="https://img-blog.csdnimg.cn/2020120812022881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208120327266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208120423763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="4-添加站点地图"><a href="#4-添加站点地图" class="headerlink" title="4. 添加站点地图"></a>4. 添加站点地图</h2><p><img src="https://img-blog.csdnimg.cn/2020120812055265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>叶子节点使用自闭合标签，非叶子节点使用双标签<br><img src="https://img-blog.csdnimg.cn/20201208121116863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="5-网站Logo"><a href="#5-网站Logo" class="headerlink" title="5. 网站Logo"></a>5. 网站Logo</h2><p>打开 PS,设计Logo,保存为png格式，并放入网站的主题文件夹内  </p>
<ul>
<li>  宽：20cm  ;  </li>
<li> 高：2cm  ;  </li>
<li> 分辨率：72像素/英寸；  </li>
<li>颜色模式：RGB 8位；  <pre><code>              (高度一般为页面的10%，宽度为高度的4~5倍)  
          拖入image 控件，设置图片的路径，显示图片
</code></pre>
</li>
</ul>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">&lt;asp:Image ID=<span class="string">&quot;Image1&quot;</span> ImageURL=<span class="string">&quot;~/App_Themes/主题1/logo.png&quot;</span> runat=<span class="string">&quot;server&quot;</span> /&gt;	  </span><br></pre></td></tr></table></figure>
<h2 id="6-数据库设置"><a href="#6-数据库设置" class="headerlink" title="6. 数据库设置"></a>6. 数据库设置</h2><ol>
<li>准备好1个数据库 </li>
<li>【管理员方式打开数据库DBMS】<br><img src="https://img-blog.csdnimg.cn/20201208122238288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208122309196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208122332430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208122443767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20201208122839385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208122920323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20201208123146273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020120812321557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>设置权限<br><img src="https://img-blog.csdnimg.cn/202012081233217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201208123542685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="7-网站连接数据库"><a href="#7-网站连接数据库" class="headerlink" title="7. 网站连接数据库"></a>7. 网站连接数据库</h2><ul>
<li>随便在1个页面中 拖入 “数据源控件”</li>
<li>以可视化的方式连接数据库【目的是：在web.cofig中得到数据库的连接字符串】</li>
<li>删除数据源控件<blockquote>
<ul>
<li> 左下角切换到设计视图  </li>
<li> 控件右上角的箭头  </li>
<li> 配置数据源  </li>
<li>展开+号，可以看到连接数据库的字符串，然后单击新建连接  </li>
<li>sqlServer   </li>
<li>服务器名，输入你的数据库所在的实例名  </li>
<li> 登录数据库验证方式，有你的数据库创建时的设定来决定  </li>
<li> 下方，选择你的数据库，测试一下连接  </li>
<li> 多了一个链接字符串  </li>
<li>打上√，这样连接字符串就自动写进了你的web.config中  </li>
<li>【下一步，就建好了连接，并同时进入数据查询界面，<pre><code>         为你的数据源控件准备一段查询语句】  
</code></pre>
</li>
</ul>
</blockquote>
</li>
</ul>
<p>web.config就多了一段sql的相关代码 【Data Source=数据库所在电脑的主机名】 .</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">&lt;connectionStrings&gt;</span><br><span class="line">   		 &lt;<span class="keyword">add</span> 	name=<span class="string">&quot;CompanySalesConnectionString&quot;</span> </span><br><span class="line">   				connectionString=<span class="string">&quot;Data Source=WIN-JM8KUC1NODF;</span></span><br><span class="line"><span class="string">   				Initial Catalog=CompanySales;</span></span><br><span class="line"><span class="string">   				Integrated Security=True&quot;</span></span><br><span class="line">       			providerName=<span class="string">&quot;System.Data.SqlClient&quot;</span> /&gt;</span><br><span class="line">&lt;/connectionStrings&gt;</span><br></pre></td></tr></table></figure>


<h2 id="8-数据库操作类"><a href="#8-数据库操作类" class="headerlink" title="8. 数据库操作类"></a>8. 数据库操作类</h2><p>数据库访问类的编写步骤：</p>
<ul>
<li>  在任一页面放置 数据源控件 ，以可视化的方式创建  <strong>连接字符串</strong></li>
<li>  定义1个私有的静态 SqlConnection  属性，并 编写该属性的getter 访问器</li>
<li>  编写 静态 获取数据集的方法【及其重载方法】</li>
<li>  编写 静态 执行SQL语句的 方法【及其重载方法】</li>
<li>  编写 静态 关闭 sqlConnection 的 方法</li>
</ul>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Web;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Data;  <span class="comment">//针对所有类型的数据库</span></span><br><span class="line"><span class="keyword">using</span> System.Data.SqlClient;  <span class="comment">//针对SQL</span></span><br><span class="line"><span class="keyword">using</span> System.Configuration;  <span class="comment">//针对web.config</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> DBClass 的摘要说明</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DBClass</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//数据库连接</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlConnection connection;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlConnection Connection</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            String connectionString = ConfigurationManager.ConnectionStrings[<span class="string">&quot;SchoolConnectionString&quot;</span>].ConnectionString;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (connection == <span class="literal">null</span> || connection.State == ConnectionState.Closed)</span><br><span class="line">            &#123;</span><br><span class="line">                connection = <span class="keyword">new</span> SqlConnection(connectionString);</span><br><span class="line">                connection.Open();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> connection;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//形成记录集</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataTable <span class="title">GetDataSet</span>(<span class="params">String sql</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        SqlCommand command = <span class="keyword">new</span> SqlCommand(sql, Connection); <span class="comment">//静态类的方便之处，省去了new</span></span><br><span class="line">        DataSet ds = <span class="keyword">new</span> DataSet();<span class="comment">//用DataSet()实例化(new)出1个ds,变量ds就有了内存</span></span><br><span class="line">        SqlDataAdapter da = <span class="keyword">new</span> SqlDataAdapter(command);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * da负责 ：</span></span><br><span class="line"><span class="comment">                       1. 按照command指定的数据库连接Connection ；</span></span><br><span class="line"><span class="comment">                       2. 按照 sql给出的 SQL的脚本要求，</span></span><br><span class="line"><span class="comment">         *                  从数据库中 查询并且复制 1份数据Fill(注入到ds中)，</span></span><br><span class="line"><span class="comment">                            并自动解除对数据库的独占，等待程序结束。</span></span><br><span class="line"><span class="comment">                             比如：</span></span><br><span class="line"><span class="comment">                                    “确定”按钮的click 事件触发，da把所有更改 写回数据库</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        da.Fill(ds); <span class="comment">//da把SQL中复制的数据注入到数据库</span></span><br><span class="line">        <span class="keyword">return</span> ds.Tables[<span class="number">0</span>];<span class="comment">//ds 类似于 select 后得到的表，所以有Tables属性，返回 ds.Tables[0]即第一个表</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法重载 </span></span><br><span class="line">    <span class="comment">//c#【重载】的好处，避免了名目繁多</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//第一个方法：常用的就是看看数据，select然后GridView到web窗体上</span></span><br><span class="line">    <span class="comment">//第二个方法：增加了一个数组参数，比如你要删除数据，就拿这个数组来指示你删除哪个。</span></span><br><span class="line">    <span class="comment">//至于记录集的形成方式，两个一样，发挥关键作用的是那个SqlDataAdapter 类型的 da 对象</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 真同名，连大小写都一样，</span></span><br><span class="line"><span class="comment">     *一种东西，两个含义:</span></span><br><span class="line"><span class="comment">     *     前一个，只有一个string类型的参数 sql，</span></span><br><span class="line"><span class="comment">     *     后一个有两个参数，除了string类型的参数 sql，</span></span><br><span class="line"><span class="comment">     *     还有一个SqlParameter[] 类型的参数 sqlparameter</span></span><br><span class="line"><span class="comment">           增加了这个数组类型的参数，我们就可以一个一个值读，</span></span><br><span class="line"><span class="comment">     *     如果遍历下去，就不是完成一件事，而是完成了同一操作的若干件事。</span></span><br><span class="line"><span class="comment">     *     </span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataTable <span class="title">GetDataSet</span>(<span class="params">String sql, SqlParameter[] sqlparameter</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        SqlCommand command = <span class="keyword">new</span> SqlCommand(sql, Connection);</span><br><span class="line">        <span class="keyword">foreach</span> (SqlParameter parameter <span class="keyword">in</span> sqlparameter)</span><br><span class="line">        &#123;</span><br><span class="line">            command.Parameters.Add(parameter); <span class="comment">//sqlparameter是一个数组，用来替换command的某一个位置的参数</span></span><br><span class="line">        &#125;</span><br><span class="line">        DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">        SqlDataAdapter da = <span class="keyword">new</span> SqlDataAdapter(command);</span><br><span class="line"></span><br><span class="line">        da.Fill(ds);</span><br><span class="line">        <span class="keyword">return</span> ds.Tables[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">ExecuteSql</span>(<span class="params">String sql</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        SqlCommand command = <span class="keyword">new</span> SqlCommand(sql, Connection);</span><br><span class="line">        <span class="keyword">return</span> command.ExecuteNonQuery();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">ExecuteSql</span>(<span class="params">String sql, SqlParameter[] sqlparameter</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        SqlCommand command = <span class="keyword">new</span> SqlCommand(sql, Connection);</span><br><span class="line">        <span class="keyword">foreach</span> (SqlParameter parameter <span class="keyword">in</span> sqlparameter)</span><br><span class="line">        &#123;</span><br><span class="line">            command.Parameters.Add(parameter);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> command.ExecuteNonQuery();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">InsertSql</span>(<span class="params"><span class="built_in">string</span> sql</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        SqlCommand sc = <span class="keyword">new</span> SqlCommand(sql,Connection);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> sc.ExecuteNonQuery();</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">DeleteSql</span>(<span class="params"><span class="built_in">string</span> sql</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        SqlCommand sc = <span class="keyword">new</span> SqlCommand(sql, Connection);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sc.ExecuteNonQuery();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">UpdateSql</span>(<span class="params"><span class="built_in">string</span> sql</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        SqlCommand sc = <span class="keyword">new</span> SqlCommand(sql, Connection);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sc.ExecuteNonQuery();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">CloseConn</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        connection.Close();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">									</span><br></pre></td></tr></table></figure>
<h2 id="10-ADO【数据库操作的驱动】"><a href="#10-ADO【数据库操作的驱动】" class="headerlink" title="10. ADO【数据库操作的驱动】"></a>10. ADO【数据库操作的驱动】</h2><p>asp.net 数据对象【类似 jdbc】</p>
<ul>
<li>JDBC：导入对应的jar包；使用 maven</li>
<li>C#：引入 DLL；使用 nuget</li>
</ul>
<h3 id="10-1-ADO-与-JDBC-的对比"><a href="#10-1-ADO-与-JDBC-的对比" class="headerlink" title="10.1 ADO 与 JDBC 的对比"></a>10.1 ADO 与 JDBC 的对比</h3><p><a href="https://blog.csdn.net/qingming7573/article/details/53143180">ADO 与 JDBC 的对比—链接</a></p>
<h3 id="10-2-ADO-的几种对象"><a href="#10-2-ADO-的几种对象" class="headerlink" title="10.2 ADO 的几种对象"></a>10.2 ADO 的几种对象</h3><p><img src="https://img-blog.csdnimg.cn/20201208132618212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>后端</category>
        <category>C#</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-ASP.NET_WebForm_毕设笔记</title>
    <url>/2021/08/04/ASP.NET_WebForm_%E6%AF%95%E8%AE%BE%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="2020-ASP-NET-WebForm-毕设笔记"><a href="#2020-ASP-NET-WebForm-毕设笔记" class="headerlink" title="2020-ASP.NET_WebForm_毕设笔记"></a>2020-ASP.NET_WebForm_毕设笔记</h1><p>[toc]</p>
<h2 id="1-整体概述"><a href="#1-整体概述" class="headerlink" title="1. 整体概述"></a>1. 整体概述</h2><h3 id="1-1-该电子商城的页面"><a href="#1-1-该电子商城的页面" class="headerlink" title="1.1 该电子商城的页面"></a>1.1 该电子商城的<strong>页面</strong></h3><ul>
<li>  首页</li>
<li>  分类页【包含：一级分类/二级分类】</li>
<li>  搜索页</li>
<li>  商品详情页</li>
<li>  注册页</li>
<li>  登录页</li>
<li>  忘记密码【即：修改密码页】</li>
<li>用户中心<ul>
<li>  基本信息页</li>
<li>  地址管理</li>
<li>  收款码管理</li>
<li>  用户管理</li>
<li>  商品管理</li>
</ul>
</li>
<li>  订单中心</li>
<li>  订单详情</li>
<li>  订单录入</li>
<li>  购物车</li>
</ul>
<h3 id="1-2-功能模块图"><a href="#1-2-功能模块图" class="headerlink" title="1.2 功能模块图"></a>1.2 功能模块图</h3><p><img src="https://z3.ax1x.com/2021/06/02/2QIm9S.png" alt="1"></p>
<h3 id="1-3-样式"><a href="#1-3-样式" class="headerlink" title="1.3 样式"></a>1.3 样式</h3><ul>
<li><p>  该项目主要使用 【Bootstrap4 +外联css + 内联css + Jquery 样式】</p>
</li>
<li><p>  由于需要使用 Bootstrap4 ，因此 在页面需要先导入Jquery ，再导入Bootstrap4 【因为Bootstrap4 有部分功能是基于Jquery开发的】  (本项目是在母版页导入)：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;/App_Themes/主题1/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/App_Themes/主题1/bootstrap/js/bootstrap.bundle.min.js&quot;</span>&gt;</span>		<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>    </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/App_Themes/主题1/bootstrap/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>
<li><p>  在页面标签显示小图标：【分别设置  aspx   和  webconfig 】</p>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;link rel=<span class="string">&quot;icon&quot;</span> href=<span class="string">&quot;/App_Themes/主题1/img/GM.png&quot;</span> type=<span class="string">&quot;image/x-icon&quot;</span> /&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./App_Themes/主题1/img/GM.png&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//在system.webServer标签内部输入，且在IIS中注册.woff2格式</span><br><span class="line"><span class="tag">&lt;<span class="name">staticContent</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mimeMap</span> <span class="attr">fileExtension</span>=<span class="string">&quot;.woff2&quot;</span> <span class="attr">mimeType</span>=<span class="string">&quot;application/x-font-woff&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">staticContent</span>&gt;</span></span><br></pre></td></tr></table></figure>



<ul>
<li><p>关联主题</p>
<ul>
<li>  在web.config文件中的<code>&lt;configuration&gt; &lt;configuration&gt;</code>内部输入：</li>
</ul>
  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">system.web</span>&gt;</span></span><br><span class="line">  	<span class="tag">&lt;<span class="name">pages</span> <span class="attr">theme</span>=<span class="string">&quot;主题1&quot;</span> /&gt;</span></span><br><span class="line">  	<span class="tag">&lt;<span class="name">compilation</span> <span class="attr">debug</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">  	<span class="tag">&lt;<span class="name">sessionState</span> <span class="attr">mode</span>=<span class="string">&quot;StateServer&quot;</span> <span class="attr">cookieless</span>=<span class="string">&quot;false&quot;</span> 					<span class="attr">timeout</span>=<span class="string">&quot;480&quot;</span>/&gt;</span>  </span><br><span class="line">    	</span><br><span class="line"><span class="tag">&lt;/<span class="name">system.web</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>  在以上代码中 <strong>sessionState</strong> 标签是为了设置网站中的<strong>session有效时间</strong>，</p>
<p>  <strong>sessionState</strong>的几个属性的参数：</p>
<ul>
<li>  mode属性：</li>
</ul>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">	1. InProc：session保存在进程(IIS)内部，性能好，但容易丢失</span><br><span class="line"></span><br><span class="line">	2. StateServer：保存在进程外，需要启动 `asp.net State Service的服务` ，</span><br><span class="line">		session在有效期内除非重启电脑或关闭服务，否则一直保存直到失效时间自动失效</span><br><span class="line"></span><br><span class="line">	3. StateServer：保存在进程外，需要启动`asp.net State Service的服务`，</span><br><span class="line">		session在有效期内除非重启电脑或关闭服务，否则一直保存直到失效时间自动失效</span><br><span class="line"></span><br><span class="line">	4. SQLServer: 保存在数据库中，在标签中设置数据库的ip地址	</span><br><span class="line">    	`stateConnectionString=&#x27;tcpip=127.0.0.1:42424&#x27;`，部分数据类型需要序列化</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>

<ul>
<li>  cookieless属性：</li>
</ul>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">	</span><br><span class="line">	1. true: 在浏览器禁用cookie，</span><br><span class="line">		使用url保存cookie,使用这种方法保存cookie时如果要跳转页面，</span><br><span class="line">		不能直接覆盖地址栏的值，否则session会失效。</span><br><span class="line">	</span><br><span class="line">        示例：`http://localhost/ABC/(ulqsek45heu)/default.aspx`</span><br><span class="line">                【小括号内的就是SessionID】</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">    2. false:【默认】，在浏览器启用cookie</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*/</span><br></pre></td></tr></table></figure>
<p>  ​        </p>
<ul>
<li>  timeout属性： <strong>分钟数</strong>，默认 20 min</li>
</ul>
</li>
</ul>
<h3 id="1-4-收款码和商品图片"><a href="#1-4-收款码和商品图片" class="headerlink" title="1.4 收款码和商品图片"></a>1.4 收款码和商品图片</h3><p>收款码和商品图片  保存  在项目文件夹下，数据库中 保存 图片路径。</p>
<h3 id="1-5-数据库访问类"><a href="#1-5-数据库访问类" class="headerlink" title="1.5 数据库访问类"></a>1.5 数据库访问类</h3><p>数据库访问类的编写步骤：</p>
<ul>
<li>  在任一页面放置 数据源控件 ，以可视化的方式创建  <strong>连接字符串</strong></li>
<li>  定义1个私有的静态 SqlConnection  属性，并 编写该属性的getter 访问器</li>
<li>  编写 获取数据集的方法</li>
<li>  编写 执行SQL语句的 方法</li>
</ul>
<h4 id="1-5-1-创建SQL连接"><a href="#1-5-1-创建SQL连接" class="headerlink" title="1.5.1 创建SQL连接"></a>1.5.1 创建SQL连接</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private static SqlConnection connection;    </span><br><span class="line">    //连接的getter 访问器</span><br><span class="line">public static SqlConnection Connection &#123;</span><br><span class="line">        get &#123;</span><br><span class="line">            string connectionString = ConfigurationManager.ConnectionStrings[&quot;OnlineMallConnectionString&quot;].ConnectionString;</span><br><span class="line">            if (connection == null || connection.State == ConnectionState.Closed) &#123;</span><br><span class="line">                connection = new SqlConnection(connectionString);</span><br><span class="line">                connection.Open();</span><br><span class="line">            &#125;</span><br><span class="line">            return connection;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>





<h4 id="1-5-2-获取数据集的方法"><a href="#1-5-2-获取数据集的方法" class="headerlink" title="1.5.2 获取数据集的方法"></a>1.5.2 获取数据集的方法</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    //获取数据集的方法</span><br><span class="line">    public static DataTable GetDataSet(string sql) &#123;</span><br><span class="line">        SqlCommand cmd = new SqlCommand(sql, Connection);</span><br><span class="line">        DataSet ds = new DataSet();</span><br><span class="line">        SqlDataAdapter da = new SqlDataAdapter(cmd);</span><br><span class="line">        da.Fill(ds);</span><br><span class="line">        return ds.Tables[0];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">//------------------------------------------------------------</span><br><span class="line">    //获取数据集的方法的重载</span><br><span class="line">    public static DataTable GetDataSet(string sql, SqlParameter[] sqlparameters) &#123;</span><br><span class="line">        SqlCommand cmd = new SqlCommand(sql, Connection);</span><br><span class="line">        foreach (SqlParameter arg in sqlparameters) &#123;</span><br><span class="line">            cmd.Parameters.Add(arg);</span><br><span class="line">        &#125;</span><br><span class="line">        DataSet ds = new DataSet();</span><br><span class="line">        SqlDataAdapter da = new SqlDataAdapter(cmd);</span><br><span class="line">        da.Fill(ds);</span><br><span class="line">        return ds.Tables[0];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>







<h4 id="1-5-3-执行SQL语句的方法"><a href="#1-5-3-执行SQL语句的方法" class="headerlink" title="1.5.3 执行SQL语句的方法"></a>1.5.3 执行SQL语句的方法</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//执行sql语句的方法</span><br><span class="line"> public static int ExecuteSql(string sql)</span><br><span class="line"> &#123;</span><br><span class="line">     SqlCommand command = new SqlCommand(sql, Connection);</span><br><span class="line">     return command.ExecuteNonQuery();</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> //执行SQL语句 所需的方法的重载</span><br><span class="line"> public static int ExecuteSql(String sql, SqlParameter[] sqlparameters)</span><br><span class="line"> &#123;</span><br><span class="line">     SqlCommand command = new SqlCommand(sql, Connection);</span><br><span class="line">     foreach (SqlParameter arg in sqlparameters)</span><br><span class="line">     &#123;</span><br><span class="line">         command.Parameters.Add(arg);</span><br><span class="line">     &#125;</span><br><span class="line">     return command.ExecuteNonQuery();</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>





<h4 id="1-5-4-关闭连接"><a href="#1-5-4-关闭连接" class="headerlink" title="1.5.4 关闭连接"></a>1.5.4 关闭连接</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static bool CloseConn() &#123;</span><br><span class="line">    connection.Close();</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h3 id="1-6-数据库访问类的使用-示例"><a href="#1-6-数据库访问类的使用-示例" class="headerlink" title="1.6 数据库访问类的使用-示例"></a>1.6 数据库访问类的使用-示例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//在后端文件中 引入命名空间</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Data.SqlClient;</span><br><span class="line">using System.Collections;</span><br><span class="line"></span><br><span class="line">//--------------------获取数据集---------------------------------</span><br><span class="line">//第一种【获取数据集】</span><br><span class="line">	//创建sql语句字符串【在方法/事件内】</span><br><span class="line">	int Sid=10;</span><br><span class="line">	string sql_1 = &quot;select * from stuTable where SID=&quot;+Sid;</span><br><span class="line"></span><br><span class="line">	//获取数据集【表】    </span><br><span class="line">	DataTable StuDt =  DBClass.GetDataSet(sql_1);   </span><br><span class="line"></span><br><span class="line">	//关闭连接</span><br><span class="line">	DBClass.CloseConn();</span><br><span class="line"></span><br><span class="line">	// 声明 ArrayList 保存数据</span><br><span class="line">	ArrayList StuArr = new ArrayList();</span><br><span class="line"></span><br><span class="line">	//遍历数据集以获取所需数据</span><br><span class="line">    for(int i=0;i&lt;StuDt.Rows.Count;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        //StuArr保存 第 i 行 的第1个数据</span><br><span class="line">        //如果知道要取的值的列名，也可以根据列名取值</span><br><span class="line">        StuArr.Add(StuDt.Rows[i][0]);         </span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">//第二种【获取数据集】</span><br><span class="line">	int Sid = 10;</span><br><span class="line">	string name = &quot;小明&quot;;</span><br><span class="line">	string sql = &quot;select * from stuTb where SID=@Sid and Sname=@name&quot;;</span><br><span class="line">	SqlParameter[] para = new SqlParameter[]</span><br><span class="line">    &#123;</span><br><span class="line">        new SqlParameter(&quot;@Sid&quot;,Sid),</span><br><span class="line">        new SqlParameter(&quot;@name&quot;,name)</span><br><span class="line">    &#125;</span><br><span class="line">	DBClass.GetDataSet(sql,para)；</span><br><span class="line"></span><br><span class="line">//-----------------------执行SQL----------------------------</span><br><span class="line">//第一种【执行SQL】</span><br><span class="line">    //执行sql语句(增/删/改) </span><br><span class="line">	string sql_2 = &quot;insert into StuTable values(10,&#x27;小米&#x27;,&#x27;计算机系&#x27;)&quot;;</span><br><span class="line">	int impact_Rows_Num = DBClass.ExecuteSql(sql_2);</span><br><span class="line"></span><br><span class="line">//第二种【执行SQL,类似获取数据集的第二种】</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//-----------------------判断单元格是否为空------------------------</span><br><span class="line">//判断单元格是否为空</span><br><span class="line">	 if (dt1.Rows[0][0] is DBNull)</span><br><span class="line">     &#123;</span><br><span class="line">         //代码。。。</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="1-7-母版页"><a href="#1-7-母版页" class="headerlink" title="1.7 母版页"></a>1.7 母版页</h3><p>母板页只放置公共部分，母版页中会有1个占位符。所有根据母版页生成的页面，其与母版页不同的代码，实际上都是写在占位符中的。并且，占位符可以根据需要，自己拖出占位符控件</p>
<p>前端：</p>
<ul>
<li>  头部   ：个人中心，登录，注册，购物车等</li>
<li>  底部   ：站点 相关信息</li>
</ul>
<p>后端：</p>
<ul>
<li><p>Page_Load事件 中 判断session中是否有用户名信息【即：是否登录】</p>
<ul>
<li>  若 没登录【默认】：显示 - 【首页，登录，注册，购物车等几个按钮】</li>
<li>  若登录：清除头部nav 中的【登录，注册】按钮，替换上【个人中心按钮】</li>
</ul>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> this.top2.Controls.Remove(LoginPagebtn);</span><br><span class="line">//个人中心</span><br><span class="line">LinkButton myCenterPagebtn = new LinkButton();</span><br><span class="line"></span><br><span class="line">myCenterPagebtn.ID = &quot;myCenterPagebtn&quot;;</span><br><span class="line"></span><br><span class="line">myCenterPagebtn.CssClass = &quot;linkbtn&quot;;</span><br><span class="line"></span><br><span class="line">myCenterPagebtn.Text = Session[&quot;UserName&quot;].ToString() + &quot; 的个人中心&quot;;</span><br><span class="line"></span><br><span class="line">myCenterPagebtn.Click += new EventHandler(userbtn_Click);</span><br><span class="line"></span><br><span class="line">this.top2.Controls.Add(myCenterPagebtn);</span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>退出登录</strong>按钮的事件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//清除浏览器缓存    </span><br><span class="line">	public void ClearClientPageCache()</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        Response.Buffer = true;</span><br><span class="line">        Response.ExpiresAbsolute = DateTime.Now.AddDays(-1);</span><br><span class="line">        Response.Cache.SetExpires(DateTime.Now.AddDays(-1));</span><br><span class="line">        Response.Expires = 0;</span><br><span class="line">        Response.CacheControl = &quot;no-cache&quot;;</span><br><span class="line">        Response.Cache.SetNoStore();</span><br><span class="line"></span><br><span class="line">    &#125;    </span><br><span class="line">//退出登录</span><br><span class="line">    protected void LogOutbtn_Click(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        Session[&quot;UserName&quot;] = null;</span><br><span class="line">        Session[&quot;UserPwd&quot;] = null;</span><br><span class="line">        ClearClientPageCache();</span><br><span class="line">        Response.Redirect(&quot;~/Default.aspx&quot;);</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="1-8-首页"><a href="#1-8-首页" class="headerlink" title="1.8 首页"></a>1.8 首页</h3><ul>
<li><p>轮播图左侧——分类导航</p>
<ul>
<li>  设置好布局，子分类默认【display:none;】</li>
<li>  鼠标触发jquery 的<strong>mouseenter</strong>事件时， display:block;</li>
<li>  鼠标触发jquery 的<strong>mouseleave</strong>事件时， display:none;</li>
<li>  左侧主分类<strong>前端</strong>使用 ul+li , li 的 id包含索引，在jQuery事件中利用索引*偏移量实现 【id =“cate-0”】 。<strong>后端</strong>利用 <code>div.innerHtml = “ html字符串 ”; </code>渲染</li>
</ul>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;.left-nav&gt;li&quot;</span>).mouseenter(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> id = <span class="built_in">parseInt</span>(e.target.id.split(<span class="string">&quot;-&quot;</span>)[<span class="number">1</span>]);</span><br><span class="line">                $(<span class="string">&quot;.subCategory&quot;</span>).scrollTop(id * <span class="number">100</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li>
<li><p>  轮播图使用 Bootstrap4 的轮播图组件</p>
</li>
<li><p>商品卡片：</p>
<ul>
<li>  用 Hashtable  存放 单个商品的相关信息</li>
<li>用 ArrayList  存放 页面中的所有商品【Hashtable  】</li>
</ul>
</li>
</ul>
<h3 id="1-9-搜索页"><a href="#1-9-搜索页" class="headerlink" title="1.9 搜索页"></a>1.9 搜索页</h3><p>搜索框，数据库中返回数据，排序。</p>
<h2 id="2-常用控件的使用技巧"><a href="#2-常用控件的使用技巧" class="headerlink" title="2. 常用控件的使用技巧"></a>2. 常用控件的使用技巧</h2><p><strong>注意：</strong></p>
<ul>
<li><p>所有 <strong>asp.net控件</strong> 最终都会<strong>编译</strong>成  <strong>html标签</strong> 呈现在浏览器</p>
<ul>
<li>  Label  -&gt;  span</li>
<li>  TextBox  -&gt; input: textbox</li>
<li>  Button   -&gt; input: submit</li>
</ul>
</li>
<li><p>如果<strong>控件是动态生成</strong>的，需要在<strong>事件中访问当前操作的控件</strong>时，可以在new控件时将控件ID按自己的需求更改，将要传的参数通过分割符以字符串的形式与ID拼接，要在事件中使用时，先强制转化为控件，再进行字符串的分割等操作</p>
<p>  示例：</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//生成控件</span><br><span class="line">protected void Page_Load(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    Button btn_1 = new BUtton();</span><br><span class="line">    btn_1.ID = &quot;btn-1&quot;;    </span><br><span class="line">    btn_1.Text = &quot;点我&quot;;</span><br><span class="line">    btn_1.Click += new EventHandler(btn_1_Click);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">protected void btn_1_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //例如：该按钮的id格式为：btn-商品编号</span><br><span class="line">    //字符串的Split(&#x27;分隔符&#x27;);方法最后生成的是一个数组</span><br><span class="line">    Button  btn1 = (Button)sender;</span><br><span class="line">    string pid = btn1.ID.Split(&#x27;-&#x27;)[1];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>  控件的操作</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//假设前端已经有了控件 Pannerl_1</span><br><span class="line">//后端</span><br><span class="line"></span><br><span class="line">	Button btn_1  = new Button();</span><br><span class="line"></span><br><span class="line">//添加控件</span><br><span class="line">	Pannerl_1。Controls.Add(控件名);</span><br><span class="line">//删除控件</span><br><span class="line">	Pannerl_1。Controls.Remove(控件名);</span><br><span class="line">//清空控件</span><br><span class="line">	Pannerl_1。Controls.Clear();</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>  表单控件的相关信息会传到  <strong>Request</strong> 的 <strong>formdata</strong> 中</li>
</ul>
<h3 id="2-1-事件："><a href="#2-1-事件：" class="headerlink" title="2.1 事件："></a>2.1 事件：</h3><ul>
<li>  控件的事件名规则一般为<code>控件ID_事件</code></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//前端</span><br><span class="line">    &lt;asp:Button ID=&quot;btn_1&quot; Text=&quot;按钮1&quot; OnClick=&quot;btn_1_OnClick&quot;&gt;</span><br><span class="line">    &lt;/asp:Button&gt;</span><br><span class="line"></span><br><span class="line">//后端</span><br><span class="line">    protected void btn_1_OnClick(object sender, EventArgs e)  </span><br><span class="line">    &#123;</span><br><span class="line">        //相应的代码。。。</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>  动态生成控件-绑定事件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//生成控件</span><br><span class="line">protected void Page_Load(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    Button btn_1 = new BUtton();    </span><br><span class="line">    btn_1.Text = &quot;点我&quot;;</span><br><span class="line">    //绑定事件</span><br><span class="line">    btn_1.Click += new EventHandler(btn_1_Click);</span><br><span class="line">&#125;</span><br><span class="line">//事件</span><br><span class="line">protected void btn_1_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">   //事件代码。。。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h3 id="2-2-只需加载一次的代码"><a href="#2-2-只需加载一次的代码" class="headerlink" title="2.2 只需加载一次的代码"></a>2.2 只需加载一次的代码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">protected void Page_Load(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    if(!isPostBack)&#123;</span><br><span class="line">        //第一次加载页面时，执行的代码</span><br><span class="line">    &#125; </span><br><span class="line">    //每次页面加载都执行的代码</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>









<h3 id="2-3-Session的使用"><a href="#2-3-Session的使用" class="headerlink" title="2.3 Session的使用"></a>2.3 Session的使用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">protected void Page_Load(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //存session</span><br><span class="line">   		Session[&quot;username&quot;] = this.txtbox_1.Text.Trim();</span><br><span class="line">    </span><br><span class="line">    //取session【由于session是1个对象，因此使用时一般需要强制转化】</span><br><span class="line">    	string username = Session[&quot;username&quot;].toString();</span><br><span class="line">    </span><br><span class="line">    //判断Session是否为空</span><br><span class="line">    	if(!(Session[&quot;username&quot;] == null))</span><br><span class="line">        &#123;</span><br><span class="line">            //代码            </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>











<h3 id="2-4-html标签-与-asp-net-控件"><a href="#2-4-html标签-与-asp-net-控件" class="headerlink" title="2.4 html标签 与 asp.net 控件"></a>2.4 html标签 与 asp.net 控件</h3><ul>
<li><p>  后端控件  中加上1句 <code>CssClass=&quot;css类名&quot;</code>来设置相应的 css样式</p>
</li>
<li><p>  html标签 中加上1句 <code>runat=&quot;server&quot;</code> 就能在后端用 ID访问到</p>
</li>
</ul>
<p>如：</p>
<figure class="highlight gml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//前端</span></span><br><span class="line">	&lt;<span class="keyword">div</span> <span class="symbol">id</span>=<span class="string">&quot;a1&quot;</span> runat=<span class="string">&quot;server&quot;</span>&gt;你好！&lt;<span class="keyword">div</span>&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;asp:TextBox ID=<span class="string">&quot;txtbox_a&quot;</span> CssClass=<span class="string">&quot;txtbox_1&quot;</span> runat=<span class="string">&quot;server&quot;</span> &gt;	</span><br><span class="line">    &lt;/asp:TextBox&gt;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"><span class="comment">//后端</span></span><br><span class="line">	a1.innerHtml=<span class="string">&quot;hello world!&quot;</span>;</span><br><span class="line">	</span><br><span class="line">	txtbox_a.Text = <span class="string">&quot;你好&quot;</span>;</span><br></pre></td></tr></table></figure>









<h3 id="2-5-地址栏传参"><a href="#2-5-地址栏传参" class="headerlink" title="2.5 地址栏传参"></a>2.5 地址栏传参</h3><ul>
<li>  当使用地址栏传参数时，如果参数中包含中文，必须先编码，然后再在后端获取参数后解码</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//传参页-后端</span><br><span class="line">protected void imgbtn_Click(object sender, ImageClickEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    if (this.searchInput.Text != &quot;&quot;) &#123;</span><br><span class="line">        //编码</span><br><span class="line">        string KW1 =Server.UrlEncode(this.txtbox_1.Text.Trim());</span><br><span class="line">        Response.Redirect(&quot;/Pages/Search/Search.aspx?kw=&quot;+KW1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//接受参数页-后端</span><br><span class="line">protected void go_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    string tmp = Request[&quot;kw&quot;].toString();</span><br><span class="line">    //解码</span><br><span class="line">    string KW2 = Server.UrlEncode(tmp);</span><br><span class="line">    this.textbox_2.Text = KW2;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>









<h3 id="2-6-ImageButton控件"><a href="#2-6-ImageButton控件" class="headerlink" title="2.6 ImageButton控件"></a>2.6 ImageButton控件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//前端 </span><br><span class="line">	&lt;asp:ImageButton CssClass=&quot;imgBtn&quot; ID=&quot;imgbtn&quot; runat=&quot;server&quot; ImageUrl=&quot;~/App_Themes/主题1/img/img.png&quot; OnClick=&quot;imgBtn_Click&quot; /&gt;</span><br><span class="line"></span><br><span class="line">//后端</span><br><span class="line">    protected void imgBtn_Click(object sender, ImageClickEventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        search_Container.InnerHtml = &quot;&quot;;</span><br><span class="line">        Response.Redirect(&quot;./Search.aspx?kw=&quot; + 		Server.UrlEncode(this.txtbox_1.Value.Trim()));</span><br><span class="line">        ShowSearchItems(this.search_MaxBar_input.Value.Trim());</span><br><span class="line">    &#125;     </span><br></pre></td></tr></table></figure>









<h3 id="2-7-DropDownList控件"><a href="#2-7-DropDownList控件" class="headerlink" title="2.7 DropDownList控件"></a>2.7 DropDownList控件</h3><ul>
<li><p>  DropDownList控件必须设置属性<code>AutoPostBack=&quot;True&quot;</code>以保证每次<strong>更改选项</strong>都能自动<strong>传到后端</strong></p>
</li>
<li><p>DropDownList控件中的选项可以是固定的，也可以是从数据库中查询得到的</p>
<ul>
<li>  <strong>固定</strong>的选项：</li>
</ul>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//前端</span><br><span class="line">	&lt;asp:DropDownList ID=&quot;dp_1&quot; class=&quot;dp_1&quot; runat=&quot;server&quot; AutoPostBack=&quot;True&quot;  </span><br><span class="line">        OnSelectedIndexChanged=&quot;dp_1_SelectedIndexChanged&quot;&gt;</span><br><span class="line">                &lt;asp:ListItem Selected=&quot;True&quot;&gt;按价格排序&lt;/asp:ListItem&gt;</span><br><span class="line">                &lt;asp:ListItem&gt;降序&lt;/asp:ListItem&gt;</span><br><span class="line">                &lt;asp:ListItem&gt;升序&lt;/asp:ListItem&gt;</span><br><span class="line">	&lt;/asp:DropDownList&gt;</span><br><span class="line">        </span><br><span class="line">//后端</span><br><span class="line">    protected void dp_1_SelectedIndexChanged(object sender, EventArgs e)</span><br><span class="line">    &#123;   </span><br><span class="line">        //ID为dp_1的DropDownList控件在选项更改时触发的事件。。。</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>  <strong>不固定</strong>【从数据库中获得】</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 利用数据库操作类中的获取数据集方法--&gt;提取数据并存到数组或arraylist中 </span><br><span class="line">// DropDownList的DataSource属性绑定数据集</span><br><span class="line">// 执行数据绑定方法</span><br><span class="line"></span><br><span class="line"> protected void Page_Load(object sender, EventArgs e)</span><br><span class="line"> &#123;</span><br><span class="line">     DataTable dt1 = DBClass.GetDataSet(&quot;select sid from stuTable&quot;);</span><br><span class="line">     </span><br><span class="line">     ArrayList arr1 = new ArrayList();</span><br><span class="line">     </span><br><span class="line">     for(int i=0;i&lt;dt1.Rows.Count;i++)</span><br><span class="line">     &#123;</span><br><span class="line">         arr1.Add(dt1.Rows[i][0]);         </span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">     this.dp_1.DataSource = arr1;</span><br><span class="line">     this.dp_1.DataBind();     </span><br><span class="line">     </span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>









<h3 id="2-8-GridView控件"><a href="#2-8-GridView控件" class="headerlink" title="2.8 GridView控件"></a>2.8 GridView控件</h3><p><strong>基本使用步骤：</strong></p>
<ol>
<li> 拖出控件</li>
<li> 禁用自动生成列</li>
<li> 手动添加 <strong>DataField</strong>,修改字段的headerText，并为每个DataField绑定数据库中的列</li>
<li> 绑定数据源，并使用 GridView1.DataBind();</li>
<li> 【必要时，可将<strong>DataField</strong>转化为<strong>模板字符串</strong>】</li>
<li> 【添加命令字段（更新，删除，取消）】</li>
<li> 【编写事件】</li>
<li> 保存</li>
</ol>
<p><strong>编辑时的TextBox大小：</strong>调整<code>&lt;asp:BoundField&gt;&lt;/asp:BoundField&gt;</code>的<code>ControlStyle-Width</code>属性</p>
<p><strong>获取当前操作的单元格的值：</strong></p>
<ul>
<li>  普通：<code>string str = e.Row.Cells[2].Text</code></li>
<li>  编辑时：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">string str = ((TextBox)(productManageGridView.Rows[e.RowIndex].Cells[6].Controls[0])).Text.Trim();</span><br></pre></td></tr></table></figure>









<h4 id="2-8-1-GridView-的-RowEditing事件"><a href="#2-8-1-GridView-的-RowEditing事件" class="headerlink" title="2.8.1   GridView 的 RowEditing事件"></a>2.8.1   GridView 的 RowEditing事件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//编辑</span><br><span class="line">	protected void GridView1_RowEditing(object sender, GridViewEditEventArgs e)</span><br><span class="line">    &#123;	</span><br><span class="line">        GridView1.EditIndex = e.NewEditIndex;</span><br><span class="line">        GridView1.DataBind();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>







<h4 id="2-8-2-GridView-的-RowCancelingEdit事件"><a href="#2-8-2-GridView-的-RowCancelingEdit事件" class="headerlink" title="2.8.2  GridView 的 RowCancelingEdit事件"></a>2.8.2  GridView 的 RowCancelingEdit事件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//取消</span><br><span class="line">protected void GridView1_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">        GridView1.EditIndex = -1;</span><br><span class="line">        GridView1.DataBind();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h4 id="2-8-3-GridView-的-RowDeleting事件"><a href="#2-8-3-GridView-的-RowDeleting事件" class="headerlink" title="2.8.3  GridView 的 RowDeleting事件"></a>2.8.3  GridView 的 RowDeleting事件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//删除</span><br><span class="line">protected void GridView1_RowDeleting(object sender, GridViewDeleteEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //执行删除</span><br><span class="line">        string delSql = &quot;  delete addTb where pid = 1 and name=&#x27;abc&#x27;  &quot; ;</span><br><span class="line">        DBClass.ExecuteSql(delSql);</span><br><span class="line">		</span><br><span class="line">	//执行完后退出编辑模式</span><br><span class="line">        GridView1.EditIndex = -1;</span><br><span class="line"></span><br><span class="line">    //重新从数据库中获取数据集，并与GridView绑定</span><br><span class="line">        GridView1.DataBind();        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h4 id="2-8-4-GridView-的-RowUpdating事件"><a href="#2-8-4-GridView-的-RowUpdating事件" class="headerlink" title="2.8.4  GridView 的 RowUpdating事件"></a>2.8.4  GridView 的 RowUpdating事件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    TextBox  currTxtBox = (TextBox)GridView1.Rows[e.RowIndex].Cells[1].Controls[0];</span><br><span class="line">    string addrStr = currTxtBox.Text;</span><br><span class="line"></span><br><span class="line">    string upSql = &quot;update addTb set address=&#x27;&quot;+addrStr+&quot;&#x27; where sid=35&quot; ;</span><br><span class="line">    DBClass.ExecuteSql(upSql);</span><br><span class="line">    GridView1.EditIndex = -1;</span><br><span class="line">    </span><br><span class="line">    //重新获取数据集，绑定数据源，绑定</span><br><span class="line">    GridView1.DataBind();</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h4 id="2-8-5-GridView-的-RowDataBound事件【表格前面显示-行号】"><a href="#2-8-5-GridView-的-RowDataBound事件【表格前面显示-行号】" class="headerlink" title="2.8.5  GridView 的 RowDataBound事件【表格前面显示  行号】"></a>2.8.5  GridView 的 RowDataBound事件【表格前面显示  行号】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//前端：在gridview的columns标签内添加</span><br><span class="line">		&lt;asp:BoundField HeaderText=&quot;编号&quot; DataFormatString=&quot;&#123;0:Container.DataItemIndex&#125;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">//后端</span><br><span class="line">    	protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)</span><br><span class="line">    	&#123;</span><br><span class="line">            if (e.Row.RowIndex &gt;= 0)</span><br><span class="line">            &#123;</span><br><span class="line">                e.Row.Cells[0].Text = Convert.ToString(e.Row.DataItemIndex + 1);</span><br><span class="line">            &#125;</span><br><span class="line">    	&#125;</span><br></pre></td></tr></table></figure>







<h4 id="2-8-6-GridView-删除1行时弹出提示信息"><a href="#2-8-6-GridView-删除1行时弹出提示信息" class="headerlink" title="2.8.6  GridView 删除1行时弹出提示信息"></a>2.8.6  GridView 删除1行时弹出提示信息</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//数据绑定</span><br><span class="line">    protected void productManageGridView_RowDataBound(object sender, GridViewRowEventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        //如果是绑定数据行</span><br><span class="line">        if (e.Row.RowType == DataControlRowType.DataRow)</span><br><span class="line">        &#123;</span><br><span class="line">            if (e.Row.RowState == DataControlRowState.Normal || e.Row.RowState == DataControlRowState.Alternate)</span><br><span class="line">            &#123;</span><br><span class="line">               //cell[17]就是删除按钮，cell[2]是商品名</span><br><span class="line">                ((LinkButton)e.Row.Cells[17].Controls[0]).Attributes.Add(&quot;onclick&quot;, &quot;javascript:return confirm(&#x27;你确认要删除：\&quot;&quot; + e.Row.Cells[2].Text + &quot;\&quot;吗?&#x27;)&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //编号</span><br><span class="line">        if (e.Row.RowIndex &gt;= 0)</span><br><span class="line">        &#123;</span><br><span class="line">            e.Row.Cells[0].Text = Convert.ToString(e.Row.DataItemIndex + 1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>







<h4 id="2-8-7-GridView-更改分页"><a href="#2-8-7-GridView-更改分页" class="headerlink" title="2.8.7  GridView 更改分页"></a>2.8.7  GridView 更改分页</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//前端：</span><br><span class="line">//GridView属性设置：</span><br><span class="line">//	允许分页，分页大小</span><br><span class="line">//	【即：AllowPaging=&quot;True&quot; PageSize=&quot;5&quot;】</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//后端</span><br><span class="line">		</span><br><span class="line">	//更改分页</span><br><span class="line">		protected void GridView_PageIndexChanging(object sender, GridViewPageEventArgs e)</span><br><span class="line">    	&#123;</span><br><span class="line">            this.productManageGridView.PageIndex = e.NewPageIndex;</span><br><span class="line">            this.productManageGridView.DataBind();</span><br><span class="line">    	&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>













<h3 id="2-9-FileUpload-控件"><a href="#2-9-FileUpload-控件" class="headerlink" title="2.9 FileUpload 控件"></a>2.9 FileUpload 控件</h3><ul>
<li>  FileUpload 控件一般结合Button使用</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//前端</span><br><span class="line">&lt;asp:FileUpload ID=&quot;ImgFileUpload&quot; runat=&quot;server&quot; /&gt;</span><br><span class="line">&lt;asp:Button ID=&quot;okBtn&quot; runat=&quot;server&quot; Text=&quot;确定&quot; OnClick=&quot;okBtn_Click&quot; /&gt;  </span><br><span class="line">    </span><br><span class="line">//后端</span><br><span class="line">    </span><br><span class="line">//更新收款码</span><br><span class="line">protected void updateRecvCodeImgButton_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    bool fileIsValid = false;</span><br><span class="line">        if (this.updateRecvCodeImgFileUpload.HasFile)</span><br><span class="line">        &#123;</span><br><span class="line">            String fileExtension = System.IO.Path.GetExtension(this.ImgFileUpload.FileName).ToLower();</span><br><span class="line">            String restrictExtension = &quot;.png&quot;;</span><br><span class="line">            //判断拓展名</span><br><span class="line">            if (fileExtension == restrictExtension)</span><br><span class="line">            &#123;</span><br><span class="line">                fileIsValid = true;</span><br><span class="line">            &#125;</span><br><span class="line">            //判断文件是否有效</span><br><span class="line">            if (fileIsValid == true) </span><br><span class="line">            &#123;</span><br><span class="line">                try</span><br><span class="line">                &#123;</span><br><span class="line">                    //保存图片</span><br><span class="line">                    string imgUrl_Pre = &quot;/PayCodeImg/&quot;;</span><br><span class="line">                    string imgUrl = imgUrl_Pre + Session[&quot;UserName&quot;].ToString() + &quot;.png&quot;;</span><br><span class="line">                    this.ImgFileUpload.SaveAs(Server.MapPath(imgUrl));</span><br><span class="line">                    this.Label1.Text = &quot;ok&quot;;</span><br><span class="line"></span><br><span class="line">                    //更新数据库</span><br><span class="line">                    string updateRecvCodeImg = &quot;update uTb set recvimg=&#x27;&quot; + Session[&quot;UserName&quot;].ToString() + &quot;.png&#x27; where name = &#x27;&quot; + Session[&quot;UserName&quot;].ToString() + &quot;&#x27;&quot;;</span><br><span class="line">                    DBClass.ExecuteSql(updateRecvCodeImg);</span><br><span class="line">                    DBClass.CloseConn();</span><br><span class="line">                &#125;</span><br><span class="line">                catch &#123;</span><br><span class="line">                    this.Label1.Text = &quot;文件上传不成功！&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>后端</category>
        <category>C#</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>CCNA-笔记-01【非理论】</title>
    <url>/2021/08/04/CCNA-%E7%AC%94%E8%AE%B0-01%E3%80%90%E9%9D%9E%E7%90%86%E8%AE%BA%E3%80%91/</url>
    <content><![CDATA[<h1 id="CCNA-笔记【非理论】"><a href="#CCNA-笔记【非理论】" class="headerlink" title="CCNA-笔记【非理论】"></a>CCNA-笔记【非理论】</h1><p>[toc]</p>
<h2 id="第一章-计算机网络"><a href="#第一章-计算机网络" class="headerlink" title="第一章 计算机网络"></a>第一章 计算机网络</h2><h3 id="1-1-Internet的组成"><a href="#1-1-Internet的组成" class="headerlink" title="1.1 Internet的组成"></a>1.1 Internet的组成</h3><ul>
<li>实际上由 <strong>ISP + 企业网 +网民</strong>  组成。</li>
<li>用户接入ISP,不同的ISP之间也有 线路相连【但跨运营商网速慢】</li>
<li>服务器一般托管到运营商机房，为适应不同运营商之间的网速，一般服务器的机房有多个ISP 的接口。</li>
</ul>
<h3 id="1-2-局域网与广域网"><a href="#1-2-局域网与广域网" class="headerlink" title="1.2 局域网与广域网"></a>1.2 局域网与广域网</h3><h4 id="1-2-1-局域网与广域网"><a href="#1-2-1-局域网与广域网" class="headerlink" title="1.2.1 局域网与广域网"></a>1.2.1 局域网与广域网</h4><ul>
<li>局域网：自己花钱组网，带宽固定</li>
<li>广域网：借助运营商【ISP】的线路组网 ，花钱租带宽。</li>
</ul>
<h4 id="1-2-2-局域网的三层："><a href="#1-2-2-局域网的三层：" class="headerlink" title="1.2.2 局域网的三层："></a>1.2.2 局域网的三层：</h4><ul>
<li>接入层交换机：接口多，但单个口的带宽小</li>
<li>汇聚层交换机：</li>
<li>核心层交换机【路由器】：服务器接入到核心层，接口少，但单个口的带宽大</li>
</ul>
<h4 id="1-2-3-C-S-【客户机-服务器】："><a href="#1-2-3-C-S-【客户机-服务器】：" class="headerlink" title="1.2.3 C/S:【客户机/服务器】："></a>1.2.3 C/S:【客户机/服务器】：</h4><ul>
<li>一个设备是 C 还是 S 是根据角色划分的</li>
</ul>
<h4 id="1-2-4-数据传输-分层："><a href="#1-2-4-数据传输-分层：" class="headerlink" title="1.2.4 数据传输-分层："></a>1.2.4 数据传输-分层：</h4><ul>
<li>为了便于传输，先拆分成小块并编号，到达 目的地 后重组</li>
<li>每一层的变化都是独立的，底层为高层服务</li>
</ul>
<h4 id="1-2-5-OSI-7层："><a href="#1-2-5-OSI-7层：" class="headerlink" title="1.2.5 OSI-7层："></a>1.2.5 OSI-7层：</h4><ul>
<li>应用层：应用程序；</li>
<li>表示层：表示、处理数据【数据是 二进制 还是 ASCII码】；压缩、解压、加密、解密</li>
<li>会话层：维持不同应用程序的数据分割。</li>
<li>传输层：可靠/不可靠；可靠时 =》检错、纠错、重传、流控</li>
<li>网络层：根据逻辑地址选择最佳路径</li>
<li>数据链路层：利用MAC地址提供对介质的访问，只检错、不纠错</li>
<li>物理层：比特流，电压大小、线路速率、接口标准</li>
</ul>
<h4 id="1-2-6-查看会话【步骤】："><a href="#1-2-6-查看会话【步骤】：" class="headerlink" title="1.2.6 查看会话【步骤】："></a>1.2.6 查看会话【步骤】：</h4><ul>
<li><kbd>Win + R</kbd></li>
<li>输入：<code>netstat -n</code><br><img src="https://img-blog.csdnimg.cn/20201209094109324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<h4 id="1-2-7-查看程序与会话的对应关系"><a href="#1-2-7-查看程序与会话的对应关系" class="headerlink" title="1.2.7 查看程序与会话的对应关系"></a>1.2.7 查看程序与会话的对应关系</h4><ul>
<li> 管理员身份运行 cmd，入<code>netstat -nb</code><br><img src="https://img-blog.csdnimg.cn/20201209094214378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h4 id="1-2-8-找到进程所在位置【两种方法】："><a href="#1-2-8-找到进程所在位置【两种方法】：" class="headerlink" title="1.2.8 找到进程所在位置【两种方法】："></a>1.2.8 找到进程所在位置【两种方法】：</h4></li>
<li><code>Ctrl + Alt + Delete</code> =&gt; <code>任务管理器</code>  =&gt; <code>选中进程</code> =&gt; <code>右键-打开文件位置</code></li>
<li>在<code>任务管理器</code>表头<code>右键</code>=&gt; 勾选命令行  </li>
</ul>
<h4 id="1-2-9-查看运行的服务【有多种】"><a href="#1-2-9-查看运行的服务【有多种】" class="headerlink" title="1.2.9 查看运行的服务【有多种】"></a>1.2.9 查看运行的服务【有多种】</h4><ul>
<li><code>win + r</code> , 输入 <code>msconfig</code><br><img src="https://img-blog.csdnimg.cn/20201209095626352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<h4 id="1-2-10-服务与启动项的区别："><a href="#1-2-10-服务与启动项的区别：" class="headerlink" title="1.2.10 服务与启动项的区别："></a>1.2.10 服务与启动项的区别：</h4><ul>
<li>服务：只要开启服务，不管 登不登陆 都运行【针对计算机】</li>
<li>启动项：用户登录后才运行【针对用户】</li>
</ul>
<h4 id="1-2-11-UDP"><a href="#1-2-11-UDP" class="headerlink" title="1.2.11 UDP"></a>1.2.11 UDP</h4><p>不建立会话，采用广播的形式，不可靠，节省资源</p>
<h4 id="1-2-12-网络排错-和-OSI"><a href="#1-2-12-网络排错-和-OSI" class="headerlink" title="1.2.12 网络排错 和 OSI"></a>1.2.12 网络排错 和 OSI</h4><p>由底层向上层排错</p>
<ul>
<li>物理层问题：【替换法】<ol>
<li>网线是否连接正确；网线是否损坏</li>
<li>查看网卡 接受/发送数据包是否有异常【如：1方为0】</li>
<li>禁用、启用网卡，查看是否正常</li>
<li>在 <strong>设备管理器</strong> 中  重新安装网卡的<strong>驱动</strong>【右键卸载(不勾选删除)、右键扫描】</li>
</ol>
</li>
<li>数据链路层问题：<ol>
<li> MAC地址冲突</li>
<li> ADSL拨号</li>
</ol>
</li>
<li>网络层问题：<ol>
<li>网关错误</li>
<li>路由表错误</li>
</ol>
</li>
<li>应用程序问题：<ol>
<li>IE 代理错误<h4 id="1-2-13-网络安全和-OSI"><a href="#1-2-13-网络安全和-OSI" class="headerlink" title="1.2.13  网络安全和 OSI"></a>1.2.13  网络安全和 OSI</h4></li>
</ol>
</li>
<li>物理层：不要混用接口</li>
<li>数据链路层：MAC地址认证，ADSL账号密码，划分Vlan</li>
<li>物理层：路由器ACL</li>
<li>传输层：端口安全</li>
<li>应用层安全：网站安全、操作系统安全</li>
</ul>
<h4 id="1-2-14-网络设备"><a href="#1-2-14-网络设备" class="headerlink" title="1.2.14 网络设备"></a>1.2.14 网络设备</h4><p>网络设备：</p>
<ul>
<li><p>网线：双绞线=》 8根 =》 百米</p>
<ol>
<li>10M</li>
<li>100M【4根线】</li>
<li>1000M【8根线】</li>
</ol>
<ul>
<li>同种设备：交叉线</li>
<li>不同设备：直通线</li>
</ul>
</li>
<li><p>   网卡：MAC地址=》物理地址、硬件地址=》 不可更改</p>
</li>
<li><p>查看 IP地址和 MAC地址：<code>ipconfig /all</code></p>
</li>
<li><p>更改MAC地址：<br><img src="https://img-blog.csdnimg.cn/20201209103436535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201209103508130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201209103832511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201209103858212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注意：下图3中的 mac 地址不要有 “–”<br><img src="https://img-blog.csdnimg.cn/20201209104044757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>集线器：不看源地址和目的地址，只广播发送，计算机收到数据后发现不是自己的才丢弃，共享带宽，不安全。</p>
</li>
<li><p>网桥：根据数据包的源地址学习到设备的位置，只在第一次不知道目的地址时广播，在第二次发送数据时已经知道目的MAC地址就可以不用广播而直接发。独享带宽。</p>
</li>
</ul>
<p>-单工：电视台发信号</p>
<ul>
<li>半双工：对讲机，同一时间只能由一方通信</li>
<li>全双工：同时收发</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20201209105451457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201209105536874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>交换机：</p>
<ul>
<li>基于MAC地址转发数据，安全，带宽独享、全双工</li>
</ul>
<p>路由器：</p>
<ul>
<li>负责跨网段通信，一般有广域网口</li>
<li>隔绝广播【二进制全1 的目标ip，全F的 mac 】<br><img src="https://img-blog.csdnimg.cn/20201209110340850.png" alt="在这里插入图片描述"><br>计算机上设置多个IP地址：<br><img src="https://img-blog.csdnimg.cn/20201209110836160.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201209110915186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020120911094499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
]]></content>
      <categories>
        <category>网络工程</category>
        <category>CCNA</category>
      </categories>
      <tags>
        <tag>CCNA</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 编写 WebService的示例</title>
    <url>/2021/08/04/C#%20%E7%BC%96%E5%86%99%20WebService%E3%80%90WebAPI%E3%80%91%E7%9A%84%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<h1 id="C-编写-WebService的示例"><a href="#C-编写-WebService的示例" class="headerlink" title="C# 编写 WebService的示例"></a>C# 编写 WebService的示例</h1><p>@[toc]</p>
<h3 id="1-示例环境"><a href="#1-示例环境" class="headerlink" title="1. 示例环境"></a>1. 示例环境</h3><ul>
<li>windows server 2012</li>
<li>Visual Studio 2012</li>
<li>IIS 8<h3 id="2-新建web服务"><a href="#2-新建web服务" class="headerlink" title="2. 新建web服务"></a>2. 新建web服务</h3><img src="https://img-blog.csdnimg.cn/20201130183303271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130183525310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130183751637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130184425990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<p>默认生成以下代码：<br><img src="https://img-blog.csdnimg.cn/20201130184721801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>观察下图：<br><img src="https://img-blog.csdnimg.cn/20201130185048741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>由图可知：webservice其实就是 “方法” 的集合【即：一堆的方法】</p>
<ol>
<li>[WebMethod]是必须的，不能删除，<br>语法示例如下：<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">[<span class="meta">WebMethod(属性名=属性值)</span>]</span><br></pre></td></tr></table></figure>
在一个<strong>WebService类</strong>中，一个 <strong>Public的方法 只有拥有</strong> <em><strong>WebMethod</strong></em>   <strong>才能被访问</strong> 。<br>WebMethod有6个属性：<blockquote>
<ul>
<li>Description</li>
<li>EnableSession</li>
<li>MessageName</li>
<li>TransactionOption</li>
<li>CacheDuration</li>
<li>BufferResponse</li>
</ul>
</blockquote>
</li>
</ol>
<p>示例：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 描述信息</span></span><br><span class="line">[<span class="meta">WebMethod(Description=<span class="meta-string">&quot;这是一个 add() 方法&quot;</span>)</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 允许该WebMethod方法访问session的值</span></span><br><span class="line"><span class="comment">// 默认情况下WebMethod不能访问session中的值</span></span><br><span class="line">[<span class="meta">WebMethod(EnableSession = true)</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>[WebMethod] 的下面 紧跟  <strong>“函数” 或 “方法”</strong><br>示例：</li>
</ol>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">[<span class="meta">WebMethod(Description=<span class="meta-string">&quot;这是一个 add() 方法&quot;</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">add_1</span>(<span class="params"><span class="built_in">float</span> a ,<span class="built_in">float</span> b</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">double</span> rst = a + b ;</span><br><span class="line">    <span class="keyword">return</span>  a + <span class="string">&quot; + &quot;</span> + b + <span class="string">&quot;= &quot;</span> + rst ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20201130214448900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="3-调试页展示"><a href="#3-调试页展示" class="headerlink" title="3. 调试页展示"></a>3. 调试页展示</h3><p><img src="https://img-blog.csdnimg.cn/20201130192021518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20201130192112243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130192320308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130195332859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20201130192558797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>由上图的<strong>地址栏</strong> 可知：<br>调用api的格式： <code>网址/方法名</code></p>
<h3 id="4-WebService的发布"><a href="#4-WebService的发布" class="headerlink" title="4.  WebService的发布"></a>4.  WebService的发布</h3><p>要想让这个 <strong>api</strong> 能够 <strong>被</strong> 其他应用或网站 <strong>调用</strong>,必须要将api <strong>发布到服务器</strong>上。<br><img src="https://img-blog.csdnimg.cn/20201130195820565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130200138942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130200239892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130200345118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130200642890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130200912717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发布后 在 VS中有成功的提示：<br><img src="https://img-blog.csdnimg.cn/20201130201000528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="5-在-IIS-中-部署-我们编写的-WebService"><a href="#5-在-IIS-中-部署-我们编写的-WebService" class="headerlink" title="5.  在 IIS 中 部署 我们编写的 WebService"></a>5.  在 IIS 中 部署 我们编写的 WebService</h3><p>打开 IIS，添加站点<br><img src="https://img-blog.csdnimg.cn/20201130201354329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>配置站点详情<br><img src="https://img-blog.csdnimg.cn/20201130203043434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>设置默认文档：<br><img src="https://img-blog.csdnimg.cn/20201130202135280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130202415333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>浏览，以查看效果：<br><img src="https://img-blog.csdnimg.cn/20201130203500101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="6-新建项目-来-调用-API-以查看效果"><a href="#6-新建项目-来-调用-API-以查看效果" class="headerlink" title="6.  新建项目 来 调用 API 以查看效果"></a>6.  新建项目 来 调用 API 以查看效果</h3><p><img src="https://img-blog.csdnimg.cn/20201130203740919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130204721379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130204943734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>添加服务引用【 只有添加了“ web服务引用”才能使用api 】<br><img src="https://img-blog.csdnimg.cn/20201130210234382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130215038728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>【如果没有在上1张图的步骤中修改默认的命名空间名称，且点击“高级”后没有出现“添加web引用” 按钮，则点击“取消”，再次出现点击 “高级”，点击“添加web引用”】<br><img src="https://img-blog.csdnimg.cn/20201130210826610.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130211154633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130211417250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130213021827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130205628494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130213338422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="6-测试效果"><a href="#6-测试效果" class="headerlink" title="6. 测试效果"></a>6. 测试效果</h3><p><img src="https://img-blog.csdnimg.cn/20201130213627533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130213644969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>后端</category>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>CCNA-笔记-02【非理论】</title>
    <url>/2021/08/04/CCNA-%E7%AC%94%E8%AE%B0-02%E3%80%90%E9%9D%9E%E7%90%86%E8%AE%BA%E3%80%91/</url>
    <content><![CDATA[<h1 id="CCNA-笔记-02【非理论】"><a href="#CCNA-笔记-02【非理论】" class="headerlink" title="CCNA-笔记-02【非理论】"></a>CCNA-笔记-02【非理论】</h1><p>[toc]</p>
<h2 id="第二章-TCP-IP协议"><a href="#第二章-TCP-IP协议" class="headerlink" title="第二章 TCP / IP协议"></a>第二章 TCP / IP协议</h2><h3 id="1-协议分层"><a href="#1-协议分层" class="headerlink" title="1. 协议分层"></a>1. 协议分层</h3><p><img src="https://img-blog.csdnimg.cn/20201211110629118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="1-1-传输层"><a href="#1-1-传输层" class="headerlink" title="1.1 传输层"></a>1.1 传输层</h4><ul>
<li>TCP：可靠，建立会话【消耗资源】，差错校验，分段传输，适用于：1个数据包传不完，需要分段传输，需要重传的场合，如：浏览网页、发邮件<br><code>netstat -n</code>查看会话</li>
<li>UDP：不可靠，适用于：1个数据包就能传完。如：屏幕广播，QQ聊天，域名解析<h4 id="1-2-应用层"><a href="#1-2-应用层" class="headerlink" title="1.2 应用层"></a>1.2 应用层</h4></li>
<li>HTTP    = tcp + 80</li>
<li>HTTPS = tcp +443</li>
<li>FTP      = tcp + 20 / 21  【20传数据(主动模式时20，被动模式由软件协商)，21做控制】</li>
<li>SMTP = tcp + 25</li>
<li>POP3 = tcp +110</li>
<li>RDP = tcp + 3389</li>
<li>DNS = TCP【同步数据】/ UDP【查dns，常用】 + 53</li>
<li>CIFS【使用IP地址访问】 = tcp + 445</li>
<li>CIFS【使用计算机名访问】 = tcp + 139 </li>
<li>SQL Server【远程访问时】 = tcp + 1433</li>
<li>Telnet  = tcp + 23</li>
<li>SSH = tcp + 22<blockquote>
<p><code>服务与端口的关系</code>：<br>用 端口 来区分使用的 服务</p>
<ul>
<li>【服务 侦听 端口】</li>
<li>【客户端请求服务】<br>【客户端请求的服务使用目标端口区分】<br>【服务停止，该侦听的端口就关闭】</li>
</ul>
<p>1个服务 占用 1个端口【不能重复】<br><code>netstat -a</code> 查看服务和端口情况【外部地址以主机名的形式显示】<br><code>netstat -an</code> 使用数字形式显示端口占用情况【外部地址以数字的形式显示】<br><code>netstat -anb </code> 查看进程与端口的对应关系<br><code>netstat -an | find &quot;80&quot;</code>:查看80端口的使用情况</p>
</blockquote>
</li>
</ul>
<p>不允许他人更改IP地址：</p>
<ul>
<li>禁用 Network Connections 服务。</li>
</ul>
<p>不允许共享资源：</p>
<ul>
<li>禁用 Workstation 服务。</li>
</ul>
<h5 id="1-2-1-实例：远程桌面："><a href="#1-2-1-实例：远程桌面：" class="headerlink" title="1.2.1 实例：远程桌面："></a>1.2.1 实例：远程桌面：</h5><p><img src="https://img-blog.csdnimg.cn/20201211114532201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201211114608755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201211114641857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201211114714737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>一路“确定”<br>【使用RDP，注意<code>防火墙</code>是否允许】</p>
<h5 id="1-2-2-实例：-安装服务"><a href="#1-2-2-实例：-安装服务" class="headerlink" title="1.2.2 实例： 安装服务"></a>1.2.2 实例： 安装服务</h5><p><img src="https://img-blog.csdnimg.cn/20201211120937700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201211120950740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201211121049884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="1-3-端口安全"><a href="#1-3-端口安全" class="headerlink" title="1.3 端口安全"></a>1.3 端口安全</h4><p>测试端口 开没开【现在weindow默认关闭telnet】：<code>telnet   ip地址   端口</code></p>
<p>端口安全：</p>
<ul>
<li>TCP/IP筛选：<a href="https://jingyan.baidu.com/article/90bc8fc84f568ff653640cca.html">百度经验-TCP/IP筛选</a><br>服务器【win 2003 server】：右键网卡-》找到Tcp/IP筛选、防火墙</li>
</ul>
<h5 id="1-3-1-实例：打开防火墙"><a href="#1-3-1-实例：打开防火墙" class="headerlink" title="1.3.1 实例：打开防火墙"></a>1.3.1 实例：打开防火墙</h5><p><strong>场景：</strong>自己的计算机 只开启80端口，其他人只能访问我这台计算机的80端口，而我可以访问别人的其他端口<br>【即：入站和出站是不同的规则，我出去用的是临时打开的随机端口，会话结束就关闭这个临时端口】<br><img src="https://img-blog.csdnimg.cn/20201211124446917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020121112452153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Ping 不通：可能是<code>防火墙</code>的问题<br>排除木马【可疑程序】<code>msconfig</code>查看计算机中的已安装的未知程序</p>
<h4 id="1-4-IPSec-防木马，严格控制出入流量"><a href="#1-4-IPSec-防木马，严格控制出入流量" class="headerlink" title="1.4 IPSec:防木马，严格控制出入流量"></a>1.4 IPSec:防木马，严格控制出入流量</h4><p>防火墙和TCP/IP筛选：不控制出去的流量</p>
<p>server: 使用 IPSec + TCP/IP筛选<br>Client:  使用防火墙【windows 防火墙依赖 <code>服务</code>】</p>
<p>场景：web服务器：只允许80端口进出</p>
<ul>
<li>打开本地安全策略</li>
<li>新建 策略</li>
<li>拒绝 所有 - 应用 - 确定</li>
<li>添加 - 从“80端口”</li>
<li>应用-确定</li>
<li>启用策略<br>策略：采用<code>最佳匹配</code>原则<h4 id="1-5-网络层协议"><a href="#1-5-网络层协议" class="headerlink" title="1.5 网络层协议"></a>1.5 网络层协议</h4><img src="https://img-blog.csdnimg.cn/20201211133044459.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201211133104828.png" alt="在这里插入图片描述"><br>组播：<a href="https://blog.csdn.net/cong_xue/article/details/78639611?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160766496919725211917529%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=160766496919725211917529&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-10-78639611.pc_search_result_cache&utm_term=%E7%BB%84%E6%92%AD&spm=1018.2118.3001.4449">组播原理-链接</a><br>组播就是计算机都配成同一个组播地址，就加入了同一个组。<br>IGMP，就是在路由器上控制有没有必要将多播数据包传到绑定多播地址的计算机的一种协议。</li>
</ul>
<h4 id="1-6-ARP协议"><a href="#1-6-ARP协议" class="headerlink" title="1.6 ARP协议"></a>1.6 ARP协议</h4><p>PC1  =&gt; PC2</p>
<ul>
<li>PC1 将PC2的IP地址封装，广播询问  该IP  相对应的  MAC地址</li>
<li>PC2收到后，返回响应</li>
<li>其他PC收到后，发现不是发给自己的，就丢弃<br>查看IP 与 MAC 的对应关系：<code>arp -a </code><br>临时绑定MAC和IP地址：<code>arp -s  IP地址  MAC地址(带有-)</code><br>删除MAC与IP的对应关系：<code>arp -d </code></li>
</ul>
<h4 id="1-7-跨网段通信："><a href="#1-7-跨网段通信：" class="headerlink" title="1.7 跨网段通信："></a>1.7 跨网段通信：</h4><p><img src="https://img-blog.csdnimg.cn/20201211140109229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>PC1 发送广播ARP广播，得到网关R1的MAC地址，不断变换MAC源地址、目标MAC，直到找到目标PC2.</p>
<ul>
<li>MAC地址 决定了  <strong>下一跳</strong>给哪个设备。</li>
<li>IP地址 决定了 <strong>最终</strong>给 哪个 计算机</li>
<li>该跨网段的过程运用了<code>代理ARP</code>的原理：<ul>
<li> 跨网段时，PC1将ARP请求发给网关，由网关【以网关自己的名义】去请求目的设备的ARP地址。</li>
<li>如果PC1的ARP不是配成网关，而是直接将目的MAC地址配成跨网段的设备的MAC地址，则在ARP请求时，网关收到ARP请求，发现不是发给自己的包，就丢弃，所以这时不能跨网段通信。</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>网络工程</category>
        <category>CCNA</category>
      </categories>
      <tags>
        <tag>CCNA</tag>
      </tags>
  </entry>
  <entry>
    <title>Fiddler-抓包工具</title>
    <url>/2021/08/27/Fiddler-%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h1 id="Fiddler-抓包工具"><a href="#Fiddler-抓包工具" class="headerlink" title="Fiddler-抓包工具"></a>Fiddler-抓包工具</h1><p>[toc]</p>
<ul>
<li>  <a href="https://www.bilibili.com/video/BV1c4411c7zH?p=2">Fiddler抓包工具实战-视频</a></li>
</ul>
<h2 id="0、常用快捷键"><a href="#0、常用快捷键" class="headerlink" title="0、常用快捷键"></a>0、常用快捷键</h2><blockquote>
<ul>
<li>  <kbd>ctrl+X</kbd> ：清空所有记录</li>
<li>  <kbd>Ctrl+F</kbd>：查找</li>
<li>  <kbd>F12</kbd>：启动或者停止抓包</li>
</ul>
</blockquote>
<h2 id="1、Fiddler-设置"><a href="#1、Fiddler-设置" class="headerlink" title="1、Fiddler 设置"></a>1、Fiddler 设置</h2><h3 id="1-1-Fiddler-的页面布局"><a href="#1-1-Fiddler-的页面布局" class="headerlink" title="1.1 Fiddler 的页面布局"></a>1.1 Fiddler 的页面布局</h3><p><img src="https://z3.ax1x.com/2021/08/23/h97y5Q.png"></p>
<h3 id="1-2-修改端口"><a href="#1-2-修改端口" class="headerlink" title="1.2 修改端口"></a>1.2 修改端口</h3><p><a href="https://imgtu.com/i/h97Z4J"><img src="https://z3.ax1x.com/2021/08/23/h97Z4J.png" alt="h97Z4J.png" border="0" /></a></p>
<h3 id="1-3-减少干扰包-设置"><a href="#1-3-减少干扰包-设置" class="headerlink" title="1.3 减少干扰包-设置"></a>1.3 减少干扰包-设置</h3><p><a href="https://imgtu.com/i/h9HPGd"><img src="https://z3.ax1x.com/2021/08/23/h9HPGd.png" alt="h9HPGd.png" border="0" /></a></p>
<h2 id="2、工具栏"><a href="#2、工具栏" class="headerlink" title="2、工具栏"></a>2、工具栏</h2><h3 id="2-1-添加注释"><a href="#2-1-添加注释" class="headerlink" title="2.1 添加注释"></a>2.1 添加注释</h3><p>注释的作用：数据包保存为1个文件时，给别人看。</p>
<p><a href="https://imgtu.com/i/h9HvSs"><img src="https://z3.ax1x.com/2021/08/23/h9HvSs.png" alt="h9HvSs.png" border="0" /></a></p>
<h3 id="2-2-重放"><a href="#2-2-重放" class="headerlink" title="2.2 重放"></a>2.2 重放</h3><p>快捷键：（选中数据包）</p>
<ul>
<li><p>  重放一次：<kbd>R</kbd></p>
</li>
<li><p>  重放多次：<kbd>shift + R</kbd>，输入重放次数，确认。</p>
</li>
</ul>
<p><a href="https://imgtu.com/i/h9bHj1"><img src="https://z3.ax1x.com/2021/08/23/h9bHj1.png" alt="h9bHj1.png" border="0" /></a></p>
<h3 id="2-4-删除请求"><a href="#2-4-删除请求" class="headerlink" title="2.4 删除请求"></a>2.4 删除请求</h3><p>步骤：选中请求，键盘按 <kbd>delete</kbd>键</p>
<p>删除未选中的请求：选中需要保留的请求， <kbd> shift + delete</kbd></p>
<h3 id="2-5-跳过断点"><a href="#2-5-跳过断点" class="headerlink" title="2.5 跳过断点"></a>2.5 跳过断点</h3><p>在下方的状态栏中左部点1次：设置请求断点；点2次，设置响应断点</p>
<p><a href="https://imgtu.com/i/h9LQRH"><img src="https://z3.ax1x.com/2021/08/23/h9LQRH.png" alt="h9LQRH.png" border="0" /></a></p>
<h3 id="2-6-选择监听的进程"><a href="#2-6-选择监听的进程" class="headerlink" title="2.6 选择监听的进程"></a>2.6 选择监听的进程</h3><p>注意：选择进程时，鼠标要按住不放！！</p>
<p><a href="https://imgtu.com/i/h9OcjA"><img src="https://z3.ax1x.com/2021/08/23/h9OcjA.png" alt="h9OcjA.png" border="0" /></a></p>
<h3 id="2-7-清除浏览器缓存"><a href="#2-7-清除浏览器缓存" class="headerlink" title="2.7 清除浏览器缓存"></a>2.7 清除浏览器缓存</h3><p><a href="https://imgtu.com/i/h9XbGD"><img src="https://z3.ax1x.com/2021/08/23/h9XbGD.png" alt="h9XbGD.png" border="0" /></a></p>
<h3 id="2-8-编码、解码"><a href="#2-8-编码、解码" class="headerlink" title="2.8 编码、解码"></a>2.8 编码、解码</h3><p><a href="https://imgtu.com/i/h9jEss"><img src="https://z3.ax1x.com/2021/08/23/h9jEss.png" alt="h9jEss.png" border="0" /></a></p>
<h3 id="2-9-Fiddler-增加IP列"><a href="#2-9-Fiddler-增加IP列" class="headerlink" title="2.9 Fiddler 增加IP列"></a>2.9 Fiddler 增加IP列</h3><ol>
<li> 运行fiddler，菜单，Rules-&gt;Customize Rules，打开“Fiddler ScriptEditor”</li>
<li> Ctrl+F查找“static function Main()”字符串，然后在函数体内，添加以下代码：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FiddlerObject.UI.lvSessions.AddBoundColumn(&quot;Server-目的IP&quot;, 120, &quot;X-HostIP&quot;);</span><br></pre></td></tr></table></figure>





<h2 id="3、状态栏"><a href="#3、状态栏" class="headerlink" title="3、状态栏"></a>3、状态栏</h2><h3 id="3-1-命令行："><a href="#3-1-命令行：" class="headerlink" title="3.1 命令行："></a>3.1 命令行：</h3><p><a href="https://imgtu.com/i/h9zffK"><img src="https://z3.ax1x.com/2021/08/23/h9zffK.png" alt="h9zffK.png" border="0" /></a></p>
<p><a href="https://imgtu.com/i/hCS540"><img src="https://z3.ax1x.com/2021/08/23/hCS540.png" alt="hCS540.png" border="0" /></a></p>
<h3 id="3-2-统计"><a href="#3-2-统计" class="headerlink" title="3.2 统计"></a>3.2 统计</h3><p><a href="https://imgtu.com/i/hC9PJ0"><img src="https://z3.ax1x.com/2021/08/23/hC9PJ0.png" alt="hC9PJ0.png" border="0" /></a></p>
<h3 id="3-3-检测"><a href="#3-3-检测" class="headerlink" title="3.3 检测"></a>3.3 检测</h3><p>点击报文中的Raw，可以查看原始报文。</p>
<p><a href="https://imgtu.com/i/hCCC0H"><img src="https://z3.ax1x.com/2021/08/23/hCCC0H.png" alt="hCCC0H.png" border="0" /></a></p>
<h3 id="3-4-自动响应器"><a href="#3-4-自动响应器" class="headerlink" title="3.4 自动响应器"></a>3.4 自动响应器</h3><p>功能：重定向到本地资源、自定义响应报文</p>
<p>2种方式：</p>
<ul>
<li>  手动编写</li>
</ul>
<p><a href="https://imgtu.com/i/hAZnG8"><img src="https://z3.ax1x.com/2021/08/24/hAZnG8.png" alt="hAZnG8.png" border="0" /></a></p>
<ul>
<li>  GUI下，拖动请求报文到 AutoResponser 中，选中AutoResponser 下的请求，右键 Edit Response</li>
</ul>
<h3 id="3-5-Composer-设计者"><a href="#3-5-Composer-设计者" class="headerlink" title="3.5 Composer 设计者"></a>3.5 Composer 设计者</h3><p>Composer 用于自定义请求报文。（简单的接口测试、抓包工具）</p>
<p><a href="https://imgtu.com/i/hAnkqJ"><img src="https://z3.ax1x.com/2021/08/24/hAnkqJ.png" alt="hAnkqJ.png" border="0" /></a></p>
<p>scratchpad：拖动左侧的报文到该选项卡的内容页，可以显示请求报文的头部信息</p>
<h3 id="3-6-Filter-过滤器"><a href="#3-6-Filter-过滤器" class="headerlink" title="3.6 Filter 过滤器"></a>3.6 Filter 过滤器</h3><p>过滤条件为：选择需要展示的内容</p>
<p><a href="https://imgtu.com/i/hAuc0H"><img src="https://z3.ax1x.com/2021/08/24/hAuc0H.png" alt="hAuc0H.png" border="0" /></a></p>
<h2 id="4、断点"><a href="#4、断点" class="headerlink" title="4、断点"></a>4、断点</h2><p><a href="https://imgtu.com/i/hKNb2q"><img src="https://z3.ax1x.com/2021/08/27/hKNb2q.png" alt="hKNb2q.png" border="0" /></a></p>
<h2 id="5、Https-抓包"><a href="#5、Https-抓包" class="headerlink" title="5、Https 抓包"></a>5、Https 抓包</h2><p><img src="https://z3.ax1x.com/2021/08/27/hKa4hj.png" alt="启用HTTPS"></p>
<h2 id="6、Android-设备抓包"><a href="#6、Android-设备抓包" class="headerlink" title="6、Android 设备抓包"></a>6、Android 设备抓包</h2><p>(目前未成功)</p>
<ul>
<li><p>  Fiddler勾选HTTPS功能-</p>
</li>
<li><p>  在 tools =&gt; options =&gt; connections 中，勾选“允许远程抓包”</p>
</li>
<li><p>  重启Fiddler、关闭 PC的防火墙。</p>
</li>
<li><p>  打开安卓设备，将安卓设备与PC接入同一个局域网</p>
</li>
<li><p>安卓设备的设置代理（设置=》wifi=&gt;手动配置代理=&gt; PC的ip+8888）</p>
</li>
</ul>
]]></content>
      <categories>
        <category>软件测试</category>
        <category>抓包工具</category>
        <category>Fiddler</category>
      </categories>
      <tags>
        <tag>软件测试</tag>
      </tags>
  </entry>
  <entry>
    <title>Flask-入门笔记</title>
    <url>/2021/08/04/Flask-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Flask-入门笔记"><a href="#Flask-入门笔记" class="headerlink" title="Flask-入门笔记"></a>Flask-入门笔记</h1><p>[toc]</p>
<h2 id="1-案例1：创建1个flask应用程序"><a href="#1-案例1：创建1个flask应用程序" class="headerlink" title="1. 案例1：创建1个flask应用程序"></a>1. 案例1：创建1个flask应用程序</h2><p>目录结构：</p>
<ul>
<li><p>  main.py</p>
</li>
<li><p>templates 目录</p>
<ul>
<li>index.html</li>
</ul>
</li>
</ul>
<p><strong>注意：</strong> flask中的<strong>模板</strong>就是<strong>html页面</strong></p>
<blockquote>
<p>  return  字符串</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当浏览器的地址栏后为“ / ”时，调用相应处理的函数index()，</span></span><br><span class="line"><span class="comment"># 页面内容为return关键字后的内容</span></span><br><span class="line"><span class="comment"># 【这启示我们，只要将1个html页面放在return关键字后，就能实现页面的动态切换】</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;你好，我是首页&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当浏览器的地址栏后为“ /pic ”时，调用相应处理的函数pic()</span></span><br><span class="line"><span class="comment"># 【即：页面显示return关键字后的内容】</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/pic&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pic</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;你好，我是pic&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>  return 页面</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/pic&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pic</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;pic&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>html页面：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;uname&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> &gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;upsw&quot;</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>  后端 =传数据到=》前端</p>
</blockquote>
<p>python:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    arr = [<span class="string">&#x27;小a&#x27;</span>, <span class="string">&#x27;小b&#x27;</span>, <span class="string">&#x27;小c&#x27;</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 页面放在templates目录下【该文件夹与当前python文件平级】</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>,arr1=arr) <span class="comment"># arr1传到html中</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/pic&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pic</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;页面显示pic&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>) <span class="comment"># 以调试模式,运行 网站app</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>html：</p>
<ul>
<li>  <code>&#123;% python语句 %&#125;</code> </li>
<li>  <code>&#123;&#123; python的变量 &#125;&#125;</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">      &#123;% for it in arr1 %&#125;</span><br><span class="line">          &#123;&#123; it &#125;&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<blockquote>
<p>  前端表单 =》 后端</p>
</blockquote>
<p>py:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span>   </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>) </span><span class="comment"># 注意：将方法改为post</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">    username = request.form.get(<span class="string">&#x27;uname&#x27;</span>)  <span class="comment"># 获取表单的 固定写法</span></span><br><span class="line">    psw = request.form.get(<span class="string">&#x27;upsw&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> username == <span class="string">&#x27;abc&#x27;</span> <span class="keyword">and</span> psw == <span class="string">&#x27;123&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;登录成功&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment">#登录失败，则重新加载页面，并返回一句话，这句话在前端用&#123;&#123; 变量名&#125;&#125; 来显示</span></span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>, msg=<span class="string">&#x27;登录失败&#x27;</span>) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/pic&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pic</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;pic&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>html：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;uname&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uname&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;upsw&quot;</span> <span class="attr">name</span>=<span class="string">&quot;upsw&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        &#123;&#123;msg&#125;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>后端</category>
        <category>Python3</category>
      </categories>
      <tags>
        <tag>Python3</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML-笔记</title>
    <url>/2021/08/04/HTML-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="HTML—入门笔记"><a href="#HTML—入门笔记" class="headerlink" title="HTML—入门笔记"></a>HTML—入门笔记</h1><p>[toc]</p>
<h2 id="1-html-的基本结构"><a href="#1-html-的基本结构" class="headerlink" title="1. html 的基本结构"></a>1. html 的基本结构</h2><h3 id="1-1-整体结构【骨架】"><a href="#1-1-整体结构【骨架】" class="headerlink" title="1.1 整体结构【骨架】"></a>1.1 整体结构【骨架】</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">        &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">        &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">        &lt;!--正文--&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h3 id="1-2-head-标签"><a href="#1-2-head-标签" class="headerlink" title="1.2 head 标签"></a>1.2 head 标签</h3><p>通常只在 head标签中放 以下 几种 标签</p>
<ul>
<li> title</li>
<li> meta</li>
<li> link</li>
<li> style</li>
<li> script</li>
<li> base</li>
</ul>
<h3 id="1-3-页面中文编码的设置"><a href="#1-3-页面中文编码的设置" class="headerlink" title="1.3 页面中文编码的设置"></a>1.3 页面中文编码的设置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br></pre></td></tr></table></figure>
<h3 id="1-4-meta-标签"><a href="#1-4-meta-标签" class="headerlink" title="1.4 meta 标签"></a>1.4 meta 标签</h3><blockquote>
<p>meta 标签一般用于存放提供给 搜索引擎爬虫 看的信息，如：页面关键字，页面描述</p>
</blockquote>
<h4 id="1-4-1-meta-标签的重要属性-—-name属性（页面关键字-页面描述）"><a href="#1-4-1-meta-标签的重要属性-—-name属性（页面关键字-页面描述）" class="headerlink" title="1.4.1 meta 标签的重要属性 — name属性（页面关键字 + 页面描述）"></a>1.4.1 meta 标签的重要属性 — name属性（页面关键字 + 页面描述）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;    </span><br><span class="line">    &lt;!--网页关键字--&gt;</span><br><span class="line">    	&lt;meta  name=&quot;keywords&quot; content=&quot;绿叶学习网&quot;/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!--网页描述--&gt;</span><br><span class="line">    	&lt;meta  name=&quot;description&quot; content=&quot;绿叶学习网是一个富有活力的技术学习网站&quot;/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!--本页作者--&gt;</span><br><span class="line">    	&lt;meta  name=&quot;author&quot; content=&quot;helicopter&quot;&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!--版权声明--&gt;</span><br><span class="line">    	&lt;meta  name=&quot;copyright&quot; content=&quot;本站所有教程均为原创，版权所有，禁止转载。否则将追究法律责任。&quot;/&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure>
<h4 id="1-4-2-meta-标签的重要属性——-http-equiv属性（-页面编码-刷新跳转）"><a href="#1-4-2-meta-标签的重要属性——-http-equiv属性（-页面编码-刷新跳转）" class="headerlink" title="1.4.2 meta 标签的重要属性—— http-equiv属性（ 页面编码 +  刷新跳转）"></a>1.4.2 meta 标签的重要属性—— http-equiv属性（ 页面编码 +  刷新跳转）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">	&lt;!-- 定义页面页面编码 --&gt;</span><br><span class="line">		&lt;meta  http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot;/&gt;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">	&lt;!-- 定义页面刷新跳转( 6 秒后跳转到百度) --&gt;	</span><br><span class="line">    	&lt;meta  http-equiv=&quot;refresh&quot; content=&quot;6;url=https:/www.baidu.com&quot;/&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure>
<h3 id="1-5-style-标签-——-用于设置样式"><a href="#1-5-style-标签-——-用于设置样式" class="headerlink" title="1.5 style 标签 —— 用于设置样式"></a>1.5 style 标签 —— 用于设置样式</h3><p><strong>样式优先级：</strong> [从   高  =&gt; 低]</p>
<ul>
<li>! import</li>
<li>行内样式</li>
<li> style标签内的样式 </li>
<li>link外联的样式</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;        </span><br><span class="line">     &lt;style&gt;</span><br><span class="line">			/* 样式 */</span><br><span class="line">     &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure>
<h3 id="1-6-script-标签"><a href="#1-6-script-标签" class="headerlink" title="1.6 script 标签"></a>1.6 script 标签</h3><p>用于写 JavaScript 代码（或导入外部 JS文件），为提高页面加载速度，一般放在页面末尾</p>
<h3 id="1-7-link-标签——-用于导入外部的-css-文件"><a href="#1-7-link-标签——-用于导入外部的-css-文件" class="headerlink" title="1.7 link 标签—— 用于导入外部的 css 文件"></a>1.7 link 标签—— 用于导入外部的 css 文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;        </span><br><span class="line">     &lt;!-- 导入 CSS 文件 --&gt;</span><br><span class="line">       &lt;link rel=&quot;stylesheet&quot; href=&quot;./abc.css&quot;&gt;    	</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure>
<h3 id="1-8-body标签"><a href="#1-8-body标签" class="headerlink" title="1.8 body标签"></a>1.8 body标签</h3><p>用于存放正文</p>
<h2 id="2-文本标签-（常用）"><a href="#2-文本标签-（常用）" class="headerlink" title="2. 文本标签 （常用）"></a>2. 文本标签 （常用）</h2><h3 id="2-1-标题标签（h1-h6）"><a href="#2-1-标题标签（h1-h6）" class="headerlink" title="2.1 标题标签（h1~ h6）"></a>2.1 标题标签（h1~ h6）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">        &lt;h1&gt;hello&lt;/h1&gt;</span><br><span class="line">        &lt;h2&gt;hello&lt;/h2&gt;</span><br><span class="line">        &lt;h3&gt;hello&lt;/h3&gt;</span><br><span class="line">        &lt;h4&gt;hello&lt;/h4&gt;</span><br><span class="line">        &lt;h5&gt;hello&lt;/h5&gt;</span><br><span class="line">        &lt;h6&gt;hello&lt;/h6&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
<h3 id="2-2-段落（-p-）"><a href="#2-2-段落（-p-）" class="headerlink" title="2.2  段落（ p ）"></a>2.2  段落（ p ）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">        &lt;p&gt;这是一个段落，是一个块级元素 &lt;/p&gt;      </span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
<h3 id="2-3-换行（-br"><a href="#2-3-换行（-br" class="headerlink" title="2.3 换行（ br)"></a>2.3 换行（ br)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">	 &lt;!-- 换行 --&gt;</span><br><span class="line">       		&lt;span&gt;这是一个行内元素 &lt;/span&gt;&lt;br/&gt;&lt;span&gt;这是一个行内元素 &lt;/span&gt;         </span><br><span class="line">        </span><br><span class="line">    &lt;!-- 注意：如果换行写 br标签，则需要将 p 的font-size改为0，否则除了产生换行效果外，还会产生多余的空格 --&gt; </span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                &lt;span&gt;这是一个段落，是一个行内元素 &lt;/span&gt;</span><br><span class="line">                &lt;br/&gt;</span><br><span class="line">                &lt;span&gt;这是一个段落，是一个行内元素 &lt;/span&gt;</span><br><span class="line">            &lt;/p&gt;        </span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
<h3 id="2-4-水平线（hr）"><a href="#2-4-水平线（hr）" class="headerlink" title="2.4 水平线（hr）"></a>2.4 水平线（hr）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">	 &lt;!-- 在两个段落间会产生1条水平线 --&gt;</span><br><span class="line">        &lt;p&gt;这是一个段落，是一个块级元素 &lt;/p&gt;        </span><br><span class="line">        &lt;hr/&gt;        </span><br><span class="line">        &lt;p&gt;这是一个段落，是一个块级元素 &lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
<h3 id="2-5-转义字符（常用部分）"><a href="#2-5-转义字符（常用部分）" class="headerlink" title="2.5 转义字符（常用部分）"></a>2.5 转义字符（常用部分）</h3><p><img src="https://img-blog.csdnimg.cn/20201208134802853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="2-6-div-块标签-和-span-（行内标签）"><a href="#2-6-div-块标签-和-span-（行内标签）" class="headerlink" title="2.6 div (块标签)和 span （行内标签）"></a>2.6 div (块标签)和 span （行内标签）</h3><p>主要存放 元素，只是容器，没有什么效果</p>
<h3 id="2-7-文本修饰样式（常用）"><a href="#2-7-文本修饰样式（常用）" class="headerlink" title="2.7 文本修饰样式（常用）"></a>2.7 文本修饰样式（常用）</h3><ul>
<li>font-family    ：  字体   【如：Arial, Helvetica, sans-serif  】</li>
<li>font-size        ： 字号     【 如： 30px ，1em(1个中文字符大小)  ,1en(1个英文字符大小)  】</li>
<li>font-weight  ：  字重（加粗程度）【 100-300 细 ；400-600 中等 ；700-900 粗】</li>
<li>font-style:     ：  倾斜程度   【italic  或 oblique】</li>
<li>text-indent: ;      缩进           【如： 30px】</li>
<li>text-align       :     对齐方式     【 left  ,  right ,center 】</li>
<li>text-decoration : 下划线，删除线，上划线  【 underline  ，line-through  ，overline】</li>
<li>text-transform: 英文大小写转换          【capitalize，uppercase，lowercase】</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span </span><br><span class="line">	style=&quot;font-size: 30px;</span><br><span class="line">		   font-weight: 900;</span><br><span class="line">		   font-family: Arial, Helvetica, sans-serif;</span><br><span class="line">		   font-style: italic;</span><br><span class="line">		   text-decoration: overline;&quot;</span><br><span class="line">		   &gt;这是一个和span</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure>
<h2 id="3-图片、音频、视频"><a href="#3-图片、音频、视频" class="headerlink" title="3. 图片、音频、视频"></a>3. 图片、音频、视频</h2><h3 id="3-1-图片（img）"><a href="#3-1-图片（img）" class="headerlink" title="3.1 图片（img）"></a>3.1 图片（img）</h3><p>属性：</p>
<ul>
<li>src  : 图片路径</li>
<li>alt   : 图片无法显示时的代替文字</li>
<li>title : 鼠标悬浮在图片上时跳出的文字</li>
<li>width ：宽度（px）</li>
<li>height：高度（px）</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img src=&quot;images/car1.jpg&quot; alt=&quot;小车图片无法显示&quot; title=&quot;小车图片&quot; width=&quot;100px&quot; height=&quot;100px&quot; /&gt;</span><br></pre></td></tr></table></figure>

<h3 id="3-2-音频-视频（-embed-，html5新增）"><a href="#3-2-音频-视频（-embed-，html5新增）" class="headerlink" title="3.2 音频+视频（ embed ，html5新增）"></a>3.2 音频+视频（ embed ，html5新增）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 插入音频 --&gt;</span><br><span class="line">	&lt;embed src=&quot;./media/西班牙舞曲.mp3&quot; width=&quot;400px&quot; height=&quot;80px&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 插入视频 --&gt;</span><br><span class="line">	&lt;embed src=&quot;./media/小苹果.mp4&quot; width=&quot;400px&quot; height=&quot;80px&quot;/&gt;</span><br></pre></td></tr></table></figure>
<h3 id="3-3-视频（video）"><a href="#3-3-视频（video）" class="headerlink" title="3.3 视频（video）"></a>3.3 视频（video）</h3><p><img src="https://img-blog.csdnimg.cn/20201208135318724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;video width=&quot;320&quot; height=&quot;240&quot; controls&gt;</span><br><span class="line">    &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;</span><br><span class="line">    &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;</span><br><span class="line">    您的浏览器不支持 video 标签。</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure>
<h2 id="4-盒子模型"><a href="#4-盒子模型" class="headerlink" title="4. 盒子模型"></a>4. 盒子模型</h2><h3 id="4-1-margin-border-padding-content"><a href="#4-1-margin-border-padding-content" class="headerlink" title="4.1 margin-border-padding-content"></a>4.1 margin-border-padding-content</h3><p>前三个都支持 <strong>上下左右</strong>  4个方向 单独设置<br><img src="https://img-blog.csdnimg.cn/20201208135504124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="4-2-box-sizing-盒模型的大小设置-："><a href="#4-2-box-sizing-盒模型的大小设置-：" class="headerlink" title="4.2 box-sizing(盒模型的大小设置)："></a>4.2 box-sizing(盒模型的大小设置)：</h3><h4 id="4-2-1-box-sizing-border-box"><a href="#4-2-1-box-sizing-border-box" class="headerlink" title="4.2.1 box-sizing  :border-box"></a>4.2.1 box-sizing  :border-box</h4><blockquote>
<p>IE盒模型，设置padding时，padding 往里面挤，不会撑大盒子</p>
</blockquote>
<h4 id="4-2-2-box-sizing-content-box"><a href="#4-2-2-box-sizing-content-box" class="headerlink" title="4.2.2 box-sizing  :content-box"></a>4.2.2 box-sizing  :content-box</h4><blockquote>
<p>默认的盒模型，设置padding时，padding 往外面撑，会撑大盒子</p>
</blockquote>
<h2 id="5-标题的图标"><a href="#5-标题的图标" class="headerlink" title="5. 标题的图标"></a>5. 标题的图标</h2><h3 id="5-1-在网页标题左侧显示"><a href="#5-1-在网页标题左侧显示" class="headerlink" title="5.1  在网页标题左侧显示"></a>5.1  在网页标题左侧显示</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;link rel=&quot;icon&quot; href=&quot;图标地址&quot; type=&quot;image/x-icon&quot;&gt;</span><br></pre></td></tr></table></figure>

<h3 id="5-2-在收藏夹显示图标"><a href="#5-2-在收藏夹显示图标" class="headerlink" title="5.2  在收藏夹显示图标"></a>5.2  在收藏夹显示图标</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;link rel=&quot;shortcut icon&quot; href=&quot;图标地址&quot; type=&quot;image/x-icon&quot;&gt; </span><br></pre></td></tr></table></figure>
<h2 id="6-表格"><a href="#6-表格" class="headerlink" title="6. 表格"></a>6. 表格</h2><ul>
<li>tr : 行;</li>
<li>td: 单元格 ； </li>
<li>th: 表头单元格;</li>
</ul>
<p>table的常用属性： </p>
<ul>
<li> cellpadding：单元格内边距   ；</li>
<li> cellspacing：单元格间距<h3 id="6-1-表格-实例1"><a href="#6-1-表格-实例1" class="headerlink" title="6.1 表格-实例1"></a>6.1 表格-实例1</h3><img src="https://img-blog.csdnimg.cn/20201208140427220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;table border=&quot;1&quot;&gt;</span><br><span class="line">		&lt;caption&gt;表格标题&lt;/caption&gt;</span><br><span class="line">		&lt;thead&gt;</span><br><span class="line">			&lt;tr&gt;</span><br><span class="line">				&lt;th&gt;（表头）表格每一列的标题&lt;/th&gt;</span><br><span class="line">				&lt;th&gt;（表头）表格每一列的标题&lt;/th&gt;</span><br><span class="line">				&lt;th&gt;（表头）表格每一列的标题&lt;/th&gt;</span><br><span class="line">			&lt;/tr&gt;</span><br><span class="line">		&lt;/thead&gt;</span><br><span class="line">		&lt;tbody&gt;</span><br><span class="line">			&lt;tr&gt;</span><br><span class="line">				&lt;td&gt;data&lt;/td&gt;</span><br><span class="line">				&lt;td&gt;data&lt;/td&gt;</span><br><span class="line">				&lt;td&gt;data&lt;/td&gt;</span><br><span class="line">			&lt;/tr&gt;</span><br><span class="line">		&lt;/tbody&gt;</span><br><span class="line">		&lt;tfoot&gt;</span><br><span class="line">			&lt;tr&gt;</span><br><span class="line">				&lt;td&gt;表尾&lt;/td&gt;</span><br><span class="line">				&lt;td&gt;表尾&lt;/td&gt;</span><br><span class="line">				&lt;td&gt;表尾&lt;/td&gt;</span><br><span class="line">			&lt;/tr&gt;</span><br><span class="line">		&lt;/tfoot&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure>
<p><strong>单元格合并（colspan ，x轴单元格减少）</strong><br><img src="https://img-blog.csdnimg.cn/2020120814051417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;table border=&quot;1&quot;&gt;</span><br><span class="line">		&lt;tr&gt;</span><br><span class="line">			&lt;td  colspan=&quot;2&quot;&gt;这是colspan&lt;/td&gt;</span><br><span class="line">		&lt;/tr&gt;</span><br><span class="line">		&lt;tr&gt;</span><br><span class="line">			&lt;td&gt;data&lt;/td&gt;</span><br><span class="line">			&lt;td&gt;data&lt;/td&gt;</span><br><span class="line">		&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure>

<p><strong>单元格合并（rowspan ，y轴单元格减少）</strong><br><img src="https://img-blog.csdnimg.cn/20201208140550543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;table border=&quot;1&quot;&gt;</span><br><span class="line">		&lt;tr&gt;</span><br><span class="line">			&lt;td  rowspan=&quot;2&quot; &gt;这是rowspan&lt;/td&gt;</span><br><span class="line">			&lt;td&gt;data&lt;/td&gt;</span><br><span class="line">		&lt;/tr&gt;</span><br><span class="line">		&lt;tr&gt;			</span><br><span class="line">			&lt;td&gt;data&lt;/td&gt;</span><br><span class="line">		&lt;/tr&gt;</span><br><span class="line">		&lt;tr&gt;</span><br><span class="line">			&lt;td&gt;data&lt;/td&gt;</span><br><span class="line">			&lt;td&gt;data&lt;/td&gt;</span><br><span class="line">		&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure>
<h2 id="7-有序列表（ol-li）"><a href="#7-有序列表（ol-li）" class="headerlink" title="7. 有序列表（ol + li）"></a>7. 有序列表（ol + li）</h2><p>无论是 ul 还是 ol  内部第一层必须是 li</p>
<ul>
<li>实例1：默认ol ， 默认type:1<br><img src="https://img-blog.csdnimg.cn/20201208140933384.png" alt="在这里插入图片描述"><br>实例2<br>修改type属性值：</li>
<li>1</li>
<li>a</li>
<li>A</li>
<li>i</li>
<li>I<br><img src="https://img-blog.csdnimg.cn/20201208141037242.png" alt="在这里插入图片描述"></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;ol type=&quot;A&quot;&gt;</span><br><span class="line">     &lt;li&gt;first&lt;/li&gt;</span><br><span class="line">     &lt;li&gt;second&lt;/li&gt;</span><br><span class="line">     &lt;li&gt;third&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure>
<h2 id="8-无序列表"><a href="#8-无序列表" class="headerlink" title="8. 无序列表"></a>8. 无序列表</h2><p><img src="https://img-blog.csdnimg.cn/20201208141407277.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//默认，实心圆</span><br><span class="line">&lt;ul type=&quot;disc&quot;&gt;</span><br><span class="line">	&lt;li&gt;Coffee&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;Milk&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//空心圆</span><br><span class="line">&lt;ul type=&quot;circle&quot;&gt;</span><br><span class="line">	&lt;li&gt;Coffee&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;Milk&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">//正方形</span><br><span class="line">&lt;ul type=&quot;square&quot;&gt;</span><br><span class="line">	&lt;li&gt;Coffee&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;Milk&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>
<h2 id="9-定义列表（dl-dt-dd-层级列表，会缩进）"><a href="#9-定义列表（dl-dt-dd-层级列表，会缩进）" class="headerlink" title="9. 定义列表（dl+dt/dd  ,层级列表，会缩进）"></a>9. 定义列表（dl+dt/dd  ,层级列表，会缩进）</h2><p><img src="https://img-blog.csdnimg.cn/20201208141455567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dl&gt;</span><br><span class="line">		&lt;dt&gt;动物&lt;/dt&gt;</span><br><span class="line">		&lt;dd&gt;猴子&lt;/dd&gt;</span><br><span class="line">		&lt;dd&gt;狗&lt;/dd&gt;</span><br><span class="line">&lt;/dl&gt;</span><br></pre></td></tr></table></figure>
<h2 id="10-datalist"><a href="#10-datalist" class="headerlink" title="10. datalist"></a>10. datalist</h2><p>常与其他表单控件连用<br><img src="https://img-blog.csdnimg.cn/20201208141630583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;input type=&quot;search&quot; list=&quot;id1&quot;&gt;</span><br><span class="line">&lt;datalist id=&quot;id1&quot;&gt;</span><br><span class="line">	&lt;option value=&quot;hello&quot;&gt;&lt;/option&gt;</span><br><span class="line">	&lt;option value=&quot;world&quot;&gt;&lt;/option&gt;</span><br><span class="line">&lt;/datalist&gt;</span><br></pre></td></tr></table></figure>
<h2 id="11-常用-表单标签"><a href="#11-常用-表单标签" class="headerlink" title="11. 常用 表单标签"></a>11. 常用 表单标签</h2><ul>
<li>所有表单标签都要写在<code>&lt;form&gt; &lt;/form&gt;</code>内</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;form &gt;</span><br><span class="line"> 单行文本框：&lt;input type=&quot;text&quot; name=&quot;firstname&quot;&gt; &lt;br&gt;</span><br><span class="line"> </span><br><span class="line"> 多行文本框：&lt;textarea rows=&quot;10&quot; cols=&quot;30&quot;&gt;123&lt;/textarea&gt; &lt;br&gt;</span><br><span class="line"> </span><br><span class="line"> 密码框：&lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt; &lt;br&gt;</span><br><span class="line"> </span><br><span class="line"> 普通按钮: &lt;input type=&quot;button&quot; name=&quot;btn&quot; onclick=&quot;click_me()&quot;&gt; &lt;br&gt;</span><br><span class="line"> </span><br><span class="line"> 单选按钮: &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot;&gt;Male &lt;br&gt;</span><br><span class="line">		  &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot;&gt;Female &lt;br&gt;</span><br><span class="line">		  </span><br><span class="line"> 复选框：   &lt;input type=&quot;checkbox&quot; checked name=&quot;vehicle&quot; value=&quot;Bike&quot;&gt;bike &lt;br&gt;</span><br><span class="line">		   &lt;input type=&quot;checkbox&quot; name=&quot;vehicle&quot; value=&quot;Car&quot;&gt;car &lt;br&gt;</span><br><span class="line">		   </span><br><span class="line"> 提交按钮：  &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;</span><br><span class="line"></span><br><span class="line"> 下拉列表：</span><br><span class="line"> 			&lt;select&gt;</span><br><span class="line">    			&lt;option value=&quot;volvo&quot;&gt;小浩&lt;/option&gt;</span><br><span class="line">    			&lt;option value=&quot;saab&quot;&gt;小白&lt;/option&gt;</span><br><span class="line">    			&lt;option value=&quot;mercedes&quot;&gt;小李&lt;/option&gt;</span><br><span class="line">    			&lt;option value=&quot;audi&quot;&gt;小张&lt;/option&gt;</span><br><span class="line">			&lt;/select&gt;</span><br><span class="line">			</span><br><span class="line"> 重置：&lt;input type=&quot;reset&quot; name=&quot;button&quot; id=&quot;button&quot; value=&quot;重置&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>

<h2 id="12-时间（input类型）："><a href="#12-时间（input类型）：" class="headerlink" title="12. 时间（input类型）："></a>12. 时间（input类型）：</h2><p><img src="https://img-blog.csdnimg.cn/20201208141715713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">月份：&lt;input type=&quot;month&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">星期：&lt;input type=&quot;week&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">日期：&lt;input type=&quot;date&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">时间：&lt;input type=&quot;time&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure>
<h2 id="13-范围"><a href="#13-范围" class="headerlink" title="13. 范围"></a>13. 范围</h2><p><img src="https://img-blog.csdnimg.cn/20201208141927516.png" alt="在这里插入图片描述"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;input type=&quot;range&quot;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="14-进度条"><a href="#14-进度条" class="headerlink" title="14. 进度条"></a>14. 进度条</h2><p><img src="https://img-blog.csdnimg.cn/20201208142022113.png" alt="在这里插入图片描述"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;progress value=&quot;80&quot; max=&quot;100&quot; min=&quot;0&quot;&gt;&lt;/progress&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
        <category>基础</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>Git-学习笔记</title>
    <url>/2021/08/04/Git%E5%85%A5%E9%97%A8-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Git-学习笔记"><a href="#Git-学习笔记" class="headerlink" title="Git-学习笔记"></a>Git-学习笔记</h1><p>[toc]</p>
<h2 id="1-Git-安装及全局配置"><a href="#1-Git-安装及全局配置" class="headerlink" title="1. Git 安装及全局配置"></a>1. Git 安装及全局配置</h2><blockquote>
<p><strong>以Windows为例：</strong></p>
<ol>
<li>从 <strong>Git官网</strong> 直接下载安装程序，然后按 <strong>默认</strong> 选项安装</li>
<li>若 在点击左下角的windows图标后 能够找到 <strong>“Git”-“Git Bash”</strong>，并且打开后出现类似 cmd 的窗口，则<strong>安装成功。</strong></li>
<li>打开 Git Bash【git bash中可以输入  Linux命令，相当于 linux中的终端】</li>
<li>输入<code>git config --global user.name &quot;用户名&quot;</code></li>
<li>输入 <code>git config --global user.email &quot;邮箱地址&quot;    </code></li>
</ol>
</blockquote>
<h2 id="2-Git-的工作原理"><a href="#2-Git-的工作原理" class="headerlink" title="2. Git 的工作原理"></a>2. Git 的工作原理</h2><h3 id="2-1-git-与-svn-的差别"><a href="#2-1-git-与-svn-的差别" class="headerlink" title="2.1 git 与 svn 的差别"></a>2.1 git 与 svn 的差别</h3><blockquote>
<ul>
<li>  git 是 <strong>分布式</strong>的版本控制系统，在<strong>本地和远程</strong> 各有1个版本库,工作时可以<strong>不用联网</strong></li>
<li>  svn 是<strong>集中式</strong>的版本控制系统，是多个人<strong>共用1个</strong>版本库，工作时需要<strong>联网</strong></li>
</ul>
</blockquote>
<h3 id="2-2-几个重要的概念"><a href="#2-2-几个重要的概念" class="headerlink" title="2.2 几个重要的概念"></a>2.2 几个重要的概念</h3><ul>
<li><strong>工作区</strong>【workspace】：文件夹</li>
<li><strong>暂存区</strong>【stage】：git add 时，从 workspace  添加到  stage</li>
<li><strong>本地仓库</strong>【Repository】：git commit 时，将stage中的文件 提交到本地版本库</li>
<li><strong>远程仓库</strong>【Remote】：git push 时，将 Repository 中的文件推送到远程仓库，如：github，gitee等网站。</li>
<li><strong>注意事项：</strong> git<strong>只能追踪文本文件的内容修改</strong>，不能追踪二进制文件【如：图片】。对于二进制文件，git只能知道它有修改，但不知道修改的内容。<br><img src="https://img-blog.csdnimg.cn/2020112516134783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><h2 id="3-新建仓库"><a href="#3-新建仓库" class="headerlink" title="3. 新建仓库"></a>3. 新建仓库</h2></li>
</ul>
<h3 id="3-1-创建版本库"><a href="#3-1-创建版本库" class="headerlink" title="3.1 创建版本库"></a>3.1 创建版本库</h3><p>【创建之后的大部分命令都在版本库文件夹下输入】</p>
<ol>
<li> <strong>版本库</strong> 就是一个能够<strong>被 git 管理</strong> (增、删、改、恢复) 的<strong>目录</strong></li>
<li><strong>创建步骤</strong>：<blockquote>
<ol>
<li>创建的文件夹，用于充当版本库【1个名为 testRepo 的版本库】,</li>
</ol>
</blockquote>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> e:</span><br><span class="line">mkdir testRepo</span><br></pre></td></tr></table></figure>


<blockquote>
<ol start="2">
<li>初始化版本库<br>【初始化后生成 .git 隐藏文件，该文件不能动，否则会破坏版本库】</li>
</ol>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> testRepo</span><br><span class="line">git init</span><br></pre></td></tr></table></figure>



<h3 id="3-2-添加文件到暂存区"><a href="#3-2-添加文件到暂存区" class="headerlink" title="3.2 添加文件到暂存区"></a>3.2 添加文件到暂存区</h3><p> 【以在 testRepo 文件夹中 创建1个名为 readme.txt 的文件为例】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//创建1个名为 readme.txt 的文件，并输入内容，保存</span><br><span class="line">git add ./readme.txt</span><br></pre></td></tr></table></figure>



<h3 id="3-3-提交文件到-本地仓库"><a href="#3-3-提交文件到-本地仓库" class="headerlink" title="3.3  提交文件到 本地仓库"></a>3.3  提交文件到 本地仓库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;描述信息，一般描述修改的内容&quot;</span></span><br></pre></td></tr></table></figure>



<h3 id="3-4-查看-版本库状态"><a href="#3-4-查看-版本库状态" class="headerlink" title="3.4 查看 版本库状态"></a>3.4 查看 版本库状态</h3><p>git状态:指 是否提交，是否推送 等状态</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>



<h3 id="3-5-查看-更改的内容"><a href="#3-5-查看-更改的内容" class="headerlink" title="3.5 查看 更改的内容"></a>3.5 查看 更改的内容</h3><p>【查看 当前工作区的文件（此时还没有 git add）与原来相比有不同】<br>查看所做的更改</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff readme.txt</span><br></pre></td></tr></table></figure>

<p>确认无误后，git add,和git commit </p>
<h2 id="4-版本回退"><a href="#4-版本回退" class="headerlink" title="4. 版本回退"></a>4. 版本回退</h2><h3 id="4-1-查看历史版本记录"><a href="#4-1-查看历史版本记录" class="headerlink" title="4.1 查看历史版本记录"></a>4.1 查看历史版本记录</h3><p>即：查看历史 commit 记录。越上面，记录越新</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//详细显示</span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line">//简要显示</span><br><span class="line">git <span class="built_in">log</span> --pretty=oneline</span><br></pre></td></tr></table></figure>



<h3 id="4-2-版本回退"><a href="#4-2-版本回退" class="headerlink" title="4.2 版本回退"></a>4.2 版本回退</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//回退到上一个版本</span><br><span class="line">git reset --hard HEAD^</span><br><span class="line"></span><br><span class="line">//回退到上两个版本</span><br><span class="line">git reset --hard HEAD^^</span><br><span class="line"></span><br><span class="line">//回退上100个版本</span><br><span class="line">git reset --hard HEAD~100</span><br></pre></td></tr></table></figure>



<h3 id="4-3-回退后又想恢复到回退前的版本"><a href="#4-3-回退后又想恢复到回退前的版本" class="headerlink" title="4.3 回退后又想恢复到回退前的版本"></a>4.3 回退后又想恢复到回退前的版本</h3><p>git reset –hard 版本号<br>如：<code>git reset --hard 6dsd2152</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//查看版本号</span><br><span class="line">git reflog</span><br><span class="line"></span><br><span class="line">//根据版本号以回退版本</span><br><span class="line">git reset --hard 版本号</span><br></pre></td></tr></table></figure>



<h3 id="4-4-撤销修改"><a href="#4-4-撤销修改" class="headerlink" title="4.4 撤销修改"></a>4.4 撤销修改</h3><ul>
<li><strong>撤销修改：</strong> 撤销 提交到<strong>本地版本库</strong>的修改<ul>
<li><strong>知道哪里错了</strong>：直接手动在文件里改，然后git add、commit等操作</li>
<li><strong>不知道哪里错了</strong>：【2种方法】<ul>
<li>根据 本地版本库 回退：<code>git reset --hard HEAD^</code></li>
<li>直接使用 撤销命令：【2种情况】<ul>
<li><strong>还没有 git add</strong>，撤销后的形成的版本就是本地版本库中的版本</li>
<li><strong>已经 git add 后</strong>又做了修改，撤销后形成的版本是暂存区中的版本<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//直接使用撤销命令</span><br><span class="line">// 注意：命令中的 -- 很重要，有--是撤销，没有--是切换分支</span><br><span class="line"></span><br><span class="line">git checkout -- readme.txt</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="4-5-删除文件"><a href="#4-5-删除文件" class="headerlink" title="4.5 删除文件"></a>4.5 删除文件</h3><p>直接删除，然后 commit</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//删除</span><br><span class="line">rm ./abc.txt</span><br><span class="line">git commit -m <span class="string">&quot;删除了当前目录下的abc.txt文件&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//撤销删除</span><br><span class="line">git checkout -- abc.txt</span><br></pre></td></tr></table></figure>


<h2 id="5-远程仓库"><a href="#5-远程仓库" class="headerlink" title="5. 远程仓库"></a>5. 远程仓库</h2><h3 id="5-1-生成SSH"><a href="#5-1-生成SSH" class="headerlink" title="5.1 生成SSH"></a>5.1 生成SSH</h3><p>使用远程仓库需要先在 github、gitee 等 代码托管网站先注册账户</p>
<blockquote>
<p><strong>以 gitee 为例</strong></p>
<ol>
<li>进入用户的主目录 <code>C:\Users\admin</code></li>
<li>查看 是否有 .ssh文件夹 及 .ssh文件夹内 是否 有 <code>id-rsa</code> 和 <code>id_rsa.pub</code> 2个文件。如果没有，则 进行第三步    </li>
<li>打开 git-bash,输入<code>ssh-keygen -t rsa –C “邮箱”</code>，生成上述的 <strong>2个文件</strong></li>
<li>用记事本打开 <code>id_rsa.pub</code>    文件，全选后复制</li>
<li>浏览器打开 gitee 并登录</li>
<li>进入 gitee, 设置 =》    安全设置 =》SSH公钥</li>
<li>输入标题【标题随便写】</li>
<li>公钥就是刚才从<code>id_rsa.pub</code>中复制的内容</li>
<li>点击 确定</li>
</ol>
</blockquote>
<h3 id="5-2-新建远程库"><a href="#5-2-新建远程库" class="headerlink" title="5.2 新建远程库"></a>5.2 新建远程库</h3><blockquote>
<ol>
<li>点击gitee 右上角的<kbd>+</kbd>  =》 新建仓库</li>
<li>输入仓库名称【需要和本地版本库的名称一致(文件夹名)】</li>
<li>其他项可以默认</li>
<li>点击 创建</li>
<li>根据提示输入命令</li>
</ol>
</blockquote>
<h3 id="5-3-与-远程库-建立关联"><a href="#5-3-与-远程库-建立关联" class="headerlink" title="5.3 与 远程库 建立关联"></a>5.3 与 远程库 建立关联</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 以下仅为示例</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// origin为本地仓库与远程仓库的链接的名字，代表了1个仓库，</span><br><span class="line">// 因此，账户中有多个不同项目的仓库时，把origin换成不同的名字。</span><br><span class="line">// 添加remote时的仓库名格式(ssh): </span><br><span class="line">//      git@托管网站的域名:用户名/仓库名.git</span><br><span class="line"></span><br><span class="line">// 在 本地建立 与 远程仓库 的链接。</span><br><span class="line">git remote add origin git@gitee.com:admin/testRepo.git</span><br><span class="line"></span><br><span class="line">// 第一次推送需要 -u,之后可以不用</span><br><span class="line">git push -u origin master</span><br><span class="line"></span><br><span class="line">// 第2次及以后的推送</span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 如果推送时发生冲突，可能是因为远程和本地的内容有部分不一致.</span><br><span class="line"></span><br><span class="line">// 解决办法1：先pill，再合并，再解决冲突，再推送</span><br><span class="line">git pull origin master</span><br><span class="line"></span><br><span class="line">// 解决办法2【pull也失败时】：先建立分支与远程库之间的关联</span><br><span class="line">git branch --set-upstream dev origin/dev</span><br><span class="line">git pull</span><br><span class="line">//解决冲突后,再add、commit、push</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="5-4-查看远程库的信息"><a href="#5-4-查看远程库的信息" class="headerlink" title="5.4 查看远程库的信息"></a>5.4 查看远程库的信息</h3><p>远程库的信息都是成对出现的，包括：</p>
<ul>
<li>fetch： 抓取</li>
<li>push： 推送</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//查看远程库的信息</span><br><span class="line">git remote</span><br><span class="line"></span><br><span class="line">//查看远程库的详细信息</span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure>







<h3 id="5-5-将-远程库-克隆-到本地"><a href="#5-5-将-远程库-克隆-到本地" class="headerlink" title="5.5 将 远程库 克隆 到本地"></a>5.5 将 远程库 克隆 到本地</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> 进入要存放代码库的文件夹</span><br><span class="line">git <span class="built_in">clone</span> git@gitee.com:admin/testRepo.git</span><br></pre></td></tr></table></figure>




<h3 id="5-6-删除-关联-本地与远程库-的链接"><a href="#5-6-删除-关联-本地与远程库-的链接" class="headerlink" title="5.6 删除 关联 本地与远程库 的链接"></a>5.6 删除 关联 本地与远程库 的链接</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure>







<h2 id="6-分支"><a href="#6-分支" class="headerlink" title="6. 分支"></a>6. 分支</h2><p>Git 将 每次的提交串成1条时间线，master就是这条 主时间线的名字，HEAD 指向 master，master指向提交。创建并合并分支类似于将master复制 1份，在分支上修改后，再用分支的内容覆盖掉原来的master。<br><strong>master分支</strong>：一般存放稳定的版本，开发和修复bug一般创建新的分支，在分支上操作。</p>
<h3 id="6-1-创建、切换分支"><a href="#6-1-创建、切换分支" class="headerlink" title="6.1 创建、切换分支"></a>6.1 创建、切换分支</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//创建并切换到分支</span><br><span class="line">git checkout -b 分支名</span><br><span class="line"></span><br><span class="line">//上面1句命令 等价于</span><br><span class="line">git branch 分支名</span><br><span class="line">git checkout 分支名</span><br></pre></td></tr></table></figure>





<h3 id="6-2-查看分支"><a href="#6-2-查看分支" class="headerlink" title="6.2 查看分支"></a>6.2 查看分支</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//查看分支，其中，分支名前带*，表示当前为该分支</span><br><span class="line">git branch</span><br></pre></td></tr></table></figure>





<h3 id="6-3-合并到主分支"><a href="#6-3-合并到主分支" class="headerlink" title="6.3 合并到主分支"></a>6.3 合并到主分支</h3><p>默认情况下，git 使用 Fast-forward（快进模式）来合并分支</p>
<ul>
<li>Fast-forward（快进模式）：直接将master指向分支的提交，删除分支后，会丢掉分支信息</li>
<li>关闭快进模式： <code>git merge –no-ff -m “注释” 分支名</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 1. 先切换到 master分支</span><br><span class="line">git checkout master</span><br><span class="line"></span><br><span class="line">// 2. 再合并[【其中，dev为我们自建创建的分支的名字】</span><br><span class="line">git merge dev</span><br></pre></td></tr></table></figure>





<h3 id="6-4-删除分支"><a href="#6-4-删除分支" class="headerlink" title="6.4 删除分支"></a>6.4 删除分支</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 删除分支</span><br><span class="line">git branch -d 分支名</span><br></pre></td></tr></table></figure>





<h3 id="6-5-解决分支之间的冲突"><a href="#6-5-解决分支之间的冲突" class="headerlink" title="6.5 解决分支之间的冲突"></a>6.5 解决分支之间的冲突</h3><p><strong>情景：</strong>   创建1个名为dev的分支，在dev分支上修改并提交，然后切换回master分支，如果在master上再进行与dev分支不同的修改并提交,则合并 master与dev 时,会出现冲突。  </p>
<p><strong>解决步骤：</strong> </p>
<ul>
<li>cat 查看一下产生冲突的文件的内容【git 会用&lt;&lt;&lt;，===，&gt;&gt;&gt;标识产生冲突的部分】</li>
<li>将2个分支的内容改成一致即可</li>
<li>合并、添加、提交</li>
<li><code>git log </code> 查看合并情况</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">// 创建分支</span><br><span class="line">git checkout -b dev</span><br><span class="line">git add readme.txt</span><br><span class="line">git commit -m <span class="string">&quot;add merge&quot;</span></span><br><span class="line"></span><br><span class="line">// 关闭快进模式，并合并</span><br><span class="line">git checkout master</span><br><span class="line">git merge --no-ff -m <span class="string">&quot;关闭快进模式&quot;</span> dev</span><br><span class="line"></span><br><span class="line">// 删除分支</span><br><span class="line">git branch -d dev</span><br><span class="line"></span><br><span class="line">// 查看分支</span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line">// 查看删除分支后 是否仍然保留分支号</span><br><span class="line">git <span class="built_in">log</span> --graph --pretty=oneline --abbrev-commit</span><br></pre></td></tr></table></figure>





<h3 id="6-6-隐藏现场"><a href="#6-6-隐藏现场" class="headerlink" title="6.6 隐藏现场"></a>6.6 隐藏现场</h3><p>需要临时做其他分支的工作但又因为手中的事情还没做完不能提交时，可以使用隐藏现场功能，隐藏现场后，查看状态时，可以发现状态是干净的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//隐藏现场</span><br><span class="line">git stash</span><br><span class="line"></span><br><span class="line">//查看状态</span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line">//查看隐藏的现场</span><br><span class="line">git stash list</span><br></pre></td></tr></table></figure>





<h3 id="6-7-还原现场"><a href="#6-7-还原现场" class="headerlink" title="6.7 还原现场"></a>6.7 还原现场</h3><p>1.git stash apply恢复，恢复后，stash内容并不删除，你需要使用命令git stash drop来删除。<br>2.另一种方式是使用git stash pop,恢复的同时把stash内容也删除了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//方法1</span><br><span class="line">// 还原现场，然后删除最新的一条现场记录</span><br><span class="line">git stash apply</span><br><span class="line">git stash drop</span><br><span class="line"></span><br><span class="line">//方法2</span><br><span class="line">// 还原现场并删除记录</span><br><span class="line">git stash pop</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程工具</category>
        <category>版本控制</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo_Github_搭建博客站</title>
    <url>/2021/08/04/Hexo+Github%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%AB%99/</url>
    <content><![CDATA[<h1 id="Hexo-Github-搭建博客站"><a href="#Hexo-Github-搭建博客站" class="headerlink" title="Hexo_Github 搭建博客站"></a>Hexo_Github 搭建博客站</h1><p>[toc]</p>
<h2 id="0-环境说明"><a href="#0-环境说明" class="headerlink" title="0. 环境说明"></a>0. 环境说明</h2><ul>
<li>  Windows 10</li>
<li>  Github网站：<a href="https://github.com/">GitHub</a></li>
<li>  Node.js：<a href="https://nodejs.org/en/download/">Node.js</a></li>
<li>  gitBash：<a href="https://gitforwindows.org/">Git for Windows</a></li>
<li>  hexo：<a href="https://hexo.io/zh-cn/">Hexo-zh</a></li>
</ul>
<h2 id="1-安装相关的环境"><a href="#1-安装相关的环境" class="headerlink" title="1. 安装相关的环境"></a>1. 安装相关的环境</h2><ul>
<li><p>  <a href="https://www.runoob.com/nodejs/nodejs-install-setup.html">Node.js 安装配置</a></p>
</li>
<li><p><a href="https://www.runoob.com/git/git-install-setup.html">gitBash 安装配置 </a>: 安装完后，配置git的ssh，并关联到 github</p>
</li>
</ul>
<h3 id="1-1-在Github上建立站点的仓库"><a href="#1-1-在Github上建立站点的仓库" class="headerlink" title="1.1 在Github上建立站点的仓库"></a>1.1 在Github上建立站点的仓库</h3><ol>
<li> 在Github网站上建立1个名为：<code>cder123.github.io</code> 的<code>仓库</code>，在建立仓库时，勾选初始化按钮。</li>
</ol>
<blockquote>
<p>  其中：</p>
<ul>
<li>  <code>cder123</code>为 <code>github的用户名</code>。</li>
</ul>
</blockquote>
<ol start="2">
<li> 打开GitBash，配置</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line"></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 然后直接三个回车即可，默认不需要设置密码</span><br><span class="line">// 然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 打开GitHub_Settings_keys 页面，新建new SSH Key</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。</span><br><span class="line">// 在Git Bash中检测GitHub公钥设置是否成功</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 测试连接：输入 ssh git@github.com</span><br></pre></td></tr></table></figure>









<h3 id="1-2-安装Hexo："><a href="#1-2-安装Hexo：" class="headerlink" title="1.2 安装Hexo："></a>1.2 安装Hexo：</h3><ul>
<li>  命令：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 1. 全局安装Hexo的管理工具</span><br><span class="line">	npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 2. 利用Hexo创建1个名为myBlogs的目录【作为：根目录】，专门存放博客站点的所有文件</span><br><span class="line">	hexo init myBlogs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 3. 进入博客网站的根目录</span><br><span class="line">	<span class="built_in">cd</span> myBlogs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 4. 安装hexo的依赖插件，生成了【node_modules目录】</span><br><span class="line">	npm install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 5. 本地预览站点</span><br><span class="line">	hexo s</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>​    </p>
<ul>
<li>  博客站的目录结构：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml				// 博客站的配置文件</span><br><span class="line">├── package.json			// 依赖环境</span><br><span class="line">├── node_modules			// hexo的依赖包目录【npm下载的 主题、插件的 默认存放位置】</span><br><span class="line">├── scaffolds				// 模板</span><br><span class="line">├── <span class="built_in">source</span>					// 博客源文件【.md文件必须全放 /<span class="built_in">source</span>/_post 目录 下】</span><br><span class="line">|   ├── _drafts				// 草稿</span><br><span class="line">|   └── _posts				// 博客的MarkDown源文件存放的目录</span><br><span class="line">└── themes					// 存放主题【npm下载的主题默认在 node_modules目录】</span><br></pre></td></tr></table></figure>





<h3 id="1-3-安装-主题-、插件："><a href="#1-3-安装-主题-、插件：" class="headerlink" title="1.3 安装 主题 、插件："></a>1.3 安装 主题 、插件：</h3><p>本文采用 <code>butterfly</code>主题。</p>
<ul>
<li>  官方主题：</li>
<li>  butterfly主题：<a href="https://butterfly.js.org/posts/21cfbf15/#%E5%AE%89%E8%A3%9D">Butterfly 安装文档</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git</span><br><span class="line"></span><br><span class="line">npm i hexo-theme-butterfly</span><br><span class="line"></span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line"></span><br><span class="line">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure>







<h3 id="1-4-修改Hexo博客站的全局配置："><a href="#1-4-修改Hexo博客站的全局配置：" class="headerlink" title="1.4 修改Hexo博客站的全局配置："></a>1.4 修改Hexo博客站的全局配置：</h3><ul>
<li>  站点 根目录下的：<code>_config.yml</code></li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Cyw的笔记栈</span>	<span class="comment"># 需要更改的位置</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;笔记-让生活更便捷&#x27;</span>	<span class="comment"># 需要更改的位置</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">CYW</span>	<span class="comment"># 需要更改的位置</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span>	<span class="comment"># 需要更改的位置</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span>	<span class="comment"># 需要更改的位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://cder123.github.io</span>	<span class="comment"># 需要更改的位置</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># Apply to the whole site</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span>	<span class="comment"># 需要更改的位置</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Metadata elements</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"><span class="comment">## updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;</span></span><br><span class="line"><span class="attr">updated_option:</span> <span class="string">&#x27;mtime&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">## include:/exclude: options only apply to the &#x27;source/&#x27; folder</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span>	<span class="comment"># 需要更改的位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span>	<span class="comment"># 需要更改的位置</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:cder123/cder123.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span>	<span class="comment"># 备注：github默认的分支为main</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要更改的位置</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="1-5-生成页面："><a href="#1-5-生成页面：" class="headerlink" title="1.5 生成页面："></a>1.5 生成页面：</h3><ul>
<li><p>标签页：</p>
<ul>
<li>  命令：<code>hexo new page tags</code></li>
</ul>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 找到<span class="built_in">source</span>/tags/index.md这个文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2018-01-05 00:00:00	// 日期可以改成别的</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;tags&quot;</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>

</li>
</ul>
<ul>
<li>分类页：<ul>
<li>  命令：<code>hexo new page categories</code></li>
</ul>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">// 找到 <span class="built_in">source</span>/categories/index.md这个文件,输入：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2018-01-05 00:00:00		// 日期可以改成别的</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;categories&quot;</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>







<ul>
<li>  404页面：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 修改 butterfly主题的 404页面的配置</span><br><span class="line">error_404:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  subtitle: <span class="string">&quot;页面没有找到&quot;</span></span><br><span class="line">  background: </span><br></pre></td></tr></table></figure>

<p>​    </p>
<h3 id="1-6-修改主题配置："><a href="#1-6-修改主题配置：" class="headerlink" title="1.6 修改主题配置："></a>1.6 修改主题配置：</h3><p>将butterfly主题目录【默认在node_modules目录下】下的<code>_conf.yml</code> 文件 <strong>改名</strong> 为<code>_config.butterfly.yml</code>，并放到<code>站点的根目录</code>下。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Main menu navigation (導航目錄)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># format: name: link || icon</span></span><br><span class="line"><span class="comment"># sub-menu</span></span><br><span class="line"><span class="comment"># name || icon:</span></span><br><span class="line"><span class="comment">#   name: link || icon</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">   <span class="string">主页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">   <span class="string">分类:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">   <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">   <span class="string">归档:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment"># List||fas fa-list:</span></span><br><span class="line">  <span class="comment">#   Music: /music/ || fas fa-music</span></span><br><span class="line">  <span class="comment">#   Movie: /movies/ || fas fa-video</span></span><br><span class="line">  <span class="comment"># Link: /link/ || fas fa-link</span></span><br><span class="line">  <span class="comment"># About: /about/ || fas fa-heart</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Hide the child menu items in mobile sidebar</span></span><br><span class="line"><span class="attr">hide_sidebar_menu_child:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Code Blocks (代碼相關)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">pale</span> <span class="string">night</span> <span class="comment">#  darker / pale night / light / ocean / mac / mac light / false</span></span><br><span class="line"><span class="attr">highlight_copy:</span> <span class="literal">true</span> <span class="comment"># copy button</span></span><br><span class="line"><span class="attr">highlight_lang:</span> <span class="literal">true</span> <span class="comment"># show the code language</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="literal">false</span> <span class="comment"># true: shrink the code blocks / false: expand the code blocks | none: expand code blocks and hide the button</span></span><br><span class="line"><span class="attr">highlight_height_limit:</span> <span class="literal">false</span> <span class="comment"># unit: px</span></span><br><span class="line"><span class="attr">code_word_wrap:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># copy settings</span></span><br><span class="line"><span class="comment"># copyright: Add the copyright information after copied content (複製的內容後面加上版權信息)</span></span><br><span class="line"><span class="attr">copy:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">copyright:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">limit_count:</span> <span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># social settings (社交圖標設置)</span></span><br><span class="line"><span class="comment"># formal:</span></span><br><span class="line"><span class="comment">#   icon: link || the description</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="comment"># fab fa-github: https://github.com/xxxxx || Github</span></span><br><span class="line">  <span class="comment"># fas fa-envelope: mailto:xxxxxx@gmail.com || Email</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># search (搜索)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Algolia search</span></span><br><span class="line"><span class="attr">algolia_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hits:</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># local_search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Math (數學)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># About the per_page</span></span><br><span class="line"><span class="comment"># if you set it to true, it will load mathjax/katex script in each page (true 表示每一頁都加載js)</span></span><br><span class="line"><span class="comment"># if you set it to false, it will load mathjax/katex script according to your setting (add the &#x27;mathjax: true&#x27; in page&#x27;s front-matter)</span></span><br><span class="line"><span class="comment"># (false 需要時加載，須在使用的 Markdown Front-matter 加上 mathjax: true)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MathJax</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># KaTeX</span></span><br><span class="line"><span class="attr">katex:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hide_scrollbar:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Image (圖片設置)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Favicon（網站圖標）</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">https://z3.ax1x.com/2021/06/01/2KeKMQ.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Avatar (頭像)</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">https://z3.ax1x.com/2021/06/01/2KZgDs.png</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable all banner image</span></span><br><span class="line"><span class="attr">disable_top_img:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of home page</span></span><br><span class="line"><span class="attr">index_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If the banner of page not setting, it will show the top_img</span></span><br><span class="line"><span class="attr">default_top_img:</span> <span class="string">https://z3.ax1x.com/2021/06/01/2uBDbR.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of archive page</span></span><br><span class="line"><span class="attr">archive_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If the banner of tag page not setting, it will show the top_img</span></span><br><span class="line"><span class="comment"># <span class="doctag">note:</span> tag page, not tags page (子標籤頁面的 top_img)</span></span><br><span class="line"><span class="attr">tag_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of tag page</span></span><br><span class="line"><span class="comment"># format:</span></span><br><span class="line"><span class="comment">#  - tag name: xxxxx</span></span><br><span class="line"><span class="attr">tag_per_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If the banner of category page not setting, it will show the top_img</span></span><br><span class="line"><span class="comment"># <span class="doctag">note:</span> category page, not categories page (子分類頁面的 top_img)</span></span><br><span class="line"><span class="attr">category_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of category page</span></span><br><span class="line"><span class="comment"># format:</span></span><br><span class="line"><span class="comment">#  - category name: xxxxx</span></span><br><span class="line"><span class="attr">category_per_img:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="comment"># display the cover or not (是否顯示文章封面)</span></span><br><span class="line">  <span class="attr">index_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">aside_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">archives_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># the position of cover in home page (封面顯示的位置)</span></span><br><span class="line">  <span class="comment"># left/right/both</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">  <span class="comment"># When cover is not set, the default cover is displayed (當沒有設置cover時，默認的封面顯示)</span></span><br><span class="line">  <span class="attr">default_cover:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">https://z3.ax1x.com/2021/06/01/2KV1yj.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Replace Broken Images (替換無法顯示的圖片)</span></span><br><span class="line"><span class="attr">error_img:</span></span><br><span class="line">  <span class="attr">flink:</span> <span class="string">/img/friend_404.gif</span></span><br><span class="line">  <span class="attr">post_page:</span> <span class="string">/img/404.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A simple 404 page</span></span><br><span class="line"><span class="attr">error_404:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">subtitle:</span> <span class="string">&#x27;抱歉！页面丢失了。&#x27;</span></span><br><span class="line">  <span class="attr">background:</span> <span class="string">https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png</span></span><br><span class="line"></span><br><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">page:</span> <span class="comment"># Home Page</span></span><br><span class="line">    <span class="attr">date_type:</span> <span class="string">both#</span> <span class="string">created</span> <span class="string">or</span> <span class="string">updated</span> <span class="string">or</span> <span class="string">both</span> <span class="string">主頁文章日期是創建日或者更新日或都顯示</span></span><br><span class="line">    <span class="attr">date_format:</span> <span class="string">date</span> <span class="comment"># date/relative 顯示日期還是相對日期</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">true</span> <span class="comment"># true or false 主頁是否顯示分類</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">true</span><span class="comment"># true or false 主頁是否顯示標籤</span></span><br><span class="line">    <span class="attr">label:</span> <span class="literal">true</span> <span class="comment"># true or false 顯示描述性文字</span></span><br><span class="line">  <span class="attr">post:</span></span><br><span class="line">    <span class="attr">date_type:</span> <span class="string">both</span> <span class="comment"># created or updated or both 文章頁日期是創建日或者更新日或都顯示</span></span><br><span class="line">    <span class="attr">date_format:</span> <span class="string">date</span> <span class="comment"># date/relative 顯示日期還是相對日期</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">true</span> <span class="comment"># true or false 文章頁是否顯示分類</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">true</span> <span class="comment"># true or false 文章頁是否顯示標籤</span></span><br><span class="line">    <span class="attr">label:</span> <span class="literal">true</span> <span class="comment"># true or false 顯示描述性文字</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># wordcount (字數統計)</span></span><br><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Display the article introduction on homepage</span></span><br><span class="line"><span class="comment"># 1: description</span></span><br><span class="line"><span class="comment"># 2: both (if the description exists, it will show description, or show the auto_excerpt)</span></span><br><span class="line"><span class="comment"># 3: auto_excerpt (default)</span></span><br><span class="line"><span class="comment"># false: do not show the article introduction</span></span><br><span class="line"><span class="attr">index_post_content:</span></span><br><span class="line">  <span class="attr">method:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">500</span> <span class="comment"># if you set method to 2 or 3, the length need to config</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># toc (目錄)</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">style_simple:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">decode:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">4.0</span></span><br><span class="line">  <span class="attr">license_url:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sponsor/reward</span></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">QR_code:</span></span><br><span class="line">    <span class="comment"># - img: /img/wechat.jpg</span></span><br><span class="line">    <span class="comment">#   link:</span></span><br><span class="line">    <span class="comment">#   text: wechat</span></span><br><span class="line">    <span class="comment"># - img: /img/alipay.jpg</span></span><br><span class="line">    <span class="comment">#   link:</span></span><br><span class="line">    <span class="comment">#   text: alipay</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post edit</span></span><br><span class="line"><span class="comment"># Easily browse and edit blog source code online.</span></span><br><span class="line"><span class="attr">post_edit:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># url: https://github.com/user-name/repo-name/edit/branch-name/subdirectory-name/</span></span><br><span class="line">  <span class="comment"># For example: https://github.com/jerryc127/butterfly.js.org/edit/main/source/</span></span><br><span class="line">  <span class="attr">url:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Related Articles</span></span><br><span class="line"><span class="attr">related_post:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">6</span> <span class="comment"># Number of posts displayed</span></span><br><span class="line">  <span class="attr">date_type:</span> <span class="string">created</span> <span class="comment"># or created or updated 文章日期顯示創建日或者更新日</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># figcaption (圖片描述文字)</span></span><br><span class="line"><span class="attr">photofigcaption:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># post_pagination (分頁)</span></span><br><span class="line"><span class="comment"># value: 1 || 2 || false</span></span><br><span class="line"><span class="comment"># 1: The &#x27;next post&#x27; will link to old post</span></span><br><span class="line"><span class="comment"># 2: The &#x27;next post&#x27; will link to new post</span></span><br><span class="line"><span class="comment"># false: disable pagination</span></span><br><span class="line"><span class="attr">post_pagination:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># anchor</span></span><br><span class="line"><span class="comment"># when you scroll in post, the URL will update according to header id.</span></span><br><span class="line"><span class="attr">anchor:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Displays outdated notice for a post (文章過期提醒)</span></span><br><span class="line"><span class="attr">noticeOutdate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">flat</span> <span class="comment"># style: simple/flat</span></span><br><span class="line">  <span class="attr">limit_day:</span> <span class="number">500</span> <span class="comment"># When will it be shown</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span> <span class="comment"># position: top/bottom</span></span><br><span class="line">  <span class="attr">message_prev:</span> <span class="string">It</span> <span class="string">has</span> <span class="string">been</span></span><br><span class="line">  <span class="attr">message_next:</span> <span class="string">days</span> <span class="string">since</span> <span class="string">the</span> <span class="string">last</span> <span class="string">update,</span> <span class="string">the</span> <span class="string">content</span> <span class="string">of</span> <span class="string">the</span> <span class="string">article</span> <span class="string">may</span> <span class="string">be</span> <span class="string">outdated.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Share System (分享功能)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># AddThis</span></span><br><span class="line"><span class="comment"># https://www.addthis.com/</span></span><br><span class="line"><span class="attr">addThis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">pubid:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Share.js</span></span><br><span class="line"><span class="comment"># https://github.com/overtrue/share.js</span></span><br><span class="line"><span class="attr">sharejs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sites:</span> <span class="string">facebook,twitter,wechat,weibo,qq</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># AddToAny</span></span><br><span class="line"><span class="comment"># https://www.addtoany.com/</span></span><br><span class="line"><span class="attr">addtoany:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">item:</span> <span class="string">facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Comments System</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Up to two comments system, the first will be shown as default</span></span><br><span class="line">  <span class="comment"># Choose: Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo</span></span><br><span class="line">  <span class="attr">use:</span></span><br><span class="line">  <span class="comment"># - Valine</span></span><br><span class="line">  <span class="comment"># - Disqus</span></span><br><span class="line">  <span class="attr">text:</span> <span class="literal">true</span> <span class="comment"># Display the comment name next to the button</span></span><br><span class="line">  <span class="comment"># lazyload: The comment system will be load when comment element enters the browser&#x27;s viewport.</span></span><br><span class="line">  <span class="comment"># If you set it to true, the comment count will be invalid</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">false</span> <span class="comment"># Display comment count in post&#x27;s top_img</span></span><br><span class="line">  <span class="attr">card_post_count:</span> <span class="literal">false</span> <span class="comment"># Display comment count in Home Page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># disqus</span></span><br><span class="line"><span class="comment"># https://disqus.com/</span></span><br><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">shortname:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Alternative Disqus - Render comments with Disqus API</span></span><br><span class="line"><span class="comment"># DisqusJS 評論系統，可以實現在網路審查地區載入 Disqus 評論列表，兼容原版</span></span><br><span class="line"><span class="comment"># https://github.com/SukkaW/DisqusJS</span></span><br><span class="line"><span class="attr">disqusjs:</span></span><br><span class="line">  <span class="attr">shortname:</span></span><br><span class="line">  <span class="attr">siteName:</span></span><br><span class="line">  <span class="attr">apikey:</span></span><br><span class="line">  <span class="attr">api:</span></span><br><span class="line">  <span class="attr">nocomment:</span> <span class="comment"># display when a blog post or an article has no comment attached</span></span><br><span class="line">  <span class="attr">admin:</span></span><br><span class="line">  <span class="attr">adminLabel:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># livere (來必力)</span></span><br><span class="line"><span class="comment"># https://www.livere.com/</span></span><br><span class="line"><span class="attr">livere:</span></span><br><span class="line">  <span class="attr">uid:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># gitalk</span></span><br><span class="line"><span class="comment"># https://github.com/gitalk/gitalk</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">client_id:</span></span><br><span class="line">  <span class="attr">client_secret:</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">  <span class="attr">admin:</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">en</span> <span class="comment"># en, zh-CN, zh-TW, es-ES, fr, ru</span></span><br><span class="line">  <span class="attr">perPage:</span> <span class="number">10</span> <span class="comment"># Pagination size, with maximum 100.</span></span><br><span class="line">  <span class="attr">distractionFreeMode:</span> <span class="literal">false</span> <span class="comment"># Facebook-like distraction free mode.</span></span><br><span class="line">  <span class="attr">pagerDirection:</span> <span class="string">last</span> <span class="comment"># Comment sorting direction, available values are last and first.</span></span><br><span class="line">  <span class="attr">createIssueManually:</span> <span class="literal">false</span> <span class="comment"># Gitalk will create a corresponding github issue for your every single page automatically</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># valine</span></span><br><span class="line"><span class="comment"># https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">appId:</span> <span class="comment"># leancloud application app id</span></span><br><span class="line">  <span class="attr">appKey:</span> <span class="comment"># leancloud application app key</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># comment list page size</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span> <span class="comment"># gravatar style https://valine.js.org/#/avatar</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">en</span> <span class="comment"># i18n: zh-CN/zh-TW/en/ja</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Please</span> <span class="string">leave</span> <span class="string">your</span> <span class="string">footprints</span> <span class="comment"># valine comment input placeholder (like: Please leave your footprints)</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># valine comment header info (nick/mail/link)</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Record reviewer IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span></span><br><span class="line">  <span class="attr">bg:</span> <span class="comment"># valine background</span></span><br><span class="line">  <span class="attr">emojiCDN:</span> <span class="comment"># emoji CDN</span></span><br><span class="line">  <span class="attr">enableQQ:</span> <span class="literal">false</span> <span class="comment"># enable the Nickname box to automatically get QQ Nickname and QQ Avatar</span></span><br><span class="line">  <span class="attr">requiredFields:</span> <span class="string">nick,mail</span> <span class="comment"># required fields (nick/mail)</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># waline - A simple comment system with backend support fork from Valine</span></span><br><span class="line"><span class="comment"># https://waline.js.org/</span></span><br><span class="line"><span class="attr">waline:</span></span><br><span class="line">  <span class="attr">serverURL:</span> <span class="comment"># Waline server address url</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span> <span class="comment"># gravatar style https://zh-tw.gravatar.com/site/implement/images/#default-image</span></span><br><span class="line">  <span class="attr">emojiCDN:</span> <span class="comment"># emoji CDN</span></span><br><span class="line">  <span class="attr">bg:</span> <span class="comment"># waline background</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># utterances</span></span><br><span class="line"><span class="comment"># https://utteranc.es/</span></span><br><span class="line"><span class="attr">utterances:</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">  <span class="comment"># Issue Mapping: pathname/url/title/og:title</span></span><br><span class="line">  <span class="attr">issue_term:</span> <span class="string">pathname</span></span><br><span class="line">  <span class="comment"># Theme: github-light/github-dark/github-dark-orange/icy-dark/dark-blue/photon-dark</span></span><br><span class="line">  <span class="attr">light_theme:</span> <span class="string">github-light</span></span><br><span class="line">  <span class="attr">dark_theme:</span> <span class="string">photon-dark</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Facebook Comments Plugin</span></span><br><span class="line"><span class="comment"># https://developers.facebook.com/docs/plugins/comments/</span></span><br><span class="line"><span class="attr">facebook_comments:</span></span><br><span class="line">  <span class="attr">app_id:</span></span><br><span class="line">  <span class="attr">user_id:</span> <span class="comment"># optional</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># The number of comments to show</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">social</span> <span class="comment"># social/time/reverse_time</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">en_US</span> <span class="comment"># Language en_US/zh_CN/zh_TW and so on</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Twikoo</span></span><br><span class="line"><span class="comment"># https://github.com/imaegoo/twikoo</span></span><br><span class="line"><span class="attr">twikoo:</span></span><br><span class="line">  <span class="attr">envId:</span></span><br><span class="line">  <span class="attr">region:</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Chat Services</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Chat Button [recommend]</span></span><br><span class="line"><span class="comment"># It will create a button in the bottom right corner of website, and hide the origin button</span></span><br><span class="line"><span class="attr">chat_btn:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The origin chat button is displayed when scrolling up, and the button is hidden when scrolling down</span></span><br><span class="line"><span class="attr">chat_hide_show:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># chatra</span></span><br><span class="line"><span class="comment"># https://chatra.io/</span></span><br><span class="line"><span class="attr">chatra:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">id:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tidio</span></span><br><span class="line"><span class="comment"># https://www.tidio.com/</span></span><br><span class="line"><span class="attr">tidio:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">public_key:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># daovoice</span></span><br><span class="line"><span class="comment"># http://daovoice.io/</span></span><br><span class="line"><span class="attr">daovoice:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">app_id:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># gitter</span></span><br><span class="line"><span class="comment"># https://gitter.im/</span></span><br><span class="line"><span class="attr">gitter:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">room:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># crisp</span></span><br><span class="line"><span class="comment"># https://crisp.chat/en/</span></span><br><span class="line"><span class="attr">crisp:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">website_id:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Footer Settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">since:</span> <span class="number">2021</span></span><br><span class="line">  <span class="attr">custom_text:</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="literal">true</span> <span class="comment"># Copyright of theme and framework</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Analysis</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Baidu Analytics</span></span><br><span class="line"><span class="comment"># https://tongji.baidu.com/web/welcome/login</span></span><br><span class="line"><span class="attr">baidu_analytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Analytics</span></span><br><span class="line"><span class="comment"># https://analytics.google.com/analytics/web/</span></span><br><span class="line"><span class="attr">google_analytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tencent Analytics ID</span></span><br><span class="line"><span class="comment"># https://mta.qq.com</span></span><br><span class="line"><span class="attr">tencent_analytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CNZZ Analytics</span></span><br><span class="line"><span class="comment"># https://www.umeng.com/</span></span><br><span class="line"><span class="attr">cnzz_analytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cloudflare Analytics</span></span><br><span class="line"><span class="comment"># https://www.cloudflare.com/zh-tw/web-analytics/</span></span><br><span class="line"><span class="attr">cloudflare_analytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Microsoft Clarity</span></span><br><span class="line"><span class="comment"># https://clarity.microsoft.com/</span></span><br><span class="line"><span class="attr">microsoft_clarity:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Advertisement</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Adsense (谷歌廣告)</span></span><br><span class="line"><span class="attr">google_adsense:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">auto_ads:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">js:</span> <span class="string">https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">  <span class="attr">enable_page_level_ads:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Insert ads manually (手動插入廣告)</span></span><br><span class="line"><span class="comment"># ad:</span></span><br><span class="line"><span class="comment">#   index:</span></span><br><span class="line"><span class="comment">#   aside:</span></span><br><span class="line"><span class="comment">#   post:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Verification (站長驗證)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">site_verification:</span></span><br><span class="line">  <span class="comment"># - name: google_site_verification</span></span><br><span class="line">  <span class="comment">#   content: xxxxxx</span></span><br><span class="line">  <span class="comment"># - name: baidu_site_verification</span></span><br><span class="line">  <span class="comment">#   content: xxxxxxx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Beautify/Effect (美化/效果)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Theme color for customize</span></span><br><span class="line"><span class="comment"># Notice: color value must in double quotes like &quot;#000&quot; or may cause error!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># theme_color:</span></span><br><span class="line"><span class="comment">#   enable: true</span></span><br><span class="line"><span class="comment">#   main: &quot;#49B1F5&quot;</span></span><br><span class="line"><span class="comment">#   paginator: &quot;#00c4b6&quot;</span></span><br><span class="line"><span class="comment">#   button_hover: &quot;#FF7242&quot;</span></span><br><span class="line"><span class="comment">#   text_selection: &quot;#00c4b6&quot;</span></span><br><span class="line"><span class="comment">#   link_color: &quot;#99a9bf&quot;</span></span><br><span class="line"><span class="comment">#   meta_color: &quot;#858585&quot;</span></span><br><span class="line"><span class="comment">#   hr_color: &quot;#A4D8FA&quot;</span></span><br><span class="line"><span class="comment">#   code_foreground: &quot;#F47466&quot;</span></span><br><span class="line"><span class="comment">#   code_background: &quot;rgba(27, 31, 35, .05)&quot;</span></span><br><span class="line"><span class="comment">#   toc_color: &quot;#00c4b6&quot;</span></span><br><span class="line"><span class="comment">#   blockquote_padding_color: &quot;#49b1f5&quot;</span></span><br><span class="line"><span class="comment">#   blockquote_background_color: &quot;#49b1f5&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The top_img settings of home page</span></span><br><span class="line"><span class="comment"># default: top img - full screen, site info - middle (默認top_img全屏，site_info在中間)</span></span><br><span class="line"><span class="comment"># The position of site info, eg: 300px/300em/300rem/10% (主頁標題距離頂部距離)</span></span><br><span class="line"><span class="attr">index_site_info_top:</span></span><br><span class="line"><span class="comment"># The height of top_img, eg: 300px/300em/300rem (主頁top_img高度)</span></span><br><span class="line"><span class="attr">index_top_img_height:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The user interface setting of category and tag page (category和tag頁的UI設置)</span></span><br><span class="line"><span class="comment"># index - same as Homepage UI (index 值代表 UI將與首頁的UI一樣)</span></span><br><span class="line"><span class="comment"># default - same as archives UI 默認跟archives頁面UI一樣</span></span><br><span class="line"><span class="attr">category_ui:</span> <span class="comment"># 留空或 index</span></span><br><span class="line"><span class="attr">tag_ui:</span> <span class="comment"># 留空或 index</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Website Background (設置網站背景)</span></span><br><span class="line"><span class="comment"># can set it to color or image (可設置圖片 或者 顔色)</span></span><br><span class="line"><span class="comment"># The formal of image: url(http://xxxxxx.com/xxx.jpg)</span></span><br><span class="line"><span class="attr">background:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Footer Background</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># the position of bottom right button/default unit: px (右下角按鈕距離底部的距離/默認單位為px)</span></span><br><span class="line"><span class="attr">rightside-bottom:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enter transitions (開啓網頁進入效果)</span></span><br><span class="line"><span class="attr">enter_transitions:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Background effects (背景特效)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># canvas_ribbon (靜止彩帶背景)</span></span><br><span class="line"><span class="comment"># See: https://github.com/hustcc/ribbon.js</span></span><br><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">size:</span> <span class="number">150</span></span><br><span class="line">  <span class="attr">alpha:</span> <span class="number">0.6</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">click_to_change:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Fluttering Ribbon (動態彩帶)</span></span><br><span class="line"><span class="attr">canvas_fluttering_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># canvas_nest</span></span><br><span class="line"><span class="comment"># https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&#x27;0,0,255&#x27;</span> <span class="comment">#color of lines, default: &#x27;0,0,0&#x27;; RGB values: (R,G,B).(<span class="doctag">note:</span> use &#x27;,&#x27; to separate.)</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.7</span> <span class="comment"># the opacity of line (0~1), default: 0.5.</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span> <span class="comment"># z-index property of the background, default: -1.</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">99</span> <span class="comment"># the number of lines, default: 99.</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Typewriter Effect (打字效果)</span></span><br><span class="line"><span class="comment"># https://github.com/disjukr/activate-power-mode</span></span><br><span class="line"><span class="attr">activate_power_mode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span> <span class="comment"># open particle animation (冒光特效)</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">true</span> <span class="comment">#  open shake (抖動特效)</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mouse click effects: fireworks (鼠標點擊效果: 煙火特效)</span></span><br><span class="line"><span class="attr">fireworks:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">9999</span> <span class="comment"># -1 or 9999</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mouse click effects: Heart symbol (鼠標點擊效果: 愛心)</span></span><br><span class="line"><span class="attr">click_heart:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mouse click effects: words (鼠標點擊效果: 文字)</span></span><br><span class="line"><span class="attr">ClickShowText:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">text:</span></span><br><span class="line">    <span class="comment"># - I</span></span><br><span class="line">    <span class="comment"># - LOVE</span></span><br><span class="line">    <span class="comment"># - YOU</span></span><br><span class="line">  <span class="attr">fontSize:</span> <span class="string">18px</span></span><br><span class="line">  <span class="attr">random:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default display mode (網站默認的顯示模式)</span></span><br><span class="line"><span class="comment"># light (default) / dark</span></span><br><span class="line"><span class="attr">display_mode:</span> <span class="string">dark</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Beautify (美化頁面顯示)</span></span><br><span class="line"><span class="attr">beautify:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span> <span class="comment"># site/post</span></span><br><span class="line">  <span class="attr">title-prefix-icon:</span> <span class="string">&#x27;\f0c1&#x27;</span></span><br><span class="line">  <span class="attr">title-prefix-icon-color:</span> <span class="string">&#x27;#F47466&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Global font settings</span></span><br><span class="line"><span class="comment"># Don&#x27;t modify the following settings unless you know how they work (非必要不要修改)</span></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">global-font-size:</span> <span class="string">22px</span></span><br><span class="line">  <span class="attr">code-font-size:</span> <span class="string">20px</span></span><br><span class="line">  <span class="attr">font-family:</span></span><br><span class="line">  <span class="attr">code-font-family:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Font settings for the site title and site subtitle</span></span><br><span class="line"><span class="comment"># 左上角網站名字 主頁居中網站名字</span></span><br><span class="line"><span class="attr">blog_title_font:</span></span><br><span class="line">  <span class="attr">font_link:</span></span><br><span class="line">  <span class="attr">font-family:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The setting of divider icon (水平分隔線圖標設置)</span></span><br><span class="line"><span class="attr">hr_icon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="comment"># the unicode value of Font Awesome icon, such as &#x27;\3423&#x27;</span></span><br><span class="line">  <span class="attr">icon-top:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># the subtitle on homepage (主頁subtitle)</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Typewriter Effect (打字效果)</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># loop (循環打字)</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># source調用第三方服務</span></span><br><span class="line">  <span class="comment"># source: false 關閉調用</span></span><br><span class="line">  <span class="comment"># source: 1  調用搏天api的隨機語錄（簡體）</span></span><br><span class="line">  <span class="comment"># source: 2  調用一言網的一句話（簡體）</span></span><br><span class="line">  <span class="comment"># source: 3  調用一句網（簡體）</span></span><br><span class="line">  <span class="comment"># source: 4  調用今日詩詞（簡體）</span></span><br><span class="line">  <span class="comment"># subtitle 會先顯示 source , 再顯示 sub 的內容</span></span><br><span class="line">  <span class="attr">source:</span> <span class="number">4</span></span><br><span class="line">  <span class="comment"># 如果有英文逗號&#x27; , &#x27;,請使用轉義字元 &amp;#44;</span></span><br><span class="line">  <span class="comment"># 如果有英文雙引號&#x27; &quot; &#x27;,請使用轉義字元 &amp;quot;</span></span><br><span class="line">  <span class="comment"># 開頭不允許轉義字元，如需要，請把整個句子用雙引號包住</span></span><br><span class="line">  <span class="comment"># 如果關閉打字效果，subtitle只會顯示sub的第一行文字</span></span><br><span class="line">  <span class="attr">sub:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Loading Animation (加載動畫)</span></span><br><span class="line"><span class="attr">preloader:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># aside (側邊欄)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">aside:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hide:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">button:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">true</span> <span class="comment"># display on mobile</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left#</span> <span class="string">left</span> <span class="string">or</span> <span class="string">right</span></span><br><span class="line">  <span class="attr">card_author:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">description:</span></span><br><span class="line">    <span class="attr">button:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">点我吧</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://cder123.gitee.io</span></span><br><span class="line">  <span class="attr">card_announcement:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">本站点基于Hexo和GitPages技术搭建，站点内容为本人搜集或原创的笔记。</span></span><br><span class="line">  <span class="attr">card_recent_post:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">5</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">sort:</span> <span class="string">date</span> <span class="comment"># date or updated</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_categories:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">8</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">expand:</span> <span class="string">none</span> <span class="comment"># none/true/false</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_tags:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">40</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">color:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_archives:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">monthly</span> <span class="comment"># yearly or monthly</span></span><br><span class="line">    <span class="attr">format:</span> <span class="string">MMMM</span> <span class="string">YYYY</span> <span class="comment"># eg: YYYY年MM月</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-1</span> <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">8</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_webinfo:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">post_count:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">last_push_date:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># busuanzi count for PV / UV in site</span></span><br><span class="line"><span class="comment"># 訪問人數</span></span><br><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">site_uv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">site_pv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page_pv:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Time difference between publish date and now (網頁運行時間)</span></span><br><span class="line"><span class="comment"># Formal: Month/Day/Year Time or Year/Month/Day Time</span></span><br><span class="line"><span class="attr">runtimeshow:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">publish_date:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Aside widget - Newest Comments</span></span><br><span class="line"><span class="attr">newest_comments:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">6</span></span><br><span class="line">  <span class="attr">storage:</span> <span class="number">10</span> <span class="comment"># unit: mins, save data to localStorage</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># You can only choose one, or neither</span></span><br><span class="line">  <span class="attr">valine:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">github_issues:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">repo:</span></span><br><span class="line">  <span class="attr">disqus:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">forum:</span></span><br><span class="line">    <span class="attr">api_key:</span></span><br><span class="line">  <span class="attr">twikoo:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">waline:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bottom right button (右下角按鈕)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Change font size</span></span><br><span class="line"><span class="attr">change_font_size:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Conversion between Traditional and Simplified Chinese (簡繁轉換)</span></span><br><span class="line"><span class="attr">translate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># The text of a button</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">简</span></span><br><span class="line">  <span class="comment"># the language of website (1 - Traditional Chinese/ 2 - Simplified Chinese）</span></span><br><span class="line">  <span class="attr">defaultEncoding:</span> <span class="number">2</span></span><br><span class="line">  <span class="comment"># Time delay</span></span><br><span class="line">  <span class="attr">translateDelay:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># The text of the button when the language is Simplified Chinese</span></span><br><span class="line">  <span class="attr">msgToTraditionalChinese:</span> <span class="string">&#x27;简&#x27;</span></span><br><span class="line">  <span class="comment"># The text of the button when the language is Traditional Chinese</span></span><br><span class="line">  <span class="attr">msgToSimplifiedChinese:</span> <span class="string">&#x27;繁&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read Mode (閲讀模式)</span></span><br><span class="line"><span class="attr">readmode:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># dark mode</span></span><br><span class="line"><span class="attr">darkmode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Toggle Button to switch dark/light mode</span></span><br><span class="line">  <span class="attr">button:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Switch dark/light mode automatically (自動切換 dark mode和 light mode)</span></span><br><span class="line">  <span class="comment"># autoChangeMode: 1  Following System Settings, if the system doesn&#x27;t support dark mode, it will switch dark mode between 6 pm to 6 am</span></span><br><span class="line">  <span class="comment"># autoChangeMode: 2  Switch dark mode between 6 pm to 6 am</span></span><br><span class="line">  <span class="comment"># autoChangeMode: false</span></span><br><span class="line">  <span class="attr">autoChangeMode:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Lightbox (圖片大圖查看模式)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># You can only choose one, or neither (只能選擇一個 或者 兩個都不選)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># medium-zoom</span></span><br><span class="line"><span class="comment"># https://github.com/francoischalifour/medium-zoom</span></span><br><span class="line"><span class="attr">medium_zoom:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># fancybox</span></span><br><span class="line"><span class="comment"># http://fancyapps.com/fancybox/3/</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tag Plugins settings (標籤外掛)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mermaid</span></span><br><span class="line"><span class="comment"># see https://github.com/knsv/mermaid</span></span><br><span class="line"><span class="attr">mermaid:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># built-in themes: default/forest/dark/neutral</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">default</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note (Bootstrap Callout)</span></span><br><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">flat</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># other</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pjax</span></span><br><span class="line"><span class="comment"># It may contain bugs and unstable, give feedback when you find the bugs.</span></span><br><span class="line"><span class="comment"># https://github.com/MoOx/pjax</span></span><br><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="comment"># - xxxx</span></span><br><span class="line">    <span class="comment"># - xxxx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Inject the css and script (aplayer/meting)</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Snackbar (Toast Notification 彈窗)</span></span><br><span class="line"><span class="comment"># https://github.com/polonel/SnackBar</span></span><br><span class="line"><span class="comment"># position 彈窗位置</span></span><br><span class="line"><span class="comment"># 可選 top-left / top-center / top-right / bottom-left / bottom-center / bottom-right</span></span><br><span class="line"><span class="attr">snackbar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">bottom-left</span></span><br><span class="line">  <span class="attr">bg_light:</span> <span class="string">&#x27;#49b1f5&#x27;</span> <span class="comment"># The background color of Toast Notification in light mode</span></span><br><span class="line">  <span class="attr">bg_dark:</span> <span class="string">&#x27;#121212&#x27;</span> <span class="comment"># The background color of Toast Notification in dark mode</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://instant.page/</span></span><br><span class="line"><span class="comment"># prefetch (預加載)</span></span><br><span class="line"><span class="attr">instantpage:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://github.com/vinta/pangu.js</span></span><br><span class="line"><span class="comment"># Insert a space between Chinese character and English character (中英文之間添加空格)</span></span><br><span class="line"><span class="attr">pangu:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># site/post</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Lazyload (圖片懶加載)</span></span><br><span class="line"><span class="comment"># https://github.com/verlok/vanilla-lazyload</span></span><br><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># site/post</span></span><br><span class="line">  <span class="attr">placeholder:</span></span><br><span class="line">  <span class="attr">blur:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PWA</span></span><br><span class="line"><span class="comment"># See https://github.com/JLHwung/hexo-offline</span></span><br><span class="line"><span class="comment"># ---------------</span></span><br><span class="line"><span class="comment"># pwa:</span></span><br><span class="line"><span class="comment">#   enable: false</span></span><br><span class="line"><span class="comment">#   manifest: /pwa/manifest.json</span></span><br><span class="line"><span class="comment">#   apple_touch_icon: /pwa/apple-touch-icon.png</span></span><br><span class="line"><span class="comment">#   favicon_32_32: /pwa/32.png</span></span><br><span class="line"><span class="comment">#   favicon_16_16: /pwa/16.png</span></span><br><span class="line"><span class="comment">#   mask_icon: /pwa/safari-pinned-tab.svg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Open graph meta tags</span></span><br><span class="line"><span class="comment"># https://developers.facebook.com/docs/sharing/webmasters/</span></span><br><span class="line"><span class="attr">Open_Graph_meta:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add the vendor prefixes to ensure compatibility</span></span><br><span class="line"><span class="attr">css_prefix:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CDN</span></span><br><span class="line"><span class="comment"># Don&#x27;t modify the following settings unless you know how they work</span></span><br><span class="line"><span class="comment"># 非必要請不要修改</span></span><br><span class="line"><span class="attr">CDN:</span></span><br><span class="line">  <span class="comment"># main</span></span><br><span class="line">  <span class="attr">main_css:</span> <span class="string">/css/index.css</span></span><br><span class="line">  <span class="attr">jquery:</span> <span class="string">https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js</span></span><br><span class="line">  <span class="attr">main:</span> <span class="string">/js/main.js</span></span><br><span class="line">  <span class="attr">utils:</span> <span class="string">/js/utils.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># pjax</span></span><br><span class="line">  <span class="attr">pjax:</span> <span class="string">https://cdn.jsdelivr.net/npm/pjax/pjax.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># comments</span></span><br><span class="line">  <span class="attr">gitalk:</span> <span class="string">https://cdn.jsdelivr.net/npm/gitalk@latest/dist/gitalk.min.js</span></span><br><span class="line">  <span class="attr">gitalk_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/gitalk/dist/gitalk.min.css</span></span><br><span class="line">  <span class="attr">valine:</span> <span class="string">https://cdn.jsdelivr.net/npm/valine/dist/Valine.min.js</span></span><br><span class="line">  <span class="attr">disqusjs:</span> <span class="string">https://cdn.jsdelivr.net/npm/disqusjs@1/dist/disqus.js</span></span><br><span class="line">  <span class="attr">disqusjs_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/disqusjs@1/dist/disqusjs.css</span></span><br><span class="line">  <span class="attr">utterances:</span> <span class="string">https://utteranc.es/client.js</span></span><br><span class="line">  <span class="attr">twikoo:</span> <span class="string">https://cdn.jsdelivr.net/npm/twikoo/dist/twikoo.all.min.js</span></span><br><span class="line">  <span class="attr">waline:</span> <span class="string">https://cdn.jsdelivr.net/npm/@waline/client/dist/Waline.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># share</span></span><br><span class="line">  <span class="attr">addtoany:</span> <span class="string">https://static.addtoany.com/menu/page.js</span></span><br><span class="line">  <span class="attr">sharejs:</span> <span class="string">https://cdn.jsdelivr.net/npm/social-share.js/dist/js/social-share.min.js</span></span><br><span class="line">  <span class="attr">sharejs_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/social-share.js/dist/css/share.min.css</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># search</span></span><br><span class="line">  <span class="attr">local_search:</span> <span class="string">/js/search/local-search.js</span></span><br><span class="line">  <span class="attr">algolia_js:</span> <span class="string">/js/search/algolia.js</span></span><br><span class="line">  <span class="attr">algolia_search:</span> <span class="string">https://cdn.jsdelivr.net/npm/instantsearch.js@2.10.5/dist/instantsearch.min.js</span></span><br><span class="line">  <span class="attr">algolia_search_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/instantsearch.js@2.10.5/dist/instantsearch.min.css</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># math</span></span><br><span class="line">  <span class="attr">mathjax:</span> <span class="string">https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js</span></span><br><span class="line">  <span class="attr">katex:</span> <span class="string">https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css</span></span><br><span class="line">  <span class="attr">katex_copytex:</span> <span class="string">https://cdn.jsdelivr.net/npm/katex@latest/dist/contrib/copy-tex.min.js</span></span><br><span class="line">  <span class="attr">katex_copytex_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/katex@latest/dist/contrib/copy-tex.css</span></span><br><span class="line">  <span class="attr">mermaid:</span> <span class="string">https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># count</span></span><br><span class="line">  <span class="attr">busuanzi:</span> <span class="string">//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># background effect</span></span><br><span class="line">  <span class="attr">canvas_ribbon:</span> <span class="string">https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/canvas-ribbon.min.js</span></span><br><span class="line">  <span class="attr">canvas_fluttering_ribbon:</span> <span class="string">https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/canvas-fluttering-ribbon.min.js</span></span><br><span class="line">  <span class="attr">canvas_nest:</span> <span class="string">https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/canvas-nest.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="string">https://cdn.jsdelivr.net/npm/vanilla-lazyload/dist/lazyload.iife.min.js</span></span><br><span class="line">  <span class="attr">instantpage:</span> <span class="string">https://cdn.jsdelivr.net/npm/instant.page/instantpage.min.js</span></span><br><span class="line">  <span class="attr">typed:</span> <span class="string">https://cdn.jsdelivr.net/npm/typed.js/lib/typed.min.js</span></span><br><span class="line">  <span class="attr">pangu:</span> <span class="string">https://cdn.jsdelivr.net/npm/pangu/dist/browser/pangu.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># photo</span></span><br><span class="line">  <span class="attr">fancybox_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css</span></span><br><span class="line">  <span class="attr">fancybox:</span> <span class="string">https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js</span></span><br><span class="line">  <span class="attr">medium_zoom:</span> <span class="string">https://cdn.jsdelivr.net/npm/medium-zoom/dist/medium-zoom.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># snackbar</span></span><br><span class="line">  <span class="attr">snackbar_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/node-snackbar/dist/snackbar.min.css</span></span><br><span class="line">  <span class="attr">snackbar:</span> <span class="string">https://cdn.jsdelivr.net/npm/node-snackbar/dist/snackbar.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># effect</span></span><br><span class="line">  <span class="attr">activate_power_mode:</span> <span class="string">https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/activate-power-mode.min.js</span></span><br><span class="line">  <span class="attr">fireworks:</span> <span class="string">https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/fireworks.min.js</span></span><br><span class="line">  <span class="attr">click_heart:</span> <span class="string">https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/click-heart.min.js</span></span><br><span class="line">  <span class="attr">ClickShowText:</span> <span class="string">https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/click-show-text.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># fontawesome</span></span><br><span class="line">  <span class="attr">fontawesome:</span> <span class="string">https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Conversion between Traditional and Simplified Chinese</span></span><br><span class="line">  <span class="attr">translate:</span> <span class="string">/js/tw_cn.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># justifiedGallery</span></span><br><span class="line">  <span class="attr">justifiedGallery_js:</span> <span class="string">https://cdn.jsdelivr.net/npm/justifiedGallery/dist/js/jquery.justifiedGallery.min.js</span></span><br><span class="line">  <span class="attr">justifiedGallery_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/justifiedGallery/dist/css/justifiedGallery.min.css</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># aplayer</span></span><br><span class="line">  <span class="attr">aplayer_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css</span></span><br><span class="line">  <span class="attr">aplayer_js:</span> <span class="string">https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js</span></span><br><span class="line">  <span class="attr">meting_js:</span> <span class="string">https://cdn.jsdelivr.net/gh/metowolf/MetingJS@1.2/dist/Meting.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Prism.js</span></span><br><span class="line">  <span class="attr">prismjs_js:</span> <span class="string">https://cdn.jsdelivr.net/npm/prismjs/prism.min.js</span></span><br><span class="line">  <span class="attr">prismjs_lineNumber_js:</span> <span class="string">https://cdn.jsdelivr.net/npm/prismjs/plugins/line-numbers/prism-line-numbers.min.js</span></span><br><span class="line">  <span class="attr">prismjs_autoloader:</span> <span class="string">https://cdn.jsdelivr.net/npm/prismjs/plugins/autoloader/prism-autoloader.min.js</span></span><br></pre></td></tr></table></figure>





<h2 id="2-部署站点"><a href="#2-部署站点" class="headerlink" title="2. 部署站点"></a>2. 部署站点</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">	</span><br><span class="line">// 清理缓存	</span><br><span class="line">	hexo clean</span><br><span class="line"></span><br><span class="line">// 将markdown文件生成HTML文件</span><br><span class="line">	hexo g</span><br><span class="line"></span><br><span class="line">// 本地预览部署效果</span><br><span class="line">	hexo s</span><br><span class="line"></span><br><span class="line">// 部署到github</span><br><span class="line">	hexo d</span><br></pre></td></tr></table></figure>







<h2 id="3-备份"><a href="#3-备份" class="headerlink" title="3. 备份"></a>3. 备份</h2><p>由于hexo部署是直接部署到指定的仓库，</p>
<p>因此，本地可以在执行完hexo的相关命令后，直接添加，提交，推送到备份分支。</p>
<p>即：</p>
<ul>
<li>  <code>main分支：</code> 部署站点</li>
<li>  <code>master分支：</code>备份站点文件，master分支是自己创建的。</li>
</ul>
<p>执行<code>hexo clean</code>，<code>hexo g</code>，<code>hexo d</code>后，执行git操作，备份文件。</p>
<p> 思路：</p>
<ul>
<li>  新建分支。</li>
<li>  添加文件，提交文件，推送文件 到 备份的分支</li>
</ul>
]]></content>
      <categories>
        <category>编程工具</category>
        <category>版本控制</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC-笔记</title>
    <url>/2021/08/04/JDBC-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="JDBC-笔记"><a href="#JDBC-笔记" class="headerlink" title="JDBC-笔记"></a>JDBC-笔记</h1><p>[toc]</p>
<h2 id="0-工具下载"><a href="#0-工具下载" class="headerlink" title="0. 工具下载"></a>0. 工具下载</h2><ul>
<li>  MySQL-下载:<a href="https://wws.lanzoui.com/izU3xpr459a">https://wws.lanzoui.com/izU3xpr459a</a> 密码:96kc</li>
<li>  Navicat-下载:<a href="https://wws.lanzoui.com/ihKFypr448d">https://wws.lanzoui.com/ihKFypr448d</a> 密码:amqz</li>
<li>  JDBC常用Jar包-下载:<a href="https://wws.lanzoui.com/ihKFypr448d">https://wws.lanzoui.com/ihKFypr448d</a> 密码:amqz</li>
</ul>
<h2 id="1-JDBC-理解"><a href="#1-JDBC-理解" class="headerlink" title="1. JDBC-理解"></a>1. JDBC-理解</h2><ul>
<li>  <a href="https://www.bilibili.com/video/BV1Bt41137iB?p=2">JDBC-bilibili</a></li>
</ul>
<ol>
<li> 什么是JDBC？</li>
</ol>
<blockquote>
<p>  JDBC：【Java DataBase Connectivity】</p>
<p>  位置：<code>java.sql.*;</code></p>
</blockquote>
<ol start="2">
<li> JDBC的本质：</li>
</ol>
<blockquote>
<p>  JDBC是Sun公司提供的一套接口，</p>
<p>  接口都有 调用者 和 实现者，</p>
<p>  我们面向接口，去<code>调用、写实现类</code>,这些都是面向接口的编程。</p>
</blockquote>
<ol start="3">
<li> 为什么要面向接口编程？</li>
</ol>
<blockquote>
<ul>
<li>  解耦合</li>
<li>  多态机制</li>
</ul>
</blockquote>
<ol start="4">
<li> 为什么要制定JDBC接口？</li>
</ol>
<blockquote>
<p>  因为每种数据库软件在底层的实现原理是不一样的。</p>
<p>  为了适配不同的数据库，Sun公司提供了JDBC接口，每种数据库的厂家根据自家的数据库，写JDBC的实现类【一堆<code> .class文件</code>】，最后将这些实现类打包（<code>.jar</code>），形成<code>数据库驱动</code>。</p>
<p>  <strong>注意：</strong> 数据库驱动是由各大数据库的厂商提供的，因此应该去厂商官网下载。</p>
</blockquote>
<h2 id="2-导入驱动包"><a href="#2-导入驱动包" class="headerlink" title="2. 导入驱动包"></a>2. 导入驱动包</h2><p>驱动：<code>mysql-connector-java-5.0.4-bin.jar</code></p>
<p><img src="https://z3.ax1x.com/2021/06/01/2mxDQU.png" alt="导入驱动jar包-1"></p>
<p><img src="https://z3.ax1x.com/2021/06/01/2mxgoR.png" alt="jdbc-导入jar包-2"></p>
<p><img src="https://z3.ax1x.com/2021/06/01/2mx4SK.png" alt="jdbc-导入jar包-3"></p>
<h2 id="3-JDBC的使用步骤"><a href="#3-JDBC的使用步骤" class="headerlink" title="3. JDBC的使用步骤"></a>3. JDBC的使用步骤</h2><ul>
<li>  <a href="https://www.bilibili.com/video/BV1NJ411J79W?p=38">狂神说Java-JDBC</a></li>
</ul>
<p>步骤：</p>
<ol>
<li> 注册驱动【需先下载，将文件后缀改为 <code>.jar</code>】：告诉Java要用什么牌子的数据库</li>
</ol>
<blockquote>
<ul>
<li>  新建1个<code>lib</code>文件夹，放入<code>数据库驱动jar包</code></li>
<li>  file -&gt; projectStructure -&gt; lib -&gt; “+” -&gt; 选中 数据库的驱动 -&gt; apply</li>
<li>  【如果没成功添加驱动，可以点击file -&gt; projectStructure -&gt; module -&gt; 选择要应用到的模块 -&gt;dependencies -&gt; “+”号 -&gt; 选择 驱动jar包】</li>
<li>  利用反射  找到  驱动中的Driver类</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// mysql 5.5版本，【注意：8.0版本的包名有变化】</span></span><br><span class="line">	Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);	</span><br></pre></td></tr></table></figure>



<ol start="2">
<li> 获取连接：JVM和数据库的通道打开，属于进程间的通信，使用完后，一定要手动关闭。</li>
</ol>
<blockquote>
<ul>
<li>  传入url、用户名、密码</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取连接，传入url、用户名、密码</span></span><br><span class="line"><span class="comment">//String url = jdbc:mysql://localhost:3306/School_1?serverTimezone=Asia/Shanghai</span></span><br><span class="line"><span class="comment">//					&amp;useUnicode=true</span></span><br><span class="line"><span class="comment">//  				&amp;characterEncoding=utf8</span></span><br><span class="line"><span class="comment">//      			&amp;useSSL=true</span></span><br><span class="line">        </span><br><span class="line">	String url = <span class="string">&quot;jdbc:mysql://localhost:3306/myDB?参数&quot;</span>	<span class="comment">// mysql8.0需要在参数中传入时区</span></span><br><span class="line">        </span><br><span class="line">    String userName = <span class="string">&quot;javaUser&quot;</span>;</span><br><span class="line"></span><br><span class="line">	String psw = <span class="string">&quot;javaUser&quot;</span>;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	Connection conn = DriverManager.getConnection(url,userName,psw);</span><br></pre></td></tr></table></figure>



<ol start="3">
<li> 获取数据操作的对象：</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Statement statement = conn.createStatement();</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<ol start="4">
<li> 执行SQL语句</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ResultSet resultSet = statement.executeQuery(sql); <span class="comment">// 查询</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// statement.execute(sql);	// 所有sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// int lines = statement.executeUpdate(sql);	// 执行增、删、改，返回执行的行数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// int[] counts = statement.executeBatch(sql);	// 执行批处理</span></span><br></pre></td></tr></table></figure>



<ol start="5">
<li> 获取、处理 结果集</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">   <span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line"><span class="comment">// 结果集中的数据的获取       </span></span><br><span class="line">           resultSet.getObject(列名或索引);</span><br><span class="line">       </span><br><span class="line">       	   <span class="comment">// resultSet.getInt(列名或索引);</span></span><br><span class="line">       </span><br><span class="line">       	   <span class="comment">// resultSet.getString(列名或索引);</span></span><br><span class="line">       </span><br><span class="line">       	   <span class="comment">// resultSet.getDouble(列名或索引);</span></span><br><span class="line">       </span><br><span class="line">       	   <span class="comment">// resultSet.getDate(列名或索引);</span></span><br><span class="line">  </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 指针移动：</span></span><br><span class="line">       		resultSet.next();</span><br><span class="line">       		<span class="comment">// resultSet.previous();</span></span><br><span class="line">       		<span class="comment">// resultSet.beforeFirst();</span></span><br><span class="line">       		<span class="comment">// resultSet.afterLast();</span></span><br><span class="line">	       	<span class="comment">// resultSet.absolute(row);	// 移动到指定行</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>



<ol start="6">
<li> 释放资源</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">resultSet.close();</span><br><span class="line">	statement.close();</span><br><span class="line">conn.close();</span><br></pre></td></tr></table></figure>







<h3 id="2-2-案例-1："><a href="#2-2-案例-1：" class="headerlink" title="2.2 案例-1："></a>2.2 案例-1：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jabc.demo1;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 数据库的用户名；密码</span></span><br><span class="line">                String user = <span class="string">&quot;javaUser&quot;</span>;</span><br><span class="line">                String psw = <span class="string">&quot;javaUser&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 数据库的url：jdbc:mysql://ip地址:端口号/数据库名?时区</span></span><br><span class="line">                String url = <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/School_1?serverTimezone=Asia/Shanghai&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 加载驱动</span></span><br><span class="line">                Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取连接【conn连接 就代表1个数据库】</span></span><br><span class="line">                Connection conn = DriverManager.getConnection(url,user,psw);</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;=== 数据已连接&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建数据操作对象</span></span><br><span class="line">                Statement statement = conn.createStatement();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建SQL语句</span></span><br><span class="line">                String sql = <span class="string">&quot;select * from stu;&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 执行SQL,获取结果集</span></span><br><span class="line">                ResultSet resultSet = statement.executeQuery(sql); <span class="comment">// 查询</span></span><br><span class="line">                statement.execute(sql);	<span class="comment">// 所有sql</span></span><br><span class="line">            	<span class="keyword">int</span> lines = statement.executeUpdate(sql);	<span class="comment">// 执行增、删、改，返回执行的行数</span></span><br><span class="line">                <span class="keyword">int</span>[] counts = statement.executeBatch(sql);	<span class="comment">// 执行批处理</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 输出结果</span></span><br><span class="line">                <span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;sid:&quot;</span>+resultSet.getObject(<span class="string">&quot;sid&quot;</span>));</span><br><span class="line">                    System.out.println(<span class="string">&quot; , sname:&quot;</span>+resultSet.getObject(<span class="string">&quot;sname&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 关闭资源</span></span><br><span class="line">                resultSet.close();</span><br><span class="line">                statement.close();</span><br><span class="line">                conn.close();</span><br><span class="line">                System.out.println(<span class="string">&quot;=== 连接已关闭&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="2-3-封装JDBC的的工具类【初始版】"><a href="#2-3-封装JDBC的的工具类【初始版】" class="headerlink" title="2.3 封装JDBC的的工具类【初始版】"></a>2.3 封装JDBC的的工具类【初始版】</h3><ol>
<li> 编写工具类：【DBUtil】</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jdbcUtil;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DBUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="string">&quot;jdbc:mysql://localhost:3306/School_1&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String user = <span class="string">&quot;javaUser&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String psw= <span class="string">&quot;javaUser&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConn</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url,user,psw);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">relaeseConn</span><span class="params">(Connection conn, Statement st,ResultSet rs)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(rs!=<span class="keyword">null</span>) rs.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(st!=<span class="keyword">null</span>) st.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(conn!=<span class="keyword">null</span>) conn.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="2">
<li> 使用：</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jdbcdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.jdbcUtil.DBUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Connection conn = DBUtil.getConn();</span><br><span class="line">            Statement statement = conn.createStatement();</span><br><span class="line">            ResultSet res = statement.executeQuery(<span class="string">&quot;select * from stu;&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span>(res.next())&#123;</span><br><span class="line">                System.out.println(res.getString(<span class="string">&quot;sid&quot;</span>)+<span class="string">&quot; &quot;</span>+res.getString(<span class="string">&quot;sname&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            DBUtil.relaeseConn(conn,statement,res);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="2-4-封装JDBC的的工具类【改进版】"><a href="#2-4-封装JDBC的的工具类【改进版】" class="headerlink" title="2.4 封装JDBC的的工具类【改进版】"></a>2.4 封装JDBC的的工具类【改进版】</h3><ol>
<li> 编写：配置文件【<code>db.properties</code>】</li>
</ol>
<p>注意：<code>配置文件必须是src目录的直接孩子。【不能是孙子】</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">driver = com.mysql.jdbc.Driver</span><br><span class="line">url = jdbc:mysql:<span class="comment">//localhost:3306/School_1?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class="line">user = javaUser</span><br><span class="line">psw = javaUser</span><br></pre></td></tr></table></figure>



<ol start="2">
<li> 编写工具类：【DBUtil_2】</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jdbcUtil;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DBUtil_2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String user = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String psw= <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取配置文件</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream is = DBUtil_2.class.getClassLoader().getResourceAsStream(<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(is);</span><br><span class="line">            </span><br><span class="line"><span class="comment">// 获取配置文件中的4个配置</span></span><br><span class="line">            driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">            url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            user = properties.getProperty(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">            psw = properties.getProperty(<span class="string">&quot;psw&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 注册驱动</span></span><br><span class="line">            Class.forName(driver);</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConn</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url,user,psw);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">relaeseConn</span><span class="params">(Connection conn, Statement st,ResultSet rs)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(rs!=<span class="keyword">null</span>) rs.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(st!=<span class="keyword">null</span>) st.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(conn!=<span class="keyword">null</span>) conn.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="2-5-封装JDBC的工具类【最终版】"><a href="#2-5-封装JDBC的工具类【最终版】" class="headerlink" title="2.5 封装JDBC的工具类【最终版】"></a>2.5 封装JDBC的工具类【最终版】</h3><p>将<code>Statement </code>改为<code>PreparedStatement</code>, 更安全。可以防止用户输入SQL语句后，输入的语句 参与到 后端的SQL语句的编译，导致被SQL注入的问题。<code>PreparedStatement</code>将用户输入的语句作为字符串，传入后端的SQL语句中进行SQL语句的拼接。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jdbcUtil;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DBUtil_3</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String user = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String psw= <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream is = DBUtil_3.class.getClassLoader().getResourceAsStream(<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(is);</span><br><span class="line"></span><br><span class="line">            driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">            url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            user = properties.getProperty(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">            psw = properties.getProperty(<span class="string">&quot;psw&quot;</span>);</span><br><span class="line"></span><br><span class="line">            Class.forName(driver);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConn</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url,user,psw);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">relaeseConn</span><span class="params">(Connection conn, PreparedStatement ps,ResultSet rs)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(rs!=<span class="keyword">null</span>) rs.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(ps!=<span class="keyword">null</span>) ps.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(conn!=<span class="keyword">null</span>) conn.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="2-6-案例1-改进版："><a href="#2-6-案例1-改进版：" class="headerlink" title="2.6 案例1-改进版："></a>2.6 案例1-改进版：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jdbcdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.jdbcUtil.DBUtil;</span><br><span class="line"><span class="keyword">import</span> cn.jdbcUtil.DBUtil_2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//Connection conn = DBUtil.getConn();</span></span><br><span class="line">            Connection conn = DBUtil_2.getConn();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Statement statement = conn.createStatement();</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 要执行的SQL语句</span></span><br><span class="line">            String sql = <span class="string">&quot;select * from stu where sid = ? ;&quot;</span>;</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">        	<span class="comment">// 预编译SQL语句，?问号为占位符，</span></span><br><span class="line">            <span class="comment">// 占位符的内容在执行时，只作为字符串，不会被当作SQL的一部分参与编译</span></span><br><span class="line">            <span class="comment">// 采用预编译，可以防止：SQL注入</span></span><br><span class="line">            PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 设置占位符的内容，此处表示将第一个占位符的值设为3</span></span><br><span class="line">            <span class="comment">// 【注意】：JDBC中的下标 从 1 开始计数</span></span><br><span class="line">            ps.setInt(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">            ResultSet res = ps.executeQuery();</span><br><span class="line">            <span class="keyword">while</span>(res.next())&#123;</span><br><span class="line">                System.out.println(res.getString(<span class="string">&quot;sid&quot;</span>)+<span class="string">&quot; &quot;</span>+res.getString(<span class="string">&quot;sname&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            DBUtil.relaeseConn(conn,ps,res);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="2-7-案例2-登录功能"><a href="#2-7-案例2-登录功能" class="headerlink" title="2.7 案例2-登录功能:"></a>2.7 案例2-登录功能:</h3><p>注意：使用了<code>2.5小节中的 DBUtil_3工具类</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jdbcdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.jdbcUtil.DBUtil_3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserLogin</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;请输入用户名：&quot;</span>);</span><br><span class="line">        String username = sc.nextLine();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">&quot;请输入密码：&quot;</span>);</span><br><span class="line">        String upsw = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        Connection conn=<span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps=<span class="keyword">null</span>;</span><br><span class="line">        ResultSet res = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(username!=<span class="keyword">null</span> &amp;&amp; upsw!=<span class="keyword">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn = DBUtil_3.getConn();</span><br><span class="line">                String sql = <span class="string">&quot;select * from stu where sname=? and spsw=?&quot;</span>;</span><br><span class="line">                ps = conn.prepareStatement(sql);</span><br><span class="line">                ps.setString(<span class="number">1</span>,username);</span><br><span class="line">                ps.setString(<span class="number">2</span>,upsw);</span><br><span class="line"></span><br><span class="line">                res = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(res.next())&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;登录失败&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line"></span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    DBUtil_3.relaeseConn(conn,ps,res);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                sc.close();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h2 id="4-IDEA-连接MySQL"><a href="#4-IDEA-连接MySQL" class="headerlink" title="4. IDEA-连接MySQL"></a>4. IDEA-连接MySQL</h2><ul>
<li>  选择：数据库的品牌</li>
</ul>
<p><img src="https://z3.ax1x.com/2021/06/01/2nuNGT.png" alt="idea-连MySQL"></p>
<ul>
<li>在IDEA中，登录到MySQL<ul>
<li>  注意：url在填写时，需要加上<code>时区</code></li>
</ul>
</li>
</ul>
<p><img src="https://z3.ax1x.com/2021/06/01/2nK51U.png" alt="idea-连接myql"></p>
<ul>
<li>  选择具体要使用的数据库</li>
</ul>
<p><img src="https://z3.ax1x.com/2021/06/01/2nM4UI.png" alt="idea-连接mysql-3"></p>
<p>查看数据库的内容：双击数据库</p>
<p>修改数据库：双击单元格，修改数据，回车，点击提交</p>
<p><img src="https://z3.ax1x.com/2021/06/01/2nlzcT.png" alt="idea中可视化修改数据"></p>
<p><img src="https://z3.ax1x.com/2021/06/01/2n1RrF.png" alt="idea中直接使用SQL语句"></p>
<h2 id="5-JDBC事务-操作"><a href="#5-JDBC事务-操作" class="headerlink" title="5. JDBC事务-操作"></a>5. JDBC事务-操作</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.jdbcdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.jdbcUtil.DBUtil_3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 获取连接</span></span><br><span class="line">            conn = DBUtil_3.getConn();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭自动提交 =》开启事务</span></span><br><span class="line">            conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行 2个事务</span></span><br><span class="line">            String sql1 = <span class="string">&quot;update account_tb set money = money-500 where userID=2&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql1);</span><br><span class="line">            ps.executeUpdate();</span><br><span class="line"></span><br><span class="line">            String sql2 = <span class="string">&quot;update account_tb set money = money+500 where userID=1&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql2);</span><br><span class="line">            ps.executeUpdate();</span><br><span class="line"><span class="comment">// 提交事务</span></span><br><span class="line">            conn.commit();</span><br><span class="line">            </span><br><span class="line"><span class="comment">// 重新开启事务的自动提交            </span></span><br><span class="line">            conn.setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 回滚事务                </span></span><br><span class="line">                conn.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            DBUtil_3.relaeseConn(conn,ps,rs = <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>









<h2 id="6-数据库连接池"><a href="#6-数据库连接池" class="headerlink" title="6. 数据库连接池"></a>6. 数据库连接池</h2><ul>
<li><p>  <a href="https://www.bilibili.com/video/BV1NJ411J79W?p=45">狂神说-bilibili</a></p>
</li>
<li><p>  <a href="https://blog.csdn.net/ximexi/article/details/112609042">DBCP连接池所用到的两个jar包下载地址-CSDN博客</a></p>
</li>
<li><p>  <a href="https://blog.csdn.net/huangyuhua068/article/details/82086259">c3p0-jar包-下载CSDN博客</a></p>
</li>
</ul>
<p>数据库连接过程：</p>
<ul>
<li>  连接 -&gt; 执行 -&gt; 释放  【这3个过程，浪费系统资源，开销大】</li>
</ul>
<p>池化技术：</p>
<blockquote>
<p>  提前准备好一些连接资源（如：conn对象，preparedStatement对象，ResultSet等），用户用完后，不释放资源，而是将资源重新放回池中。</p>
<p>  <strong>小结</strong>：<code>数据库连接池</code>就是存放资源的<code>容器</code>。</p>
</blockquote>
<ul>
<li>  最小连接数：设为常用的连接数，如：10</li>
<li>  最大连接数：如：15</li>
<li>  等待超时：如：10 ms</li>
</ul>
<p>使用数据库连接池的好处：</p>
<blockquote>
<ul>
<li>  节约资源</li>
<li>  高效访问</li>
</ul>
</blockquote>
<p>编写连接池：实现 DataSource接口【获取连接】</p>
<blockquote>
<p>  开源数据源 实现:</p>
<ul>
<li>  DBCP:</li>
<li>  C3P0：</li>
<li>  Druid：阿里</li>
</ul>
</blockquote>
<p>使用以上的数据库连接池后，无需 再编写 数据库的连接代码。</p>
<p><code>数据库连接池</code>实现了：<code>javax.sql.DataSource</code>接口</p>
<ul>
<li>  获取连接：<code>getConnection()</code></li>
<li>  释放连接：连接池中的conn调用<code>conn.close()</code>，归还连接</li>
</ul>
<h3 id="6-1-DBCP"><a href="#6-1-DBCP" class="headerlink" title="6.1 DBCP:"></a>6.1 DBCP:</h3><p>需要导入的包</p>
<ul>
<li>  <code>commons-dbcp-1.4.jar</code></li>
<li>  <code>commons-pool-1.6.jar</code></li>
</ul>
<p>步骤：</p>
<ul>
<li>  编写<code>DBCP.properties</code> 配置文件,放在模块<code>src目录下的第一层</code></li>
<li>导入Jar包：<ul>
<li>  <code>commons-dbcp-1.4.jar</code></li>
<li>  <code>commons-pool-1.6.jar</code></li>
<li>  <code>mysql-connector-java-5.0.4-bin.jar</code></li>
</ul>
</li>
<li>  编写工具类【在工具类中创建数据源，返回连接】</li>
<li>  获取连接，执行语句，处理数据，释放资源。</li>
</ul>
<p>DBCP-properties配置：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#连接设置</span><br><span class="line">driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">url=jdbc:mysql:<span class="comment">//localhost:3306/School_1?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class="line">username=root</span><br><span class="line">password=root</span><br><span class="line"></span><br><span class="line">#!-- 初始化连接 --</span><br><span class="line">initialSize=<span class="number">10</span></span><br><span class="line"></span><br><span class="line">#最大连接数量</span><br><span class="line">maxActive=<span class="number">50</span></span><br><span class="line"></span><br><span class="line">#!-- 最大空闲连接 --</span><br><span class="line">maxIdle=<span class="number">20</span></span><br><span class="line"></span><br><span class="line">#!-- 最小空闲连接 --</span><br><span class="line">minIdle=<span class="number">5</span></span><br><span class="line"></span><br><span class="line">#!-- 超时等待时间以毫秒为单位 <span class="number">6000</span>毫秒/<span class="number">1000</span>等于<span class="number">60</span>秒 --</span><br><span class="line">maxWait=<span class="number">60000</span></span><br><span class="line">#JDBC驱动建立连接时附带的连接属性属性的格式必须为这样：【属性名=property;】</span><br><span class="line">#注意：user 与 password 两个属性会被明确地传递，因此这里不需要包含他们。</span><br><span class="line">connectionProperties=useUnicode=<span class="keyword">true</span>;characterEncoding=UTF8</span><br><span class="line"></span><br><span class="line">#指定由连接池所创建的连接的自动提交（auto-commit）状态。</span><br><span class="line">defaultAutoCommit=<span class="keyword">true</span></span><br><span class="line"></span><br><span class="line">#driver <span class="keyword">default</span> 指定由连接池所创建的连接的只读（read-only）状态。</span><br><span class="line">#如果没有设置该值，则“setReadOnly”方法将不被调用。（某些驱动并不支持只读模式，如：Informix）</span><br><span class="line">defaultReadOnly=</span><br><span class="line"></span><br><span class="line">#driver <span class="keyword">default</span> 指定由连接池所创建的连接的事务级别（TransactionIsolation）。</span><br><span class="line">#可用值为下列之一：（详情可见javadoc。）NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE</span><br><span class="line">defaultTransactionIsolation=READ_UNCOMMITTED</span><br></pre></td></tr></table></figure>





<p>DBCPUtil.class</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.DBCP_demo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbcp.BasicDataSourceFactory;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DBCPUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream is = DBCPUtil.class.getClassLoader().getResourceAsStream(<span class="string">&quot;dbcpConfig.properties&quot;</span>);</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(is);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建数据源</span></span><br><span class="line">            dataSource = BasicDataSourceFactory.createDataSource(properties);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConn</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 从数据源获取连接</span></span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">relaeseConn</span><span class="params">(Connection conn, PreparedStatement ps, ResultSet rs)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (rs != <span class="keyword">null</span>) rs.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (ps != <span class="keyword">null</span>) ps.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) conn.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<p>演示：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.DBCP_demo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 利用工具类获取连接</span></span><br><span class="line">            Connection conn = DBCPUtil.getConn();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            String sql = <span class="string">&quot;select * from stu where sid = ? ;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            ps.setInt(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">            ResultSet res = ps.executeQuery();</span><br><span class="line">            <span class="keyword">while</span>(res.next())&#123;</span><br><span class="line">                System.out.println(res.getString(<span class="string">&quot;sid&quot;</span>)+<span class="string">&quot; &quot;</span>+res.getString(<span class="string">&quot;sname&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            DBCPUtil.releaseConn(conn,ps,res);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="6-2-c3p0："><a href="#6-2-c3p0：" class="headerlink" title="6.2 c3p0："></a>6.2 c3p0：</h3><p>使用<code>XML</code>作为<code>配置文件</code>的格式</p>
<p>需要导入的Jar包：</p>
<ul>
<li>  <code>mchange-commons-java.jar</code></li>
<li>  <code>c3p0.jar</code></li>
</ul>
<p>使用的方式【2种】：</p>
<ul>
<li>  硬编码：直接在代码中设置参数</li>
<li>  配置文件【配置文件名不可改】: <code>c3p0.properties</code> 或<code>c3p0-config.xml</code></li>
</ul>
<p><code>配置文件</code>应该存放在<code>src目录</code>下。</p>
<p>C3P0的使用步骤：</p>
<blockquote>
<ul>
<li>  导入 JAR包：<code>mchange-commons-java.jar</code>+<code>c3p0.jar</code></li>
<li>  定义配置文件：<code>src目录</code>下<code>c3p0-config.xml</code></li>
<li>  创建数据库连接池：<code>CombopooledDadtaSource</code>对象</li>
<li>  获取连接：<code>comboPooledDadtaSource.getConnection();</code></li>
</ul>
</blockquote>
<p><code>c3p0-config.xml</code>配置文件：【c3p0自动寻找项目中的本地配置文件】</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">default-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://localhost:3306/School_1<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>javaUser<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>javaUser<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkoutTimeout&quot;</span>&gt;</span>3000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">default-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure>





<p>java工具类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.c3p0Demo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C3P0Util</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 创建数据库连接池</span></span><br><span class="line">            dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConn</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="comment">// 从数据源获取连接</span></span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">releaseConn</span><span class="params">(Connection conn, PreparedStatement ps, ResultSet rs)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (rs != <span class="keyword">null</span>) rs.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (ps != <span class="keyword">null</span>) ps.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) conn.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>演示：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.c3p0Demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Connection conn = C3P0Util.getConn();</span><br><span class="line"></span><br><span class="line">            String sql = <span class="string">&quot;select * from stu where sid = ? ;&quot;</span>;</span><br><span class="line">            PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            ps.setInt(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">            ResultSet res = ps.executeQuery();</span><br><span class="line">            <span class="keyword">while</span>(res.next())&#123;</span><br><span class="line">                System.out.println(res.getString(<span class="string">&quot;sid&quot;</span>)+<span class="string">&quot; &quot;</span>+res.getString(<span class="string">&quot;sname&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            C3P0Util.relaeseConn(conn,ps,res);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="6-3-Druid："><a href="#6-3-Druid：" class="headerlink" title="6.3 Druid："></a>6.3 Druid：</h3><p>Druid是阿里巴巴出的一款数据库连接池。</p>
<p>使用步骤：</p>
<blockquote>
<ul>
<li>  导入JAR 包：<code>druid-1.0.9.jar</code></li>
<li>导入配置文件：<ul>
<li>  <code>properties</code>格式的配置文件</li>
<li>  可以放在任意目录下</li>
<li>  配置文件名无要求</li>
</ul>
</li>
<li>  通过工厂来获取数据库连接对象<code>Conn</code>：<code>DruidDataSourceFactory</code></li>
<li>  执行数据库相关操作</li>
</ul>
</blockquote>
<p><code>Druid.properties</code>配置文件：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">url=jdbc:mysql:<span class="comment">//127.0.0.1:3306/School_1</span></span><br><span class="line">username=javaUser</span><br><span class="line">password=javaUser</span><br><span class="line">initialSize=<span class="number">5</span></span><br><span class="line">maxActive=<span class="number">10</span></span><br><span class="line">maxWait=<span class="number">3000</span></span><br></pre></td></tr></table></figure>



<p>Druid工具类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.DruidDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 重点代码</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        InputStream is = DruidUtil.class.getClassLoader().getResourceAsStream(<span class="string">&quot;druid.properties&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            properties.load(is);</span><br><span class="line"><span class="comment">// 创建连接池            </span></span><br><span class="line">            dataSource = DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 返回 静态的数据库连接池    </span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span> dataSource;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 归还资源    </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">releaseConn</span><span class="params">(Connection conn, PreparedStatement ps, ResultSet rs)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(conn!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(ps!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                ps.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(rs!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                rs.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>main方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.DruidDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps =<span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 获取连接            </span></span><br><span class="line">            conn = DruidUtil.getConnection();</span><br><span class="line">            String sql = <span class="string">&quot;select * from stu where sid = ?;&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            ps.setInt(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(rs.next())</span><br><span class="line">            System.out.println(rs.getString(<span class="string">&quot;sname&quot;</span>));</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            DruidUtil.releaseConn(conn,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>













<h3 id="6-4-JDBC-Templete"><a href="#6-4-JDBC-Templete" class="headerlink" title="6.4 JDBC Templete"></a>6.4 JDBC Templete</h3><p>Spring 框架对 JDBC的简单封装：<code>JdbcTemplete对象</code>。</p>
<p>【以下示例中，使用了<code>Druid示例</code>中的<code>获取DataSource的方法</code>：<code>DruidUtil.getDataSource();</code>】</p>
<p>步骤：</p>
<blockquote>
<ul>
<li>导入JAR包<ul>
<li>  <code>commons-logging-1.2.jar</code></li>
<li>  <code>spring-beans-5.0.0.RELEASE.jar</code></li>
<li>  <code>spring-core-5.0.0.RELEASE.jar</code></li>
<li>  <code>spring-jdbc-5.0.0.RELEASE.jar</code></li>
<li>  <code>spring-tx-5.0.0.RELEASE.jar</code></li>
</ul>
</li>
<li>通过<code> DataSource</code> 对象 来创建<code>JdbcTemplete </code>对象：<ul>
<li>  <code>JdbcTemplete jt = new JdbcTemplete(dataSource);</code></li>
</ul>
</li>
<li>调用<code> JdbcTemplete对象的方法</code>来进行 增、删、改、查。<ul>
<li>  <code>update(sql,占位符对应的参数)</code>：增、删、改</li>
<li>  <code>queryForMap(sql,占位符对应的参数)</code>：查询的<code>结果集</code>封装为 <code>Map集合</code>，1条记录</li>
<li>  <code>queryForList(sql)</code>：查询的<code>结果集</code>封装为 <code>List集合</code>，多条记录</li>
<li>  <code>query(sql,BeanPropertyRowMapper)</code>：查询的<code>结果集</code>封装为 <code>JavaBean对象</code></li>
<li>  <code>queryForObject(sql,Long.class)</code>：查询的<code>结果集</code>封装为 <code>对象</code></li>
</ul>
</li>
</ul>
</blockquote>
<p>注意：</p>
<ul>
<li>  以下代码中，为简化操作，直接使用了6.3小节的<code>DruidUtil.getDataSource();</code>来获取<code>DataSource</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.JdbcTemplete;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.DruidDemo.DruidUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        JdbcTemplate jt = <span class="keyword">new</span> JdbcTemplate(DruidUtil.getDataSource());</span><br><span class="line">        String sql = <span class="string">&quot;update stu set spsw = ? where sid = ?&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 传入sql语句、sql中的参数</span></span><br><span class="line">        <span class="keyword">int</span> count = jt.update(sql,<span class="string">&quot;abc123&quot;</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(count);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<p>下面测试-增删改查的代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.JdbcTemplete;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.DruidDemo.DruidUtil;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jt = <span class="keyword">new</span> JdbcTemplate(DruidUtil.getDataSource());</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 修改</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jt_DML</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;update stu set spsw = ? where sid =?;&quot;</span>;</span><br><span class="line">        <span class="keyword">int</span> count = jt.update(sql,<span class="string">&quot;789&quot;</span>,<span class="number">3</span>);</span><br><span class="line">        System.out.println(count);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询【1条记录】  </span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jt_DQL</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select * from stu where sid =?;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Map&lt;String,Object&gt; mp= jt.queryForMap(sql,<span class="number">2</span>);</span><br><span class="line">        System.out.println(mp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询【此处会报错，因为数据不止一条记录，但queryForMap方法只转化1条记录，】</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jt_DQL2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select * from stu;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Map&lt;String,Object&gt; mp= jt.queryForMap(sql);</span><br><span class="line">        System.out.println(mp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 查询【多条记录】    </span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jt_DQL3</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select * from stu;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        List&lt;Map&lt;String,Object&gt;&gt; list1= jt.queryForList(sql);</span><br><span class="line">        System.out.println(list1);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//  查询   </span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jt_DQL4</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select * from stu;&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        List&lt;Student&gt; list1 = jt.query(sql,<span class="keyword">new</span> BeanPropertyRowMapper&lt;Student&gt;(Student.class);     </span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Student student : list1) &#123;</span><br><span class="line">            System.out.println(student);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">                                       </span><br><span class="line">                                       </span><br><span class="line">                                       </span><br><span class="line">                                       </span><br><span class="line"><span class="comment">// 查询【聚合函数】                                       </span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jt_DQL5</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select count(*) from stu;&quot;</span>;</span><br><span class="line">       </span><br><span class="line">        Long total = jt.queryForObject(sql,Long.class);</span><br><span class="line">       </span><br><span class="line">        System.out.println(total);</span><br><span class="line">    &#125;         </span><br><span class="line">                                       </span><br><span class="line">                                       </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>后端</category>
        <category>Java</category>
        <category>SQL</category>
        <category>JDBC</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>JDBC</tag>
      </tags>
  </entry>
  <entry>
    <title>Java SE-入门笔记</title>
    <url>/2021/08/04/Java%20SE/</url>
    <content><![CDATA[<h1 id="Java-SE-入门笔记"><a href="#Java-SE-入门笔记" class="headerlink" title="Java SE -入门笔记"></a>Java SE -入门笔记</h1><p>[toc]</p>
<h2 id="0-前置知识"><a href="#0-前置知识" class="headerlink" title="0. 前置知识"></a>0. 前置知识</h2><p>文档：</p>
<ul>
<li>  <a href="https://www.runoob.com/java/java-tutorial.html">Java 教程 | 菜鸟教程 (runoob.com)</a></li>
<li>  <a href="https://tool.oschina.net/apidocs/apidoc?api=jdk-zh">在线文档-jdk-zh</a></li>
<li>  <a href="https://blog.csdn.net/Zzh1110/article/details/105069644">JavaSE-博客-笔记-网传</a></li>
</ul>
<h3 id="0-1-Java-的文件结构"><a href="#0-1-Java-的文件结构" class="headerlink" title="0.1 Java 的文件结构 :"></a>0.1 Java 的<strong>文件结构</strong> :</h3><blockquote>
<p>  项目 -&gt;  模块（包）-&gt;  .java文件 -&gt; 类 </p>
<p>  包的命名规范：</p>
<ol>
<li> 由字母、数字下划线组成，不能以数字开头，字母全部小写。</li>
<li> 不同路径通过点(.)来分割，如：<code>java.lang</code></li>
<li> 为了保证包名唯一性，一般使用域名反写来命名包，如：<code>com.baidu.music</code></li>
</ol>
<p>  新建包：<code>project -&gt; 右键 src -&gt; new -&gt; package</code></p>
<p>   按包名展开：<code>左侧导航栏 -&gt; 齿轮 -&gt;  去掉 compact middle packages的勾</code></p>
</blockquote>
<h3 id="0-2-运行环境介绍"><a href="#0-2-运行环境介绍" class="headerlink" title="0.2 运行环境介绍"></a>0.2 运行环境介绍</h3><ul>
<li>  JVM：运行，java虚拟机</li>
<li>  JRE：运行，（JVM+lib类库 =》真正可以执行.class文件）</li>
<li>  JDK：开发，4个主要的文件夹：<code>bin、include、lib、 jre</code></li>
</ul>
<p>范围：</p>
<blockquote>
<p>   JDK &gt; JRE &gt;JVM</p>
</blockquote>
<p><code>JDK</code>是用于java程序的<code>开发</code>,而<code>JRE</code>则是只能运行class而<code>没有编译的功能</code>。</p>
<p>Java的能够“一次编译，到处运行”的原因：</p>
<blockquote>
<p>  Java虚拟机在执行字节码（.class文件）时，把字节码解释成具体平台上的机器指令执行。</p>
</blockquote>
<h3 id="0-3-cmd中的Java指令"><a href="#0-3-cmd中的Java指令" class="headerlink" title="0.3 cmd中的Java指令"></a>0.3 cmd中的Java指令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">javac 文件名</span><br><span class="line"></span><br><span class="line">java 类名</span><br></pre></td></tr></table></figure>





<h2 id="1-环境配置-快捷键"><a href="#1-环境配置-快捷键" class="headerlink" title="1. 环境配置 + 快捷键"></a>1. 环境配置 + 快捷键</h2><h3 id="1-1-JDK-下载："><a href="#1-1-JDK-下载：" class="headerlink" title="1.1 JDK-下载："></a>1.1 JDK-下载：</h3><ul>
<li><p>   <a href="https://www.oracle.com/java/technologies/javase-downloads.html">JDK-官网下载</a> </p>
</li>
<li><p>   <a href="https://www.programmer-box.com/?ref=jdk_1.6">JDK-下载url</a></p>
</li>
<li><p>  <a href="https://blog.csdn.net/Marvin_996_ICU/article/details/106240065">JDK的下载、安装和环境配置教程</a></p>
</li>
<li><p><a href="https://blog.csdn.net/panjiabin321/article/details/89391210">JDK12安装配置-Win10</a></p>
</li>
</ul>
<h3 id="1-2-IDEA下载："><a href="#1-2-IDEA下载：" class="headerlink" title="1.2 IDEA下载："></a>1.2 IDEA下载：</h3><ul>
<li>  <a href="https://www.jetbrains.com/zh-cn/idea/download/#section=windows">IntelliJ IDEA下载</a></li>
<li>  <a href="https://mp.weixin.qq.com/s?__biz=MzU0MTg5NDkzNA==&mid=2247491865&idx=1&sn=9085c37f2b10a3495d68f5d0b66623a2&chksm=fb205160cc57d876a540fb31dcf8990b2d600855d3a195ccc565683899de64bb055401345920&scene=21#wechat_redirect">IDEA 2019 下载+安装教程</a></li>
<li>  <a href="https://pan.baidu.com/s/1Yhq_7dP0MOayyEJ-g4_27A">JetBrains 2021 最新版本全家桶激活</a>  提取码：ute8</li>
<li>  IDEA_30天重置工具下载:<a href="https://wws.lanzoui.com/i3bcJpr46ob">https://wws.lanzoui.com/i3bcJpr46ob</a>  =》密码:750o</li>
</ul>
<h4 id="1-2-1-IDEA的配置："><a href="#1-2-1-IDEA的配置：" class="headerlink" title="1.2.1 IDEA的配置："></a>1.2.1 IDEA的配置：</h4><ul>
<li>  <a href="https://www.bilibili.com/video/BV1FZ4y1H7rh?p=174&spm_id_from=pageDriver">IDEA-配置-视频</a></li>
</ul>
<blockquote>
<ol>
<li> 新建Project时，需要选择已安装的JDK</li>
<li> 更改字号：file -&gt; settings -&gt; editor  -&gt; font 或者 general-&gt;mouse control -&gt; 勾选change font size whith ctrl mouse</li>
<li> 更改快捷键【例如】：file -&gt; settings -&gt; keymap -&gt; 齿轮图标 -&gt; duplicate -&gt; 展开 main Menu -&gt; 展开 code -&gt; code complete -&gt; 展开 -&gt; 选中 -&gt; 右键 -&gt; add keyboard shutcut -&gt; 输入快捷键 -&gt; ok</li>
<li>方法分隔符：file -&gt; settings -&gt; editor -&gt; general -&gt; appearance -&gt; show method seperator</li>
</ol>
</blockquote>
<h4 id="1-2-2-常用快捷键："><a href="#1-2-2-常用快捷键：" class="headerlink" title="1.2.2 常用快捷键："></a>1.2.2 常用快捷键：</h4><table>
<thead>
<tr>
<th>功能</th>
<th>快捷键</th>
</tr>
</thead>
<tbody><tr>
<td>打印</td>
<td>sout</td>
</tr>
<tr>
<td>main 函数</td>
<td>psvm 或 main</td>
</tr>
<tr>
<td>代码提示</td>
<td>alt + /</td>
</tr>
<tr>
<td>自动导包（修正代码）</td>
<td>alt  + enter</td>
</tr>
<tr>
<td>复制光标所在行，并插入到光标的下一行</td>
<td>ctrl + d</td>
</tr>
<tr>
<td>删除一行</td>
<td>ctrl + y</td>
</tr>
<tr>
<td>格式化代码</td>
<td>ctrl + alt +L</td>
</tr>
<tr>
<td>单行注释</td>
<td>ctrl + /</td>
</tr>
<tr>
<td>多行注释</td>
<td>ctrl + shift + /</td>
</tr>
<tr>
<td>自动生成代码（get / set /toString）</td>
<td>alt  + insert</td>
</tr>
<tr>
<td>移动当前代码行</td>
<td>alt + shift +  上下箭头</td>
</tr>
<tr>
<td>快速写 遍历数组的代码</td>
<td>数组名.fori + enter</td>
</tr>
<tr>
<td>快速生成代码块，如：for、if、try-catch</td>
<td>ctrl + alt + T</td>
</tr>
<tr>
<td>快速生成 for 代码块</td>
<td>fori</td>
</tr>
<tr>
<td>快速生成 增强型 for</td>
<td>iter   或者 foreach</td>
</tr>
<tr>
<td>搜索类</td>
<td>ctrl + n</td>
</tr>
<tr>
<td>查看子类</td>
<td>ctrl + h</td>
</tr>
</tbody></table>
<h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2. 数据类型"></a>2. 数据类型</h2><p><img src="https://z3.ax1x.com/2021/05/24/gjUjoj.png" alt="数据类型"></p>
<h3 id="2-1-char-和-byte-的差别："><a href="#2-1-char-和-byte-的差别：" class="headerlink" title="2.1 char 和 byte 的差别："></a>2.1 char 和 byte 的差别：</h3><ul>
<li>  char 是无符号型的，可以表示一个整数，不能表示负数；char可以表中文字符，</li>
<li>  byte 是有符号型的，可以表示 -128—127 的数，byte不可以表中文字符</li>
</ul>
<h2 id="3-运算符"><a href="#3-运算符" class="headerlink" title="3. 运算符"></a>3. 运算符</h2><p><img src="https://z3.ax1x.com/2021/05/24/gjaKl6.png" alt="运算符"></p>
<h2 id="4-数组"><a href="#4-数组" class="headerlink" title="4. 数组"></a>4. 数组</h2><blockquote>
<ol>
<li><p> 数组 直接打印: 得到的是<code>地址</code></p>
</li>
<li><p>数组反转：对称位置的元素交换</p>
</li>
</ol>
</blockquote>
<h3 id="4-1-数组的初始化：【4种】"><a href="#4-1-数组的初始化：【4种】" class="headerlink" title="4.1 数组的初始化：【4种】"></a>4.1 数组的初始化：【4种】</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 静态[指定内容]：</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">// 格式： 数据类型 [] 数组名= new 数据类型[]&#123;数组的内容&#125;;</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//==============================================</span></span><br><span class="line"><span class="comment">//动态[指定长度]</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">// 格式：数据类型[] 数组名称 = new 数据类型[长度]</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">		arr[<span class="number">0</span>] =<span class="number">12</span>;</span><br><span class="line">		arr[<span class="number">1</span>] = <span class="number">15</span>;</span><br><span class="line">		arr[<span class="number">2</span>] = <span class="number">45</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//==============================================</span></span><br><span class="line"><span class="comment">//省略：</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 数据类型[] 数组名称 = &#123;数组的内容&#125;；</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//==============================================</span></span><br><span class="line"><span class="comment">//拆分成2步：</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 格式: 数据类型[] 数组名称；</span></span><br><span class="line">		<span class="comment">// 数组名称 = new 数据类型[]&#123;数组内容&#125;； (采用省略格式则不能分步骤写)</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span>[] arr;</span><br><span class="line">		arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>









<h2 id="5-内存区域的划分"><a href="#5-内存区域的划分" class="headerlink" title="5. 内存区域的划分"></a>5. 内存区域的划分</h2><ul>
<li>  栈(stack)：</li>
</ul>
<blockquote>
<p>  存放方法的局部变量，运行方法<br>  【局部变量 的特点：一旦超出作用域就会从内存中消失】</p>
</blockquote>
<ul>
<li>  堆(heap)：</li>
</ul>
<blockquote>
<p>  new出来的东西都放在堆中(为：引用类型)，如 ：数组<br>  【堆内的东西都有一个16进制的地址值】</p>
</blockquote>
<ul>
<li>  方法区(method area)：</li>
</ul>
<blockquote>
<p>  存储<code>.class</code>的相关信息，包含：方法信息</p>
</blockquote>
<ul>
<li>  本地方法栈(native method stack)</li>
</ul>
<ul>
<li>  寄存器(register)：与cpu相关</li>
</ul>
<h2 id="6-面向对象"><a href="#6-面向对象" class="headerlink" title="6. 面向对象"></a>6. 面向对象</h2><p> 面向对象的三大特性：</p>
<ul>
<li>  封装性(如： private, 方法等)</li>
<li>  继承性(extend ,super等)</li>
<li>  多态性(<strong>子类</strong>继承<strong>父类</strong>的方法后可以 <strong>覆盖重写</strong>override)</li>
</ul>
<h3 id="6-1-类："><a href="#6-1-类：" class="headerlink" title="6.1 类："></a>6.1 类：</h3><blockquote>
<ol>
<li><p><code>类</code> = <code>属性</code> +<code> 方法</code>     // 方法也就是行为、函数。</p>
</li>
<li><p>JAVA的<code>类</code>：<code>成员变量</code>(在类内部，即：属性) <strong>+</strong> <code>成员方法</code>+<code>构造方法</code>        // 普通变量：写在函数的内部。 </p>
</li>
<li><p><code>方法</code> ：只能有<code>1个返回值</code>。如果想<strong>返回多个数</strong>，可以将<strong>返回值定义为数组</strong>，并返回数组首地址。 </p>
</li>
<li><p>JavaBean：标准类，类中至少要包括：<code>无参构造方法</code>，<code>全参构造方法</code>，<code>属性 + getter + setter</code></p>
</li>
<li><p> 构造方法：在创建对象(new)时，自动调用。【快捷键：<code>alter + insert</code>】</p>
</li>
</ol>
</blockquote>
<h4 id="6-1-1-构造方法："><a href="#6-1-1-构造方法：" class="headerlink" title="6.1.1 构造方法："></a>6.1.1 构造方法：</h4><blockquote>
<ol>
<li><code>构造方法的名称</code>必须与所在的<code>类的名称</code>完全相同，大小写也要一样。<br> 【普通方法首字小写，构造方法首字大写】 </li>
<li>  构造方法<code>不能写返回值类型</code>，连void也不要写。</li>
<li> 构造方法<code>不能return </code>返回值。</li>
<li> 如果<code>没有写</code>构造方法，那么编译器会<code>自动赠送</code>1个构造方法。</li>
<li> 只要自己编<code>写了构造方法</code>，编译器就<code>不会赠送</code>构造方法。</li>
<li> 可以在定义构造方法时，将所需的参数定义在方法的参数列表中， 可以在创建对象时传入参数。但是还是需要写<code>getter和setter 方法</code>，目的是<code>方便修改参数的值</code>。</li>
</ol>
</blockquote>
<h4 id="6-1-2-成员变量-与-局部变量-的区别："><a href="#6-1-2-成员变量-与-局部变量-的区别：" class="headerlink" title="6.1.2 成员变量 与 局部变量 的区别："></a>6.1.2 成员变量 与 局部变量 的区别：</h4><blockquote>
<ol>
<li><p><code>成员变量</code>：定义在 <code>类</code> 的内部，在<strong>类</strong>中都可以<strong>使用</strong>，有<code>默认值 </code> 。</p>
</li>
<li><p> <code>局部变量</code>：定义在 <code>方法内部</code>，只能在 <strong>方法内部</strong>使用，<code>没有默认值</code>，使用要<strong>先赋值</strong> 。</p>
</li>
</ol>
</blockquote>
<h4 id="6-1-3-成员变量-与-局部变量-重名时-的优先级："><a href="#6-1-3-成员变量-与-局部变量-重名时-的优先级：" class="headerlink" title="6.1.3 成员变量 与 局部变量 重名时 的优先级："></a>6.1.3 成员变量 与 局部变量 重名时 的优先级：</h4><blockquote>
<ol>
<li> 默认根据<code>就近原则</code>，<code>优先</code>使用 <code>局部变量</code>。</li>
<li> 如果想使用<code>成员变量</code>，可以使用<code>this关键字</code>，如： <code>this.name</code> 。</li>
<li> <code>this</code> 一定是写在<code>方法内部</code>的，用于在<code>变量名相同</code>时，<code>做区分</code> 。</li>
</ol>
</blockquote>
<h4 id="6-1-4-Override-方法重写-Overload-方法重载："><a href="#6-1-4-Override-方法重写-Overload-方法重载：" class="headerlink" title="6.1.4 Override 方法重写 + Overload 方法重载："></a>6.1.4 Override 方法重写 + Overload 方法重载：</h4><ul>
<li>  <a href="https://blog.csdn.net/weixin_44502804/article/details/90523478">方法重写与方法重载的区别-url</a></li>
</ul>
<blockquote>
<p>  <code>Override 方法重写</code>： </p>
<ol>
<li><p> 子类继承父类/接口 后，换掉同名的方法中的处理语句。</p>
</li>
<li><p> 方法重写前后：返回值类型、方法名、参数必须一致。</p>
</li>
<li><p> 重写后，访问权限必须更宽松，如：重写前 =&gt; protected，重写后 =&gt; public</p>
</li>
</ol>
<p>  <code>Overload 方法重载</code>：</p>
<ol>
<li> 在一个类里面，返回类型可以相同也可以不同，方法名一致，而参数不同。</li>
</ol>
</blockquote>
<p>覆盖重写Override：【需要先：继承】</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 父类：属性 + 无参构造 + 全参构造 + getter + setter + Eat()</span></span><br><span class="line"><span class="comment">// 子类：属性 + 无参构造 + 全参构造 + getter + setter + 覆盖重写的Eat()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 父类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Father</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Father</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Son</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Son</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;son：我要吃 -&gt; 水果&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//main</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FaterAndSonDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Father father = <span class="keyword">new</span> Father(<span class="string">&quot;刘备&quot;</span>);</span><br><span class="line">        Son son = <span class="keyword">new</span> Son(<span class="string">&quot;阿斗&quot;</span>);</span><br><span class="line">        father.eat();</span><br><span class="line">        son.eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>覆盖重载Overload：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 以下代码 省略了 构造方法+ getter + setter</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Calc</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> b;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> c;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//方法重载1</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//方法重载2</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">float</span> c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b+c;</span><br><span class="line">    &#125;    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h4 id="6-1-5-内部类：【4种】"><a href="#6-1-5-内部类：【4种】" class="headerlink" title="6.1.5 内部类：【4种】"></a>6.1.5 内部类：【4种】</h4><blockquote>
<p>  <code>内部类</code>：1个类 定义在 另一个类 的内部 =》<code>内部类</code>(public / protected / private)。 外面的类叫<code>外部类</code>(只能public)。</p>
<p>  <strong>注意</strong>：<code>内部类</code>可以访问<code>外部类</code>的所有<code>成员变量</code>和<code>成员方法</code>。</p>
</blockquote>
<ul>
<li>  <a href="https://blog.csdn.net/weixin_42762133/article/details/82890555?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160906466316780279191862%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=160906466316780279191862&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-3-82890555.pc_search_result_cache&utm_term=Java">Java内部类</a></li>
</ul>
<ol>
<li> 成员内部类：</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 1. 定义 外部类、外部类属性、构造方法、getter、setter</span></span><br><span class="line"><span class="comment"> * 2. 定义 成员内部类、内部类属性、构造方法、getter、setter</span></span><br><span class="line"><span class="comment"> * 3. 在 main 中，new 外部类对象</span></span><br><span class="line"><span class="comment"> * 4. 格式：外部类名.内部类名 变量名 = 外部类对象.new 内部类名();</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// main</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OutAndInnerClassDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        Outer outer = <span class="keyword">new</span> Outer();</span><br><span class="line">        Outer.Inner inner = outer.<span class="function">new <span class="title">Inner</span><span class="params">()</span></span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//外部类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Outer</span></span>&#123;  </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Outer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;外部类&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//内部类</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">   </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Inner</span><span class="params">()</span> </span>&#123;</span><br><span class="line">             System.out.println(<span class="string">&quot;内部类&quot;</span>);</span><br><span class="line">        &#125;      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<ol start="2">
<li> 静态内部类：</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 1. 定义 外部类、外部类属性、构造方法、getter、setter</span></span><br><span class="line"><span class="comment"> * 2. 定义 静态内部类、内部类属性、构造方法、getter、setter</span></span><br><span class="line"><span class="comment"> * 3. 在 main 中，</span></span><br><span class="line"><span class="comment"> * 4. 格式：外部类名.静态内部类名 变量名 = new 外部类名.静态内部类名();</span></span><br><span class="line"><span class="comment"> * 5. </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// main</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OutAndInnerClassDemo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Outer2.Inner inner = <span class="keyword">new</span> Outer2.Inner();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//外部类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Outer2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Outer2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;外部类&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//静态内部类</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Inner</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;静态内部类&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<ol start="3">
<li> 方法内部类：【在方法内部：定义、创建new、使用(调用)】</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 1. 定义 外部类、外部类属性、构造方法、getter、setter</span></span><br><span class="line"><span class="comment"> * 2. 定义 外部类的方法，该方法中的内部类、内部类属性、构造方法、getter、setter</span></span><br><span class="line"><span class="comment"> * 3. 在 外部类的方法中 new 内部类的对象：内部类名 变量名 = new 内部类名();</span></span><br><span class="line"><span class="comment"> * 4. 在 main 中，</span></span><br><span class="line"><span class="comment"> * 5. 格式：</span></span><br><span class="line"><span class="comment"> 			外部类 变量名= new 外部类();</span></span><br><span class="line"><span class="comment"> 			变量名.外部类方法名();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//main</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OutAndInnerClassDemo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Outer3 o3 = <span class="keyword">new</span> Outer3();</span><br><span class="line">        o3.Func1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 外部类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Outer3</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Outer3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;外部类 -&gt; 创建&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">// 外部类方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">Func1</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;外部类的方法 -&gt; 调用&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 内部类</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Inner3</span></span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="title">Inner3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;内部类 -&gt; 创建&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">			</span><br><span class="line">            <span class="comment">// 内部类方法调用</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;内部类的方法 -&gt; 调用&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Inner3 i3 = <span class="keyword">new</span> Inner3();</span><br><span class="line">        i3.say();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<ol start="4">
<li> 匿名内部类：【方法中 return 1个 new出的对象】  </li>
</ol>
<p><strong>注意</strong>：匿名内部类 没有 构造方法。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 1. 定义 接口</span></span><br><span class="line"><span class="comment"> * 2. 定义 外部类、外部类属性、构造方法、getter、setter</span></span><br><span class="line"><span class="comment"> * 3. 定义 外部类的方法，该方法返回1个匿名内部类的对象的定义，在该匿名内部类的对象的定义中重写接口中的方法</span></span><br><span class="line"><span class="comment"> * 4. 在 main 中，</span></span><br><span class="line"><span class="comment"> * 5. 格式：</span></span><br><span class="line"><span class="comment"> 			外部类 变量名= new 外部类();</span></span><br><span class="line"><span class="comment"> 			变量名.外部类方法名().重写的方法名();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// main</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OutAndInnerClassDemo4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Outer4 o4 = <span class="keyword">new</span> Outer4();</span><br><span class="line">        o4.getInner4().eat();				<span class="comment">//注意 连续调用 方法</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Inner4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//外部类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Outer4</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Outer4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;外部类 -&gt; 创建&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//外部类的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Inner4 <span class="title">getInner4</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">new</span> Inner4()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;匿名内部类 -&gt; 方法&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;			<span class="comment">// 注意分号</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="6-1-6-类的使用："><a href="#6-1-6-类的使用：" class="headerlink" title="6.1.6 类的使用："></a>6.1.6 类的使用：</h4><blockquote>
<ol>
<li> 导包：<code>import java.util.*;</code></li>
<li> 创建：<code>Animals cat = new Animals();</code></li>
<li> 使用：<code>cat.eat();</code></li>
</ol>
</blockquote>
<p>注意：</p>
<ul>
<li><p>  <code>java.lang</code> 下的包<code>不用导</code></p>
</li>
<li><p>  <code>同一package</code>下的类也<code>不用导</code></p>
</li>
<li><p>  <code>导包语句</code>必须写在 <code>package 包名</code>后，<code>类名前</code></p>
</li>
<li><p>  包名-格式：<code>package net.java.util;</code></p>
</li>
</ul>
<h4 id="6-1-7-静态变量-与-静态方法："><a href="#6-1-7-静态变量-与-静态方法：" class="headerlink" title="6.1.7 静态变量 与 静态方法："></a>6.1.7 静态变量 与 静态方法：</h4><blockquote>
<p>  <code>静态变量</code>：带有 <code>static </code>关键字的<code>变量</code></p>
<p>  <code>静态方法</code>：带有 <code>static</code> 关键字的<code>方法</code></p>
</blockquote>
<p><strong>注意</strong>：【凡是带<code>static</code> 的<code>变量、方法、代码块</code>】</p>
<ul>
<li>  <code>属于</code>整个<code>类</code>，而不仅仅 属于一个<strong>对象</strong></li>
<li>  只创建<code>1次</code></li>
<li>  可以直接用 <code>类名.变量</code>调用</li>
<li>  不能使用 <code>this</code>,<code>super</code>关键字：因为静态方法可以通过类名来调用，而这是可能还没有创建对象，更谈不上继承。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 静态代码块：</span></span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line">		<span class="comment">//语句块</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 静态方法</span></span><br><span class="line"><span class="comment">// 格式： </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">PrintMe</span><span class="params">()</span></span>&#123;.......&#125;	</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用：[对于本类当中的静态方法，可以省略类名称，直接静态方法]</span></span><br><span class="line">    类名称.静态变量;</span><br><span class="line">    类名称.静态方法();</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="6-2-接口："><a href="#6-2-接口：" class="headerlink" title="6.2 接口："></a>6.2 接口：</h3><blockquote>
<ol>
<li> 接口就是各个类的规范，</li>
<li> 接口是一种 <code>引用的数据类型</code> ，其中：最重要的是<code>抽象方法</code></li>
</ol>
</blockquote>
<h4 id="6-2-1-格式："><a href="#6-2-1-格式：" class="headerlink" title="6.2.1 格式："></a>6.2.1 格式：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 接口名称</span>&#123;</span><br><span class="line">      <span class="comment">// 接口内容  </span></span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>



<h4 id="6-2-2-接口内容："><a href="#6-2-2-接口内容：" class="headerlink" title="6.2.2 接口内容："></a>6.2.2 接口内容：</h4><blockquote>
<ul>
<li>JDK 1.7 的接口可以包含：<ul>
<li>  常量</li>
<li>  抽象方法</li>
</ul>
</li>
<li>JDK 1.8 的接口还可以额外包含<ul>
<li>  默认方法</li>
<li>  静态方法</li>
</ul>
</li>
<li>JDK 1.9 的接口还可以额外包含<ul>
<li>  私有方法</li>
</ul>
</li>
</ul>
</blockquote>
<p><strong>注意</strong> ：</p>
<blockquote>
<ol>
<li><p>接口中的抽象方法，修饰符必须是 public abstract </p>
<p> 【如：<code>public abstract void methodAbstract( );</code>】， 可以省略但不能换成别的 。 </p>
</li>
<li><p><code>接口</code>无法直接使用，只能让1个 “实现类” 来 “实现” 该接口 。</p>
<p> 【类似 抽象类的继承】</p>
</li>
<li><p> <code>实现类</code> 除非是1个由abstract修饰的抽象类，否则<code>必须覆盖重写</code>所有<code>抽象方法</code>。</p>
</li>
</ol>
</blockquote>
<h4 id="6-2-3-接口的使用："><a href="#6-2-3-接口的使用：" class="headerlink" title="6.2.3 接口的使用："></a>6.2.3 接口的使用：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *	1. 定义接口 + 接口内容</span></span><br><span class="line"><span class="comment"> *	2. 定义接口的 &quot;实现类&quot;</span></span><br><span class="line"><span class="comment"> *	3. 在 &quot;实现类&quot; 中，覆盖重写 接口的抽象方法</span></span><br><span class="line"><span class="comment"> *	4. main方法中 new出 &quot;实现类的对象&quot;，&quot;实现类的对象&quot; 调用 重写后的方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyIntface</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Say</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ToDoClass</span> <span class="keyword">implements</span> <span class="title">MyIntface</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Say</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;你好！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IntfaceDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        ToDoClass a = <span class="keyword">new</span> ToDoClass();</span><br><span class="line">        a.Say();</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>











<h3 id="6-3-四大特性："><a href="#6-3-四大特性：" class="headerlink" title="6.3 四大特性："></a>6.3 四大特性：</h3><p> 面向对象的三大特性：</p>
<blockquote>
<ul>
<li>  封装性(如： private, 方法等)</li>
<li>  继承性(extend ,super等)</li>
<li>  多态性(<strong>子类</strong>继承<strong>父类</strong>的方法后可以 <strong>覆盖重写</strong>override)</li>
</ul>
</blockquote>
<h4 id="6-3-1-封装性："><a href="#6-3-1-封装性：" class="headerlink" title="6.3.1 封装性："></a>6.3.1 封装性：</h4><p>封装性有两种：【变量，方法】</p>
<p>private关键字：     </p>
<blockquote>
<ol>
<li> 只有在写了private 的类中可以直接访问该属性,    </li>
<li> 有<code>private 关键字</code>就必须在类中<code>定义</code> 2个专门 访问、设置 该属性的方法<code> getter、setter</code> 。</li>
</ol>
<p>  setNum(int num)【有参数，无返回值】         </p>
<p>  getNum( )【无参数，有返回值】</p>
</blockquote>
<h4 id="6-3-2-继承性："><a href="#6-3-2-继承性：" class="headerlink" title="6.3.2 继承性："></a>6.3.2 继承性：</h4><p>继承性：</p>
<blockquote>
<ol>
<li> 继承是<code>多态性的前提</code>；</li>
<li> 承解决了共性的问题（把<code>几个类</code>中都有的<code>属性、方法</code>放到<code>1个父类中</code>，每个<code>子类 继承 父类</code>）</li>
</ol>
</blockquote>
<p>父类与子类：</p>
<blockquote>
<ol>
<li> 父类：基类，超类</li>
<li> 子类：派生类</li>
</ol>
</blockquote>
<p>在继承关系中，子类就是父类的一种。</p>
<p>例如： 父类是员工，子类是老师，老师也是一种员工 =》 老师 is 员工</p>
<p>继承过程中，成员变量的访问特点：</p>
<blockquote>
<ol>
<li> 子类有，则<code>优先使用 子类的成员变量</code>。</li>
<li> <code>子类 </code>知道 <code>父类的变量、方法</code>，父类不知道子类的变量、方法。</li>
<li> 父子的<code>变量、方法</code> 重名时，优先使用<code>子类</code></li>
</ol>
</blockquote>
<p><code>父类的变量</code>，<code>子类的变量</code>，方法的<code>局部变量</code> 重名时：</p>
<blockquote>
<ol>
<li> 访问 父类的变量：super.变量名</li>
<li> 访问 本类的变量： this.成员变量名</li>
<li> 访问 方法的局部变量： 直接写变量名</li>
</ol>
</blockquote>
<p>父类、子类、继承的使用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 父类【普通的类的定义】：	</span></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 父类名称</span>&#123;&#125;	</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子类：</span></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 子类名称 <span class="keyword">extends</span> 父类名称</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 例如：</span></span><br><span class="line">		<span class="comment">//父类</span></span><br><span class="line">		<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">			String name;</span><br><span class="line">			<span class="keyword">int</span> age;</span><br><span class="line">		&#125;</span><br><span class="line">				</span><br><span class="line">		<span class="comment">//子类 -&gt; 继承父类</span></span><br><span class="line">		<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">extends</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">			String Tno;</span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure>





<h4 id="6-3-3-抽象性："><a href="#6-3-3-抽象性：" class="headerlink" title="6.3.3 抽象性："></a>6.3.3 抽象性：</h4><p>抽象：</p>
<blockquote>
<p>  一个父类有一个没法具体描述的方法：<br>  如：</p>
<ul>
<li>  <code>子类 cat</code> 有 <code>eatFish( )</code> 的方法，</li>
<li>  <code>父类 Animal </code>有<code>eat( ) </code>的方法，但没法细说具体执行过程。</li>
</ul>
</blockquote>
<p>抽象方法-格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 方法 返回值前 加上 abstract 关键字，去掉大括号&#123;&#125;，直接以分号；结束。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Eat</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>





<p><strong>注意</strong> ：</p>
<blockquote>
<ol>
<li><p><code>抽象方法</code> 只能 定义在<code>抽象类内</code> 【在 class前加上 abstract】，但 <code>抽象类</code>不一定有 <code>抽象方法</code>，没有抽象方法的 抽象类 同样 不能直接new,它有特殊用途。  </p>
</li>
<li><p>子类 必须 覆盖重写 父类 所有的 抽象方法。 【除非子类也是抽象类】</p>
<p> 抽象方法覆盖重写 即：去掉 抽象方法的 abstract关键字，补上{ } </p>
<p> 【可以鼠标点击 extends 行 按下 alt + enter】</p>
</li>
</ol>
</blockquote>
<p>抽象类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//抽象类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Animals</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">	<span class="comment">//抽象方法,没有普通方法的&#123;&#125;</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Eat</span><span class="params">()</span></span>;		</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<p><code>抽象类</code> 与 <code>抽象方法</code>的使用：</p>
<blockquote>
<p>  抽象类的 对象 无法直接 new 。</p>
<p>  即： 不能 Animal a = new Animal( );</p>
<p>  必须<code>先</code>用一个子类 <code>继承</code>一个父类，<code>再覆盖重写</code>其抽象方法。</p>
</blockquote>
<p><code>main方法中</code>使用<code>抽象类</code>的<code>执行顺序</code>：</p>
<ol>
<li> 子类 调用 super( )，执行抽象父类构造方法。</li>
<li> 执行 子类构造方法。</li>
<li> 执行 子类的抽象方法。</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *	1. 在抽象类中 定义 抽象方法</span></span><br><span class="line"><span class="comment"> *	2. 子类继承抽象类，覆盖重写 抽象类的 所有抽象方法</span></span><br><span class="line"><span class="comment"> * 	3. main方法中，new 子类对象</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 抽象类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Animals</span> </span>&#123;</span><br><span class="line">	<span class="comment">//抽象方法,没有普通方法的&#123;&#125;</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Eat</span><span class="params">()</span></span>;			</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 子类 继承 抽象类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animals</span> </span>&#123;		</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">Eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;cat eat&quot;</span>.toUpperCase());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        Cat c = <span class="keyword">new</span> Cat();</span><br><span class="line">        c.Eat();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h4 id="6-3-4-多态性："><a href="#6-3-4-多态性：" class="headerlink" title="6.3.4 多态性："></a>6.3.4 多态性：</h4><ul>
<li>  <a href="https://www.cnblogs.com/jack204/archive/2012/10/29/2745150.html">Java多态性理解</a></li>
</ul>
<p>多态性的条件：</p>
<ul>
<li>  继承</li>
<li>  重写</li>
<li>  父类变量 引用 子类对象</li>
</ul>
<p>实现多态的技术：</p>
<blockquote>
<p>  动态绑定（dynamic binding），是指在<code>执行期间判断</code>所引用对象的<code>实际类型</code>，根据其实际的类型调用其相应的方法。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 左边是父类/接口，右边new的是子类</span></span><br><span class="line"><span class="comment">// 编译时，arr是List；</span></span><br><span class="line"><span class="comment">// 运行时，arr是ArrayList</span></span><br><span class="line"></span><br><span class="line">	List&lt;Integer&gt; arr = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="6-4-包装类"><a href="#6-4-包装类" class="headerlink" title="6.4 包装类"></a>6.4 包装类</h3><ul>
<li>  <a href="https://www.yiibai.com/java/wrapper-class-in-java.html">Java包装类-url</a></li>
<li>  <a href="https://blog.csdn.net/Hushboom/article/details/104798466">Java泛型和包装类</a></li>
</ul>
<h4 id="6-4-1-包装类是什么：【自动装箱-自动拆箱】"><a href="#6-4-1-包装类是什么：【自动装箱-自动拆箱】" class="headerlink" title="6.4.1 包装类是什么：【自动装箱 + 自动拆箱】"></a>6.4.1 包装类是什么：【自动装箱 + 自动拆箱】</h4><p>包装类 = 基本类型 + 常用方法</p>
<p>将一个类型变成一个类。</p>
<blockquote>
<ul>
<li><p>  <code>原始数据类型 </code>=转换为=》<code>对象</code></p>
</li>
<li><p>  <code>对象</code> =转换为=》 <code>原始数据类型</code></p>
</li>
<li><p>可用于实现<code> 多态性</code></p>
</li>
</ul>
<p>  *<code>JDK1.5</code>*开始可以进行<code>自动装箱，自动拆箱</code>：</p>
<ul>
<li>  自动装箱： 自动将 <code>基本类型 =&gt; 包装类</code></li>
<li>  自动拆箱： 自动将 <code>包装类 =&gt; 基本类型</code></li>
</ul>
</blockquote>
<p><img src="https://z3.ax1x.com/2021/05/24/gja30e.png" alt="包装类"></p>
<h4 id="6-4-2-泛型："><a href="#6-4-2-泛型：" class="headerlink" title="6.4.2 泛型："></a>6.4.2 泛型：</h4><p><code>泛型 &lt;=&gt; &lt;包装类&gt;</code> </p>
<p>泛型常用于：指定<code>某个集合</code>只能保存<code>某种数据类型的数据</code>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 泛型就是下面的 &lt;String&gt;，其中String是包装类</span></span><br><span class="line"></span><br><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();`	<span class="comment">// 一种体现多态性的写法，左边是父类型，右边是子类型</span></span><br></pre></td></tr></table></figure>







<h2 id="7-常用的类"><a href="#7-常用的类" class="headerlink" title="7. 常用的类"></a>7. 常用的类</h2><h3 id="7-1-Math类："><a href="#7-1-Math类：" class="headerlink" title="7.1 Math类："></a>7.1 Math类：</h3><p>Math的所属路径：<code>java.lang.Math</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 取整        </span></span><br><span class="line">        <span class="keyword">double</span> a = Math.floor(<span class="number">1.4</span>);	<span class="comment">//向下取整，无论正负数(取小的)</span></span><br><span class="line">        <span class="keyword">double</span> b = Math.round(<span class="number">1.4</span>); <span class="comment">//四舍五入(负数入的时候向0进位)</span></span><br><span class="line">        <span class="keyword">double</span> c = Math.ceil(<span class="number">1.4</span>);	<span class="comment">//向上取整，无论正负数(取大的)    </span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;1.4 =&gt; floor &quot;</span>+a);  <span class="comment">// 1.0</span></span><br><span class="line">        System.out.println(<span class="string">&quot;1.4 =&gt; round &quot;</span>+b);  <span class="comment">// 1.0</span></span><br><span class="line">        System.out.println(<span class="string">&quot;1.4 =&gt; ceil &quot;</span>+c);   <span class="comment">// 2.0</span></span><br><span class="line">        System.out.println(<span class="string">&quot;==============&quot;</span>);</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 随机数          </span></span><br><span class="line">        <span class="keyword">double</span> d = Math.random();   <span class="comment">//返回1个[0,1)之间的double类型的小数</span></span><br><span class="line">        </span><br><span class="line">        System.out.println(d);</span><br><span class="line">   </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="comment">// 比大小        </span></span><br><span class="line">        <span class="keyword">int</span> max = Math.max(<span class="number">12</span>,<span class="number">34</span>);  <span class="comment">// 返回参数中的最大值</span></span><br><span class="line">        <span class="keyword">int</span> min = Math.min(<span class="number">12</span>,<span class="number">34</span>);  <span class="comment">// 返回参数中的最小值</span></span><br><span class="line">        </span><br><span class="line">        System.out.println(max);</span><br><span class="line">        System.out.println(min);</span><br><span class="line">        System.out.println(<span class="string">&quot;==============&quot;</span>);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 三角函数</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> e = Math.toRadians(<span class="number">45.0</span>);    <span class="comment">// 将角度制 转为 弧度制</span></span><br><span class="line">        <span class="keyword">double</span> f = Math.tan(e);             <span class="comment">// 计算tan(PI/4)</span></span><br><span class="line">        <span class="keyword">double</span> g = Math.rint(f);</span><br><span class="line">        </span><br><span class="line">        System.out.println(g);   <span class="comment">// 将计算结果 转化成 最接近的整数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;==============&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 数值 与 字符串 相互转化</span></span><br><span class="line">        String h = Integer.toString(<span class="number">123</span>);</span><br><span class="line">        System.out.println(h);</span><br><span class="line">        </span><br><span class="line">        String i = <span class="string">&quot;123&quot;</span>;</span><br><span class="line">        <span class="keyword">int</span> j = Interager.parseInt(i);</span><br><span class="line">        </span><br><span class="line">        System.out.println(j);</span><br><span class="line">        System.out.println(<span class="string">&quot;==============&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 多次方 与 开根号     </span></span><br><span class="line">               </span><br><span class="line">        <span class="keyword">double</span> k = Math.sqrt(<span class="number">100.0</span>);	<span class="comment">// 开根号</span></span><br><span class="line">        <span class="keyword">double</span> L = Math.pow(<span class="number">10.0</span>,<span class="number">2.0</span>);	<span class="comment">// 多次方</span></span><br><span class="line">        System.out.println(k);</span><br><span class="line">        System.out.println(L);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="7-2-Charater类："><a href="#7-2-Charater类：" class="headerlink" title="7.2 Charater类："></a>7.2 Charater类：</h3><p>常用方法：</p>
<ul>
<li>  <code>判断</code>字符类型：是否是 <code>字母、数字、空白符、大写、小写</code></li>
<li>  转化大小写：转化成 <code>大写、小写、字符串</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义	</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> ch = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	Character ch = <span class="keyword">new</span> Character(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> uniChar = <span class="string">&#x27;\u039A&#x27;</span>;  <span class="comment">// Unicode 字符表示形式</span></span><br><span class="line"> </span><br><span class="line">	<span class="comment">// 字符数组</span></span><br><span class="line">	<span class="keyword">char</span>[] charArray =&#123; <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span> &#125;;</span><br><span class="line"></span><br><span class="line">	Character ch = <span class="keyword">new</span> Character(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 常用方法：</span></span><br><span class="line">	<span class="keyword">char</span> a = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">	<span class="keyword">boolean</span> isLetter = Character.isLetter(a);</span><br><span class="line"></span><br><span class="line">    System.out.println(isLetter);	<span class="comment">// true</span></span><br><span class="line">    System.out.println(Character.isDigit(a));	<span class="comment">//false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="7-3-String类："><a href="#7-3-String类：" class="headerlink" title="7.3 String类："></a>7.3 String类：</h3><p>String 类是不可改变的，一旦创建了 String 对象，那它的值就无法改变了。</p>
<p>要想改变<code> String 对象的值</code>，可以使用 <code>StringBuffer</code> 和 <code>StringBuilder </code>类。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 存放在 堆中的字符串常量池中</span></span><br><span class="line">	String str = <span class="string">&quot;Runoob&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用构造函数</span></span><br><span class="line">	String str2 = <span class="keyword">new</span> String(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串长度</span></span><br><span class="line">	str = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> len = str.length(); </span><br><span class="line">	System.out.println(len);	<span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串的拼接</span></span><br><span class="line">	String str2 = <span class="string">&quot;我的名字是 &quot;</span>.concat(<span class="string">&quot;Runoob&quot;</span>);	</span><br><span class="line">	String str3 = <span class="string">&quot;我的名字是 &quot;</span>+<span class="string">&quot;Runoob&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 格式化拼接字符串</span></span><br><span class="line">	String fs;</span><br><span class="line">	fs = String.format(<span class="string">&quot;a的值为%f, 整型变量的值为&quot;</span> </span><br><span class="line">                    %d, 字符串变量的值为          </span><br><span class="line">                    %s<span class="string">&quot;, floatVar, intVar, stringVar);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 返回指定位置的字符</span></span><br><span class="line"><span class="string">	String str1 = &quot;</span>abc<span class="string">&quot;;</span></span><br><span class="line"><span class="string">	char ch = str1.charAt(0);</span></span><br><span class="line"><span class="string">	System.out.println(cg);	// a</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 返回字符串中指定字符的第一个索引</span></span><br><span class="line"><span class="string">	String str1 = &quot;</span>abc<span class="string">&quot;;</span></span><br><span class="line"><span class="string">	int index = str1.indexOf(&#x27;b&#x27;);</span></span><br><span class="line"><span class="string">	System.out.println(index);	// 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 截取从参数位置到最后的字符串: substring(索引)</span></span><br><span class="line"><span class="string">// 截取从[索引1,索引2)的字符串: substring(索引1,索引2)		</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	String str1 = &quot;</span>hello<span class="string">&quot;;</span></span><br><span class="line"><span class="string">	String str2 = str1.substring(0);  	//str2 = &quot;</span>hello<span class="string">&quot;</span></span><br><span class="line"><span class="string">																						</span></span><br><span class="line"><span class="string">														</span></span><br><span class="line"><span class="string">	String str3 = str1.substring(1,4);	//str3 = &quot;</span>ell<span class="string">&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 字符串的转化</span></span><br><span class="line"><span class="string">	//将字符串拆为字符数组,并将字符数组作为返回值: toCharArray();</span></span><br><span class="line"><span class="string">	//获取当前字符串底层的字节数组: getBytes();</span></span><br><span class="line"><span class="string">	//替换字符串，返回新字符串: replace(old,new);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//字符串的分割</span></span><br><span class="line"><span class="string">	//split(正则表达式)：按指定规则分割字符串，并返回字符数组，若想用. 作为分割符，需要写 \\.</span></span><br><span class="line"><span class="string">		</span></span><br></pre></td></tr></table></figure>





<p>字符串在内存中的创建过程：</p>
<blockquote>
<p>  以 String str1 = “abc” 为例 </p>
<p>  内存中情况：      </p>
<ol>
<li><p> 在 <code>栈</code>中开辟 <code>变量的空间</code>，     </p>
</li>
<li><p>  在 <code>堆</code>中的 <code>字符串常量池</code> 中<code>创建String 对象</code>     </p>
</li>
<li><p> 在 <code>堆</code>中 创建 <code>byte[]     </code></p>
</li>
<li><p> <code>String 对象</code>引用<code> byte[] 的地址</code>     </p>
</li>
<li><p> <code>栈</code>中的变量 引用 <code>String 对象 的地址</code></p>
</li>
</ol>
</blockquote>
<h3 id="7-4-StringBuffer-类-与-StringBuilder-类："><a href="#7-4-StringBuffer-类-与-StringBuilder-类：" class="headerlink" title="7.4 StringBuffer 类 与 StringBuilder 类："></a>7.4 StringBuffer 类 与 StringBuilder 类：</h3><p>StringBuffer 和 StringBuilder 都可用来创建字符串，<br>区别：</p>
<ul>
<li>  StringBuffer ：速度慢，但在多线程时安全</li>
<li>  StringBuilder ：速度快，但在多线程时不安全【StringBuilder 更常用】</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 10 为容量</span></span><br><span class="line">        StringBuilder sb_1 = <span class="keyword">new</span> StringBuilder(<span class="number">10</span>);</span><br><span class="line">        sb_1.append(<span class="string">&quot;大家好&quot;</span>);</span><br><span class="line">        System.out.println(sb_1);  </span><br><span class="line">       </span><br><span class="line">        sb.insert(<span class="number">8</span>, <span class="string">&quot;Java&quot;</span>);</span><br><span class="line">        System.out.println(sb_1); </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 5为开始位置，8为结束位置</span></span><br><span class="line">        sb.delete(<span class="number">5</span>,<span class="number">8</span>);</span><br><span class="line">        System.out.println(sb_1);  </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>









<h3 id="7-5-Date类："><a href="#7-5-Date类：" class="headerlink" title="7.5 Date类："></a>7.5 Date类：</h3><p><code>import java.util.Date;</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 2个构造函数</span></span><br><span class="line"></span><br><span class="line">	Date d1 = <span class="keyword">new</span> Date();</span><br><span class="line"></span><br><span class="line">	Date d1 = <span class="keyword">new</span> Date(<span class="keyword">long</span> millisec);	<span class="comment">// millisec: 从 1970-1-1 到 现在 的毫秒数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取millisec：long getTime( )</span></span><br><span class="line"><span class="comment">// 设置millisec：void setTime(long time)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//比较时间：假设A、B是两个时间</span></span><br><span class="line"></span><br><span class="line">	A.before(B);	<span class="comment">//  时间A 在 时间B 前，则 返回true</span></span><br><span class="line">	A.after(B);		<span class="comment">//  时间A 在 时间B 后，则 返回true</span></span><br><span class="line">	A.equals(B);	<span class="comment">//  时间A 与 时间B 相等，则 返回true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 格式化的时间、日期</span></span><br><span class="line"></span><br><span class="line">	Date dNow = <span class="keyword">new</span> Date( );</span><br><span class="line">	SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat (<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">	System.out.println(<span class="string">&quot;当前时间为: &quot;</span> + sdf.format(dNow));</span><br><span class="line">	</span><br><span class="line">		</span><br></pre></td></tr></table></figure>







<h3 id="7-6-Calender类："><a href="#7-6-Calender类：" class="headerlink" title="7.6 Calender类："></a>7.6 Calender类：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//当前日期</span></span><br><span class="line">	Calendar c = Calendar.getInstance();</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建指定日期</span></span><br><span class="line">	Calendar c1 = Calendar.getInstance();</span><br><span class="line"></span><br><span class="line">	c1.set(<span class="number">2009</span>, <span class="number">6</span> - <span class="number">1</span>, <span class="number">12</span>);	<span class="comment">// 设置 年、月、日</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取日期的相关信息</span></span><br><span class="line">	Calendar c1 = Calendar.getInstance();</span><br><span class="line">	<span class="comment">// 获得年份</span></span><br><span class="line">		<span class="keyword">int</span> year = c1.get(Calendar.YEAR);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 获得月份</span></span><br><span class="line">		<span class="keyword">int</span> month = c1.get(Calendar.MONTH) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 获得日期</span></span><br><span class="line">		<span class="keyword">int</span> date = c1.get(Calendar.DATE);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 获得小时</span></span><br><span class="line">		<span class="keyword">int</span> hour = c1.get(Calendar.HOUR_OF_DAY);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 获得分钟</span></span><br><span class="line">		<span class="keyword">int</span> minute = c1.get(Calendar.MINUTE);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 获得秒</span></span><br><span class="line">		<span class="keyword">int</span> second = c1.get(Calendar.SECOND);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 获得星期几【注意（这个与Date类是不同的）：1代表星期日、2代表星期一、3代表星期二，以此类推】</span></span><br><span class="line">		<span class="keyword">int</span> day = c1.get(Calendar.DAY_OF_WEEK);</span><br></pre></td></tr></table></figure>









<h3 id="7-7-Scanner-类："><a href="#7-7-Scanner-类：" class="headerlink" title="7.7 Scanner 类："></a>7.7 Scanner 类：</h3><p><code>import java.util.Scanner;  </code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Scanner sc = new Scanner(System.in);</span></span><br><span class="line"><span class="comment"> * ``sc.hasNextInt()   	 &lt;=&gt;  sc.nextInt()</span></span><br><span class="line"><span class="comment"> * ``sc.hasNextFloat()   &lt;=&gt;  sc.nextFloat()</span></span><br><span class="line"><span class="comment"> * ``sc.hasNextDouble()  &lt;=&gt;  sc.nextDouble()</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 从键盘接收数据【next() 按字符】</span></span><br><span class="line">        Scanner sc1 = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (sc1.hasNext()) &#123;</span><br><span class="line">                String str1 = sc1.next();</span><br><span class="line">                System.out.println(<span class="string">&quot;输入的数据为：&quot;</span> + str1);</span><br><span class="line">        &#125;    </span><br><span class="line">        sc1.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 从键盘接收数据【nextLine() 按行，接收回车之前的所有字符，包括空白符】</span></span><br><span class="line">	    Scanner sc2 = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">// 从键盘接收数据</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">// nextLine方式接收字符串</span></span><br><span class="line">        System.out.println(<span class="string">&quot;nextLine方式接收：&quot;</span>);</span><br><span class="line">        <span class="comment">// 判断是否还有输入</span></span><br><span class="line">        <span class="keyword">if</span> (sc2.hasNextLine()) &#123;</span><br><span class="line">            String str2 = sc2.nextLine();</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的数据为：&quot;</span> + str2);</span><br><span class="line">        &#125;</span><br><span class="line">        scan.close();</span><br><span class="line"></span><br></pre></td></tr></table></figure>











<h3 id="7-8-Regex-正则表达式："><a href="#7-8-Regex-正则表达式：" class="headerlink" title="7.8 Regex-正则表达式："></a>7.8 Regex-正则表达式：</h3><p><code>import java.util.regex.*;</code></p>
<p>java.util.regex 包主要包括以下三个类：</p>
<ul>
<li>  Pattern 类：<code>表达式</code></li>
<li>  Matcher 类：<code>匹配引擎</code></li>
<li>  PatternSyntaxException类：<code>语法错误</code></li>
</ul>
<p>Java中的<code>\\</code> 等价于 其他语言中的 <code>\</code>: </p>
<ul>
<li>   <code>\b</code>表示匹配删除，<code>\\b</code>表示匹配边界</li>
<li>  例如：要匹配 str1 = ”(hello)“，正则必须为<code>\\(hello\\)</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	1. 匹配1个字符：.</span></span><br><span class="line"><span class="comment">*	2。匹配前面的1个字符 0次~多次：* 等价于&#123;0,&#125;，例如：ab* 即：ab&#123;0,&#125;   =&gt;匹配：[a,ab]</span></span><br><span class="line"><span class="comment">*	3。匹配前面的1个字符 1次~多次：+ 等价于&#123;1,&#125;，例如：ab+ 即：ab&#123;1,&#125;   =&gt;匹配：[ab，abb]</span></span><br><span class="line"><span class="comment">*	4。匹配前面的1个字符 0次~1次：? 等价于&#123;0,1&#125;，例如：ab? 即：ab&#123;0,1&#125;  =&gt;匹配：[a,ab]</span></span><br><span class="line"><span class="comment">*	4。非贪心匹配，尽可能短，用于匹配修饰符之后：? ，例如：ab? 即：a*? =&gt;匹配：a</span></span><br><span class="line"><span class="comment">*	6. 匹配特殊字符：\ ,例如：\\d 表示匹配 \d ,即：匹配1个数字【java中的 \\ 相当于 其他语言中 \】</span></span><br><span class="line"><span class="comment">*	7. 匹配以指定字符开头的字串：^字符,例如：^a 表示匹配以a开头的字串</span></span><br><span class="line"><span class="comment">*	8. 匹配以指定字符结尾的字串：字符$,例如：a$ 表示匹配以a结尾的字串</span></span><br><span class="line"><span class="comment">*	9. 匹配其中的一个，相当于&quot;或&quot;：(字符1|字符2),例如：fu(c|n)  =&gt; 匹配：[fuc,fun]</span></span><br><span class="line"><span class="comment">*	10. 匹配指定字符集中的任意一个：[字符1字符2字符3],例如：fu[abc] =&gt; 匹配：[fua,fub,fuc]</span></span><br><span class="line"><span class="comment">*	11. 匹配指定连续的字符集中的任意一个：[字符1-字符3],例如：fu[a-c] =&gt; 匹配：[fua,fub,fuc]</span></span><br><span class="line"><span class="comment">*	12. 不匹配指定数组中的任意一个：[^字符1字符2字符3],例如：fu[^abc] =&gt; 不匹配：[fua,fub,fuc]</span></span><br><span class="line"><span class="comment">*	12. 不匹配指定数组中的任意一个：[^字符1-字符3],例如：fu[^a-c] =&gt; 不匹配：[fua,fub,fuc]</span></span><br><span class="line"><span class="comment">*	13. 匹配以指定字符结尾的字串：字符$,例如：a$ 表示匹配以a结尾的字串</span></span><br><span class="line"><span class="comment">*	14. 只匹配边界位置的字符：\b 例如：&quot;er\b&quot; 匹配=&gt; never , 不匹配=&gt; verb</span></span><br><span class="line"><span class="comment">*	15. 不匹配边界位置的字符：\B 例如：&quot;er\B&quot; 不匹配=&gt; never , 匹配=&gt; verb</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String str1 = <span class="string">&quot;Hello World 123,Hello Man 456! &quot;</span>;</span><br><span class="line">        String pattern = <span class="string">&quot;.*Hello.*&quot;</span>;</span><br><span class="line">        <span class="keyword">boolean</span> isMatch = Pattern.matches(pattern,str1);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;字符串中是否能否找到Hello：&quot;</span>+isMatch);	<span class="comment">//true</span></span><br></pre></td></tr></table></figure>









<h3 id="7-9-try-catch-异常处理："><a href="#7-9-try-catch-异常处理：" class="headerlink" title="7.9 try-catch 异常处理："></a>7.9 try-catch 异常处理：</h3><p>所有的异常类是从 <code>java.lang.Exception 类</code>继承的子类</p>
<p><a href="https://www.runoob.com/java/java-exceptions.html">Java 异常处理 | 菜鸟教程 (runoob.com)</a></p>
<p>异常：</p>
<ul>
<li>  <code>检查性异常</code>：最容易犯，编译时不能忽略，如：打开不存在的文件</li>
<li>  <code>运行时异常</code>：可以避免，编译时可被忽略，如：空指针异常、下标越界异常、算数异常（如：除数为0）、类型转化异常</li>
<li>  <code>错误</code>（编译错误、运行错误、逻辑错误）：脱离控制，如：堆栈溢出、虚拟机错误、线程死锁</li>
</ul>
<p><img src="https://z3.ax1x.com/2021/05/24/gjachn.png" alt="异常处理-使用技巧"></p>
<p>声明异常：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 声明异常：try-catch 或 在定义方法时：方法名()throws 异常&#123; &#125;</span></span><br><span class="line"><span class="comment">*	声明异常的注意事项：</span></span><br><span class="line"><span class="comment">*		1. 只有父类声明了某个异常，子类才能声明该种异常/该种异常的子类</span></span><br><span class="line"><span class="comment">*		   	【父类有，子类才能有】</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*		2. 子类重写父类的方法时，也要声明 父类已经声明的异常 或 父类已经声明的异常的子类异常</span></span><br><span class="line"><span class="comment">*		</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 越是子类的异常，越要先catch</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 try-catch 来声明异常</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    file = <span class="keyword">new</span> FileInputStream(fileName);</span><br><span class="line">    x = (<span class="keyword">byte</span>) file.read();</span><br><span class="line">&#125; <span class="keyword">catch</span>(FileNotFoundException f) &#123; <span class="comment">// Not valid!</span></span><br><span class="line">    f.printStackTrace();</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span>(IOException i) &#123;</span><br><span class="line">    i.printStackTrace();</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span>&#123;</span><br><span class="line">    <span class="comment">// 无论是否有异常，都会执行的代码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 throws关键字 来声明异常</span></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">className</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deposit</span><span class="params">(<span class="keyword">double</span> amount)</span> <span class="keyword">throws</span> RemoteException</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// Method implementation</span></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RemoteException();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//Remainder of class definition</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<p>在 Java 中你可以自定义异常。编写自己的异常类时需要记住下面的几点。</p>
<ul>
<li>  所有异常都必须是 Throwable 的子类。</li>
<li>  如果希望写一个<code>检查性异常类</code>【编译不通过的异常】，则需要继承 Exception 类。=》try-catch 或 throws</li>
<li>  如果你想写一个<code>运行时异常类</code>【运行不通过的异常】，那么需要继承 RuntimeException 类。</li>
</ul>
<p>出现算数异常：除数不能为0</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 出现算数异常：除数不能为0</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">10</span>,b=<span class="number">0</span>;</span><br><span class="line">        System.out.println(div(a,b));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 除法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">div</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a/b;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>自定义异常-步骤：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	自定义异常-步骤：</span></span><br><span class="line"><span class="comment">*		1. 创建异常类，该异常类继承 Exception类</span></span><br><span class="line"><span class="comment">*		2. 重写 异常类的构造方法</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*	手动抛出异常-步骤：</span></span><br><span class="line"><span class="comment">*		1. 选择1个合适的异常类</span></span><br><span class="line"><span class="comment">*		2. 创建异常类的对象</span></span><br><span class="line"><span class="comment">*		3. 抛出对象</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 异常类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">myException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">myException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">myException</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(msg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 父类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> <span class="keyword">throws</span> myException</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我是父类的-eat&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 女儿类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Daughter</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//main方法</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">                   Father daughter = <span class="keyword">new</span> Daughter();</span><br><span class="line"></span><br><span class="line">                   <span class="keyword">try</span>&#123;</span><br><span class="line">                       daughter.eat();</span><br><span class="line">                   &#125;<span class="keyword">catch</span> (myException e)&#123;</span><br><span class="line">                        e.printStackTrace(); <span class="comment">// 打印堆栈的轨迹</span></span><br><span class="line">                   &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//女儿类的 eat()</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> <span class="keyword">throws</span> myException </span>&#123;	<span class="comment">//子类声明的异常必须 小于等于 父类声明的异常</span></span><br><span class="line">                System.out.println(<span class="string">&quot;我是女儿类的-eat&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;我是女儿类的-eat&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;我是女儿类的-eat&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 打印3次&quot;我是女儿类的-eat&quot;后，马上抛出异常</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> myException(<span class="string">&quot;我吃太多了~&quot;</span>);	</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><img src="https://z3.ax1x.com/2021/05/24/gjaI74.png" alt="异常-层次图"></p>
<h2 id="8-Stream、IO、File"><a href="#8-Stream、IO、File" class="headerlink" title="8. Stream、IO、File"></a>8. Stream、IO、File</h2><p><code>import java.io.*;</code></p>
<p>需要定义<code> IO异常</code></p>
<ul>
<li>  <a href="https://www.bilibili.com/video/BV1Tz4y1X7H7?from=search&seid=14230994899231979002">Java-IO-视频</a></li>
<li>  <a href="https://www.cnblogs.com/coderzjz/p/13670088.html">Java-IO-笔记</a></li>
</ul>
<h3 id="8-1-Stream的介绍："><a href="#8-1-Stream的介绍：" class="headerlink" title="8.1 Stream的介绍："></a>8.1 Stream的介绍：</h3><p><code>流-Stream</code>:</p>
<blockquote>
<p>  一个<code>数据的序列</code>。【以 <strong>内存</strong> 为参照物】</p>
<ul>
<li><p>  <code>输入流</code>表示<strong>计算机</strong>从一个源<code>读取数据 =&gt; 内存</code>，</p>
</li>
<li><p>  <code>输出流</code>表示<strong>计算机</strong>向一个目标<code>写入数据 =&gt; 存储设备</code>。【必须 flush( ) 才能写入】</p>
</li>
</ul>
</blockquote>
<p>字节流：可以复制 文本、图片、二进制文件</p>
<p>字符流：可以复制 文本文件（包括中文）</p>
<p>流的分类：</p>
<blockquote>
<ol>
<li><p>按方向：</p>
<ul>
<li>  输入流：<code>读取数据 =&gt; 内存</code></li>
<li>输出流：<code>写入数据 =&gt; 存储设备</code></li>
</ul>
</li>
<li><p>按单位：</p>
<ul>
<li>  字节流</li>
<li>字符流:（只能：读写文本）</li>
</ul>
</li>
<li><p>按功能：</p>
<ul>
<li>  节点流：读写 数据</li>
<li>  过滤流：增强 功能</li>
</ul>
</li>
</ol>
</blockquote>
<p><img src="https://z3.ax1x.com/2021/05/24/gjaXjK.png" alt="IO流"></p>
<h3 id="8-2-Stream的常用类："><a href="#8-2-Stream的常用类：" class="headerlink" title="8.2 Stream的常用类："></a>8.2 Stream的常用类：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	字节输入流：InputStream【读数据】	</span></span><br><span class="line"><span class="comment">*		1. read()								// 读取下一个字节</span></span><br><span class="line"><span class="comment">*		2. read(byte[] b)						// 读取下面多个字节</span></span><br><span class="line"><span class="comment">*		3. read(byte[] b,int offset,int maxlen)	// 读取下面多个字节</span></span><br><span class="line"><span class="comment">*		4. close()								// 关闭资源</span></span><br><span class="line"><span class="comment">*	步骤：</span></span><br><span class="line"><span class="comment">*			1. 创建 FileInputStream</span></span><br><span class="line"><span class="comment">*			2. 创建 byte[]</span></span><br><span class="line"><span class="comment">*			3. 在 FileInputStream调用 read(byte数组)上</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*	字节输出流：OutputStream【写数据】</span></span><br><span class="line"><span class="comment">*		1. write(int b)								// 输出指定字节</span></span><br><span class="line"><span class="comment">*		2. write(byte[] b)							// 输出指定字节数组</span></span><br><span class="line"><span class="comment">*		3. write(byte[] h,int offset,int len)		// 输出指定位置和长度的多个字节</span></span><br><span class="line"><span class="comment">*		4. flush()									// 刷新缓冲区，并 写入数据</span></span><br><span class="line"><span class="comment">*		5. close()									// 关闭资源</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// FileInputStream : InputStream的子类</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// main方法，声明IO异常        </span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 假设&#x27;E:\abc.txt&#x27; 已经存在，且内容为：abc012</span></span><br><span class="line">            </span><br><span class="line"><span class="comment">// 创建文件输入流</span></span><br><span class="line">            FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;e:\\abc.txt&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 如果 存在字节，则输出，继续循环,</span></span><br><span class="line">            <span class="comment">// 最终输出：97 98 99 48 49 50 读取完毕！【其中，数字：表示字节的ASCII码】</span></span><br><span class="line"><span class="comment">// 读取单个字节</span></span><br><span class="line">            <span class="keyword">int</span> data;</span><br><span class="line">            <span class="keyword">while</span> ( (data=fis.read()) != -<span class="number">1</span>   )&#123;</span><br><span class="line">                    System.out.println(data);</span><br><span class="line">            &#125;</span><br><span class="line">            fis.close();</span><br><span class="line">            System.out.println(<span class="string">&quot;读取完毕！&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line"><span class="comment">// 读取多个字节            </span></span><br><span class="line">            <span class="keyword">byte</span>[] buf  = <span class="keyword">new</span>  <span class="keyword">byte</span>[<span class="number">3</span>];</span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">0</span> ;				<span class="comment">// 返回 读取的字节个数</span></span><br><span class="line">            <span class="keyword">while</span>( (count = fis.read(buf) ) ！=-<span class="number">1</span>)&#123;</span><br><span class="line">                   System.out.println(<span class="keyword">new</span> String(buf));	<span class="comment">// 输出 读取的字节的字符形式</span></span><br><span class="line">            &#125;         </span><br><span class="line">            fis.close();</span><br><span class="line">             System.out.println(<span class="string">&quot;读取完毕！&quot;</span>);</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line"><span class="comment">// FileOutputStream : OutputStream的子类</span></span><br><span class="line">        <span class="comment">// 构造方法：FileOutputStream(路径,[append=false])</span></span><br><span class="line">            </span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;e:\\abc.txt&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 写入单个字节</span></span><br><span class="line">        fos.write(<span class="number">97</span>);		<span class="comment">// 输出：a</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 写入多个字节</span></span><br><span class="line">        <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[]&#123;<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>&#125;;</span><br><span class="line">        fos.write(buf);		<span class="comment">// 输出：def</span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">		<span class="comment">// 写入多个字符</span></span><br><span class="line">        String str1 = <span class="string">&quot;这是一个字符串&quot;</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] buf2 = str1.getBytes();</span><br><span class="line">        fos.write(buf2);	<span class="comment">// 输出：&quot;这是一个字符串&quot;</span></span><br><span class="line">            </span><br><span class="line">        fos.close();    </span><br><span class="line">        System.out.println(<span class="string">&quot;输出完毕&quot;</span>);	<span class="comment">// 最终输出：adef这是一个字符串</span></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="8-3-案例-文件复制："><a href="#8-3-案例-文件复制：" class="headerlink" title="8.3 案例-文件复制："></a>8.3 案例-文件复制：</h3><p>【先输入流-读取，再输出流-写入】</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 目标：将&quot;E:\A,jpeg &quot; 复制到 ”E:\0\B。jpg“</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建输入、输出流</span></span><br><span class="line">            FileInputStream fis= <span class="keyword">new</span> FileInputStream(<span class="string">&quot;E:\\A.jpeg&quot;</span>);</span><br><span class="line"></span><br><span class="line">            FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;E:\\0\\B.jpeg&quot;</span>);</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 创建缓存区 67KB</span></span><br><span class="line">            <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">67</span>*<span class="number">1024</span>];</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 读取的字节个数</span></span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">while</span>((count = fis.read(buf)) != -<span class="number">1</span>) &#123; <span class="comment">// 固定写法</span></span><br><span class="line"><span class="comment">// 写入文件</span></span><br><span class="line">               fos.write(buf,<span class="number">0</span>,count);</span><br><span class="line">           &#125;</span><br><span class="line"><span class="comment">// 关闭资源        </span></span><br><span class="line">        	fis.close();</span><br><span class="line">        	fos.close();</span><br><span class="line">            System.out.println(<span class="string">&quot;复制完毕&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="8-4-字节缓存流："><a href="#8-4-字节缓存流：" class="headerlink" title="8.4 字节缓存流："></a>8.4 字节缓存流：</h3><p><code>java.io.BufferedInputStream</code></p>
<p><code>java.io.BufferedOutputStream</code></p>
<p>需要与 InputStream或 其子类 配合使用。</p>
<p>目的：</p>
<blockquote>
<ol>
<li><p> 调高IO效率，减少访问磁盘</p>
</li>
<li><p>数据存储在缓冲区，flush( )将数据写入文件，也可直接close( )</p>
<p> 【close( )也会调用flush( ),将内容写入文件】</p>
</li>
</ol>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	步骤：</span></span><br><span class="line"><span class="comment">*			1. new InputStream</span></span><br><span class="line"><span class="comment">*			2. new BufferedInputStream</span></span><br><span class="line"><span class="comment">*			3. 读取缓存，输出</span></span><br><span class="line"><span class="comment">*			4.关闭资源</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓冲输入流</span></span><br><span class="line"><span class="comment">// BufferedInputStream </span></span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;e:\\abc.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(fis);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> data=<span class="number">0</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 读取：&quot;adef&quot;</span></span><br><span class="line">        <span class="keyword">while</span>((data = bis.read()) !=-<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">// 打印结果：97:a  100:d  101:e  102:f </span></span><br><span class="line">            System.out.print(data+<span class="string">&quot;:&quot;</span>+(<span class="keyword">char</span>)data+<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bis.close();</span><br><span class="line">		fis();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓冲输出流</span></span><br><span class="line"><span class="comment">// BufferedOutputStream【最后必须 flush() 或 close() 才能 写入成功】</span></span><br><span class="line">	    FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;e:\\def.txt&quot;</span>);</span><br><span class="line">        BufferedOutputStream bos  = <span class="keyword">new</span> BufferedOutputStream(fos);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            bos.write(<span class="string">&quot;Hello\n&quot;</span>.getBytes());</span><br><span class="line">            bos.flush();</span><br><span class="line">        &#125;</span><br><span class="line">		bos.close();</span><br><span class="line">		fos();</span><br></pre></td></tr></table></figure>





<h3 id="8-5-对象流（序列化-反序列化）："><a href="#8-5-对象流（序列化-反序列化）：" class="headerlink" title="8.5 对象流（序列化 / 反序列化）："></a>8.5 对象流（序列化 / 反序列化）：</h3><ul>
<li><p>  ObjectOutputStream</p>
</li>
<li><p>  ObjectInputStream</p>
</li>
</ul>
<p>对象流：【需要结合 InputStream / OutputStream】</p>
<blockquote>
<ol>
<li> 增强了 缓冲区的功能</li>
<li> 增强了 读写 基本数据类型 + 字符串</li>
<li> 增强了 读写对象：readObject( ) 和 writeObject( obj)</li>
</ol>
</blockquote>
<p><code>使用 Stream 传输 Object 的过程</code>：</p>
<ul>
<li><p>  序列化【写入】：ObjectOutputStream，<code>1个类要想序列化，必须 implements Serializable接口</code></p>
</li>
<li><p>  反序列化【读取】：ObjectInputStream</p>
</li>
</ul>
<h4 id="8-5-1-序列化：【写入Object-到-文件】"><a href="#8-5-1-序列化：【写入Object-到-文件】" class="headerlink" title="8.5.1 序列化：【写入Object 到 文件】"></a>8.5.1 序列化：【写入Object 到 文件】</h4><p><strong>注意</strong>： </p>
<ul>
<li>  被 写入文件（序列化）的类 必须实现 <code>可序列化接口</code> 。</li>
<li>  如果<code>某个属性不想被序列化</code>，可以使用transient来修饰 某个类里 的 某个属性：<code>private transient int age;</code> 。</li>
<li>  <code>静态属性</code>不可以序列化。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	类：Student</span></span><br><span class="line"><span class="comment">*		1. 属性：name,age【如果是class类型的属性，则该属性也需要implements Serializable接口】</span></span><br><span class="line"><span class="comment">*		2. implements Serializable接口</span></span><br><span class="line"><span class="comment">		3. 类要有序列化版本ID（快捷键自动添加），该ID可以保证序列化、反序列化的类是同一个</span></span><br><span class="line"><span class="comment">*	</span></span><br><span class="line"><span class="comment">*	序列化-步骤：</span></span><br><span class="line"><span class="comment">*		1. new 文件输出流、对象输出流</span></span><br><span class="line"><span class="comment">*		2. 序列化(写入对象)</span></span><br><span class="line"><span class="comment">*		3. 关闭资源</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Student类</span></span><br><span class="line"><span class="comment">// 【注意：】1个类要想序列化，必须 implements Serializable接口</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">100L</span>;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 以下省略了 ：构造方法、getter、setter</span></span><br><span class="line">   		<span class="comment">// ……</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建文件输出流、对象输出流</span></span><br><span class="line">	FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;e:\\ghi.txt&quot;</span>);</span><br><span class="line">    ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(fos);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 序列化： ObjectOutputStream</span></span><br><span class="line">    Student ZhangSan = <span class="keyword">new</span> Student(<span class="string">&quot;张三&quot;</span>,<span class="number">20</span>);</span><br><span class="line">    oos.writeObject(ZhangSan);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭资源</span></span><br><span class="line">    oos.close();</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="8-5-2-反序列化：【读取文件中的Object】"><a href="#8-5-2-反序列化：【读取文件中的Object】" class="headerlink" title="8.5.2 反序列化：【读取文件中的Object】"></a>8.5.2 反序列化：【读取文件中的Object】</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	类：上面已经 序列化的类Student</span></span><br><span class="line"><span class="comment">*	</span></span><br><span class="line"><span class="comment">*	反序列化-步骤：</span></span><br><span class="line"><span class="comment">*		1. new 文件输入流、对象输入流</span></span><br><span class="line"><span class="comment">*		2. 反序列化(读取对象，并强制转化为Student类)</span></span><br><span class="line"><span class="comment">*		3. 关闭资源</span></span><br><span class="line"><span class="comment">*/</span>       </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 反序列化</span></span><br><span class="line">	 FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;e:\\ghi.txt&quot;</span>);</span><br><span class="line">     ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(fis);</span><br><span class="line"></span><br><span class="line">     Student stu1 = (Student) ois.readObject();</span><br><span class="line">     System.out.println(stu1.getName());	<span class="comment">// 张三</span></span><br><span class="line">     System.out.println(stu1.getAge());		<span class="comment">// 20</span></span><br><span class="line">	 ois.close();</span><br></pre></td></tr></table></figure>





<h3 id="8-6-字符流："><a href="#8-6-字符流：" class="headerlink" title="8.6 字符流："></a>8.6 字符流：</h3><h4 id="8-6-1-字符编码："><a href="#8-6-1-字符编码：" class="headerlink" title="8.6.1 字符编码："></a>8.6.1 字符编码：</h4><ul>
<li>  <code>ISO-8859-1</code>：【1个Byte表示】ASCII，希腊语、阿拉伯语、泰语等</li>
<li>  <code>UTF-8</code>：UniCode的可变长编码</li>
<li>  <code>GB-2312</code>：【1-2 Btye】简体中文</li>
<li>  <code>GBK</code>：【1-2 Btye】简体中文 + 扩展（GB-2312的升级版）</li>
<li>  <code>Big5</code>：台湾-繁体中文</li>
</ul>
<p><strong>注意：</strong><code> 编码方式</code> 与 <code>解码方式</code> 不一致 =》<code>乱码</code></p>
<h4 id="8-6-2-字符流："><a href="#8-6-2-字符流：" class="headerlink" title="8.6.2 字符流："></a>8.6.2 字符流：</h4><p>字符流 =》 <code>java.io.Reader</code> 和 <code>java.io.Writer</code></p>
<p>字符流常用子类：<code>FileReader</code>  和 <code>FileWriter</code> </p>
<p>FileReader：【可显示中文(默认UTF-8编码)】</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 每次读取1个 </span></span><br><span class="line"></span><br><span class="line">		FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">&quot;e:\\0\\1.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> data= <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>( (data=fr.read())!=-<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println((<span class="keyword">char</span>)data);		<span class="comment">// 打印：好好学习</span></span><br><span class="line">        &#125;</span><br><span class="line">		fr.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用缓冲区读取</span></span><br><span class="line"></span><br><span class="line">       FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">&quot;e:\\0\\1.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span>[] buf = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> count= <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>( (count = fr.read(buf)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            </span><br><span class="line">            System.out.println(<span class="keyword">new</span> String(buf,<span class="number">0</span>,count));	<span class="comment">// 打印：好好学习</span></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">		fr.close();</span><br></pre></td></tr></table></figure>





<p>FileWriter：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">      </span><br><span class="line">FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">&quot;e:\\0\\1.txt&quot;</span>);</span><br><span class="line">      fw.write(<span class="string">&quot;天天向上&quot;</span>);</span><br><span class="line">      fw.close();			<span class="comment">// 输出：天天向上</span></span><br></pre></td></tr></table></figure>







<h4 id="8-6-2-字符流-复制文本文件："><a href="#8-6-2-字符流-复制文本文件：" class="headerlink" title="8.6.2 字符流-复制文本文件："></a>8.6.2 字符流-复制文本文件：</h4><p><code>FileReader  + FileWriter  </code>： 复制<strong>文本文件</strong>【<code>无法复制：图片、二进制文件</code>】</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 字符流-复制文本文件        </span></span><br><span class="line">		FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">&quot;e:\\1.txt&quot;</span>);</span><br><span class="line">        FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">&quot;e:\\0\\2.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span>[] buf = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((count = fr.read(buf)) != -<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">            fw.write(<span class="keyword">new</span> String(buf,<span class="number">0</span>,count));</span><br><span class="line">            fw.flush();</span><br><span class="line">        &#125;</span><br><span class="line">        fw.close();</span><br><span class="line">        fr.close();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h4 id="8-6-3-字符缓冲流"><a href="#8-6-3-字符缓冲流" class="headerlink" title="8.6.3 字符缓冲流:"></a>8.6.3 字符缓冲流:</h4><ul>
<li>  BufferedReader：输入</li>
<li>  BufferedWriter：输出【原样打印】</li>
<li>  PrintWriter：输出【原样打印、换行打印】</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 字符缓冲-输入流【第一种】:BufferedReader</span></span><br><span class="line"></span><br><span class="line">        FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">&quot;e:\\1.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(fr);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span>[] buf = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> count =<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((count=br.read(buf))!= -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(buf);	<span class="comment">// 打印：天天向上-1 天天向上-2 天天向上-3</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符缓冲-输入流【第二种】:BufferedReader</span></span><br><span class="line">        FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">&quot;e:\\1.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(fr);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span>[] buf = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">        String line = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((line=br.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">            </span><br><span class="line">            System.out.println(line);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//================================================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符缓冲-输出流: BufferedWriter</span></span><br><span class="line"></span><br><span class="line">        FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">&quot;e:\\1.txt&quot;</span>);</span><br><span class="line">        BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(fw);</span><br><span class="line">        bw.write(<span class="string">&quot;好好学习&quot;</span>);</span><br><span class="line">        bw.newLine();	<span class="comment">// 换行</span></span><br><span class="line">        bw.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//================================================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// PrintWriter</span></span><br><span class="line">	<span class="comment">// 原样打印</span></span><br><span class="line">        PrintWriter pw = <span class="keyword">new</span> PrintWriter(<span class="string">&quot;e:\\2.txt&quot;</span>);</span><br><span class="line">        pw.println(<span class="number">97</span>);</span><br><span class="line">        pw.println(<span class="keyword">true</span>);</span><br><span class="line">        pw.flush();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">// </span></span><br></pre></td></tr></table></figure>







<h3 id="8-7-桥转换流："><a href="#8-7-桥转换流：" class="headerlink" title="8.7 桥转换流："></a>8.7 桥转换流：</h3><p><code>java.io.InputStreamReader</code> 和 <code>java.io.OutputStreamWriter</code></p>
<p>转化：</p>
<ul>
<li>  <code>字节流</code> =转为=》<code>字符流</code></li>
<li>  可设置<code>编码</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1个1个读取   </span></span><br><span class="line">		FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;e:\\1.txt&quot;</span>);</span><br><span class="line">        InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(fis,<span class="string">&quot;utf-8&quot;</span>);	<span class="comment">// 指定打开的编码</span></span><br><span class="line">        <span class="keyword">int</span> data=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>((data= isr.read())!=-<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println((<span class="keyword">char</span>)data);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(isr.getEncoding());		<span class="comment">// 获取当前编码</span></span><br><span class="line">        isr.close();</span><br><span class="line">        fis.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出：</span></span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;e:\\1.txt&quot;</span>);</span><br><span class="line">        OutputStreamWriter osw = <span class="keyword">new</span> OutputStreamWriter(fos);</span><br><span class="line">        osw.write(<span class="string">&quot;霓虹，你好\r\n我是第二行&quot;</span>);</span><br><span class="line">        osw.flush();</span><br><span class="line">		fos.close();</span><br></pre></td></tr></table></figure>







<h3 id="8-8-File类："><a href="#8-8-File类：" class="headerlink" title="8.8 File类："></a>8.8 File类：</h3><p><code>File类</code>：代表物理磁盘中的<code>文件、文件夹</code>。</p>
<p>File类-使用：</p>
<ul>
<li>分隔符<ul>
<li>  File.pathSeparatorChar：路径分隔符（\）</li>
<li>  File.separator：名称分隔符（;）</li>
</ul>
</li>
<li>  文件操作</li>
<li>  文件夹操作</li>
</ul>
<h4 id="8-8-1-文件操作："><a href="#8-8-1-文件操作：" class="headerlink" title="8.8.1 文件操作："></a>8.8.1 文件操作：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">creFile</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 创建文件对象，无论是否：真实存在        </span></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;e:\\3.txt&quot;</span>);	</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 按段是否：创建成功 createNewFile()</span></span><br><span class="line">        <span class="keyword">boolean</span> isCreSuccess = file.createNewFile();	</span><br><span class="line">        System.out.println(isCreSuccess);	</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 判断是否：已存在 file.exists()        </span></span><br><span class="line">        System.out.println(file.exists());	</span><br><span class="line">   </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 判断是否：删除  file.delete()       </span></span><br><span class="line">        System.out.println(file.delete());</span><br><span class="line">     </span><br><span class="line">        </span><br><span class="line"><span class="comment">// JVM退出时，删除        </span></span><br><span class="line">        file.deleteOnExit();</span><br><span class="line"> </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 获取绝对路径   file.getAbsoluteFile()</span></span><br><span class="line">         System.out.println(file.getAbsoluteFile());  <span class="comment">// e:\3.txt</span></span><br><span class="line">  </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 获取路径 file.getPath()      </span></span><br><span class="line">         System.out.println(file.getPath()); <span class="comment">// e:\3.txt</span></span><br><span class="line">     </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 获取路径 file.getName()        </span></span><br><span class="line">        System.out.println(file.getName());	<span class="comment">// 3.txt</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 获取父目录 file.getParent()           </span></span><br><span class="line">        System.out.println(file.getParent());	<span class="comment">// e:\</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 获取文件的创建时间 file.length()       </span></span><br><span class="line">        System.out.println(file.length());</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="comment">// 获取文件的 最后修改时间的毫秒数 file.lastModified()</span></span><br><span class="line">        System.out.println(<span class="keyword">new</span> Date(file.lastModified()).toString());</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 查看读、写权限        </span></span><br><span class="line">        System.out.println(file.canRead());</span><br><span class="line">        System.out.println(file.canWrite());</span><br><span class="line">        System.out.println(file.canExecute());</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 判断 文件、文件夹        </span></span><br><span class="line">        System.out.println(file.isFile());</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 判断是否 隐藏        </span></span><br><span class="line">        System.out.println(file.isHidden());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>







<h4 id="8-8-2-文件夹操作："><a href="#8-8-2-文件夹操作：" class="headerlink" title="8.8.2 文件夹操作："></a>8.8.2 文件夹操作：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">creDir</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">       </span><br><span class="line"><span class="comment">//创建文件夹对象</span></span><br><span class="line">        File dir =<span class="keyword">new</span> File(<span class="string">&quot;e:\\0\\1&quot;</span>);</span><br><span class="line"><span class="comment">// 判断是否存在</span></span><br><span class="line">        <span class="keyword">if</span>(!dir.exists())&#123;</span><br><span class="line">            </span><br><span class="line"><span class="comment">// 创建单层目录: dir.mkdir();	        </span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line"><span class="comment">// 创建多层目录: dir.mkdirs();</span></span><br><span class="line">            dir.mkdirs();	<span class="comment">// 返回 true</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除文件夹       </span></span><br><span class="line">        dir.delete();</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 列出所有的文件名              </span></span><br><span class="line">        String[] arr = dir.list();</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">for</span>(String f : arr)&#123;</span><br><span class="line">            System.out.println(f);            </span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="comment">// ... 所有的方法都与文件的一样</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="8-8-3-FileFilter接口："><a href="#8-8-3-FileFilter接口：" class="headerlink" title="8.8.3 FileFilter接口："></a>8.8.3 FileFilter接口：</h4><p>【按条件 筛选出 文件、文件夹】</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入FileFilter匿名对象，如果是jpg,</span></span><br><span class="line"></span><br><span class="line">       File[] arr = dir.listFiles(<span class="keyword">new</span> FileFilter() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">accept</span><span class="params">(File pathname)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(pathname.getName().endsWith(<span class="string">&quot;.txt&quot;</span>))&#123;</span><br><span class="line">                    <span class="comment">// 符合条件的返回true</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出：符合条件的文件名</span></span><br><span class="line">       <span class="keyword">for</span>(File f:arr)&#123;</span><br><span class="line">           System.out.println(f.getName());</span><br><span class="line">       &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

















<h2 id="9-集合框架"><a href="#9-集合框架" class="headerlink" title="9. 集合框架"></a>9. 集合框架</h2><ul>
<li>  <a href="https://blog.csdn.net/Zzh1110/article/details/105518682">JavaSE–集合介绍</a></li>
<li>  <a href="https://www.bilibili.com/video/BV1zD4y1Q7Fw?p=2">千锋-Java集合框架详解-bilibili</a></li>
<li>  <a href="https://www.cnblogs.com/coderzjz/p/13587167.html">Java集合-简要笔记</a></li>
<li>  <a href="https://lazydog036.gitee.io/2020/10/29/JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/">JAVA集合框架详解</a></li>
</ul>
<h3 id="9-1-引入："><a href="#9-1-引入：" class="headerlink" title="9.1 引入："></a>9.1 引入：</h3><p><code>数组、链表、集合</code>等，都是<code>存放多个数据</code>的1种容器，都用于在<code>内存中存储</code>（而不是持久化存储：txt,abi,jpg）。</p>
<p><code>数组</code>：【有序存储，元素可重复】</p>
<ul>
<li>  特点：指定长度后，长度不可再次更改，只能存放同一种类型的数据。 int [ ] arr = new int[ ];</li>
<li>  缺点：长度固定，不可更改；添加、删除元素时，效率低；没有现成的方法或属性来获取数组长度</li>
</ul>
<p>为解决<code>数组</code>的上述<code>缺点</code>，引入了<code>集合</code>。</p>
<ul>
<li>  集合只能存储<code>引用类型</code>   ：</li>
</ul>
<blockquote>
<p>  =&gt; 必须<code>自动装箱、自动拆箱</code>来将  <code>基本类型 </code> 转化为  <code>引用类型</code> 。     </p>
</blockquote>
<ul>
<li>  为什么学习不同的集合？</li>
</ul>
<blockquote>
<p>  不同的集合，在底层的数据结构的实现不同。</p>
</blockquote>
<ul>
<li>  数组 与 集合 的区别：</li>
</ul>
<blockquote>
<ol>
<li> 数组长度固定，集合长度不固定。</li>
<li> 数组可以存储基本类型+引用类型，集合只能存储引用类型（因此需要 自动装箱、自动拆箱）。</li>
</ol>
</blockquote>
<ul>
<li>  集合的包的位置：<code>import java.uitl.*;</code></li>
</ul>
<p><img src="https://z3.ax1x.com/2021/05/24/gjdpAH.png" alt="collection集合"></p>
<h3 id="9-2-Collection集合的操作："><a href="#9-2-Collection集合的操作：" class="headerlink" title="9.2 Collection集合的操作："></a>9.2 Collection集合的操作：</h3><p>Collection、List、Set是接口，不能直接new，而要借助他们的子类如：ArrayList、LinkedList、HashSet、TreeSet。</p>
<h4 id="9-2-1-Collection-集合接口："><a href="#9-2-1-Collection-集合接口：" class="headerlink" title="9.2.1 Collection 集合接口："></a>9.2.1 Collection 集合接口：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 集合的操作：</span></span><br><span class="line"><span class="comment">*	1. 添加：add(obj),</span></span><br><span class="line"><span class="comment">*	2. 删除：remove(),clear();</span></span><br><span class="line"><span class="comment">*	3. 遍历：foreach语句，迭代器</span></span><br><span class="line"><span class="comment">*	4. 判断：contains(),isEmpty(),equals()</span></span><br><span class="line"><span class="comment">*	5. 获取：get()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加：</span></span><br><span class="line"></span><br><span class="line">            Collection coll = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            coll.add(<span class="string">&quot;苹果&quot;</span>);</span><br><span class="line">            coll.add(<span class="string">&quot;西瓜&quot;</span>);</span><br><span class="line">            System.out.println(“元素个数：”+coll.size());</span><br><span class="line">            System.out.println(coll);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除：</span></span><br><span class="line"></span><br><span class="line">            coll.remove(<span class="string">&quot;苹果&quot;</span>);</span><br><span class="line">            System.out.println(coll);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空:</span></span><br><span class="line">            coll.clear();</span><br><span class="line">            System.out.println(coll);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历的2种方式【重点】：</span></span><br><span class="line"><span class="comment">//		1. 增强的for</span></span><br><span class="line"><span class="comment">//		2. 迭代器【专门用于遍历集合的接口】：</span></span><br><span class="line"><span class="comment">//				haNext(),有元素则返回true</span></span><br><span class="line"><span class="comment">//				next(),获取下一个元素</span></span><br><span class="line"><span class="comment">//				remove()，移除当前元素</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 增强for</span></span><br><span class="line">            <span class="keyword">for</span> (Object obj:coll) &#123;</span><br><span class="line">                String s = (String)obj;	<span class="comment">// 强制转化为真实的类型</span></span><br><span class="line">                System.out.println(obj);</span><br><span class="line">            &#125;	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		<span class="comment">// 使用迭代器【注意：在迭代时，不能: 集合.remove(),</span></span><br><span class="line">		<span class="comment">// 否则会报：并发修改异常;但可以 it.remove()】</span></span><br><span class="line">            Iterator it = coll.iterator();</span><br><span class="line">            <span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">                String s = (String)it.next();</span><br><span class="line">                System.out.println(s);</span><br><span class="line">                it.remove();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(coll.size());	<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">		</span><br><span class="line"><span class="comment">// 判断：存在-&gt; coll.contains();   </span></span><br><span class="line"><span class="comment">//      是否为空 -&gt; coll.isEmpty();</span></span><br><span class="line"></span><br><span class="line">			System.out.println(coll.contains(<span class="string">&quot;香蕉&quot;</span>));、</span><br><span class="line">            System.out.println(coll.isEmpty(香蕉));</span><br></pre></td></tr></table></figure>



<h4 id="9-2-2-List-集合子接口："><a href="#9-2-2-List-集合子接口：" class="headerlink" title="9.2.2 List 集合子接口："></a>9.2.2 List 集合子接口：</h4><p>有序、可重复、有下标</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* List集合的操作：</span></span><br><span class="line"><span class="comment">*	1. 添加：add(obj),addAll(index,collection)，add(index,obj);</span></span><br><span class="line"><span class="comment">*	2. 删除：remove(),clear();</span></span><br><span class="line"><span class="comment">*   3. 保留元素：retainAll(collection);</span></span><br><span class="line"><span class="comment">*	4. 遍历：foreach语句，</span></span><br><span class="line"><span class="comment">			迭代器:</span></span><br><span class="line"><span class="comment">				Iterator()、</span></span><br><span class="line"><span class="comment">				listIterator()、</span></span><br><span class="line"><span class="comment">				listIterator(index)【迭代方向可 先从前面开始，也可先从后开始】</span></span><br><span class="line"><span class="comment">				</span></span><br><span class="line"><span class="comment">*	5. 判断：contains(obj),isEmpty(),equals(obj)</span></span><br><span class="line"><span class="comment">*	6. 获取：get(index),subList(from_index,to_index), indexOf(obj)</span></span><br><span class="line"><span class="comment">*	7. 修改元素：set(index,obj)</span></span><br><span class="line"><span class="comment">*	8. 转化为数组：toA</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.ListIterator;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下内容放入main中</span></span><br><span class="line"></span><br><span class="line">        List list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;苹果&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;西瓜&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;香蕉&quot;</span>);</span><br><span class="line">        System.out.println(list);</span><br><span class="line"></span><br><span class="line">		ListIterator it = list.listIterator();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// listIterator迭代器，从 前往后 迭代</span></span><br><span class="line">		<span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">            System.out.println(it.next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// listIterator迭代器，从 后往前 迭代【先将指针移到最后，再从后往前打印】</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">           it.next();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(it.hasPrevious())&#123;</span><br><span class="line">            System.out.println(it.previous());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// indexOf()</span></span><br><span class="line"> 		System.out.println(list.indexOf(<span class="string">&quot;香蕉&quot;</span>)); <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// remove(index)  ; remove((Object)obj)</span></span><br><span class="line"></span><br><span class="line">		List list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="number">20</span>);</span><br><span class="line">        list.add(<span class="number">30</span>);</span><br><span class="line">        list.add(<span class="number">40</span>);</span><br><span class="line">        list.add(<span class="number">50</span>);</span><br><span class="line">        list.add(<span class="number">60</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(list);</span><br><span class="line"></span><br><span class="line">        list.remove((Object)<span class="number">20</span>);</span><br><span class="line">		list.remove(<span class="number">0</span>);  <span class="comment">// 与上1行效果一致</span></span><br><span class="line"></span><br><span class="line">        System.out.println(list);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// subList(from_idx,to_idx) 返回子集,范围 [from_idx,to_idx)</span></span><br><span class="line"></span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">		</span><br></pre></td></tr></table></figure>





<h4 id="9-2-3-List-接口的常用实现类："><a href="#9-2-3-List-接口的常用实现类：" class="headerlink" title="9.2.3 List 接口的常用实现类："></a>9.2.3 List 接口的常用实现类：</h4><ul>
<li>  ArrayList【重点】：数组，查询快、增删慢，线程不安全【jdk1.2】</li>
</ul>
<blockquote>
<p>   源码分析：</p>
<ol>
<li> 默认容量（default_capacity）：当没有元素时，0；有1个元素时，10</li>
<li> 数组（elementData）</li>
<li> 当前大小（size）：</li>
</ol>
</blockquote>
<ul>
<li>  LinkedList：双链表，增删快、查询慢</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	LinkedList常用方法：</span></span><br><span class="line"><span class="comment">*		1. add()，addAll()</span></span><br><span class="line"><span class="comment">*		2. remove(),removeAll()</span></span><br><span class="line"><span class="comment">*		3. addFirst(),addLast()</span></span><br><span class="line"><span class="comment">* 		4. removeFirst(),removeLast()</span></span><br><span class="line"><span class="comment">* 		5. clear()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        LinkedList ll = <span class="keyword">new</span> LinkedList();</span><br><span class="line"></span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student(<span class="string">&quot;张1&quot;</span>,<span class="number">10</span>);</span><br><span class="line">        Student s2 = <span class="keyword">new</span> Student(<span class="string">&quot;张2&quot;</span>,<span class="number">20</span>);</span><br><span class="line">        Student s3 = <span class="keyword">new</span> Student(<span class="string">&quot;张3&quot;</span>,<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加</span></span><br><span class="line">        ll.add(s1);</span><br><span class="line">        ll.add(s2);</span><br><span class="line">        ll.add(s3);</span><br><span class="line">        System.out.println(ll);</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除</span></span><br><span class="line">        ll.remove(s2);</span><br><span class="line">        System.out.println(ll);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 头插</span></span><br><span class="line">        ll.addFirst(s2);</span><br><span class="line">        System.out.println(ll);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 头删</span></span><br><span class="line">        ll.removeFirst();</span><br><span class="line">        System.out.println(ll);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 尾插</span></span><br><span class="line">        ll.addLast(s2);</span><br><span class="line">        System.out.println(ll);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 尾删</span></span><br><span class="line">        ll.removeLast();</span><br><span class="line">        System.out.println(ll);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历【向后】</span></span><br><span class="line">        ListIterator it = ll.listIterator();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">            System.out.println(it.next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历【向前】</span></span><br><span class="line">         <span class="keyword">while</span>(it.hasPrevious())&#123;</span><br><span class="line">                System.out.println(it.previous());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<ul>
<li>  Vector：数组，查询快、增删慢，线程安全，【jdk1.0】</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	Vector集合 演示：</span></span><br><span class="line"><span class="comment">*		add()</span></span><br><span class="line"><span class="comment">*		remove()</span></span><br><span class="line"><span class="comment">*		size()</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*		遍历： 枚举器</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Vector v = <span class="keyword">new</span> Vector();</span><br><span class="line">        v.add(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        v.add(<span class="string">&quot;里斯&quot;</span>);</span><br><span class="line">        v.add(<span class="string">&quot;威武&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 枚举器，遍历Vector</span></span><br><span class="line">        Enumeration en = v.elements();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(en.hasMoreElements())&#123;</span><br><span class="line">            System.out.println(en.nextElement());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// firstElement()</span></span><br><span class="line"><span class="comment">// lastElement()</span></span><br><span class="line"><span class="comment">// elementAt(idx)</span></span><br><span class="line"></span><br><span class="line">        System.out.println( v.firstElement());</span><br><span class="line">        System.out.println( v.lastElement());</span><br><span class="line">        System.out.println( v.elementAt(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h4 id="9-2-4-Set-集合："><a href="#9-2-4-Set-集合：" class="headerlink" title="9.2.4 Set 集合："></a>9.2.4 Set 集合：</h4><p>只有包含 Collection 集合中的方法，没有自己额外的方法。</p>
<ul>
<li><p>  HashSet：基于hashcode来保证不重复。当hashcodec重复时，equals方法被调用，如果equals方法返回true，则 拒绝添加 新的那个重复元素。【存储结构：哈希表，数组+链表】</p>
</li>
<li><p>  TreeSet：基于排列顺序来保证不重复。【存储结构：红黑树】</p>
</li>
</ul>
<h5 id="HashSet："><a href="#HashSet：" class="headerlink" title="HashSet："></a>HashSet：</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*  HashSet:</span></span><br><span class="line"><span class="comment">*	存储过程：【需要在类里 重写 hashcode()、equals()】</span></span><br><span class="line"><span class="comment">		【1】 根据hashcode查找保存的位置，位置处无元素，则存入，否则执行第二步</span></span><br><span class="line"><span class="comment">		【2】 执行euqals(),若返回false,则表示元素不重复，以链表形式存入。</span></span><br><span class="line"><span class="comment">		小结：先比较hashcode【同一地址】,再equals()【同一值】</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 		1. add(obj)</span></span><br><span class="line"><span class="comment">* 		2. remove(obj)</span></span><br><span class="line"><span class="comment">* 		3. clear()</span></span><br><span class="line"><span class="comment">*		4. contains(obj)</span></span><br><span class="line"><span class="comment">*		4. isEmpty()</span></span><br><span class="line"><span class="comment">*		6. 遍历：</span></span><br><span class="line"><span class="comment">			 - 增强型for</span></span><br><span class="line"><span class="comment">			 - 迭代器</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        HashSet&lt;Student&gt; s = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student(<span class="string">&quot;张1&quot;</span>,<span class="number">10</span>);</span><br><span class="line">        Student s2 = <span class="keyword">new</span> Student(<span class="string">&quot;张2&quot;</span>,<span class="number">20</span>);</span><br><span class="line">        Student s3 = <span class="keyword">new</span> Student(<span class="string">&quot;张3&quot;</span>,<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        s.add(s1);</span><br><span class="line">        s.add(s2);</span><br><span class="line">        s.add(s3);</span><br><span class="line"></span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加</span></span><br><span class="line">        s.add(s3);</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line">        s.remove(s2);</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 包含元素</span></span><br><span class="line">  		System.out.println( s.contains(s2) ); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否为空</span></span><br><span class="line">  		System.out.println( s.isEmpty() ); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历【增强for】</span></span><br><span class="line">        <span class="keyword">for</span> (Student item : s) &#123;</span><br><span class="line">            System.out.println(item);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历【迭代器】</span></span><br><span class="line">        Iterator&lt;Student&gt; it = s.iterator();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">            System.out.println(it.next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 【Student类中】重写hashcode方法，</span></span><br><span class="line"><span class="comment">// 注意：此处写法不严谨，使用质数31来参与运算，解决散列冲突: 31*i = (31&lt;&lt;5)-i</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = <span class="keyword">this</span>.name.hashCode();</span><br><span class="line">        <span class="keyword">int</span> n2 = <span class="keyword">this</span>.age;</span><br><span class="line">        <span class="keyword">return</span> n1+n2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 【Student类中】重写equals方法</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(obj == <span class="keyword">this</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(obj == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(obj <span class="keyword">instanceof</span> Student)&#123;</span><br><span class="line">            Student s = (Student) obj;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.name.equals(s.getName())&amp;&amp;<span class="keyword">this</span>.age==s.getAge())&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>









<h5 id="TreeSet："><a href="#TreeSet：" class="headerlink" title="TreeSet："></a>TreeSet：</h5><p>【红黑树，即：二叉查找树】</p>
<ul>
<li>  按 <code>排列顺序</code> 实现  <code>元素不重复</code></li>
<li>  实现了<code> SortedSet 接口</code>， 对元素 进行<code>自动排序</code></li>
<li>  元素类 必须<code>实现 Comparable 接口</code>，指定 <code>排序规则</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*  TreeSet:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 		1. add(obj)</span></span><br><span class="line"><span class="comment">* 		2. remove(obj)</span></span><br><span class="line"><span class="comment">* 		3. clear()</span></span><br><span class="line"><span class="comment">*		4. contains(obj)</span></span><br><span class="line"><span class="comment">*		4. isEmpty()</span></span><br><span class="line"><span class="comment">*		6. 遍历：</span></span><br><span class="line"><span class="comment">			 - 增强型for</span></span><br><span class="line"><span class="comment">			 - 迭代器</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Student类中 实现 Comparable 接口，重写 CompareTo() </span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Student o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = <span class="keyword">this</span>.name.compareTo(o.getName());</span><br><span class="line">        <span class="keyword">int</span> n2 = <span class="keyword">this</span>.age-o.getAge();</span><br><span class="line">        <span class="keyword">return</span> n1==<span class="number">0</span>?n2:n1;	<span class="comment">// 返回0，表示元素重复</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者 main方法中，在new Student类时,传入匿名内部类，指定 比较规则</span></span><br><span class="line"></span><br><span class="line">        TreeSet&lt;Student&gt; s = <span class="keyword">new</span> TreeSet&lt;&gt;(<span class="keyword">new</span> Comparator&lt;Student&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Student o1, Student o2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">int</span> n1 = o1.getAge() - o2.getAge();</span><br><span class="line">                <span class="keyword">int</span> n2 = o1.getName().compareTo(o2.getName());</span><br><span class="line">                <span class="keyword">return</span> n1==<span class="number">0</span>?n2:n1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// main</span></span><br><span class="line">		TreeSet&lt;Student&gt; s = <span class="keyword">new</span> TreeSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student(<span class="string">&quot;张1&quot;</span>,<span class="number">10</span>);</span><br><span class="line">        Student s2 = <span class="keyword">new</span> Student(<span class="string">&quot;张2&quot;</span>,<span class="number">20</span>);</span><br><span class="line">        Student s3 = <span class="keyword">new</span> Student(<span class="string">&quot;张3&quot;</span>,<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        s.add(s1);</span><br><span class="line">        s.add(s2);</span><br><span class="line">        s.add(s3);</span><br><span class="line"></span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加</span></span><br><span class="line">        s.add(s3);</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line">        s.remove(s2);</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 包含元素</span></span><br><span class="line">  		System.out.println( s.contains(s2) ); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否为空</span></span><br><span class="line">  		System.out.println( s.isEmpty() ); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历【增强for】</span></span><br><span class="line">        <span class="keyword">for</span> (Student item : s) &#123;</span><br><span class="line">            System.out.println(item);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历【迭代器】</span></span><br><span class="line">        Iterator&lt;Student&gt; it = s.iterator();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">            System.out.println(it.next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h5 id="TreeSet-案例："><a href="#TreeSet-案例：" class="headerlink" title="TreeSet-案例："></a>TreeSet-案例：</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> CollectionDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeSetDemo</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*  todo:</span></span><br><span class="line"><span class="comment">    *       按照字符串的长度进行排序</span></span><br><span class="line"><span class="comment">    *           beijing:7,guangzhou:9,shanghai:8</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="comment">// main</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        TreeSet&lt;String&gt; t = <span class="keyword">new</span> TreeSet&lt;&gt;(<span class="keyword">new</span> Comparator&lt;String&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(String o1, String o2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">int</span> n1 = o1.length() - o2.length();</span><br><span class="line">                <span class="keyword">int</span> n2 = o1.compareTo(o2);</span><br><span class="line">                <span class="keyword">return</span> n1==<span class="number">0</span>?n2:n1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        t.add(<span class="string">&quot;beijing:7&quot;</span>);</span><br><span class="line">        t.add(<span class="string">&quot;guangzhou:9&quot;</span>);</span><br><span class="line">        t.add(<span class="string">&quot;shanghai:8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(t);	<span class="comment">// [beijing:7, shanghai:8, guangzhou:9]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="9-3-泛型"><a href="#9-3-泛型" class="headerlink" title="9.3 泛型"></a>9.3 泛型</h3><p>注意：<code>6.4.2 </code>中也提到了泛型</p>
<ol>
<li> 泛型-定义：</li>
</ol>
<blockquote>
<p>  把<code>数据类型</code>当作<code>参数</code>,且<code>传入</code>的数据类型必须是<code>引用类型</code>【<code>基本类型</code> 必须使用 其<code>包装类 </code>作为参数】</p>
<p>  例如：</p>
<p>   <code>ArrayList&lt;Integer&gt; arr = new ArrayList&lt; &gt;( );</code></p>
</blockquote>
<ol start="2">
<li> 常见形式：</li>
</ol>
<blockquote>
<ul>
<li>  泛型类</li>
<li>  泛型接口</li>
<li>  泛型方法</li>
</ul>
</blockquote>
<ol start="3">
<li> 语法：<code>&lt;T,… &gt;</code>  ，其中的 T可以换成<code>E,K,V</code></li>
</ol>
<ol start="4">
<li> 好处：</li>
</ol>
<blockquote>
<ul>
<li>  提高代码复用性</li>
<li>  提高代码安全性，防止 类型转化异常</li>
</ul>
</blockquote>
<ol start="5">
<li> 泛型在集合框架中的应用：</li>
</ol>
<blockquote>
<p>  可以指定某个集合只能传入某个类型的数据。</p>
<p>  【不指定<code>泛型</code>，<code>默认</code>传入<code>Object类型</code>，因此需 <code>强制转化</code>类型】</p>
</blockquote>
<h4 id="9-3-1-泛型类："><a href="#9-3-1-泛型类：" class="headerlink" title="9.3.1 泛型类："></a>9.3.1 泛型类：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	泛型类的语法： 类名&lt;T&gt;&#123; &#125;</span></span><br><span class="line"><span class="comment">*		1. T为数据类型的 占位符，可以有多个，每个占位符之间用逗号隔开</span></span><br><span class="line"><span class="comment">*		2. T可以用来 声明 变量</span></span><br><span class="line"><span class="comment">*		3. T可以用来 作为 参数</span></span><br><span class="line"><span class="comment">*		4. T可以用来 作为 返回值</span></span><br><span class="line"><span class="comment">*		5. 不能 使用T的构造方法：不能 new T()</span></span><br><span class="line"><span class="comment">*		6. 不同的泛型对象 不能 相互赋值</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 泛型类</span></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyGeneral</span>&lt;<span class="title">T</span>&gt;</span>&#123;    </span><br><span class="line"></span><br><span class="line">            T t1; </span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(T t1)</span></span>&#123;</span><br><span class="line">                System.out.println(t1);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> T <span class="title">getT1</span><span class="params">()</span></span>&#123;</span><br><span class="line">                <span class="keyword">return</span> t1;</span><br><span class="line">            &#125;   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// main</span></span><br><span class="line"></span><br><span class="line">        MyGeneral&lt;String&gt; m1 = <span class="keyword">new</span> MyGeneral&lt;&gt;(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        System.out.println( m1.getT1()); <span class="comment">// 张三</span></span><br><span class="line">        m1.show(<span class="string">&quot;你好&quot;</span>);	<span class="comment">//你好</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        MyGeneral&lt;Integer&gt; m2 = <span class="keyword">new</span> MyGeneral&lt;&gt;(<span class="number">123</span>);</span><br><span class="line">        System.out.println(m2.getT1()); <span class="comment">// 123</span></span><br><span class="line">        m2.show(<span class="number">456</span>); <span class="comment">// 456</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h4 id="9-3-2-泛型接口："><a href="#9-3-2-泛型接口：" class="headerlink" title="9.3.2 泛型接口："></a>9.3.2 泛型接口：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 	泛型接口：</span></span><br><span class="line"><span class="comment">*		1. 不能创建 泛型常量</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 泛型接口</span></span><br><span class="line">        <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">myInt</span>&lt;<span class="title">T</span>&gt;</span>&#123;</span><br><span class="line">            <span class="function">T <span class="title">show</span><span class="params">(T t1)</span></span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1. 泛型接口-实现类【在实现接口时，确定要传入的类型】</span></span><br><span class="line">                <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">myIntClass</span> <span class="keyword">implements</span> <span class="title">myInt</span>&lt;<span class="title">String</span>&gt;</span>&#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(String t1)</span> </span>&#123;</span><br><span class="line">                        System.out.println(t1);</span><br><span class="line">                        <span class="keyword">return</span> t1;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        <span class="comment">// main</span></span><br><span class="line">                myIntClass myInt_1 = <span class="keyword">new</span> myIntClass();</span><br><span class="line">                myInt_1.show(<span class="string">&quot;你好&quot;</span>);	<span class="comment">// 你好</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 泛型接口-实现类【在创建对象时，确定要传入的类型】</span></span><br><span class="line">                <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">myIntClass2</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">myInt</span>&lt;<span class="title">T</span>&gt;</span>&#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> T <span class="title">show</span><span class="params">(T t1)</span> </span>&#123;</span><br><span class="line">                        System.out.println(t1);</span><br><span class="line">                        <span class="keyword">return</span> t1;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// main</span></span><br><span class="line">                myIntClass2&lt;Integer&gt; myInt_2 = <span class="keyword">new</span> myIntClass2&lt;&gt;();</span><br><span class="line">                myInt_2.show(<span class="number">123</span>);	<span class="comment">// 123</span></span><br></pre></td></tr></table></figure>







<h4 id="9-3-3-泛型方法："><a href="#9-3-3-泛型方法：" class="headerlink" title="9.3.3 泛型方法："></a>9.3.3 泛型方法：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">myGer</span></span>&#123;</span><br><span class="line">    </span><br><span class="line"> <span class="comment">// 泛型方法：   </span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(T t1)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这是泛型方法:&quot;</span> + t1);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 泛型方法 T由 传入的数据的类型 来决定</span></span><br><span class="line">        myGer ger = <span class="keyword">new</span> myGer();</span><br><span class="line">        ger.show(<span class="number">123</span>);		<span class="comment">//这是泛型方法:123</span></span><br><span class="line">        ger.show(<span class="string">&quot;你好&quot;</span>);		<span class="comment">//这是泛型方法:你好</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>









<h3 id="9-4-Map-集合："><a href="#9-4-Map-集合：" class="headerlink" title="9.4 Map 集合："></a>9.4 Map 集合：</h3><p><img src="https://z3.ax1x.com/2021/05/24/gjdYbF.png" alt="Map集合"></p>
<ol>
<li> 特点：</li>
</ol>
<blockquote>
<ul>
<li>  用于存储 <code>无序、无下标</code>的<code>键值对</code></li>
<li>  键：无序、无下标、不重复</li>
<li>  值：无序、无下标、可重复</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	Map:</span></span><br><span class="line"><span class="comment">*		entrySet();</span></span><br><span class="line"><span class="comment">*		put(key,value);</span></span><br><span class="line"><span class="comment">*		get(key);</span></span><br><span class="line"><span class="comment">*		keySet();</span></span><br><span class="line"><span class="comment">*		values();</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Map&lt;String,String&gt; m = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加</span></span><br><span class="line">        m.put(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;a-&gt;10&quot;</span>);</span><br><span class="line">        m.put(<span class="string">&quot;b&quot;</span>,<span class="string">&quot;b-&gt;20&quot;</span>);</span><br><span class="line">        m.put(<span class="string">&quot;c&quot;</span>,<span class="string">&quot;c-&gt;30&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(m);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line">		m.remove(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">        System.out.println(m);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历-【keySet】</span></span><br><span class="line">	    Set&lt;String&gt; keyset = m.keySet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String k : keyset) &#123;</span><br><span class="line">            System.out.println(k+<span class="string">&quot;---&quot;</span>m.get(k));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历-【entrySet】</span></span><br><span class="line">		Set&lt;Map.Entry&lt;String,String&gt;&gt;  entries = m.entrySet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String,String&gt; item: entries ) &#123;</span><br><span class="line">            </span><br><span class="line">            System.out.println(item.getKey()+<span class="string">&quot;---&quot;</span>+item.getValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h4 id="9-4-1-HashMap"><a href="#9-4-1-HashMap" class="headerlink" title="9.4.1 HashMap"></a>9.4.1 HashMap</h4><p>默认容量：16。</p>
<p>75%时，开始扩容。</p>
<p>数组长度&gt;8 且 链表长度&gt;64时，使用红黑树。</p>
<p><code>为实现每一项的键和值都不一样，需要重写 hashcode()、equals() 【可使用IED的快捷键】</code></p>
<p>HashMap源码分析-小结：</p>
<blockquote>
<ul>
<li>  HashMap 刚创建时，table为null【为节省空间】，当添加第一个元素时，table的容量为16。</li>
<li>  元素个数大于阈值（容量的75%)时，会进行扩容为原来的2倍，目的是减少需要调整的元素个数。</li>
<li>  JDK1.8 ，当每个链表长度 大于8，元素个数 大于等于64时，调整为红黑树，目的是提高元素的效率。</li>
<li>  JDK1.8 ，当每个链表长度 小于6时，使用链表。</li>
<li>  JDK1.8以前，使用头插法；JDK1.8以后，使用尾插法。</li>
</ul>
</blockquote>
<p>案例：</p>
<p>统计字符串中每个字符的出现次数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        String s = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Character,Integer&gt; hm = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">char</span>[] arr = s.toCharArray();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">char</span> item: arr) &#123;</span><br><span class="line"><span class="comment">// hashmap中如果有该字符，则更新value</span></span><br><span class="line"><span class="comment">// 没有该字符，则直接插入当前字符的键值对            </span></span><br><span class="line">            <span class="keyword">if</span>(hm.containsKey(item))&#123;</span><br><span class="line">                <span class="keyword">int</span> t = hm.get(item);</span><br><span class="line">                hm.put(item,++t);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                hm.put(item,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;现在的字符串：&quot;</span>+s);</span><br><span class="line">        System.out.println(<span class="string">&quot;现在的HashMap：&quot;</span>+hm);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>











<h4 id="9-4-2-TreeMap"><a href="#9-4-2-TreeMap" class="headerlink" title="9.4.2 TreeMap"></a>9.4.2 TreeMap</h4><p>存储：红黑树</p>
<p>对 key 自动排序</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*	注意：参数类Student 必须 implents Comparable接口</span></span><br><span class="line"><span class="comment">*	</span></span><br><span class="line"><span class="comment">*     put()</span></span><br><span class="line"><span class="comment">*	  remove()</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">遍历：</span></span><br><span class="line"><span class="comment">	1. keySet();</span></span><br><span class="line"><span class="comment">	2. Entry</span></span><br><span class="line"><span class="comment">*/</span>     </span><br><span class="line"></span><br><span class="line">		Student s1 = <span class="keyword">new</span> Student(<span class="string">&quot;张1&quot;</span>, <span class="number">10</span>);</span><br><span class="line">        Student s2 = <span class="keyword">new</span> Student(<span class="string">&quot;张2&quot;</span>, <span class="number">20</span>);</span><br><span class="line">        Student s3 = <span class="keyword">new</span> Student(<span class="string">&quot;张3&quot;</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        TreeMap&lt;Student, String&gt; tm = <span class="keyword">new</span> TreeMap&lt;&gt;();</span><br><span class="line">        tm.put(s1, <span class="string">&quot;1&quot;</span>);</span><br><span class="line">        tm.put(s2, <span class="string">&quot;2&quot;</span>);</span><br><span class="line">        tm.put(s3, <span class="string">&quot;3&quot;</span>);</span><br><span class="line">        System.out.println(tm);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历-1</span></span><br><span class="line">        Set&lt;Student&gt; set = tm.keySet();</span><br><span class="line">        <span class="keyword">for</span> (Student k:set ) &#123;</span><br><span class="line">            System.out.println(k+<span class="string">&quot;---&quot;</span>+tm.get(k));            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历-2</span></span><br><span class="line"></span><br><span class="line">  		Map.Entry&lt;Student,String&gt;&gt; entries = tm.entrySet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Student,String&gt; item: entries)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(item.getKey()+<span class="string">&quot;---&quot;</span>+item.getValue());</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>







<h3 id="9-5-Collections-工具类："><a href="#9-5-Collections-工具类：" class="headerlink" title="9.5 Collections 工具类："></a>9.5 Collections 工具类：</h3><p><strong>方法</strong>：</p>
<ul>
<li>  <code>public static void reverse(List&lt;?&gt; list)</code>//反转集合中元素的顺序</li>
<li>  <code>public static void shuffle(List&lt;?&gt; list)</code>//随机重置集合元素的顺序</li>
<li>  <code>public static void sort(List&lt;T&gt; list)</code>//升序排序（元素类型必须实现Comparable接口）</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">      	</span><br><span class="line">		ArrayList&lt;Integer&gt; arr = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        arr.add(<span class="number">10</span>);</span><br><span class="line">        arr.add(<span class="number">20</span>);</span><br><span class="line">        arr.add(<span class="number">30</span>);</span><br><span class="line">        arr.add(<span class="number">40</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(arr);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打乱顺序</span></span><br><span class="line">        Collections.shuffle(arr);        </span><br><span class="line">        System.out.println(arr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//排序</span></span><br><span class="line">    	Collections.sort(arr);</span><br><span class="line">        System.out.println(arr);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 二分查找</span></span><br><span class="line">        System.out.println( Collections.binarySearch(arr,<span class="number">20</span>) );</span><br><span class="line"></span><br><span class="line"><span class="comment">//反转</span></span><br><span class="line">    	Collections.reverse(arr);</span><br><span class="line">        System.out.println(arr);</span><br><span class="line"></span><br></pre></td></tr></table></figure>









<h2 id="10-多线程"><a href="#10-多线程" class="headerlink" title="10. 多线程"></a>10. 多线程</h2><ul>
<li>  <a href="https://www.bilibili.com/video/BV1V4411p7EF">狂神说Java多线程详解</a></li>
<li>  <a href="https://www.bilibili.com/video/BV1cb4y1X7kz?p=115">赵姗姗-b站-多线程</a></li>
<li>  <a href="https://www.cnblogs.com/13roky/p/14707360.html#1-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5">Java多线程详解</a></li>
</ul>
<ol>
<li>  并发 与 并行：</li>
</ol>
<blockquote>
<ul>
<li><p>  并发：在一段<strong>时间段</strong>内执行多个程序</p>
</li>
<li><p>  并行：在一个<strong>时间点</strong>执行多个程序</p>
</li>
</ul>
</blockquote>
<ol start="2">
<li>  进程 和 线程 ：</li>
</ol>
<blockquote>
<p>  进程：1个正在运行的程序【资源分配的基本单位】<br>  线程：1个进程通常由多个线程组成（最少有1个main线程)【资源调度的基本单位】</p>
<p>  <strong>多线程的好处</strong> ：效率高，多个线程之间互不影响</p>
</blockquote>
<ol start="3">
<li>  线程的调度：</li>
</ol>
<blockquote>
<ul>
<li>  分时调度：所有线程轮流使用CPU</li>
<li>  抢占调度：让<code>优先级</code>高的线程先使用CPU，如果优先级一样，则随机选一个【<code>Java使用: 抢占调度</code>】</li>
</ul>
</blockquote>
<ol start="4">
<li> 主线程：</li>
</ol>
<blockquote>
<ul>
<li>  主线程：执行 main 方法的线程</li>
<li>  单线程程序：java默认情况只有1个线程=》main线程</li>
<li>  JVM 的 main方法进栈 并 执行main 方法 =》产生1条进栈的路（main线程）</li>
</ul>
</blockquote>
<ol start="5">
<li> 最常见的线程操作：</li>
</ol>
<blockquote>
<ul>
<li><p>  设置线程名：setName( )</p>
</li>
<li><p>  获取线程名：getName( )</p>
</li>
<li><p>  获取当前线程：Thread.currentThread( )</p>
</li>
</ul>
</blockquote>
<h3 id="10-1-多线程的实现："><a href="#10-1-多线程的实现：" class="headerlink" title="10.1 多线程的实现："></a>10.1 多线程的实现：</h3><h4 id="10-1-1-方式1【继承Thread类-重点】"><a href="#10-1-1-方式1【继承Thread类-重点】" class="headerlink" title="10.1.1 方式1【继承Thread类-重点】"></a>10.1.1 方式1【继承Thread类-重点】</h4><p>步骤：</p>
<ul>
<li>  <code>继承Thread类</code>【java.lang.Thread类】形成子类。</li>
<li>  override <code>重写 </code>Thread类的 <code>run 方法</code>【线程要干什么】。</li>
<li>  main中 <code>new 1个 线程对象</code>。</li>
<li>  <code>线程对象.start( ) </code>【启动线程】，JVM会自动调用 run( )来执行任务。</li>
<li>  最终：main线程 和 新的线程 并发执行。</li>
</ul>
<p><strong>注意：</strong></p>
<ul>
<li>  多次重复启动1个 线程是非法的。【尤其是在 该线程已经 执行完毕后】</li>
<li>  java 是执行线程是<code> 抢占式</code>，线程的<code>优先级越高</code>，越<code>优先执行</code>。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> ThreadsDemo;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 继承Thread类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 重写 run()方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;多线程执行-&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. main 函数中 new 线程对象，调用 start()</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Thread th1 = <span class="keyword">new</span> TestThread();</span><br><span class="line"></span><br><span class="line">        th1.start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">1000</span> ; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;main线程执行~~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h5 id="案例1-多线程下载图片："><a href="#案例1-多线程下载图片：" class="headerlink" title="案例1-多线程下载图片："></a>案例1-多线程下载图片：</h5><ul>
<li><p>前提：</p>
<ul>
<li>  下载、导入jar包： commons-io.jar包 </li>
</ul>
<blockquote>
<p>  导入Jar包的步骤：</p>
<ol>
<li> 新建 lib文件夹</li>
<li> 将 jar包 托入lib文件夹</li>
<li> 打开 file -&gt; project Structure -&gt; lib -&gt; 点击 “+” -&gt; 应用</li>
</ol>
</blockquote>
<ul>
<li>导入该案例所需的工具类：<ul>
<li>   <code>import org.apache.commons.io.FileUtils;</code></li>
<li>  <code>import java.net.URL;</code>  </li>
<li>   <code>import java.io.File;</code></li>
<li>  <code>import java.io.IOException;</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	1. 类： </span></span><br><span class="line"><span class="comment">			WebDownLoader类，TestThread2类</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*	</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 下载器类</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">WebDownLoader</span></span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">(String url,String name)</span></span>&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    FileUtils.copyURLToFile(<span class="keyword">new</span> URL(url),<span class="keyword">new</span> File(name));</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                    System.out.println(<span class="string">&quot;IO异常-在 download 方法中&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 多线程-下载图片</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread2</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String url;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">TestThread2</span><span class="params">(String url, String name)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.url = url;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重写线程类的 run方法        </span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            WebDownLoader wd = <span class="keyword">new</span> WebDownLoader();</span><br><span class="line">            wd.download(<span class="keyword">this</span>.url,<span class="keyword">this</span>.name);</span><br><span class="line">            System.out.println(<span class="string">&quot;下载的文件名为：&quot;</span>+<span class="keyword">this</span>.name);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// main方法</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">            </span><br><span class="line">            String base_url=<span class="string">&quot;https://t7.baidu.com/it/u=&quot;</span>;</span><br><span class="line">            </span><br><span class="line">            TestThread2 downTh1 = <span class="keyword">new</span> TestThread2(base_url+<span class="string">&quot;1595072465,3644073269&amp;fm=193&amp;f=GIF&quot;</span>,<span class="string">&quot;图片-1.jpg&quot;</span>);</span><br><span class="line">            TestThread2 downTh2 = <span class="keyword">new</span> TestThread2(base_url+<span class="string">&quot;825057118,3516313570&amp;fm=193&amp;f=GIF&quot;</span>,<span class="string">&quot;图片-2.jpg&quot;</span>);</span><br><span class="line">            TestThread2 downTh3 = <span class="keyword">new</span> TestThread2(base_url+<span class="string">&quot;3435942975,1552946865&amp;fm=193&amp;f=GIF&quot;</span>,<span class="string">&quot;图片-3.jpg&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 开启多线程，进行下载            </span></span><br><span class="line">            downTh1.start();</span><br><span class="line">            downTh2.start();</span><br><span class="line">            downTh3.start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>











<h4 id="10-1-2-方式2【实现Runnable接口-重点-推荐】"><a href="#10-1-2-方式2【实现Runnable接口-重点-推荐】" class="headerlink" title="10.1.2 方式2【实现Runnable接口-重点-推荐】"></a>10.1.2 方式2【实现Runnable接口-重点-推荐】</h4><p><code>推荐使用</code></p>
<p>步骤：</p>
<ul>
<li>  实现Runnable接口，重写run( )方法</li>
<li>  在main方法中，new 1个 实现类【<code>实现类 就是多线程要抢的 资源</code>】</li>
<li>  将 实现类的对象 作为参数，传入 new Thread( ) 构造方法中</li>
<li>  线程类.start( )来自动执行run( )</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> ThreadsDemo;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重写 实现类的 run方法</span></span><br><span class="line">   	 <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread3</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;我是多线程&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// main函数</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">              <span class="comment">// 创建实现类的对象</span></span><br><span class="line">                TestThread3 tt3 = <span class="keyword">new</span> TestThread3();</span><br><span class="line">              <span class="comment">// 将实现类的对象 传入 Thread类的构造方法中</span></span><br><span class="line">                Thread th1 = <span class="keyword">new</span> Thread(tt3);</span><br><span class="line"></span><br><span class="line">              <span class="comment">// 开启线程  </span></span><br><span class="line">                th1.start();</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="案例2-下载图片"><a href="#案例2-下载图片" class="headerlink" title="案例2-下载图片"></a>案例2-下载图片</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> ThreadsDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下载器</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">WebDownLoader2</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">(String url,String name)</span></span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                FileUtils.copyURLToFile(<span class="keyword">new</span> URL(url),<span class="keyword">new</span> File(name));</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                System.out.println(<span class="string">&quot;download方法-&gt; IO异常&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多线程</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread4</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String url;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">TestThread4</span><span class="params">(String url, String name)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.url = url;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            WebDownLoader2 wd2 = <span class="keyword">new</span> WebDownLoader2();</span><br><span class="line">            wd2.download(<span class="keyword">this</span>.url,<span class="keyword">this</span>.name);</span><br><span class="line">            System.out.println(<span class="string">&quot;当前正在下载：&quot;</span>+<span class="keyword">this</span>.name);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            String url_1 = <span class="string">&quot;https://t7.baidu.com/it/u=3779234486,1094031034&amp;fm=193&amp;f=GIF&quot;</span>;</span><br><span class="line">            String url_2 = <span class="string">&quot;https://t7.baidu.com/it/u=3908717,2002330211&amp;fm=193&amp;f=GIF&quot;</span>;</span><br><span class="line">            String url_3 =<span class="string">&quot;https://t7.baidu.com/it/u=3785402047,1898752523&amp;fm=193&amp;f=GIF&quot;</span>;</span><br><span class="line"></span><br><span class="line">            TestThread4 tt1 = <span class="keyword">new</span> TestThread4(url_1,<span class="string">&quot;1.jpg&quot;</span>);</span><br><span class="line">            TestThread4 tt2 = <span class="keyword">new</span> TestThread4(url_2,<span class="string">&quot;2.jpg&quot;</span>);</span><br><span class="line">            TestThread4 tt3 = <span class="keyword">new</span> TestThread4(url_3,<span class="string">&quot;3.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">new</span> Thread(tt1).start();</span><br><span class="line">            <span class="keyword">new</span> Thread(tt2).start();</span><br><span class="line">            <span class="keyword">new</span> Thread(tt3).start();</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h5 id="案例3-模拟抢票："><a href="#案例3-模拟抢票：" class="headerlink" title="案例3-模拟抢票："></a>案例3-模拟抢票：</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> ThreadsDemo;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多线程操作同一对象时，出现线程不安全，数据紊乱【重复 抢到 同一张票】</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 票-类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread5</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> ticketNum=<span class="number">10</span>;</span><br><span class="line"><span class="comment">// 重写run方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ticketNum&lt;=<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">&quot; =&gt; 拿到了第&quot;</span>+(ticketNum--)+<span class="string">&quot;张票&quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">200</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// main方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThread5 t1 = <span class="keyword">new</span> TestThread5();</span><br><span class="line">        TestThread5 t2 = <span class="keyword">new</span> TestThread5();</span><br><span class="line">        TestThread5 t3 = <span class="keyword">new</span> TestThread5();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(t1,<span class="string">&quot;小虹&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(t2,<span class="string">&quot;小白&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(t3,<span class="string">&quot;小黄&quot;</span>).start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="案例4-龟兔赛跑："><a href="#案例4-龟兔赛跑：" class="headerlink" title="案例4-龟兔赛跑："></a>案例4-龟兔赛跑：</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> ThreadsDemo;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多线程案例：龟兔赛跑</span></span><br><span class="line"><span class="comment">// &quot;实现类&quot; =》跑道 =》资源</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RaceDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Race race = <span class="keyword">new</span> Race();</span><br><span class="line">        <span class="keyword">new</span> Thread(race,<span class="string">&quot;兔子&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(race,<span class="string">&quot;乌龟&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Race</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String winner;</span><br><span class="line"><span class="comment">// 重写run方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=<span class="number">100</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(Thread.currentThread().getName().equals(<span class="string">&quot;兔子&quot;</span>) &amp;&amp; i%<span class="number">10</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">boolean</span> flag = isFinished(i);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(flag)<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">&quot;-&gt; 跑了&quot;</span>+i+<span class="string">&quot;步&quot;</span>);</span><br><span class="line"></span><br><span class="line">            isFinished(i);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 判断是否完成</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFinished</span><span class="params">(<span class="keyword">int</span> steps)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(winner != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(steps &gt;= <span class="number">100</span>)&#123;</span><br><span class="line">                winner = Thread.currentThread().getName();</span><br><span class="line">                System.out.println(<span class="string">&quot;胜利者：&quot;</span>+winner);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h4 id="10-1-3-方式3【实现Callable接口-了解】"><a href="#10-1-3-方式3【实现Callable接口-了解】" class="headerlink" title="10.1.3 方式3【实现Callable接口-了解】"></a>10.1.3 方式3【实现Callable接口-了解】</h4><p>好处：</p>
<blockquote>
<ul>
<li><p>  可以 <code>抛出异常</code></p>
</li>
<li><p>  可以 有<code>返回值</code></p>
</li>
</ul>
</blockquote>
<p>步骤：</p>
<ul>
<li>  实现 Callcable接口</li>
<li>  重写 call( )方法</li>
<li>  创建目标对象：</li>
<li>  创建执行服务：<code>  ExecutorService es = Executors.newFixedThreadPool(2);</code></li>
<li>  提交执行：  <code>Future&lt;Boolean&gt; res1 = es.submit(tc1);</code></li>
<li>  获取结果：<code> boolean r1 = res1.get();</code></li>
<li>  关闭服务：<code>  es.shutdownNow();</code></li>
</ul>
<h5 id="案例5：下载图片"><a href="#案例5：下载图片" class="headerlink" title="案例5：下载图片"></a>案例5：下载图片</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> ThreadsDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下载器类</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">webImageDownLoader</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">(String url,String name)</span></span>&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    FileUtils.copyURLToFile(<span class="keyword">new</span> URL(url),<span class="keyword">new</span> File(name));</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;下载的文件名为 &quot;</span>+name);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCallable</span> <span class="keyword">implements</span> <span class="title">Callable</span> </span>&#123;</span><br><span class="line">            <span class="keyword">private</span> String url;</span><br><span class="line">            <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="title">TestCallable</span><span class="params">(String url, String name)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.url = url;</span><br><span class="line">                <span class="keyword">this</span>.name = name;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">// 重写call()</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Boolean <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">                webImageDownLoader wid = <span class="keyword">new</span> webImageDownLoader();</span><br><span class="line">                wid.download(<span class="keyword">this</span>.url,<span class="keyword">this</span>.name);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// main函数</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">                TestCallable tc1 = <span class="keyword">new</span> TestCallable(<span class="string">&quot;https://t7.baidu.com/it/u=1595072465,3644073269&amp;fm=193&amp;f=GIF&quot;</span>,<span class="string">&quot;图片-1.jpg&quot;</span>);</span><br><span class="line">                TestCallable tc2 = <span class="keyword">new</span> TestCallable(<span class="string">&quot;https://t7.baidu.com/it/u=825057118,3516313570&amp;fm=193&amp;f=GIF&quot;</span>,<span class="string">&quot;图片-2.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 创建执行服务</span></span><br><span class="line">                ExecutorService es = Executors.newFixedThreadPool(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 提交执行操作</span></span><br><span class="line">                Future&lt;Boolean&gt; res1 = es.submit(tc1);</span><br><span class="line">                Future&lt;Boolean&gt; res2 = es.submit(tc2);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 获取执行结果</span></span><br><span class="line">                    <span class="keyword">boolean</span> r1 = res1.get();</span><br><span class="line">                    <span class="keyword">boolean</span> r2 = res1.get();</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 关闭执行服务</span></span><br><span class="line">                es.shutdownNow();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="10-2-静态代理"><a href="#10-2-静态代理" class="headerlink" title="10.2 静态代理"></a>10.2 静态代理</h3><p>多线程的原理 就利用了 静态代理。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	静态代理：</span></span><br><span class="line"><span class="comment">*		1.真实对象、代理对象，都要实现 同一个方法</span></span><br><span class="line"><span class="comment">*		2. 好处：代理对象可以做很多招生对象做不了的事。</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticProxy</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        WeddingCompany weddingCompany = <span class="keyword">new</span> WeddingCompany(<span class="keyword">new</span> You());</span><br><span class="line">        weddingCompany.HappyMarry();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Marry</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">HappyMarry</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结婚者【代理对象】</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">You</span> <span class="keyword">implements</span> <span class="title">Marry</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HappyMarry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我结婚了，你哼开心~~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 婚庆公司【真实对象】</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeddingCompany</span> <span class="keyword">implements</span> <span class="title">Marry</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Marry target;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WeddingCompany</span><span class="params">(Marry target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;布置&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;收钱&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 重写接口的方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HappyMarry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.before();</span><br><span class="line">        <span class="keyword">this</span>.target.HappyMarry();</span><br><span class="line">        <span class="keyword">this</span>.after();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="10-3-Lambda-表达式："><a href="#10-3-Lambda-表达式：" class="headerlink" title="10.3 Lambda 表达式："></a>10.3 Lambda 表达式：</h3><p>Lambda表达式，，是函数式编程，它可以作为<strong>匿名内部类</strong>的替代品。</p>
<p>函数式接口：</p>
<blockquote>
<p>  一个接口，如果<code>只有1个抽象方法</code>，则为 <code>函数式接口</code> 。【接口只有1个方法】</p>
</blockquote>
<p>类似：<code>        new Thread( ()-&gt; System.out.println(&quot;多线程的学习&quot;)).start();</code></p>
<p>格式：【函数式接口 =》需要保证：接口中只有1个抽象方法】</p>
<ul>
<li>  <code>(参数)-&gt; &#123;表达式1;表达式2;&#125;;</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">myInt</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Eat</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//...其他内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>步骤：</p>
<blockquote>
<ul>
<li>  定义1个只有1个方法的接口</li>
<li>  使用lambda实现方法并创建对象</li>
<li>  调用方法</li>
</ul>
</blockquote>
<p>函数式接口 =》作为方法的<code>参数 和 返回值类型</code>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(myInt a)</span></span>&#123;</span><br><span class="line">        a.Eat();</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">       <span class="comment">// 方式1：传入接口的实现类  </span></span><br><span class="line">          <span class="keyword">this</span>.show(<span class="keyword">new</span> myIntImpCls());</span><br><span class="line">         </span><br><span class="line">       <span class="comment">// 方式2：传入接口  </span></span><br><span class="line">         <span class="keyword">this</span>.show(<span class="keyword">new</span> myIntInmp()&#123;</span><br><span class="line">             <span class="comment">// 重写接口的方法</span></span><br><span class="line">         &#125;);</span><br><span class="line">         </span><br><span class="line">      <span class="comment">// 方式3：传入Lambda </span></span><br><span class="line">         <span class="keyword">this</span>.show(()-&gt;&#123;System.out.println(<span class="string">&quot;你好&quot;</span>);&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h5 id="案例6："><a href="#案例6：" class="headerlink" title="案例6："></a>案例6：</h5><ul>
<li>  优化前</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">Ilike</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span></span>; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Like</span> <span class="keyword">implements</span> <span class="title">Ilike</span></span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我喜欢lambda &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 优化前        </span></span><br><span class="line">       Ilike a = <span class="keyword">new</span> Like();</span><br><span class="line">       a.lambda();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<ul>
<li>  优化后</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Ilike</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span></span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Like</span> <span class="keyword">implements</span> <span class="title">Ilike</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我喜欢lambda &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123; </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 普通 </span></span><br><span class="line">           Ilike a = <span class="keyword">new</span> Like();</span><br><span class="line">           a.lambda();</span><br><span class="line">       </span><br><span class="line"><span class="comment">//静态内部类</span></span><br><span class="line">           Like2 b = <span class="keyword">new</span> Like2();</span><br><span class="line">           b.lambda();</span><br><span class="line"></span><br><span class="line"><span class="comment">//局部内部类</span></span><br><span class="line">            <span class="class"><span class="keyword">class</span> <span class="title">Like3</span> <span class="keyword">implements</span> <span class="title">Ilike</span></span>&#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;我喜欢lambda &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;       </span><br><span class="line">            Like3 c = <span class="keyword">new</span> Like3();</span><br><span class="line">            c.lambda();</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 匿名内部类</span></span><br><span class="line">            Ilike d = <span class="keyword">new</span> Ilike() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;        </span><br><span class="line">            d.lambda();</span><br><span class="line">        </span><br><span class="line"><span class="comment">// lambda</span></span><br><span class="line">            Ilike e = ( )-&gt;&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;I like lambda&quot;</span>);</span><br><span class="line">            &#125;;</span><br><span class="line">            e.lambda();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h5 id="lambda表达式的简化："><a href="#lambda表达式的简化：" class="headerlink" title="lambda表达式的简化："></a>lambda表达式的简化：</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> LandaDemo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Ilike</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">lambda</span><span class="params">(<span class="keyword">int</span> i)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 普通 lambda</span></span><br><span class="line">       Ilike a = (<span class="keyword">int</span> i)-&gt;&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;lambda: &quot;</span>+i);</span><br><span class="line">           System.out.println(<span class="string">&quot;lambda: &quot;</span>+i);</span><br><span class="line">       &#125;;</span><br><span class="line"></span><br><span class="line">       a.lambda(<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 简化参数 lambda</span></span><br><span class="line">        Ilike b = (i)-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;lambda: &quot;</span>+i);</span><br><span class="line">            System.out.println(<span class="string">&quot;lambda: &quot;</span>+i);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        b.lambda(<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 简化括号 lambda【多个参数必须有小括号】</span></span><br><span class="line">        Ilike c = i-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;lambda: &quot;</span>+i);</span><br><span class="line">            System.out.println(<span class="string">&quot;lambda: &quot;</span>+i);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        c.lambda(<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 简化括号 lambda【只适合一行代码的情况下使用】</span></span><br><span class="line">        Ilike d = i-&gt;System.out.println(<span class="string">&quot;lambda: &quot;</span>+i);</span><br><span class="line"></span><br><span class="line">        d.lambda(<span class="number">123</span>);</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>















<h3 id="10-4-线程的生命周期："><a href="#10-4-线程的生命周期：" class="headerlink" title="10.4 线程的生命周期："></a>10.4 线程的生命周期：</h3><p><code>java.lang.Thread.State</code></p>
<ul>
<li>  新生：new Thread( )</li>
<li>  就绪：线程调用 start( ) 后进入 该状态。【还没 轮到 该线程 使用cpu】</li>
<li>  运行：线程自动调用run(  )后进入 该状态</li>
<li>  阻塞：等待</li>
<li>  消亡：程序正常结束、出现异常、手动 调用已被废弃不用的stop( )</li>
</ul>
<p><img src="https://www.runoob.com/wp-content/uploads/2014/01/java-thread.jpg"></p>
<p><img src="https://z3.ax1x.com/2021/05/24/gvPy6S.png" alt="多线程-状态"></p>
<h4 id="10-4-1-线程常用方法："><a href="#10-4-1-线程常用方法：" class="headerlink" title="10.4.1 线程常用方法："></a>10.4.1 线程常用方法：</h4><blockquote>
<ul>
<li>  start( )：开启线程，自动调用线程中的 run( )</li>
<li>  run( )：继承自Runnable接口的方法，必须在线程中 覆盖重写。</li>
<li>  join( )：先start( )，再join( )。一旦 join( )，优先执行完后，才轮到别的线程执行。 【插队、阻塞】</li>
<li>  currentThread( )：获取当前正在运行的线程。</li>
<li>  getName( )：获取线程名</li>
<li>  setName( 线程名 )：设置线程名</li>
<li>  setPriority( 优先级 )：设置线程的 优先级，传入1~10，默认5。值越大，越可能被调用。</li>
<li>  sleep(  毫秒数 )：阻塞</li>
<li>  setDaemon( true )：将子线程 设置为 主线程的伴随线程。主线程停止时，子线程继续执行一段时间后也停止。【先设置，再start( )】</li>
<li>  wait(毫秒数 )：阻塞，【老板等顾客】，毫秒数过后仍然没有线程调用锁对象的notify( )，则自动唤醒。</li>
<li>  notify( )：唤醒，【包子做好给顾客】</li>
</ul>
</blockquote>
<p>几个方法的使用顺序：</p>
<blockquote>
<ul>
<li>  setDaemon( true )</li>
<li>  start( )</li>
<li>  join( )</li>
</ul>
</blockquote>
<h4 id="10-4-2-线程优先级："><a href="#10-4-2-线程优先级：" class="headerlink" title="10.4.2 线程优先级："></a>10.4.2 线程优先级：</h4><blockquote>
<ul>
<li>  优先级：1~10，默认优先级为 5</li>
<li>  优先级 相同时，按时间片，先到先得</li>
<li>  优先级越高，线程 被CPU先调用 的机率更高</li>
<li>  join( )可以无视优先级，直接插队【先start( )，再join( )】</li>
</ul>
</blockquote>
<h3 id="10-5-线程的同步："><a href="#10-5-线程的同步：" class="headerlink" title="10.5 线程的同步："></a>10.5 线程的同步：</h3><ul>
<li>  多线程 产生的问题：</li>
</ul>
<blockquote>
<p>  多个线程抢夺到同一个资源</p>
<p>  如：买票时，买到同一张票。</p>
</blockquote>
<ul>
<li>  解决多线程安全问题：</li>
</ul>
<blockquote>
<p>  加 “锁”【同步、同步监视器】</p>
</blockquote>
<p>三种方式：</p>
<h4 id="10-5-1-同步代码块"><a href="#10-5-1-同步代码块" class="headerlink" title="10.5.1 同步代码块"></a>10.5.1 同步代码块</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 线程类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">10</span> ; i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 同步代码块-形式1           </span></span><br><span class="line">            <span class="keyword">synchronized</span> (<span class="keyword">this</span>)&#123;	</span><br><span class="line">                <span class="comment">// 这里的this就是要锁住的对象，锁 多了会降低效率。</span></span><br><span class="line">                <span class="comment">// 如果是实现Runnable接口的线程，由于只需new一个线程对象，并将该对象传入多个Thread(),</span></span><br><span class="line">                <span class="comment">// 		因此,锁住的是同一个对象。</span></span><br><span class="line">                <span class="comment">// 但如果是继承Thread类的多线程，由于new了多个线程对象，因此锁住的不是同一个对象，</span></span><br><span class="line">                <span class="comment">// 		因此,锁没有真的生效。</span></span><br><span class="line">                <span class="comment">// 综上，锁对象 必须要是同一个对象。</span></span><br><span class="line">                System.out.println(Thread.currentThread().getName());</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line"><span class="comment">// 同步代码块-形式2 </span></span><br><span class="line">            <span class="keyword">static</span> Object obj = <span class="keyword">new</span> Object();</span><br><span class="line">            </span><br><span class="line">             <span class="keyword">synchronized</span> (obj)&#123;              </span><br><span class="line">                System.out.println(Thread.currentThread().getName());</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line"><span class="comment">// 同步代码块-形式3 【推荐】</span></span><br><span class="line">           <span class="comment">// 将 线程类的字节码 作为 锁对象。</span></span><br><span class="line">             <span class="keyword">synchronized</span> (TestThread.class)&#123;              </span><br><span class="line">                System.out.println(Thread.currentThread().getName());</span><br><span class="line">            &#125;            </span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>小结：</p>
<blockquote>
<ul>
<li>  语法：<code>synchronized( 锁对象)&#123; 语句 &#125;</code></li>
<li>  锁对象【同步监视器】 必须是 <code>引用类型</code>，且最好使用<code>final 修饰</code>。</li>
<li>  不要 将String、包装类Interger 作为锁</li>
<li>  在同步代码块中，<code>不应该 改变锁对象</code>的引用。</li>
<li>  可以使用一个<code>static类型的无确切的含义的对象</code>来充当 <code>锁对象</code>【同步监视器】</li>
</ul>
</blockquote>
<p>执行过程：</p>
<blockquote>
<ul>
<li>  线程A来到同步代码块，发现“ 锁”处于open状态，于是进入，并close“锁”</li>
<li>  线程B来到同步代码块，CPU资源切换到线程B，但B发现 “锁” close，于是阻塞。</li>
<li>线程A 继续接管CPU资源，执行同步代码块的内容，执行完毕后，open“锁”</li>
</ul>
<p>  <strong>小结：</strong></p>
<ul>
<li>  同步代码块中，可以切换CPU资源，但不能执行同步代码块的内容，因为“锁”，仍处于close状态。</li>
</ul>
</blockquote>
<h4 id="10-5-2-同步方法"><a href="#10-5-2-同步方法" class="headerlink" title="10.5.2 同步方法"></a>10.5.2 同步方法</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 同步方法  </span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">sayWhoAmI</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        System.out.println(Thread.currentThread().getName());</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">10</span> ; i++) &#123;</span><br><span class="line"><span class="comment">// 调用            </span></span><br><span class="line">            sayWhoAmI();</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h4 id="10-5-3-Lock锁"><a href="#10-5-3-Lock锁" class="headerlink" title="10.5.3 Lock锁"></a>10.5.3 Lock锁</h4><p><code>import java.util.concurrent.locks.Lock;</code></p>
<ul>
<li>  在类的成员位置：Lock lock1 = new ReentrantLock( )</li>
<li>  在线程问题的语句前【try-catch内】：lock1.lock( )</li>
<li>  语句块</li>
<li>  在线程问题的语句后【finally语句块中】：lock1.unlock( )</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 锁对象    </span></span><br><span class="line">    Lock lock1 = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">10</span> ; i++) &#123;</span><br><span class="line"><span class="comment">// 加锁</span></span><br><span class="line">            lock1.lock();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 处理                </span></span><br><span class="line">                System.out.println(Thread.currentThread().getName());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">finally</span> &#123;   </span><br><span class="line"><span class="comment">// 解锁                </span></span><br><span class="line">                lock1.unlock();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>小结：</p>
<blockquote>
<p>  Lock的优点：</p>
<ul>
<li>  Lock效率更高</li>
<li>  可由用户控制，而之前的synchronzied由JVM控制</li>
<li>  扩展性好，Lock是一个接口，有多个实现类</li>
</ul>
<p>  使用优先级：</p>
<ul>
<li>  Lock【推荐】 -&gt; 同步代码块 -&gt; 同步方法</li>
</ul>
</blockquote>
<p>线程安全性问题：</p>
<blockquote>
<p>  可能导致<code>死锁</code> =》 <code>尽可能不</code>使用 同步资源的<code>嵌套</code></p>
</blockquote>
<h3 id="10-6-线程通信问题："><a href="#10-6-线程通信问题：" class="headerlink" title="10.6 线程通信问题："></a>10.6 线程通信问题：</h3><h4 id="10-6-1生产者与消费者问题"><a href="#10-6-1生产者与消费者问题" class="headerlink" title="10.6.1生产者与消费者问题"></a>10.6.1生产者与消费者问题</h4><p>经典问题：</p>
<ul>
<li>  <a href="https://www.bilibili.com/video/BV1op4y1S7KK?from=search&seid=13986664181595566652">生产者与消费者问题-视频1：</a></li>
<li>  <a href="https://www.bilibili.com/video/BV1Lb411z71t/?spm_id_from=trigger_reload">生产者与消费者问题-视频2</a></li>
</ul>
<blockquote>
<p>  生产者：生产商品，放入仓库</p>
<p>  消费者：消费商品，取出仓库 </p>
<p>  以上两个线程共享资源【仓库】，但每个线程 执行的操作不同，需要线程之间的通信，来同步仓库中的商品数。</p>
</blockquote>
<p>代码分析：</p>
<ul>
<li>  生产者：</li>
<li>  消费者：</li>
<li>  商品：品牌、名字</li>
</ul>
<p><img src="https://z3.ax1x.com/2021/05/24/gx9XeH.png" alt="多线程-生产者和消费者"></p>
<h4 id="10-6-2-解决线程通信问题："><a href="#10-6-2-解决线程通信问题：" class="headerlink" title="10.6.2 解决线程通信问题："></a>10.6.2 解决线程通信问题：</h4><p>例子：</p>
<blockquote>
<p>  生产者：包子铺老板。</p>
<p>  消费者：顾客</p>
<p>  顾客：告诉老板 购买的包子数，顾客调用<code>wait( )</code>，放弃CPU执行，进入<code>waiting无限等待</code>状态</p>
<p>  老板：花5s做包子，调用<code>notify( )</code>，告知唤醒 顾客来拿包子。</p>
<p>  <strong>注意：</strong></p>
<ul>
<li>  老板、顾客都要使用 <code>同步代码块</code> 包裹。</li>
<li>  同步代码块的<code>锁对象</code>必须<code>唯一</code>。</li>
<li>  只有<code>锁对象</code>才能调用<code> wait( )</code>，和<code>notify( )</code>。</li>
</ul>
</blockquote>
<p>综上：</p>
<ul>
<li>  吃、做包子【包子和包子铺互斥，因此包子为 锁对象】</li>
<li>  修改标志</li>
<li>  唤醒对方</li>
</ul>
<ul>
<li>  同步代码块</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	分别在生产者类、消费者类中使用同步代码块</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            Product p = <span class="keyword">new</span> Product();</span><br><span class="line"></span><br><span class="line">            ProcuderThread pt = <span class="keyword">new</span> ProcuderThread(p);</span><br><span class="line"></span><br><span class="line">            ClientThread ct =<span class="keyword">new</span> ClientThread(p);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">new</span> Thread(pt).start();</span><br><span class="line">            <span class="keyword">new</span> Thread(ct).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 产品</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Product</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String brand;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getBrand</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> brand;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBrand</span><span class="params">(String brand)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.brand = brand;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Product</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Product</span><span class="params">(String brand, String name)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.brand = brand;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生产者</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ProcuderThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Product p;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ProcuderThread</span><span class="params">(Product p)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.p = p;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=<span class="number">10</span> ; i++) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">synchronized</span> (p)&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                        <span class="comment">// 生产巧克力</span></span><br><span class="line">                        <span class="keyword">this</span>.p.setBrand(<span class="string">&quot;德芙&quot;</span>);</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">this</span>.p.setName(<span class="string">&quot;巧克力&quot;</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="comment">// 生产啤酒</span></span><br><span class="line">                        <span class="keyword">this</span>.p.setBrand(<span class="string">&quot;青岛&quot;</span>);</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">this</span>.p.setName(<span class="string">&quot;啤酒&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    System.out.println(<span class="string">&quot;生产者生产了：&quot;</span>+<span class="keyword">this</span>.p.getBrand()+<span class="string">&quot;---&gt;&quot;</span></span><br><span class="line">                            +<span class="keyword">this</span>.p.getName());</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//消费者</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ClientThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Product p;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ClientThread</span><span class="params">(Product p)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.p = p;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">1</span>; i &lt;=<span class="number">10</span> ; i++) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">synchronized</span> (p)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;消费者消费了：&quot;</span>+<span class="keyword">this</span>.p.getBrand()+<span class="string">&quot;---&gt;&quot;</span></span><br><span class="line">                            +<span class="keyword">this</span>.p.getName());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>





<ul>
<li>  同步方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	在产品类中使用同步代码块</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Product p = <span class="keyword">new</span> Product();</span><br><span class="line"></span><br><span class="line">        ProcuderThread pt = <span class="keyword">new</span> ProcuderThread(p);</span><br><span class="line"></span><br><span class="line">        ClientThread ct =<span class="keyword">new</span> ClientThread(p);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(pt).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(ct).start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 产品</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Product</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String brand;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getBrand</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> brand;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBrand</span><span class="params">(String brand)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.brand = brand;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Product</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Product</span><span class="params">(String brand, String name)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.brand = brand;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line"></span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">setProduct</span><span class="params">(String brand, String name)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.setBrand(brand);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.setName(name);</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;生产者生产了：&quot;</span>+<span class="keyword">this</span>.getBrand()+<span class="string">&quot;---&gt;&quot;</span></span><br><span class="line">                    +<span class="keyword">this</span>.getName());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">getProduct</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;消费者消费了：&quot;</span>+<span class="keyword">this</span>.getBrand()+<span class="string">&quot;---&gt;&quot;</span></span><br><span class="line">                    +<span class="keyword">this</span>.getName());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 生产者</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ProcuderThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Product p;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ProcuderThread</span><span class="params">(Product p)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.p = p;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=<span class="number">10</span> ; i++) &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                        p.setProduct(<span class="string">&quot;德芙&quot;</span>,<span class="string">&quot;巧克力&quot;</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        p.setProduct(<span class="string">&quot;青岛&quot;</span>,<span class="string">&quot;啤酒&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    System.out.println(<span class="string">&quot;生产者生产了：&quot;</span>+<span class="keyword">this</span>.p.getBrand()+<span class="string">&quot;---&gt;&quot;</span></span><br><span class="line">                            +<span class="keyword">this</span>.p.getName());</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 消费者</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ClientThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Product p;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ClientThread</span><span class="params">(Product p)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.p = p;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">1</span>; i &lt;=<span class="number">10</span> ; i++) &#123;</span><br><span class="line"></span><br><span class="line">                p.getProduct();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<ul>
<li>  Lock锁</li>
</ul>
<h3 id="10-7-线程池："><a href="#10-7-线程池：" class="headerlink" title="10.7 线程池："></a>10.7 线程池：</h3><blockquote>
<ul>
<li>  第一次使用时，创建多个线程，存入集合中【集合中的线程可以复用】</li>
<li>  使用时，取出线程</li>
<li>  用完后，重写存入线程池</li>
</ul>
<p>  JDK1.5 之后，自带线程池，无需 用户 自己使用 集合 创建线程池。</p>
<ul>
<li>  <code>java.util.concurrent.Executors;</code> =》生产 线程池 的工厂类</li>
<li>  <code>ExecutorService newFixedThreadPool( 线程数 );</code> 生成线程池的方法</li>
<li>  <code>submit( 线程);</code></li>
<li>  <code>shudown();</code></li>
</ul>
<p>  线程池的好处：</p>
<ul>
<li>  提高速度</li>
<li>  降低消耗</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> ThreadPoolDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 线程类</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;这是:&quot;</span>+Thread.currentThread().getName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 1个可存放3个线程 的线程池</span></span><br><span class="line">            ExecutorService service = Executors.newFixedThreadPool(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建2个线程，并提交给 线程池</span></span><br><span class="line">            service.submit(<span class="keyword">new</span> TestThread());</span><br><span class="line">            service.submit(<span class="keyword">new</span> TestThread());</span><br><span class="line"></span><br><span class="line">            service.shutdownNow();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

















<h2 id="11-网络编程"><a href="#11-网络编程" class="headerlink" title="11. 网络编程"></a>11. 网络编程</h2><p>整体过程：</p>
<ul>
<li>  服务器：启动，监听端口</li>
<li>  客户端：主动连接 服务器</li>
</ul>
<p>Java中专门用于TCP通信的类：</p>
<ul>
<li>  客户端：<code>java.net.Socket</code> ，创建对象，发起连接</li>
<li>  服务器：<code>java.net.ServerSocket</code>，创建对象，开启服务</li>
</ul>
<p>在TCP通信中，传输了<code>字节流对象</code>, 该流对象是<code>属于客户端</code>的流，服务器共用客户端的流。</p>
<p>Socket：</p>
<blockquote>
<p>  套接字，是 包含了 IP地址+端口号的网络单位。</p>
</blockquote>
<p>Socket的常用方法：</p>
<blockquote>
<p>  构造方法：</p>
<ul>
<li>  客户端：<code>public Socket(String host目标主机, int port目标端口);</code></li>
<li>  服务器：<code>public ServerSocket(int port);</code></li>
</ul>
<p>  客户端-成员方法：</p>
<ul>
<li>  <code>getInputStream();</code>  // 获取输入流</li>
<li>  <code>getOutputStream();</code> // 获取输出流</li>
<li>  <code>close()</code>  // 关闭套接字</li>
</ul>
<p>  服务器-成员方法：</p>
<ul>
<li>  <code>accept()</code> // 获取客户端的Socket</li>
<li>  <code>getInputStream();</code> // 获取输入流</li>
<li>  <code>getOutputStream();</code> // 获取输出流</li>
<li>  <code>close()</code>  // 关闭套接字</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	步骤：【客户端】</span></span><br><span class="line"><span class="comment">*		1. 创建客户端Scocket，构造方法中传入IP、端口</span></span><br><span class="line"><span class="comment">*		2. 获取客户端的输出流 getOutputStream()</span></span><br><span class="line"><span class="comment">*		3. 输出流的 write()来向服务器发送数据</span></span><br><span class="line"><span class="comment">*		4. 获取客户端的输入流 getInputStream()</span></span><br><span class="line"><span class="comment">*		5. 输入流的 read()来读取数据</span></span><br><span class="line"><span class="comment">*		6. 释放资源 close()</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*	步骤：【服务器】</span></span><br><span class="line"><span class="comment">*		1. 创建服务器Scocket对象，构造方法中传入端口</span></span><br><span class="line"><span class="comment">*		2. accept()获取客户端的Socket,</span></span><br><span class="line"><span class="comment">*		3. socket.getInputStream() 来获取输入流  =》 read()</span></span><br><span class="line"><span class="comment">*		4. socket.getOutputStream() 来获取输出流 =》 write()</span></span><br><span class="line"><span class="comment">*		6. 释放资源【客户端的Socket、服务器的Socket】 close()</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*  注意：</span></span><br><span class="line"><span class="comment">*		1. 网络通信，必须使用Socket提供的流对象，不能使用自己创建的流。</span></span><br><span class="line"><span class="comment">*		2. Socket创建时，会向服务器发起请求，如果服务器未开启，则出现异常，否则可以正常通信。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 服务端：=======================================</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">package</span> TCPDemo;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">import</span> java.io.IOException;</span><br><span class="line">        <span class="keyword">import</span> java.io.InputStream;</span><br><span class="line">        <span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line">        <span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line">        <span class="keyword">import</span> java.net.Socket;</span><br><span class="line">        <span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;               </span><br><span class="line">             </span><br><span class="line">                ServerSocket socketServer = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line">              </span><br><span class="line">                Socket client = socketServer.accept();</span><br><span class="line">                </span><br><span class="line">                InputStream is = client.getInputStream();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="keyword">int</span> len=is.read(buffer);</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="keyword">new</span> String(buffer,<span class="number">0</span>,len));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                OutputStream os = client.getOutputStream();</span><br><span class="line">                os.write(<span class="string">&quot;收到，谢谢&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                client.close();</span><br><span class="line">                socketServer.close();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 客户端：=======================================</span></span><br><span class="line"></span><br><span class="line">         <span class="keyword">package</span> TCPDemo;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">import</span> java.io.IOException;</span><br><span class="line">        <span class="keyword">import</span> java.io.InputStream;</span><br><span class="line">        <span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line">        <span class="keyword">import</span> java.net.Socket;</span><br><span class="line">        <span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                Socket socketClient = <span class="keyword">new</span> Socket(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="number">8888</span>);</span><br><span class="line">                </span><br><span class="line">                OutputStream o = socketClient.getOutputStream();</span><br><span class="line">                </span><br><span class="line">                o.write(<span class="string">&quot;你好，服务器&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                InputStream is = socketClient.getInputStream();</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="keyword">int</span> len=is.read(buffer);</span><br><span class="line">                System.out.println(<span class="keyword">new</span> String(buffer,<span class="number">0</span>,len));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                socketClient.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h4 id="案例1：文件上传、下载"><a href="#案例1：文件上传、下载" class="headerlink" title="案例1：文件上传、下载"></a>案例1：文件上传、下载</h4><p>步骤：</p>
<ul>
<li>  客户端：获取<code>本地上传的输入流</code>，使用<code>网络Socket输出流</code>上传文件。接收服务器的“上传成功”</li>
<li>  服务器：获取<code>网络Socket输入流</code>，使用<code>本地下载输出流</code>下载文件。给客户端发送“上传成功”。</li>
</ul>
<p>优化思路：将服务端的代码，放入Thread中，并开启多线程。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 服务端：=======================================</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> TCPDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUploadServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        ServerSocket server = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 死循环，让服务器一直监听客户端</span></span><br><span class="line">                    <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        Socket client = server.accept();</span><br><span class="line"></span><br><span class="line">                        InputStream is = client.getInputStream();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        File file = <span class="keyword">new</span> File(<span class="string">&quot;E:\\2-demo&quot;</span>);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">                            file.mkdirs();</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">int</span> len = is.read(buffer);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义文件的命名规则：域名+毫秒值+随机数</span></span><br><span class="line">                        String filename = <span class="string">&quot;\\txt-&quot;</span></span><br><span class="line">                                +System.currentTimeMillis()</span><br><span class="line">                                +<span class="keyword">new</span> Random().nextInt(<span class="number">200</span>)</span><br><span class="line">                                +<span class="string">&quot;.txt&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(file+filename);</span><br><span class="line"></span><br><span class="line">                        fos.write(buffer);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        OutputStream os = client.getOutputStream();</span><br><span class="line">                        os.write(<span class="string">&quot;上传成功&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        fos.close();</span><br><span class="line">                        client.close();</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 客户端：=======================================</span></span><br><span class="line">        <span class="keyword">package</span> TCPDemo;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line">        <span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line">        <span class="keyword">import</span> java.net.Socket;</span><br><span class="line">        <span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUploadClient</span> </span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">                FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;E:\\0-demo\\1.txt&quot;</span>);</span><br><span class="line">                </span><br><span class="line">                Socket client = <span class="keyword">new</span> Socket(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="number">8888</span>);</span><br><span class="line">                </span><br><span class="line">                OutputStream os = client.getOutputStream();</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="keyword">int</span> len;</span><br><span class="line">                </span><br><span class="line"><span class="comment">// 读取数据【可能死循环，因为读到文件结束符后，没有将结束符写入文件，因此read()阻塞，程序不结束】                </span></span><br><span class="line">                <span class="keyword">while</span>((len=fis.read(buffer))!=-<span class="number">1</span>)&#123;</span><br><span class="line">                     os.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">                &#125;</span><br><span class="line"><span class="comment">// 解决死循环问题                </span></span><br><span class="line">                client.shutdownOutput();</span><br><span class="line">                </span><br><span class="line"><span class="comment">// 打印数据【可能死循环，因为读到文件结束符后，没有将结束符写入文件，因此read()阻塞，程序不结束】                      </span></span><br><span class="line">                InputStream is = client.getInputStream();</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">while</span>((len=is.read(buffer))!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    System.out.println(<span class="keyword">new</span> String(buffer,<span class="number">0</span>,len));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                fis.close();</span><br><span class="line">                is.close();</span><br><span class="line">                os.close();</span><br><span class="line">                client.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h4 id="案例二：模拟-B-S进行通信"><a href="#案例二：模拟-B-S进行通信" class="headerlink" title="案例二：模拟 B/S进行通信"></a>案例二：模拟 B/S进行通信</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 服务端：Java</span></span><br><span class="line"><span class="comment">// 客户端：浏览器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        ServerSocket server = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">            Socket clientSocket = server.accept();</span><br><span class="line">            <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        InputStream is = clientSocket.getInputStream();</span><br><span class="line"></span><br><span class="line">                        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(is));</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// http请求的第一行</span></span><br><span class="line">                        String line = br.readLine();</span><br><span class="line">                        String[] arr = line.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                        String htmlpath = arr[<span class="number">1</span>].substring(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                        FileInputStream fis = <span class="keyword">new</span> FileInputStream(htmlpath);</span><br><span class="line">                        OutputStream os = clientSocket.getOutputStream();</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//固定写法</span></span><br><span class="line">                        os.write(<span class="string">&quot;HTTP/1.1 200 OK\r\n&quot;</span>.getBytes());</span><br><span class="line">                        os.write(<span class="string">&quot;Content-Type:text/html\r\n&quot;</span>.getBytes());</span><br><span class="line">                        os.write(<span class="string">&quot;\r\n&quot;</span>.getBytes());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 在浏览器输出页面</span></span><br><span class="line">                        <span class="keyword">byte</span>[] buff = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">while</span> ((len = fis.read(buff)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                            os.write(buff, <span class="number">0</span>, len);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        fis.close();</span><br><span class="line">                        br.close();</span><br><span class="line">                        clientSocket.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>













<h2 id="12-Junit单元测试"><a href="#12-Junit单元测试" class="headerlink" title="12. Junit单元测试"></a>12. Junit单元测试</h2><p><img src="https://z3.ax1x.com/2021/05/27/2CT5h8.png" alt="测试-分类"></p>
<p>Junit：</p>
<blockquote>
<p>  一种白盒测试工具。</p>
</blockquote>
<h4 id="12-1-Junit的使用：【-Test】"><a href="#12-1-Junit的使用：【-Test】" class="headerlink" title="12.1 Junit的使用：【@Test】"></a>12.1 Junit的使用：【@Test】</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*	步骤：</span></span><br><span class="line"><span class="comment">*		1. 定义1个测试类</span></span><br><span class="line"><span class="comment">			 建议：</span></span><br><span class="line"><span class="comment">               - 包名：xxx.xxxx.test;  =&gt; 如： cn.itcast.test;</span></span><br><span class="line"><span class="comment">			   - 类名：测试类的类名以被测试类的名字+Test组成：类名Test =》 如：CalcTest</span></span><br><span class="line"><span class="comment">		</span></span><br><span class="line"><span class="comment">		2. 定义1个测试方法：=》如：void testAdd()</span></span><br><span class="line"><span class="comment">        	 建议：</span></span><br><span class="line"><span class="comment">        	 	- 方法名： 以test开头</span></span><br><span class="line"><span class="comment">        	 	- 方法返回值： void</span></span><br><span class="line"><span class="comment">        	 	- 参数：无需参数</span></span><br><span class="line"><span class="comment">		3. 在方法定义位置前，加上注解@Test ,使得方法可以独立运行【无需main方法】</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        4. 导入Junit工具的依赖包</span></span><br><span class="line"><span class="comment">        	- 【点击@Test旁边的小灯泡，添加进classPath】</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        5. 在测试方法中：</span></span><br><span class="line"><span class="comment">        	- 创建被测试的对象，调用被测试的方法。</span></span><br><span class="line"><span class="comment">        	</span></span><br><span class="line"><span class="comment">        6. 运行</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        7. 判断结果：</span></span><br><span class="line"><span class="comment">        	- 红色：测试失败</span></span><br><span class="line"><span class="comment">        	- 绿色：测试通过</span></span><br><span class="line"><span class="comment">        	</span></span><br><span class="line"><span class="comment">        8. 断言，将当前结果与正确结果比较	</span></span><br><span class="line"><span class="comment">        	Assert.assertEquals(正确值，当前值);</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> demo.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> demo.junit.Calculator;<span class="comment">// 自定义的被测试类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CalcTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 测试add方法</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAdd</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Calculator c = <span class="keyword">new</span>  Calculator();</span><br><span class="line">        <span class="keyword">int</span> rst = c.add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        Assert.assertEquals(<span class="number">3</span>,rst);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 测试sub方法</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSub</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Calculator c = <span class="keyword">new</span> Calculator();</span><br><span class="line">        <span class="keyword">int</span> rst = c.sub(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">        Assert.assertEquals(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h4 id="12-2-Junit的使用：【-Before-和-After】"><a href="#12-2-Junit的使用：【-Before-和-After】" class="headerlink" title="12.2 Junit的使用：【@Before 和 @After】"></a>12.2 Junit的使用：【@Before 和 @After】</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.After;</span><br><span class="line"><span class="keyword">import</span> org.junit.Assert;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> demo.junit.Calculator;<span class="comment">// 自定义的被测试类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CalcTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    *   定义1个 init方法，用于在申请资源,每个测试方法在执行前都会自动调用init( )</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;申请资源-init()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     *   定义1个 close（），用于在释放资源,每个测试方法在执行后都会自动调用init( )</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;释放资源-after()&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAdd</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;testAdd方法执行&quot;</span>);</span><br><span class="line">        Calculator c = <span class="keyword">new</span>  Calculator();</span><br><span class="line">        <span class="keyword">int</span> rst = c.add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        <span class="comment">//System.out.println(rst);</span></span><br><span class="line">        Assert.assertEquals(<span class="number">3</span>,rst);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSub</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;testSub方法执行&quot;</span>);</span><br><span class="line">        Calculator c = <span class="keyword">new</span> Calculator();</span><br><span class="line">        <span class="keyword">int</span> rst = c.sub(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">        Assert.assertEquals(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h2 id="13-反射"><a href="#13-反射" class="headerlink" title="13. 反射"></a>13. 反射</h2><ul>
<li><p>  <a href="https://blog.csdn.net/Zzh1110/article/details/104101124">Java–反射CSDN博客</a></p>
</li>
<li><p><a href="https://www.bilibili.com/video/BV1p4411P7V3?p=5">狂神说-反射</a></p>
</li>
</ul>
<p><strong>反射</strong> 【框架设计的灵魂】：</p>
<blockquote>
<p>  定义：将类的组成部分，封装为各个对象。</p>
<p>  可以在<code>运行</code>的时候，<code>获取类</code>的相关信息。【是Java作为<code>准动态语言</code>的标志】</p>
</blockquote>
<ul>
<li>  正常过程：</li>
</ul>
<blockquote>
<p>  导包 =》new 对象 =》 得到 实例化对象</p>
</blockquote>
<ul>
<li>  反射过程：</li>
</ul>
<blockquote>
<p>  获取实例化对象 =》getClass( )来得到类信息 =》找到所在的包名</p>
</blockquote>
<h3 id="13-1-Java代码的三个阶段："><a href="#13-1-Java代码的三个阶段：" class="headerlink" title="13.1 Java代码的三个阶段："></a>13.1 Java代码的三个阶段：</h3><ul>
<li>  源代码阶段：编写代码【成员变量+成员方法+构造方法】</li>
<li>  类对象阶段：通过类加载器，将代码读入 JVM【在这个阶段，源码中的1个类，被拆成3个Class对象】</li>
<li>  运行时阶段：运行代码</li>
</ul>
<p><img src="https://z3.ax1x.com/2021/05/29/2kTPf0.png" alt="Java代码的三个阶段"></p>
<p>反射的好处：</p>
<blockquote>
<ul>
<li>  可以在代码运行的时候，来操作对象。【例如：IDE的代码提示功能，就是利用了反射的原理，在类对象阶段加载Methods数组】</li>
<li>  解耦</li>
</ul>
</blockquote>
<p>代码演示：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*   1. 获取字节码【类名.class】：</span></span><br><span class="line"><span class="comment">			Class personClass = Person.class;</span></span><br><span class="line"><span class="comment">			</span></span><br><span class="line"><span class="comment">	2. 常用方法：</span></span><br><span class="line"><span class="comment">	</span></span><br><span class="line"><span class="comment">	    0-设置访问权限【忽略安全检查】：true</span></span><br><span class="line"><span class="comment">        	declaredField_1.setAccessible(true);</span></span><br><span class="line"><span class="comment">        	</span></span><br><span class="line"><span class="comment">	    1-字段：</span></span><br><span class="line"><span class="comment">			- 获取类中，所有public的字段(属性):</span></span><br><span class="line"><span class="comment">				 Field[] fields = personClass.getFields();</span></span><br><span class="line"><span class="comment">				 </span></span><br><span class="line"><span class="comment">			- 获取类中，指定的public的字段(属性):	 </span></span><br><span class="line"><span class="comment">				 Field field_1 = personClass.getField(字段名);</span></span><br><span class="line"><span class="comment">				 				 </span></span><br><span class="line"><span class="comment">			- 获取类中，所有的字段【包括private,但获取private的前提是先设置权限】:	 </span></span><br><span class="line"><span class="comment">				 Field[] declaredFields = personClass.getDeclaredFields();</span></span><br><span class="line"><span class="comment">				 </span></span><br><span class="line"><span class="comment">				 </span></span><br><span class="line"><span class="comment">			- 获取类中，指定的字段【包括private,但获取private的前提是先设置权限】:	 </span></span><br><span class="line"><span class="comment">				 Field declaredField = personClass.getDeclaredField(“name”);</span></span><br><span class="line"><span class="comment">                 </span></span><br><span class="line"><span class="comment">                 </span></span><br><span class="line"><span class="comment">        2-构造器： </span></span><br><span class="line"><span class="comment">            - 获取类中，所有的构造器</span></span><br><span class="line"><span class="comment">   			Constructor&lt;?&gt;[] Constructors = personClass.getConstructors();</span></span><br><span class="line"><span class="comment">			</span></span><br><span class="line"><span class="comment">			-获取类中，指定的构造器</span></span><br><span class="line"><span class="comment">        	Constructor&lt;T&gt; Constructor = personClass.getConstructor(类&lt;?&gt;...参数类型);</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">            - 获取类中，所有的已经声明的构造器</span></span><br><span class="line"><span class="comment">             Constructor[] declaredConstructors = personClass.getDeclaredConstructors();</span></span><br><span class="line"><span class="comment">             </span></span><br><span class="line"><span class="comment">		 	-获取类中，指定的已经声明的构造器</span></span><br><span class="line"><span class="comment">    		 Constructor declaredConstructor = personClass.getDeclaredConstructor(类&lt;?&gt;...参数类型);</span></span><br><span class="line"><span class="comment">    		 </span></span><br><span class="line"><span class="comment">    		 </span></span><br><span class="line"><span class="comment">       3-成员方法：</span></span><br><span class="line"><span class="comment">       </span></span><br><span class="line"><span class="comment">        	Method[] methods = personClass.getMethods();</span></span><br><span class="line"><span class="comment">        	</span></span><br><span class="line"><span class="comment">        	Method method = personClass.getMethod(String name,类&lt;?&gt;...参数类型);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        	Method[] declaredMethods = personClass.getDeclaredMethods();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        	Method declaredMethod = personClass.getDeclaredMethod(String name,类&lt;?&gt;...参数类型);</span></span><br><span class="line"><span class="comment">     4-获取类名：</span></span><br><span class="line"><span class="comment">     		String class_name = personClass.getName();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Person类</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 以下省略了get/set访问器</span></span><br><span class="line">        。。。</span><br><span class="line">            </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">            <span class="keyword">this</span>.age = age;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">// 字段相关：=================================================</span></span><br><span class="line">        <span class="comment">// 利用反射来获取字节码，找到Person类</span></span><br><span class="line">        Class personClass = Person.class;</span><br><span class="line">        <span class="comment">// 获取Person中 所有 public 的字段【属性】</span></span><br><span class="line">        Field[] fields = personClass.getFields();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 打印所有public属性</span></span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            System.out.println(field);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 创建对象</span></span><br><span class="line">        Person p = <span class="keyword">new</span> Person(<span class="string">&quot;张三&quot;</span>,<span class="number">20</span>,<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 获取Person类中的public字段 a类</span></span><br><span class="line">        Field a = personClass.getField(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取 对象p中的属性a的值的对象</span></span><br><span class="line">        Object value = a.get(p);</span><br><span class="line">        System.out.println(value); <span class="comment">// 1</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置 对象p中的属性a的值</span></span><br><span class="line">        a.set(p,<span class="number">123</span>);</span><br><span class="line">        System.out.println(p); <span class="comment">// Person&#123;name=&#x27;张三&#x27;, age=20, a=123&#125;</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取声明过的属性【包括：private类型的】</span></span><br><span class="line">        Field declaredField_name = personClass.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置访问权限【忽略安全检查】：true</span></span><br><span class="line">        declaredField_name.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 获取 具体字段值的 对象</span></span><br><span class="line">        Object val2 = declaredField_name.get(p);</span><br><span class="line">        System.out.println(val2);</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 构造器相关：=================================================      </span></span><br><span class="line">		Class&lt;Person&gt; personClass = Person.class;</span><br><span class="line">        </span><br><span class="line">		<span class="comment">//获取构造器</span></span><br><span class="line">Constructor constructor1= personClass.getConstructor(String.class,<span class="keyword">int</span>.class,<span class="keyword">int</span>.class);</span><br><span class="line"></span><br><span class="line">    	<span class="comment">// 打印结果：public Person(java.lang.String,int,int)</span></span><br><span class="line">    	System.out.println(constructor);</span><br><span class="line"></span><br><span class="line">    	<span class="comment">// 1.创建对象-有参【构造器-newInstance方法】</span></span><br><span class="line">        Object person_1 = constructor1.newInstance(<span class="string">&quot;张三&quot;</span>,<span class="number">23</span>,<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 2.创建对象-无参【构造器-newInstance方法】</span></span><br><span class="line">        Object person_2 = constructor1.newInstance();</span><br><span class="line">        <span class="comment">// 3.创建对象-无参【Class类-newInstance方法，已弃用】</span></span><br><span class="line">        Object person_3 = personClass.newInstance();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Person&#123;name=&#x27;张三&#x27;, age=23, a=1&#125;</span></span><br><span class="line">        System.out.println(person_1);</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="comment">// 成员方法相关：=================================================             </span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        Class&lt;Person&gt; personClass = Person.class;</span><br><span class="line">        <span class="comment">// 获取指定的方法【方法无参数时】</span></span><br><span class="line">        Method eat_method = personClass.getMethod(<span class="string">&quot;eat&quot;</span>);</span><br><span class="line">        System.out.println(eat_method);</span><br><span class="line">        </span><br><span class="line">        Person p = <span class="keyword">new</span> Person(<span class="string">&quot;张三&quot;</span>,<span class="number">20</span>,<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//调用eat方法</span></span><br><span class="line">        eat_method.invoke(p);  <span class="comment">//我eat</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取指定的方法【方法有参数时,传入：方法名+参数的反射类】        </span></span><br><span class="line">        Method eat_2 = personClass.getMethod(<span class="string">&quot;eat&quot;</span>, String.class);</span><br><span class="line">        Person p2 = <span class="keyword">new</span> Person(<span class="string">&quot;李四&quot;</span>,<span class="number">24</span>,<span class="number">3</span>);</span><br><span class="line">        eat_2.invoke(p2,<span class="string">&quot;香蕉&quot;</span>); <span class="comment">//我eat:香蕉</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取类名</span></span><br><span class="line">        String class_name = personClass.getName();</span><br><span class="line">        System.out.println(class_name);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="13-2-案例1："><a href="#13-2-案例1：" class="headerlink" title="13.2 案例1："></a>13.2 案例1：</h3><p>目标：</p>
<blockquote>
<p>  写一个工具，在不改变任何代码的前提下，可以用来：</p>
<ul>
<li>  创建任意对象</li>
<li>  执行任意方法</li>
</ul>
</blockquote>
<p>实现思路:</p>
<blockquote>
<ul>
<li>  需要：配置文件、反射</li>
</ul>
</blockquote>
<p>实现步骤：</p>
<blockquote>
<ul>
<li>  将需要创建的<code>对象的全类名</code> 和 需要调用的<code>方法</code> 定义在<code>配置文件</code>中。</li>
<li>  加载<code>配置文件</code>。</li>
<li>  利用<code>反射</code>来加载 <code>所需的类</code>到<code>内存</code>中。</li>
<li>  创建对象</li>
<li>  执行方法</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Member;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 创建properties对象</span></span><br><span class="line">        Properties prop = <span class="keyword">new</span> Properties();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//获取类加载器，通过类加载器，加载class目录下的配置文件的输入流</span></span><br><span class="line">        ClassLoader classLoader_1 = ReflectTest.class.getClassLoader();</span><br><span class="line">        InputStream is = classLoader_1.getResourceAsStream(<span class="string">&quot;pro.properties&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//利用配置文件的输入流，加载配置文件</span></span><br><span class="line">        prop.load(is);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取具体的配置</span></span><br><span class="line">        String className_1 = prop.getProperty(<span class="string">&quot;className&quot;</span>);</span><br><span class="line">        String methodName_1 = prop.getProperty(<span class="string">&quot;methodName&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取Class类</span></span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className_1);</span><br><span class="line">        <span class="comment">// 创建类对象</span></span><br><span class="line">        Object  c = cls.newInstance();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取方法类</span></span><br><span class="line">        Class&lt;?&gt; cls2 = Class.forName(methodName_1);</span><br><span class="line">        Method m1 = cls2.getMethod(methodName_1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        m1.invoke(c);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="13-3-获取Class对象的3种方式："><a href="#13-3-获取Class对象的3种方式：" class="headerlink" title="13.3 获取Class对象的3种方式："></a>13.3 获取Class对象的3种方式：</h3><ul>
<li>  源代码阶段：<code>Class.forName(全类名);    </code>// 全类名：<code>包名.类名</code></li>
<li>  类加载阶段：<code>类名.class 属性;</code></li>
<li>  运行时阶段：<code>对象名.getClass( ); </code>  // getClass( )定义在Object类中</li>
</ul>
<p>结论：</p>
<blockquote>
<p>   同一个字节码文件，在程序的一次运行中，只会加载一次，不论用哪种方式获取的Class对象，最终只会是同一个。</p>
</blockquote>
<h3 id="13-4-Class对象的功能："><a href="#13-4-Class对象的功能：" class="headerlink" title="13.4 Class对象的功能："></a>13.4 Class对象的功能：</h3><ul>
<li><p>  获取<code> 成员变量</code>：<code>getFields();</code></p>
</li>
<li><p>  获取 <code>成员方法</code>：<code>getMethods()</code></p>
</li>
<li><p>  获取 <code>构造方法</code>：<code>getConstructors();</code></p>
</li>
<li><p>获取 <code>类名</code>：<code>getClassName();</code></p>
</li>
</ul>
<h3 id="13-5-类加载的过程："><a href="#13-5-类加载的过程：" class="headerlink" title="13.5 类加载的过程："></a>13.5 类加载的过程：</h3><p><img src="https://z3.ax1x.com/2021/05/30/2V5Aqe.png" alt="Java内存分析"></p>
<p><img src="https://z3.ax1x.com/2021/05/30/2V5KRP.png" alt="Java-类加载的过程"></p>
<p><img src="https://z3.ax1x.com/2021/05/30/2V5jQf.png" alt="类加载的详细过程"></p>
<h2 id="14-注解（Annotation）"><a href="#14-注解（Annotation）" class="headerlink" title="14. 注解（Annotation）"></a>14. 注解（Annotation）</h2><ul>
<li>  <a href="https://blog.csdn.net/Zzh1110/article/details/104887317">Java–自定义注解-CSDN博客</a></li>
<li>  <a href="https://www.bilibili.com/video/BV1p4411P7V3?p=1">狂神说-注解和反射</a></li>
</ul>
<h3 id="14-1-注解-概念"><a href="#14-1-注解-概念" class="headerlink" title="14.1 注解-概念:"></a>14.1 注解-概念:</h3><blockquote>
<ul>
<li>  <code>注释</code>：给<code>人</code>看的备注</li>
<li>  <code>注解</code>：给<code>计算机</code>看的备注，也叫<code>元数据</code>，<code>JDK1.5</code>开始引入的特性。</li>
</ul>
</blockquote>
<h3 id="14-2-注解的作用："><a href="#14-2-注解的作用：" class="headerlink" title="14.2 注解的作用："></a>14.2 注解的作用：</h3><blockquote>
<ul>
<li>  编写文档：生成doc文档</li>
<li>  代码分析：使用反射</li>
<li>  编译检查：如：Ovverride</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*	注解doc演示</span></span><br><span class="line"><span class="comment">*	<span class="doctag">@author</span> cyw</span></span><br><span class="line"><span class="comment">*	<span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment">*	<span class="doctag">@since</span> 1.5</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在cmd中，进入该文件所在的目录，输入：javadoc AnnoDemo.java ,可以得到该类的文档</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnnoDemo</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">	*	<span class="doctag">@param</span> a 整数</span></span><br><span class="line"><span class="comment">	*	<span class="doctag">@param</span> b整数</span></span><br><span class="line"><span class="comment">	*	<span class="doctag">@return</span> 两数之和</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a+b;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>









<h3 id="14-2-JDK中内置的注解："><a href="#14-2-JDK中内置的注解：" class="headerlink" title="14.2  JDK中内置的注解："></a>14.2  JDK中内置的注解：</h3><ul>
<li>  <code>@Override</code>: 检查被标注的方法是否是继承自 父类/接口。</li>
<li>  <code>@Deprecated</code>: 标注的内容已过时。</li>
<li>  <code>@SuppressWarnings</code>: 压制警告 =》 <code>@@SuppressWarnings(&quot;all&quot;)</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 压制所有警告：IDE不要弹出警告信息    </span></span><br><span class="line">	<span class="meta">@SuppressWarnings(&quot;all&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnnoDemo</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用于标记：方法已过时</span></span><br><span class="line">            <span class="meta">@Deprecated</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="title">add_1</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">                <span class="keyword">return</span> a+b;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="title">add_2</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">                <span class="keyword">return</span> a+b;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>







<h3 id="14-3-自定义注解："><a href="#14-3-自定义注解：" class="headerlink" title="14.3 自定义注解："></a>14.3 自定义注解：</h3><ul>
<li>  格式：【<code>元注解 + public @interface 注解名&#123; &#125;</code>】</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">元注解</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> 注解名&#123;</span><br><span class="line">    </span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 例如：</span></span><br><span class="line">    <span class="keyword">public</span> <span class="meta">@interface</span> MyAnno&#123;</span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">	<span class="meta">@MyAnno</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sayHello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;你好&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<ul>
<li>  注解的<code>本质</code>：【继承了Annotion类的1个<code>接口</code>】</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyAnno</span> <span class="keyword">extends</span> <span class="title">java</span>.<span class="title">lang</span>.<span class="title">annotion</span>,<span class="title">Annotion</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>



<ul>
<li><p>注解的<code>属性</code>：【注解接口中的<code>抽象方法</code>】</p>
<blockquote>
<ol>
<li><p> 只要定义了注解的属性，则该注解的属性必须赋完值才能使用。</p>
</li>
<li><p> 可以使用default关键字，来给注解的属性赋默认值。</p>
</li>
<li><p> 如果注解只有1个属性，且该属性的名字为value，使用时，可以只传值，不写属性名。</p>
</li>
<li><p>数组在数值时，在数组的值的最外面，用 { } 包裹；数组只有1个值时，可省略大括号。</p>
</li>
</ol>
</blockquote>
</li>
</ul>
<ul>
<li>  注解中抽象方法（注解的属性）的返回值的类型【5种】：</li>
</ul>
<blockquote>
<ul>
<li>  基本类型</li>
<li>  字符串</li>
<li>  枚举</li>
<li>  注解</li>
<li>  以上4种的数组</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">public</span> <span class="meta">@interface</span> MyAnno&#123;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">show_1</span><span class="params">()</span></span>;	<span class="comment">//基本类型</span></span><br><span class="line">      <span class="function">String <span class="title">show_2</span><span class="params">()</span></span>;</span><br><span class="line">      <span class="function">MyAnno <span class="title">show_3</span><span class="params">()</span></span>;</span><br><span class="line">      String[] show_4();</span><br><span class="line"> </span><br><span class="line">  &#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure>





<p>实例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">public</span> <span class="meta">@interface</span> MyAnno&#123;</span><br><span class="line">      <span class="function">String <span class="title">name_method</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">age_method</span><span class="params">()</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@MyAnno(name_method=&quot;张三&quot;,age_method = 13)</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;你好&quot;</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>



<h4 id="14-3-1-元注解："><a href="#14-3-1-元注解：" class="headerlink" title="14.3.1 元注解："></a>14.3.1 元注解：</h4><p>概念：</p>
<blockquote>
<p>  元注解：修饰注解的注解。</p>
</blockquote>
<p>常见的元注解：</p>
<ul>
<li><code>@Target</code>：描述<code>作用的位置</code>。如：作用在方法<ul>
<li>ElementType：【一种枚举类型】<ul>
<li>  TYPE：作用在<code>类</code>上</li>
<li>  METHOD：作用在<code>方法</code>上</li>
<li>  FIELD：作用在<code>成员变量</code></li>
</ul>
</li>
</ul>
</li>
<li><code>@Retention</code>：描述 注解 <code>保留的阶段</code>。如：保留在源码阶段<ul>
<li>RetentionPolicy：【一种枚举类型】<ul>
<li>  SOURCE：源码阶段</li>
<li>  CLASS：class类对象阶段</li>
<li>  RUNTIME：运行时阶段【最常用】</li>
</ul>
</li>
</ul>
</li>
<li>  <code>@Documented</code>：描述 注解 <code>是否被抽取到API文档</code>中。</li>
<li>  <code>@Inheritied</code>：描述 注解 <code>是否被子类继承</code>。</li>
</ul>
<h4 id="14-3-2-注解的使用"><a href="#14-3-2-注解的使用" class="headerlink" title="14.3.2 注解的使用:"></a>14.3.2 注解的使用:</h4><ul>
<li>  获取 注解使用的<code>位置的对象</code></li>
<li>  利用位置对象 获取 <code>注解对象</code>: obj.getAnnotion(注解名.class)</li>
<li>  调用注解中的<code>抽象方法</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Target(ElementType.TYPE)</span>		<span class="comment">// 元注解，Target元注解,指定自定义注解的使用位置，TYPE：给类使用</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span>	<span class="comment">// 元注解，Retention元注解,指定自定义注解的使用时期</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> myAnnoDemo&#123;</span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span> <span class="keyword">default</span> &quot;ZhangSan&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用注解</span></span><br><span class="line"><span class="meta">@myAnnoDemo(name=&quot;lisi&quot;)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestClass</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>后端</category>
        <category>Java</category>
        <category>Java SE</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java Web-入门笔记</title>
    <url>/2021/08/04/Java%20Web-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Java-Web-笔记"><a href="#Java-Web-笔记" class="headerlink" title="Java Web-笔记"></a>Java Web-笔记</h1><p>[toc]</p>
<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p>什么是Java Web？</p>
<blockquote>
<p>  使用Java 语言开发 互联网应用程序。</p>
</blockquote>
<p>软件架构：</p>
<blockquote>
<ul>
<li>  C/S</li>
<li>  B/S</li>
</ul>
</blockquote>
<p>B/S 架构的资源分类：</p>
<blockquote>
<ul>
<li><p><code>静态资源</code>：所有用户看到的效果一样。</p>
<p>  如：文本、图片、视频、html、css、js等。</p>
<p>  当客户端请求静态资源时，服务端直接发送，浏览器中内置的解析引擎会解析静态资源。</p>
</li>
<li><p><code>多态资源</code>：所有用户访问的结果可能不一样。</p>
<p>  如：jsp，serverlet，php，asp等</p>
<p>  当客户端请求动态资源时，服务端会将动态资源转化为静态资源，并返回给浏览器。</p>
</li>
</ul>
</blockquote>
<h2 id="2-JS语法补充"><a href="#2-JS语法补充" class="headerlink" title="2. JS语法补充"></a>2. JS语法补充</h2><ul>
<li>  <a href="https://cder123.github.io/2021/06/02/JavaScript-%E7%AC%94%E8%AE%B0/#JavaScript-%E7%AC%94%E8%AE%B0">JavaScript-笔记 | Cyw的笔记栈 (cder123.github.io)</a></li>
</ul>
<h3 id="2-1-RegExp对象："><a href="#2-1-RegExp对象：" class="headerlink" title="2.1 RegExp对象："></a>2.1 RegExp对象：</h3><p>RegExp对象有2种定义的方式，可使用 函数<code> test( )</code> 来判断字符串<code>是否</code>符合<code>正则表达式</code>。</p>
<blockquote>
<ul>
<li>  <code>^</code>：开始</li>
<li>  <code>$</code>：结尾</li>
<li>  <code>\d</code>：数字</li>
<li>  <code>\D</code>：不包括数字</li>
<li>  <code>\w</code>：字母</li>
<li>  <code>\W</code>：不包括字母</li>
<li>  <code>[abc]</code>：a、b、c中的任意一个</li>
<li>  <code>[a-z]</code>：a到z的26个字母中的一个</li>
<li>  <code>[0-9]</code>：0到9的10个数字中的一个</li>
</ul>
</blockquote>
<ul>
<li>  方式 1：【此方式的正则必须使用双斜杠】</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	格式：</span></span><br><span class="line"><span class="comment">*			var reg = new RegExp(&quot;正则表达式&quot;);	// 注意该方式的正则必须使用双斜杠</span></span><br><span class="line"><span class="comment">			</span></span><br><span class="line"><span class="comment">			reg.test(&quot;字符串&quot;);	// 如果字符串符合正则表达式，返回true</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 匹配1~3个数字</span></span><br><span class="line">	<span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;\\d&#123;1,3&#125;&quot;</span>);</span><br><span class="line"></span><br><span class="line">	a.test(<span class="number">123456</span>)	<span class="comment">// true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<ul>
<li>  方式 2：</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	格式：</span></span><br><span class="line"><span class="comment">*			var reg = /正则表达式/;	</span></span><br><span class="line"><span class="comment">			</span></span><br><span class="line"><span class="comment">			reg.test(&quot;字符串&quot;);	// 如果字符串符合正则表达式，返回true</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> s = <span class="regexp">/\w&#123;1,4&#125;/</span>;</span><br><span class="line"></span><br><span class="line">	s.test(<span class="string">&quot;zhangSan&quot;</span>);	</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<p>案例：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 匹配：字母a开头，数字0结尾，中间至少1个字母的字符串	</span></span><br><span class="line">	<span class="keyword">var</span> a = <span class="regexp">/^a\w+0$/</span></span><br><span class="line"></span><br><span class="line">	a.test(<span class="string">&quot;a123b&quot;</span>)		<span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">	a.test(<span class="string">&quot;ac0&quot;</span>)		<span class="comment">// true</span></span><br></pre></td></tr></table></figure>







<h3 id="2-2-Global对象："><a href="#2-2-Global对象：" class="headerlink" title="2.2 Global对象："></a>2.2 Global对象：</h3><p>无需定义，对象中的<code>方法</code>可以<code>直接调用</code>。</p>
<blockquote>
<ul>
<li>  <code>encodeURI()</code>：uri 的编码</li>
<li>  <code>decodeURI()</code>：uri 的解码</li>
<li>  <code>encodeURIComeonent()</code>：uri 的编码【对整个网址】</li>
<li>  <code>decodeURIComponent()</code>：uri 的解码</li>
<li>  <code>parseInt()</code>：将参数字符串从第0位开始的连续的数字字符串转为数字</li>
<li>  <code>isNaN()</code></li>
</ul>
</blockquote>
<p>需要对<code>URI </code>进行编码和解码的原因：</p>
<blockquote>
<p>  <code>URI</code> 默认<code>不支持中文</code>传输，以<code>%hh</code>表示<code>1个字节</code>。</p>
</blockquote>
<p>演示：【<code>utf-8编码：中文3字节，英文1字节</code>】</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> url_1 = <span class="string">&quot;富强民主&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">encodeURI</span>(a);	<span class="comment">// &quot;%E5%AF%8C%E5%BC%BA%E6%B0%91%E4%B8%BB&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">decodeURI</span>(<span class="string">&quot;%E5%AF%8C%E5%BC%BA%E6%B0%91%E4%B8%BB&quot;</span>) <span class="comment">// &quot;富强民主&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="2-3-Bom对象："><a href="#2-3-Bom对象：" class="headerlink" title="2.3 Bom对象："></a>2.3 Bom对象：</h3><p>JS中的对象【有大到小】：</p>
<blockquote>
<ul>
<li>  Navigator：浏览器</li>
<li>  window：一个浏览器的标签【包括地址栏（Location对象）、历史记录（history对象）、前进按钮、后退按钮等】</li>
<li>  screen对象</li>
<li>  Dom：页面</li>
</ul>
</blockquote>
<p>小结：</p>
<p>Bom对象由以下几个对象组成：</p>
<ul>
<li><p>  Navigator</p>
</li>
<li><p>  Window</p>
</li>
<li><p>  Location</p>
</li>
<li><p>  History</p>
</li>
<li><p>Screen</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">	&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">	&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;input id=&quot;openBtn&quot; type=&quot;button&quot; value=&quot;打开&quot;&gt;</span><br><span class="line">	&lt;input id=&quot;closeBtn&quot; type=&quot;button&quot; value=&quot;关闭&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    var openBtn = document.getElementById(&quot;openBtn&quot;);</span><br><span class="line">    var closeBtn = document.getElementById(&quot;closeBtn&quot;);</span><br><span class="line">    var newWin = null;</span><br><span class="line"></span><br><span class="line">// 打开新窗口</span><br><span class="line">    openBtn.onclick = function () &#123;</span><br><span class="line">        newWin = open(&quot;http://www.baidu.com&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">// 关闭新窗口</span><br><span class="line">    closeBtn.onclick = function () &#123;</span><br><span class="line">        newWin.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>





<h3 id="2-4-定时器："><a href="#2-4-定时器：" class="headerlink" title="2.4 定时器："></a>2.4 定时器：</h3><ul>
<li>  <code>setTimeout(“js代码/函数”,毫秒数)</code>：定时器，返回唯一标识</li>
<li>  <code>clearTimeout()</code>：</li>
<li>  <code>setInterval(&quot;js代码/函数&quot;,周期毫秒数)</code>：循环定时器，返回唯一标识</li>
<li>  <code>clearInterval()</code></li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// setTimeout(js代码/函数,毫秒数)</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> id_1 = <span class="built_in">setTimeout</span>(<span class="string">&quot;alert(&#x27;你好&#x27;);&quot;</span>,<span class="number">3000</span>);	<span class="comment">// 3秒后弹出”你好“</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">clearTimeout</span>(id_1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// setInterval(js代码/函数,周期毫秒数)</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> id_2 = <span class="built_in">setInterval</span>(<span class="string">&quot;alert(&#x27;你好&#x27;)&quot;</span>,<span class="number">3000</span>);	<span class="comment">// 每隔3秒弹出1次”你好“</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">clearInterval</span>(id_2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 例如：</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="built_in">window</span>.location.href = <span class="string">&quot;http://v.qq.com&quot;</span>;</span><br><span class="line">&#125;,<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>





<p>案例：定时跳转</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">	</span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:red;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;seconds&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">span</span>&gt;</span>秒后跳转</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">		<span class="keyword">var</span> SecTag = <span class="built_in">document</span>.getElementById(<span class="string">&quot;seconds&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		<span class="keyword">var</span> sec = <span class="number">5</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">		<span class="function"><span class="keyword">function</span> <span class="title">showSec</span>(<span class="params"></span>) </span>&#123;	</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			sec--;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			<span class="keyword">if</span>(sec&lt;=<span class="number">0</span>)&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">				<span class="built_in">window</span>.location.href = <span class="string">&quot;http://cder123.gitee.io/&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">			</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			SecTag.innerHTML=sec;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">		<span class="built_in">setInterval</span>(<span class="string">&quot;showSec()&quot;</span>,<span class="number">1000</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h3 id="案例-表格-增、删、全选"><a href="#案例-表格-增、删、全选" class="headerlink" title="案例-表格-增、删、全选"></a>案例-表格-增、删、全选</h3><h4 id="HTML-部分："><a href="#HTML-部分：" class="headerlink" title="HTML-部分："></a>HTML-部分：</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">	编号&lt;input id=<span class="string">&quot;in_id&quot;</span> type=<span class="string">&quot;text&quot;</span>&gt;</span><br><span class="line">	姓名&lt;input id=<span class="string">&quot;in_name&quot;</span> type=<span class="string">&quot;text&quot;</span>&gt;</span><br><span class="line">	性别&lt;input id=<span class="string">&quot;in_sex&quot;</span> type=<span class="string">&quot;text&quot;</span>&gt;</span><br><span class="line">	<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;in_addBtn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;添加&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">&quot;tb&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin: 10% auto;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;<span class="name">caption</span>&gt;</span>名单<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">td</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">td</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br></pre></td></tr></table></figure>



<h4 id="JS-公共部分："><a href="#JS-公共部分：" class="headerlink" title="JS 公共部分："></a>JS 公共部分：</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> in_id = <span class="built_in">document</span>.getElementById(<span class="string">&quot;in_id&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> in_name = <span class="built_in">document</span>.getElementById(<span class="string">&quot;in_name&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> in_sex = <span class="built_in">document</span>.getElementById(<span class="string">&quot;in_sex&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> in_addBtn = <span class="built_in">document</span>.getElementById(<span class="string">&quot;in_addBtn&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tb = <span class="built_in">document</span>.getElementById(<span class="string">&quot;tb&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h4 id="JS-添加-删除-功能"><a href="#JS-添加-删除-功能" class="headerlink" title="JS 添加/删除-功能"></a>JS 添加/删除-功能</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加一行</span></span><br><span class="line">		in_addBtn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">			<span class="comment">// 创建表格的1行</span></span><br><span class="line">			<span class="keyword">var</span> tr = <span class="built_in">document</span>.createElement(<span class="string">&quot;tr&quot;</span>);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 创建表格中的5个单元格【复选框、编号、姓名、性别、操作】</span></span><br><span class="line">			<span class="keyword">var</span> td0 = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">			<span class="keyword">var</span> td1 = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">			<span class="keyword">var</span> td2 = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">			<span class="keyword">var</span> td3 = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">			<span class="keyword">var</span> td4 = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 复选框</span></span><br><span class="line">			<span class="keyword">var</span> chkbox = <span class="built_in">document</span>.createElement(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">			chkbox.type=<span class="string">&quot;checkbox&quot;</span>;</span><br><span class="line">			chkbox.name = <span class="string">&quot;chkbox&quot;</span>;</span><br><span class="line">			td0.appendChild(chkbox);</span><br><span class="line">			tr.appendChild(td0);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 编号</span></span><br><span class="line">			<span class="keyword">var</span> id_txt = <span class="built_in">document</span>.createTextNode(in_id.value);</span><br><span class="line">			td1.appendChild(id_txt);</span><br><span class="line">			tr.appendChild(td1);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 姓名</span></span><br><span class="line">			<span class="keyword">var</span> name_txt = <span class="built_in">document</span>.createTextNode(in_name.value);</span><br><span class="line">			td2.appendChild(name_txt);</span><br><span class="line">			tr.appendChild(td2);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 性别</span></span><br><span class="line">			<span class="keyword">var</span> sex_txt = <span class="built_in">document</span>.createTextNode(in_sex.value);</span><br><span class="line">			td3.appendChild(sex_txt);</span><br><span class="line">			tr.appendChild(td3);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">var</span> operbtn = <span class="built_in">document</span>.createElement(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">			<span class="keyword">var</span> optxt = <span class="built_in">document</span>.createTextNode(<span class="string">&quot;删除&quot;</span>);</span><br><span class="line">			operbtn.appendChild(optxt);</span><br><span class="line">			operbtn.href=<span class="string">&quot;javascript:void(0);&quot;</span>;</span><br><span class="line">			</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除一行</span></span><br><span class="line">			operbtn.addEventListener(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">				<span class="comment">//console.log(e);				</span></span><br><span class="line">				e.path[<span class="number">3</span>].removeChild(e.path[<span class="number">2</span>]);</span><br><span class="line">			&#125;);</span><br><span class="line">				</span><br><span class="line">			td4.appendChild(operbtn);</span><br><span class="line">			tr.appendChild(td4);</span><br><span class="line"></span><br><span class="line">			tb.appendChild(tr);</span><br><span class="line">            </span><br><span class="line">            in_id.value =<span class="string">&quot;&quot;</span>;</span><br><span class="line">			in_name.value =<span class="string">&quot;&quot;</span>;</span><br><span class="line">			in_sex.value =<span class="string">&quot;&quot;</span>;</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure>



<h4 id="全选-功能："><a href="#全选-功能：" class="headerlink" title="全选-功能："></a>全选-功能：</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">		<span class="keyword">var</span> chkAll = <span class="built_in">document</span>.getElementById(<span class="string">&quot;chkAll&quot;</span>);</span><br><span class="line"></span><br><span class="line">		chkAll.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line"><span class="comment">// 判断全选框是否选中？所有行勾选：所有行取消勾选</span></span><br><span class="line">			<span class="keyword">if</span> (e.target.checked) &#123;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">2</span>; i &lt; e.path[<span class="number">4</span>].children.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">					e.path[<span class="number">4</span>].children[i].firstChild.firstChild.checked = <span class="literal">true</span>;</span><br><span class="line">					<span class="built_in">console</span>.log(e.path[<span class="number">4</span>].children[i].firstChild.firstChild);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">2</span>; i &lt; e.path[<span class="number">4</span>].children.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">					e.path[<span class="number">4</span>].children[i].firstChild.firstChild.checked = <span class="literal">false</span>;</span><br><span class="line">					<span class="built_in">console</span>.log(e.path[<span class="number">4</span>].children[i].firstChild.firstChild);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>















<h2 id="3-Bootstrap-UI框架使用"><a href="#3-Bootstrap-UI框架使用" class="headerlink" title="3. Bootstrap UI框架使用"></a>3. Bootstrap UI框架使用</h2><p>什么是框架？</p>
<blockquote>
<p>  框架 就是 为加快开发而使用的半成品。</p>
</blockquote>
<p>Bootstrap是twitter基于HTML、CSS、JS推出的框架。它定义了许多样式、js插件</p>
<h3 id="3-1-快速入门"><a href="#3-1-快速入门" class="headerlink" title="3.1 快速入门"></a>3.1 快速入门</h3><p>步骤：</p>
<ul>
<li>  下载 Bootstrap</li>
<li>  放入到 项目文件夹下</li>
<li>  引入 Bootstrap</li>
<li>  在 HTML中使用</li>
</ul>
<h3 id="3-2-响应式布局"><a href="#3-2-响应式布局" class="headerlink" title="3.2 响应式布局"></a>3.2 响应式布局</h3><p>Bootstrap的响应式布局：</p>
<blockquote>
<p>  将一行分割为12个格子，可以指定元素占几个格子【不论是什么设备，都是12个格子】</p>
</blockquote>
<p>例如：</p>
<p>PC上某个div占3个格子，在手机上占12个格子。</p>
<h4 id="3-2-1-使用步骤："><a href="#3-2-1-使用步骤：" class="headerlink" title="3.2.1 使用步骤："></a>3.2.1 使用步骤：</h4><ul>
<li>  定义<code> 容器</code>，【类名：<code>container</code> （固定宽度，有留白）或 <code>.container-fluid</code> （100% 宽度）】</li>
<li>  定义 <code>行</code>，【类名：<code>row</code>】只有 “列（column）” 可以作为 “行（row）” 的直接子元素。</li>
<li>  定义<code> 元素</code>，指定元素在不同的设备上占据的格子数，【类名：<code>col-设备代号-格子数</code>】</li>
</ul>
<p>设备代号：</p>
<ul>
<li>  <code>xs</code>：手机，&lt; 768 px，例如：<code>col-xs-12</code></li>
<li>  <code>sm</code>：平板，&gt;= 768 px</li>
<li>  <code>md</code>：笔记本，&gt;= 992 px</li>
<li>  <code>lg</code>：台式机，&gt;= 1200 px</li>
</ul>
<p>注意：</p>
<blockquote>
<p>  如果1行中的元素所占的格子数<code>大于12</code>，则自动换行。</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 演示-入门<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">integrity</span>=<span class="string">&quot;sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">integrity</span>=<span class="string">&quot;sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">integrity</span>=<span class="string">&quot;sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--定义容器--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--		定义行--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--			定义元素，指定在笔记本md上占4个格子，平板sm上占12个格子--&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4 col-sm-12&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border:1px solid;&quot;</span>&gt;</span>你好1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4 col-sm-12&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border:1px solid;&quot;</span>&gt;</span>你好2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4 col-sm-12&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border:1px solid;&quot;</span>&gt;</span>你好3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h4 id="3-2-2-全局CSS样式"><a href="#3-2-2-全局CSS样式" class="headerlink" title="3.2.2 全局CSS样式"></a>3.2.2 全局CSS样式</h4><ul>
<li>  按钮：<code>class=&quot;btn btn-default&quot;</code></li>
<li>  图片：<code>class=&quot;img-responsive&quot;</code></li>
<li>  表格：</li>
<li>  表单：【将多个表单项<code>form-control</code> 放在同一个<code>form-group</code>里】</li>
</ul>
<p>注意：</p>
<blockquote>
<p>  表单的水平排列可以在<code>form</code>标签上加类名<code>form-horizontal</code>，然后给<code>表单项</code>指定<code>所占的列的格子数</code>。</p>
<p>  如：<code>class=&quot;col-sm-2&quot;</code></p>
</blockquote>
<h4 id="3-2-3-组件"><a href="#3-2-3-组件" class="headerlink" title="3.2.3 组件"></a>3.2.3 组件</h4><h5 id="导航条"><a href="#导航条" class="headerlink" title="导航条"></a>导航条</h5><p>汉堡按钮【缩小屏幕时出现】</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header&quot;</span>&gt;</span></span><br><span class="line">	// 汉堡按钮</span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggle collapsed&quot;</span> </span></span><br><span class="line"><span class="tag">              				<span class="attr">data-toggle</span>=<span class="string">&quot;collapse&quot;</span> </span></span><br><span class="line"><span class="tag">              				<span class="attr">data-target</span>=<span class="string">&quot;#bs-example-navbar-collapse-1&quot;</span> </span></span><br><span class="line"><span class="tag">              				<span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">          </span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      // 汉堡按钮的3条横线    </span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>logo-首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span>     </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>下拉列表：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> </span></span><br><span class="line"><span class="tag">             			<span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> </span></span><br><span class="line"><span class="tag">             			<span class="attr">role</span>=<span class="string">&quot;button&quot;</span> </span></span><br><span class="line"><span class="tag">             			<span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">             			<span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>下拉列表 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>One more separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>搜索框+提交按钮：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;navbar-form navbar-left&quot;</span>&gt;</span></span><br><span class="line">    //搜索框</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Search&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    // 提交按钮</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>







<h5 id="分页条"><a href="#分页条" class="headerlink" title="分页条"></a>分页条</h5><p>禁用（类名）：<code>disable</code></p>
<p>选中：<code>active</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">aria-label</span>=<span class="string">&quot;Page navigation&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;pagination&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">// 显示“前一页”</span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Previous&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;laquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">// 显示“后一页”      </span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Next&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;raquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h4 id="3-2-3-轮播图"><a href="#3-2-3-轮播图" class="headerlink" title="3.2.3 轮播图"></a>3.2.3 轮播图</h4><p>类名：<code>carousel</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;carousel-example-generic&quot;</span> <span class="attr">class</span>=<span class="string">&quot;carousel slide&quot;</span> <span class="attr">data-ride</span>=<span class="string">&quot;carousel&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 小圆点：Indicators --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;carousel-indicators&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 轮播图：Wrapper for slides --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-inner&quot;</span> <span class="attr">role</span>=<span class="string">&quot;listbox&quot;</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item active&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;...&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;...&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 左右按钮：Controls --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;left carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;prev&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-left&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;right carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;next&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-right&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>





















<h2 id="4-XML入门"><a href="#4-XML入门" class="headerlink" title="4. XML入门"></a>4. XML入门</h2><h3 id="4-1-概念："><a href="#4-1-概念：" class="headerlink" title="4.1 概念："></a>4.1 概念：</h3><p>XML：<code>可扩展标记语言</code></p>
<ul>
<li>  可扩展：标签可以自定义</li>
</ul>
<p>W3C：万维网联盟</p>
<p>功能：</p>
<blockquote>
<ul>
<li>  存储数据：【 配置文件 + 在网络中传输 】</li>
</ul>
</blockquote>
<p>XML 与 HTML 的区别：</p>
<blockquote>
<ol>
<li> XML 是自定义的，HTML是预定义的</li>
<li> XML 语法严格，HTML语法松散</li>
<li> XML 是存储数据的，HTML是展示数据的</li>
</ol>
</blockquote>
<h3 id="4-2-语法："><a href="#4-2-语法：" class="headerlink" title="4.2 语法："></a>4.2 语法：</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">	<span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">age</span>&gt;</span>20<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">age</span>&gt;</span>30<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>注意：<code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</code>只能写在第一行。</p>
<h4 id="4-2-1-XML的特点："><a href="#4-2-1-XML的特点：" class="headerlink" title="4.2.1 XML的特点："></a>4.2.1 XML的特点：</h4><ul>
<li>  XML 以<code>.xml</code>为后缀。</li>
<li>  XML 的第一行必须定义文档声明：<code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</code> 。</li>
<li>  XML 有且只有<code>1个根结点</code>，如：上面示例中的<code>users</code>标签。</li>
<li>  XML 的<code>属性值</code>必须使用<code>引号</code>包裹。</li>
<li>XML 的标签必须正确关闭：<ul>
<li>  有子节点=》分成2段的标签；</li>
<li>  无子节点=》自闭合标签</li>
</ul>
</li>
<li>  XML 区分大小写。</li>
</ul>
<h4 id="4-2-2-XML的组成部分："><a href="#4-2-2-XML的组成部分：" class="headerlink" title="4.2.2 XML的组成部分："></a>4.2.2 XML的组成部分：</h4><blockquote>
<ul>
<li><p>文档声明：必须在第一行，<code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</code>。</p>
<ul>
<li>格式：<code>&lt;?xml 参数列表?&gt;</code><ul>
<li>  <code>version</code>：版本号【必选项】</li>
<li>  <code>encoding</code>：编码格式，告诉解析引擎当前 XML文档使用的字符集。默认：ISO-8859-1</li>
<li>  <code>standalone</code>：是否独立、不依赖于其他的文件，属性值：<code>yes</code>或<code>no</code> 。</li>
</ul>
</li>
</ul>
</li>
<li><p>指令（了解）：结合css=》<code>&lt;?xml-stylesheet type=&quot;text/css&quot; href=&quot;./123.css&quot;?&gt;</code></p>
</li>
<li><p>标签：标签名称自定义，</p>
<ul>
<li><p>规则：</p>
<ul>
<li>  标签名可以包括字母、数字、其他字符</li>
<li>  只能以字母开头</li>
<li>不能以数字、符号、空格、xml 开头</li>
</ul>
</li>
</ul>
</li>
<li><p>   属性【可以定义约束】</p>
</li>
</ul>
<pre><code>  -   id：唯一

  
</code></pre>
<ul>
<li>文本<ul>
<li>  CDATA区：该区域的文本不需要转义，能原样显示，<code>&lt;![CDATA[需要原样显示的内容]]&gt;</code></li>
</ul>
</li>
</ul>
</blockquote>
<h4 id="4-2-3-XML的约束："><a href="#4-2-3-XML的约束：" class="headerlink" title="4.2.3 XML的约束："></a>4.2.3 XML的约束：</h4><p>约束：XML的书写规则（自定义的说明文档），由程序员（用户）来查看该文档中 什么标签 代表 什么意思。</p>
<ul>
<li>作为框架的使用者【程序员】<ul>
<li>  能够在 XML中<code>引入</code>约束文档</li>
<li>  能够 简单的<code>读懂</code>约束文档</li>
</ul>
</li>
</ul>
<p>XML 约束的分类：</p>
<ul>
<li>  <code>DTD约束</code>：一种简单的约束</li>
<li>  <code>Schema约束</code>：一种复杂的约束</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ELEMENT students (student*)&gt;	  // 定义students标签，子元素为student标签，*表示可以出现多次</span><br><span class="line">&lt;!ELEMENT student (name,age,sex)&gt; // 定义student标签,子元素为name、age、sex标签[只出现1次，按顺序)</span><br><span class="line">&lt;!ELEMENT name (#PCDATA)&gt;		  // 定义name标签，标签体内为字符串</span><br><span class="line">&lt;!ELEMENT age (#PCDATA)&gt;		  // 定义age标签，标签体内为字符串</span><br><span class="line">&lt;!ELEMENT sex (#PCDATA)&gt;		  // 定义sex标签，标签体内为字符串</span><br><span class="line">&lt;!ATTLIST student number ID #REQUIRED&gt; // 定义student标签的属性，属性名：number,属性类型：ID,必选项</span><br></pre></td></tr></table></figure>







<h5 id="1-DTD的使用："><a href="#1-DTD的使用：" class="headerlink" title="1. DTD的使用："></a>1. DTD的使用：</h5><p>后缀：<code>.dtd</code></p>
<ul>
<li>引入DTD文档 到 XML：【2种 DTD格式】<ul>
<li>  内部DTD【了解】：约束规则直接定义在XML文件中。</li>
<li>外部DTD：单独写1个<code>.dtd</code>文件。<ul>
<li>  本地的 外部DTD：<code>&lt;!DOCTYPE 根标签名 SYSTEM &quot;dtd文件的位置&quot;&gt;</code></li>
<li>  网络的 外部DTD：<code>&lt;!DOCTYPE 根标签名 PUBLIC &quot;dtd文件名&quot; &quot;dtd文件的url&quot;&gt;</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>内部DTD：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 内部dtd的引入、定义 --&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">users</span> [</span></span><br><span class="line"><span class="meta">	<span class="meta">&lt;!ELEMENT <span class="meta-keyword">users</span> (<span class="meta-keyword">user</span>+)&gt;</span></span></span><br><span class="line"><span class="meta">	<span class="meta">&lt;!ELEMENT <span class="meta-keyword">user</span> (<span class="meta-keyword">name</span>,<span class="meta-keyword">age</span>)&gt;</span></span></span><br><span class="line"><span class="meta">	<span class="meta">&lt;!ELEMENT <span class="meta-keyword">name</span> (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">	<span class="meta">&lt;!ELEMENT <span class="meta-keyword">age</span> (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">	<span class="meta">&lt;!ATTLIST <span class="meta-keyword">user</span> <span class="meta-keyword">number</span> <span class="meta-keyword">ID</span> <span class="meta-keyword">#REQUIRED</span>&gt;</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- xml示例  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">user</span> <span class="attr">number</span>=<span class="string">&quot;s1&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">age</span>&gt;</span>20<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">user</span> <span class="attr">number</span>=<span class="string">&quot;s2&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">age</span>&gt;</span>30<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<p>DTD约束的缺陷：</p>
<blockquote>
<p>  无法约束标签内部的文本值</p>
</blockquote>
<h5 id="2-Schema的使用："><a href="#2-Schema的使用：" class="headerlink" title="2. Schema的使用："></a>2. Schema的使用：</h5><p>后缀：<code>.xsd</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsd:schema</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.itcast.cn/xml&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:xsd</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">targetNamespace</span>=<span class="string">&quot;http://www.itcast.cn/xml&quot;</span> <span class="attr">elementFormDefault</span>=<span class="string">&quot;qualified&quot;</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;<span class="name">xsd:element</span> <span class="attr">name</span>=<span class="string">&quot;students&quot;</span> <span class="attr">type</span>=<span class="string">&quot;studentsType&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsd:complexType</span> <span class="attr">name</span>=<span class="string">&quot;studentsType&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsd:sequence</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xsd:element</span> <span class="attr">name</span>=<span class="string">&quot;student&quot;</span> <span class="attr">type</span>=<span class="string">&quot;studentType&quot;</span> <span class="attr">minOccurs</span>=<span class="string">&quot;0&quot;</span> <span class="attr">maxOccurs</span>=<span class="string">&quot;unbounded&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xsd:sequence</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xsd:complexType</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsd:complexType</span> <span class="attr">name</span>=<span class="string">&quot;studentType&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsd:sequence</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xsd:element</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xsd:string&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xsd:element</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">type</span>=<span class="string">&quot;ageType&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xsd:element</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">type</span>=<span class="string">&quot;sexType&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xsd:sequence</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsd:attribute</span> <span class="attr">name</span>=<span class="string">&quot;number&quot;</span> <span class="attr">type</span>=<span class="string">&quot;numberType&quot;</span> <span class="attr">use</span>=<span class="string">&quot;required&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xsd:complexType</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsd:simpleType</span> <span class="attr">name</span>=<span class="string">&quot;sexType&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsd:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xsd:string&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xsd:enumeration</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xsd:enumeration</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xsd:restriction</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xsd:simpleType</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsd:simpleType</span> <span class="attr">name</span>=<span class="string">&quot;ageType&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsd:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xsd:integer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xsd:minInclusive</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xsd:maxInclusive</span> <span class="attr">value</span>=<span class="string">&quot;256&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xsd:restriction</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xsd:simpleType</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsd:simpleType</span> <span class="attr">name</span>=<span class="string">&quot;numberType&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsd:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xsd:string&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xsd:pattern</span> <span class="attr">value</span>=<span class="string">&quot;heima_\d&#123;4&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xsd:restriction</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xsd:simpleType</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsd:schema</span>&gt;</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>使用Schema约束的步骤：</p>
<blockquote>
<ol>
<li> 写 根标签</li>
<li> 引入 xsi 前缀</li>
<li> 引入 xsd命名空间</li>
<li> 声明每个xsd的前缀</li>
</ol>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	1.填写xml文档的根元素</span></span><br><span class="line"><span class="comment">	2.引入xsi前缀【固定格式】.  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line"><span class="comment">	3.引入xsd文件命名空间.  xsi:schemaLocation=&quot;http://www.itcast.cn/xml  student.xsd&quot;</span></span><br><span class="line"><span class="comment">	4.为每一个xsd约束声明一个前缀,作为【引入多个约束文件时的标识】  xmlns=&quot;http://www.itcast.cn/xml&quot; </span></span><br><span class="line"><span class="comment">	</span></span><br><span class="line"><span class="comment">	</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">students</span>   <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> 			</span></span><br><span class="line"><span class="tag"> 		   	 <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="string"><span class="tag">                                 http://www.itcast.cn/xml_1  student1.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                                 http://www.itcast.cn/xml_2  student2.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">             &quot;</span></span></span><br><span class="line"><span class="tag"> 		     <span class="attr">xmlns</span>=<span class="string">&quot;http://www.itcast.cn/xml_1&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">xmlns:a</span>=<span class="string">&quot;http://www.itcast.cn/xml_2&quot;</span></span></span><br><span class="line"><span class="tag"> 		    &gt;</span></span><br><span class="line"> 	<span class="tag">&lt;<span class="name">student</span> <span class="attr">number</span>=<span class="string">&quot;heima_0001&quot;</span>&gt;</span></span><br><span class="line"> 		<span class="tag">&lt;<span class="name">a:name</span>&gt;</span>tom<span class="tag">&lt;/<span class="name">name</span>&gt;</span>	// a: 表示的是当前标签使用的是a这个命名空间的scema约束文档</span><br><span class="line"> 		<span class="tag">&lt;<span class="name">a:age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"> 		<span class="tag">&lt;<span class="name">a:sex</span>&gt;</span>male<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line">		 </span><br><span class="line"> <span class="tag">&lt;/<span class="name">students</span>&gt;</span></span><br></pre></td></tr></table></figure>











<h3 id="4-3-解析："><a href="#4-3-解析：" class="headerlink" title="4.3 解析："></a>4.3 解析：</h3><p>操作XML文档，将XML文档中的数据读入内存。</p>
<ul>
<li>操作XML文档：<ul>
<li>  解析（读取）：将XML文档中的数据读入内存。</li>
<li>  写入：将内存中的数据写入XML文档，持久化存储。</li>
</ul>
</li>
</ul>
<p>解析 XML 的方式：</p>
<ul>
<li>DOM：将XML文档的内容加载进内存，形成DOM树<ul>
<li>  优点：操作方便，可以对文档CRUD</li>
<li>  缺点：占内存。</li>
</ul>
</li>
<li>SAX：逐行读取【读一行，释放一行】，基于 事件驱动。【适合小设备】<ul>
<li>  优点：占用内存少（只占1行)</li>
<li>  缺点：只能用于读取。</li>
</ul>
</li>
</ul>
<h4 id="4-3-1-XML的常见的解析器："><a href="#4-3-1-XML的常见的解析器：" class="headerlink" title="4.3.1 XML的常见的解析器："></a>4.3.1 XML的常见的解析器：</h4><p>XML 解析器：根据以上的2种XML解析方式而编写的工具包。</p>
<ul>
<li>  JAXP：sun公司提供的XML解析器。【DOM + SAX】性能差，很少使用。</li>
<li>  DOM4J：一款性能优秀的解析器。</li>
<li>  Jsoup：一种HTML解析器，也可以用于解析XML。</li>
<li>  PULL：一款安卓内置的解析器，采用SAX解析的方式。</li>
</ul>
<h4 id="4-3-2-Jsoup解析器的使用："><a href="#4-3-2-Jsoup解析器的使用：" class="headerlink" title="4.3.2 Jsoup解析器的使用："></a>4.3.2 Jsoup解析器的使用：</h4><p>快速入门：</p>
<ul>
<li>  步骤：</li>
</ul>
<blockquote>
<ol>
<li> 导入<code>JAR包</code>：<code>jsoup-1.11.2.jar</code></li>
<li> 获取<code>DOM对象</code>。</li>
<li> 获取<code>所需的标签</code>。</li>
<li> 获取<code>数据</code>。</li>
</ol>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Element;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.select.Elements;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsoupDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1. 获取 xml 文件的路径</span></span><br><span class="line">        String path = JsoupDemo.class.getClassLoader().getResource(<span class="string">&quot;users.xml&quot;</span>).getPath();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. Jsoup解析XML,得到DOM对象</span></span><br><span class="line">        Document dom = Jsoup.parse(<span class="keyword">new</span> File(path),<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 获取标签对象的数组</span></span><br><span class="line">        Elements Elements = dom.getElementsByTag(<span class="string">&quot;name&quot;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 4. 获取标签</span></span><br><span class="line">        Element element = Elements.get(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5. 得到标签包裹的文本</span></span><br><span class="line">        String name = element.text();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>小结：</p>
<blockquote>
<p>  以上示例代码中的对象。</p>
<ul>
<li><p><code>Jsoup工具类</code>，解析HTML、XML，返回 Document 对象</p>
<ul>
<li>  <code>parse(File in ,String charSetName)</code>：解析HTML、XML<strong>文件</strong></li>
<li>  <code>parse(String html)</code>：解析HTML、XML<strong>字符串</strong></li>
<li><code>parse(Url 网址,int 超时)</code></li>
</ul>
</li>
<li><p><code>Document</code>：用于获取<code>Elements</code>对象。【<code>getElementsByXXXXXXX()</code>】</p>
</li>
<li><p><code>Elements</code>：Element对象的集合，相当于<code>ArrayList&lt;Element&gt;</code></p>
<ul>
<li>  获取子元素：<code>getElementsByXXX( )</code></li>
<li>  获取属性值：<code>String attr(String Key)</code>,根据属性名来获取属性值</li>
<li>获取文本（被包裹的内容）：<ul>
<li>  <code>String text()</code>：获取纯文本</li>
<li>  <code>String html()</code>：获取innerHTML的内容（即：包括子标签）</li>
</ul>
</li>
</ul>
</li>
<li><p>  <code>Element</code>：元素对象</p>
</li>
<li><p>  <code>Node</code>：结点对象。</p>
</li>
</ul>
</blockquote>
<h5 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例-1："></a>示例-1：</h5><ul>
<li>  XML部分：</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">users</span> [</span></span><br><span class="line"><span class="meta">	<span class="meta">&lt;!ELEMENT <span class="meta-keyword">users</span> (<span class="meta-keyword">user</span>+)&gt;</span></span></span><br><span class="line"><span class="meta">	<span class="meta">&lt;!ELEMENT <span class="meta-keyword">user</span> (<span class="meta-keyword">name</span>,<span class="meta-keyword">age</span>)&gt;</span></span></span><br><span class="line"><span class="meta">	<span class="meta">&lt;!ELEMENT <span class="meta-keyword">name</span> (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">	<span class="meta">&lt;!ELEMENT <span class="meta-keyword">age</span> (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">	<span class="meta">&lt;!ATTLIST <span class="meta-keyword">user</span> <span class="meta-keyword">id</span> <span class="meta-keyword">ID</span> <span class="meta-keyword">#REQUIRED</span>&gt;</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">&quot;s1&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">age</span>&gt;</span>20<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">&quot;s2&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">age</span>&gt;</span>30<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>  Jsoup解析：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Element;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.select.Elements;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsoupDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        String path = JsoupDemo.class.getClassLoader().getResource(<span class="string">&quot;users.xml&quot;</span>).getPath();</span><br><span class="line"></span><br><span class="line">        Document dom = Jsoup.parse(<span class="keyword">new</span> File(path), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Elements userList = dom.getElementsByTag(<span class="string">&quot;user&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Element element = userList.get(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// 获取属性值</span></span><br><span class="line">        String el_id = element.attr(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        System.out.println(el_id);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;-------&quot;</span>);</span><br><span class="line"><span class="comment">// 获取纯文本</span></span><br><span class="line">        String txt = element.text();</span><br><span class="line">        System.out.println(txt);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;-------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取innerHTML</span></span><br><span class="line">        String html = element.html();</span><br><span class="line">        System.out.println(html);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;-------&quot;</span>);</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 获取css选择器-标签名为 xxx 的元素</span></span><br><span class="line">        Elements t = dom.select(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">        System.out.println(t);</span><br><span class="line">        </span><br><span class="line">        Elements t = dom.select(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        System.out.println(t);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取id值为 s1 的元素         </span></span><br><span class="line">        System.out.println(<span class="string">&quot;-------&quot;</span>);</span><br><span class="line">        Elements t2 = dom.select(<span class="string">&quot;#s1&quot;</span>);</span><br><span class="line">        System.out.println(t2);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>











<h5 id="快捷查询到元素：【2种方式】"><a href="#快捷查询到元素：【2种方式】" class="headerlink" title="快捷查询到元素：【2种方式】"></a>快捷查询到元素：【2种方式】</h5><ul>
<li>  <code>selector</code>：<code>Elements select(String css选择器)</code> =》 见上1个示例</li>
</ul>
<ul>
<li><p><code>XPath</code>：<a href="https://www.runoob.com/xpath/xpath-syntax.html">XPath 语法</a></p>
<ul>
<li>  导入<code>jsoup-1.11.2.jar</code> + <code>JsoupXpath-0.3.2.jar</code></li>
<li>  获取DOM对象</li>
<li>  获取JXDom对象</li>
<li>获取结点集【利用Xpath的语法】</li>
</ul>
</li>
</ul>
<h5 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例-2："></a>示例-2：</h5><p>XML部分：见上面的 <code>示例-1</code></p>
<p>Xpath部分：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.wanghaomiao.xpath.model.JXDocument;</span><br><span class="line"><span class="keyword">import</span> cn.wanghaomiao.xpath.model.JXNode;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsoupDemo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取XML文件的路径</span></span><br><span class="line">        String path = JsoupDemo2.class.getClassLoader().getResource(<span class="string">&quot;users.xml&quot;</span>).getPath();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建DOM对象       </span></span><br><span class="line">        Document dom = Jsoup.parse(<span class="keyword">new</span> File(path),<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 创建JXDom对象        </span></span><br><span class="line">        JXDocument jxdoc = <span class="keyword">new</span> JXDocument(dom);</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 以下的 “//user” 表示获取所有user结点</span></span><br><span class="line">        List&lt;JXNode&gt; jxNodes = jxdoc.selN(<span class="string">&quot;//user&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (JXNode jxNode : jxNodes) &#123;</span><br><span class="line">            System.out.println(jxNode);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;-------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下的 “//user/age” 表示获取所有user结点下的age标签</span></span><br><span class="line">        List&lt;JXNode&gt; jxNodes2 = jxdoc.selN(<span class="string">&quot;//user/age&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (JXNode jxNode2 : jxNodes2) &#123;</span><br><span class="line">            System.out.println(jxNode2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;-------&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下的 “//user[@id]” 表示获取的所有user结点中，具有属性名id的元素</span></span><br><span class="line">        List&lt;JXNode&gt; jxNodes3 = jxdoc.selN(<span class="string">&quot;//user[@id]&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (JXNode jxNode3 : jxNodes3) &#123;</span><br><span class="line">            System.out.println(jxNode3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;-------&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下的 “//user[@id=‘s1’]” 表示获取的所有user结点中，具有属性名为id,且属性id的值为s1的元素</span></span><br><span class="line">        List&lt;JXNode&gt; jxNodes4 = jxdoc.selN(<span class="string">&quot;//user[@id=&#x27;s1&#x27;]&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (JXNode jxNode4 : jxNodes4) &#123;</span><br><span class="line">            System.out.println(jxNode4);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>









<h2 id="5-Web-Tomcat服务器"><a href="#5-Web-Tomcat服务器" class="headerlink" title="5. Web-Tomcat服务器"></a>5. Web-Tomcat服务器</h2><h3 id="5-1-Web基础回顾："><a href="#5-1-Web基础回顾：" class="headerlink" title="5.1 Web基础回顾："></a>5.1 Web基础回顾：</h3><p>1、软件架构：</p>
<blockquote>
<ul>
<li>  C/S</li>
<li>  B/S</li>
</ul>
</blockquote>
<p>2、资源分类：</p>
<blockquote>
<ul>
<li>  静态资源：所有用户访问后的结果都一样，如：HTML、CSS、JS、图片【可<code>直接被浏览器解析</code>】</li>
<li>  动态资源：每个用户访问后的结果可能不同，如：Serverlet / jsp、php、asp【先<code>转换为静态资源</code>】</li>
</ul>
</blockquote>
<p>3、网络通信三要素：</p>
<blockquote>
<ul>
<li>  IP地址：网络中的唯一标识。</li>
<li>  端口号：应用程序的唯一标志，0~65535</li>
<li>  协议：规定数据传输的规则。【TCP、UDP】</li>
</ul>
</blockquote>
<h3 id="5-2-Web服务器-概述："><a href="#5-2-Web服务器-概述：" class="headerlink" title="5.2 Web服务器-概述："></a>5.2 Web服务器-概述：</h3><ul>
<li><p>  服务器：安装了服务器软件的计算机。</p>
</li>
<li><p>  服务器软件：接收、处理请求，做出响应。</p>
</li>
<li><p>  web服务器软件【web容器】：部署Web项目，使得用户可以用浏览器访问。</p>
</li>
</ul>
<p><strong>注意</strong>：动态资源必须要在Web容器中才能运行。</p>
<p><code>JavaEE</code>：Java在企业级开发中的<code>规范的总和</code>。共有<code>13项</code>大的规范。</p>
<p>创建的Java相关的Web服务器：</p>
<blockquote>
<ul>
<li>  webLogic：oracle公司，大型JavaEE服务器，收费，支持JavaEE的所有规范(13种)。</li>
<li>  webSphere：IBM公司，大型JavaEE服务器，收费，支持JavaEE的所有规范(13种)。</li>
<li>  JBoss：JBoss公司，大型JavaEE服务器，收费，支持JavaEE的所有规范(13种)。</li>
<li>  <code>Tomcat</code>：Apache基金会，中小型JavaEE服务器，免费，仅支持<code>部分JavaEE的规范</code>。</li>
</ul>
</blockquote>
<h3 id="5-3-Tomcat的使用："><a href="#5-3-Tomcat的使用：" class="headerlink" title="5.3 Tomcat的使用："></a>5.3 Tomcat的使用：</h3><p>部分笔记：<a href="https://cder123.github.io/2021/06/02/Nginx-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/#5-1-%E6%AD%A5%E9%AA%A4%E4%B8%80%EF%BC%9A%E5%AE%89%E8%A3%85Tomcat">Nginx-入门-5.1小节中 | Cyw的笔记栈 (cder123.github.io)</a></p>
<p>Tomcat：web服务器软件</p>
<h4 id="5-3-1-Tomcat需要掌握的操作："><a href="#5-3-1-Tomcat需要掌握的操作：" class="headerlink" title="5.3.1 Tomcat需要掌握的操作："></a>5.3.1 Tomcat需要掌握的操作：</h4><blockquote>
<ol>
<li><p> 下载:</p>
</li>
<li><p> 安装：</p>
</li>
<li><p> 启动</p>
</li>
<li><p> 关闭</p>
</li>
<li><p> 卸载</p>
</li>
<li><p> 配置+部署</p>
</li>
</ol>
</blockquote>
<ol>
<li> 下载：</li>
</ol>
<p>版本：<code>Tomcat-8.5-windows版</code>  =》 <a href="https://tomcat.apache.org/download-80.cgi">Apache Tomcat下载-windows版</a></p>
<ol start="2">
<li> 安装：</li>
</ol>
<p>解压压缩包，解压后的路径中<code>不要有中文、空格</code>。</p>
<p>Tomcat的目录结构：</p>
<p><img src="https://z3.ax1x.com/2021/06/19/RCTzQI.png" alt="tomcat-目录结构"></p>
<p>Tomcat的各个目录的作用：</p>
<blockquote>
<ul>
<li>  bin：可执行的二进制文件。</li>
<li>  conf：配置文件。</li>
<li>  lib：依赖 Jar 包。</li>
<li>  logs：日志文件</li>
<li>  temp：临时文件</li>
<li>  webapps：存放、部署web项目</li>
<li>  work：存放运行的时候的数据</li>
</ul>
</blockquote>
<ol start="3">
<li> 启动：</li>
</ol>
<blockquote>
<ul>
<li>  windows环境下双击运行：<code>bin/startup.bat</code></li>
<li>  打开浏览器，输入服务器的 IP地址+端口：<code>localhost:8080</code>  (访问自己)</li>
</ul>
<p>  注意：可以在<code>conf/server.xml</code>中将<code>Connector标签</code>中的<code>8080</code>该为<code>80</code>，这样可以省略端口号</p>
</blockquote>
<p>启动时，可能遇到的问题：</p>
<blockquote>
<ul>
<li><p>黑窗口一闪而过：</p>
<ul>
<li>  原因：JAVA_HOME环境变量配置错误。</li>
<li>  解决：正确配置JAVA_HOME环境变量。</li>
</ul>
</li>
<li><p>启动报错：</p>
<ul>
<li><p>  原因：端口已经被占用【查看端口占用情况：netstat -ano】</p>
</li>
<li><p>解决：关闭占用8080端口的进程 或 修改自身的端口号【<code>conf/server.xml</code>，将<code>Connector标签</code>中的<code>8080</code>该为<code>别的端口</code>，保存，重新运行<code>bin/startup.bat</code>】</p>
</li>
</ul>
</li>
</ul>
</blockquote>
<ol start="4">
<li> 关闭：</li>
</ol>
<blockquote>
<ul>
<li>  正常关闭：<code>bin/shutdown.bat</code>  或 <code> ctrl + c</code></li>
<li>  强制关闭：点击启动窗口的x</li>
</ul>
</blockquote>
<ol start="5">
<li> 卸载：</li>
</ol>
<blockquote>
<p>  直接删除目录。</p>
</blockquote>
<ol start="6">
<li> 配置：</li>
</ol>
<p>部署项目的方式【3种】：</p>
<ul>
<li>  背景：</li>
</ul>
<blockquote>
<p>  项目：<code>hello/hello.html</code></p>
</blockquote>
<ul>
<li>  第一种：</li>
</ul>
<blockquote>
<ol>
<li> 直接将<code>项目文件夹</code>放入<code>webapps</code>目录下。</li>
<li> 简化部署：将项目打成<code>.war</code>包，运行<code>bin/startup.bat</code>，将war包拖入<code>webapps</code>目录下，则自动解压缩。</li>
</ol>
</blockquote>
<ul>
<li>  第二种：【无需复制项目到<code>webapps</code>目录下】</li>
</ul>
<blockquote>
<ul>
<li><p>打开<code>conf/server.xml</code>文件，拉到最后，在<code>Host</code>标签中，添加<code>&lt;Context docBase=&quot;E:\hello&quot; path=&quot;/abc&quot; /&gt;</code>。【假设项目放在<code>E:\hello</code>中】</p>
<ul>
<li>其中：<code>docBase</code>为物理路径，<code>path</code>为虚拟路径，浏览器访问时<code>/abc/hello.html</code></li>
</ul>
</li>
<li><p>  重新启动服务器【运行<code>bin/startup.bat</code>】</p>
</li>
</ul>
</blockquote>
<ul>
<li>  第三种：【推荐，无需重启Tomcat，】</li>
</ul>
<blockquote>
<ul>
<li><p>在<code>conf/Catalina/localhost/</code>目录下，新建XML配置文件,<code>123.xml</code>，输入<code>&lt;Context docBase=&quot;E:\hello&quot; path=&quot;/abc&quot; /&gt;</code>。【假设项目放在<code>E:\hello</code>中】</p>
<ul>
<li>  其中：<code>docBase</code>为物理路径，<code>path</code>为虚拟路径。浏览器访问时，直接输入XML配置文件名+html页面名：<code>/123/hello.html</code>就可访问。</li>
</ul>
<p>  如果不想让配置文件生效，可以将配置文件名最后面加上<code>_bak</code></p>
</li>
</ul>
</blockquote>
<h4 id="5-3-2-静态项目、动态项目："><a href="#5-3-2-静态项目、动态项目：" class="headerlink" title="5.3.2 静态项目、动态项目："></a>5.3.2 静态项目、动态项目：</h4><ol>
<li> 目录结构：</li>
</ol>
<p>动态项目：</p>
<blockquote>
<p>  – 项目根目录</p>
<p>  ​    – WEB-INF 目录</p>
<p>  ​            – web.xml：存放 项目的<code>核心配置文件</code>。</p>
<p>  ​            – classes 目录：存放<code>字节码文件</code>的目录。</p>
<p>  ​            – lib 目录：存放<code>依赖Jar包</code>的目录。</p>
</blockquote>
<ol start="2">
<li> 在 IDEA 中集成、使用 Tomcat：</li>
</ol>
<ul>
<li>  <code>run -&gt; Edit Configuration -&gt; 左边 default【或+号】 -&gt; Tomcat Server -&gt; Local </code> </li>
<li>  <code>右边 configure -&gt; 选中Tomcat的安装目录 -&gt; 确定 -&gt; 应用</code></li>
<li>  创建JavaEE项目，测试 Tomcat是否集成成功。</li>
</ul>
<hr>
<h3 id="5-4-解决控制台中文乱码问题"><a href="#5-4-解决控制台中文乱码问题" class="headerlink" title="5.4 解决控制台中文乱码问题"></a>5.4 解决控制台中文乱码问题</h3><p>解决 IDEA 和 Tomcat集成时的控制台中文乱码问题：</p>
<ul>
<li>  【推荐】</li>
</ul>
<blockquote>
<p>  <code>打开IDEA</code>   -&gt;  <code>help</code>  -&gt; <code>edit coustem VM options </code> -&gt; <code>添加 -Dfile.encoding=UTF-8</code></p>
</blockquote>
<ul>
<li>  (备用：不推荐)<a href="https://blog.csdn.net/gaogzhen/article/details/107307459">Java-IDEA2020-IDEA或者启动Tomcat控制台中文乱码解决_gaogzhen的博客-CSDN博客_idea启动tomcat控制台乱码</a>：<code>https://blog.csdn.net/gaogzhen/article/details/107307459</code></li>
</ul>
<hr>
<h2 id="6-创建第一个-Java-EE项目"><a href="#6-创建第一个-Java-EE项目" class="headerlink" title="6. 创建第一个 Java EE项目"></a>6. 创建第一个 Java EE项目</h2><ul>
<li>  <a href="https://blog.csdn.net/qq_45738810/article/details/107842532">IEAD 2020.2 创建web、Spring项目</a></li>
</ul>
<p>创建第一个 Java EE项目-步骤：</p>
<blockquote>
<ol>
<li> 创建一个普通的 JavaSE工程。</li>
<li> 右键 <code>工程名</code> -》<code>add FrameWork Support</code> -》<code>WebApplication </code> -》OK。</li>
<li> 在IDEA 中<code>集成 Tomcat服务器</code>。</li>
<li> <code>启动</code> JavaWeb，查看 Tomcat  是否 集成成功、可用。</li>
</ol>
</blockquote>
<p>上面的第三步：集成Tomcat服务器：</p>
<ul>
<li>  <code>Run -&gt; Edit Configuration </code></li>
</ul>
<p><img src="https://z3.ax1x.com/2021/06/19/RPd978.png" alt="集成Tomcat服务器-1"></p>
<ul>
<li>  添加Tomcat：</li>
</ul>
<p><img src="https://z3.ax1x.com/2021/06/19/RPdwND.png" alt="添加Tomcat"></p>
<img src="https://z3.ax1x.com/2021/06/19/RPdogs.png" alt="RPdogs.png" border="0" />

<ul>
<li>  部署项目到Tomcat：</li>
</ul>
<img src="https://z3.ax1x.com/2021/06/19/RPwMrt.png" alt="RPwMrt.png" border="0" />

<ul>
<li>  运行项目：</li>
</ul>
<img src="https://z3.ax1x.com/2021/06/19/RPwgz9.png" alt="RPwgz9.png" border="0" />























<h2 id="7-Servlet"><a href="#7-Servlet" class="headerlink" title="7. Servlet"></a>7. Servlet</h2><h3 id="7-1-Servlet-概述："><a href="#7-1-Servlet-概述：" class="headerlink" title="7.1 Servlet 概述："></a>7.1 Servlet 概述：</h3><p>Servlet： Server Applet，运行在服务器端的小程序。【<code>一种 由Tomcat等服务器解析 .class文件</code>】</p>
<p><code>Servlet </code>实际上就是一组<code>接口</code>，接口中<code>定义了</code>一些 让<code>Java类</code>能够<code>被 浏览器访问、Tomcat 识别的规则</code>。将来我们需要<code>自定义一个类</code>，<code>实现</code>Servlet<code>接口</code>，<code>重写</code>接口中的<code>方法</code>。</p>
<p><code>import javax.servlet.*;</code></p>
<h3 id="7-2-Servlet快速入门："><a href="#7-2-Servlet快速入门：" class="headerlink" title="7.2 Servlet快速入门："></a>7.2 Servlet快速入门：</h3><p>步骤：</p>
<ol>
<li> 创建JavaEE项目。【右键项目名 -&gt; 添加Framework -&gt; webApplication 】，【集成 Tomcat】</li>
<li> 自定义一个类，实现Servlet接口。【需先导入<code>Tomcat安装目录 -&gt; lib -&gt; servlet-api.jar</code>】</li>
<li> 重写 Servlet接口中的方法。</li>
<li> 配置Servlet。【在项目中的 <code>web -&gt; WEB-INF -&gt; web.xml</code>里配置】</li>
</ol>
<p>配置Servlet：</p>
<p>【访问顺序：<code>web.xml</code> =》 <code>ServletDemo1.class</code>】</p>
<p><code>web.xml</code>：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    1. 配置Servlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demo_1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">// 全类名【包名+类名】</span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.demo.web.servlet.ServletDemo1<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">// 0或负数：Tomcat启动时，执行Servlet接口的init() </span><br><span class="line">// 正数：浏览器访问 资源页面时，执行Servlet接口的init()         </span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>5<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    2. 配置servlet的映射--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span>        </span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demo_1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">// 在浏览器地址栏中的显示        </span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/demo1<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p><code>cn.demo.web.servlet.ServletDemo1.class</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.demo.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo1</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供服务的方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 浏览器一访问【localhost/demo1】,IDEA的控制台就打印 “Hello Servlet !!”</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello Servlet !!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="7-3-Servlet的执行原理："><a href="#7-3-Servlet的执行原理：" class="headerlink" title="7.3 Servlet的执行原理："></a>7.3 Servlet的执行原理：</h3><p>以<code>ServletDemo1.class</code>为例：</p>
<ul>
<li>  浏览器输入URL</li>
<li>  找 项目下的 <code>web.xml</code>下的<code>&lt;url-pattern&gt;</code>标签。</li>
<li>  <code>Tomcat </code>利用<code>反射</code>【Class.forName( )】，将<code>&lt;servlet-class&gt;</code> 标签中的<code>全类名</code>所对应的<code>字节码 加载 入内存</code>。</li>
<li>  创建对象 ：<code>ServletDemo1.newInstance( )</code></li>
<li>  调用 <code>ServletDemo1.service( )</code>，执行方法中的代码。</li>
</ul>
<p><img src="https://z3.ax1x.com/2021/06/20/RiJnZF.png" alt="servlet的原理"></p>
<h3 id="7-4-Servlet的生命周期-方法："><a href="#7-4-Servlet的生命周期-方法：" class="headerlink" title="7.4 Servlet的生命周期-方法："></a>7.4 Servlet的生命周期-方法：</h3><p>1、Servlet的生命周期-方法：</p>
<ul>
<li><p>  <code>public void init(ServletConfig )</code>： 创建 Servlet 时执行，只执行一次。</p>
</li>
<li><p>  <code>public void service(servletRequest, ServletResponse )</code>：提供服务，每次访问servlet时，执行，执行多次。</p>
</li>
<li><p>  <code>public void destroy( )</code>：销毁 Servlet 时【服务器 <strong>正常关闭</strong> 时】，执行。</p>
</li>
</ul>
<hr>
<p>2、其他：</p>
<ul>
<li><p>  <code>public ServletConfig getServletConfig(   )</code>：获取Servlet的配置对象。</p>
</li>
<li><p>  <code>public String getServletInfo( )</code>：获取配置信息。【版本、作者】</p>
</li>
</ul>
<hr>
<p>创建-详解【Init（）】：</p>
<ul>
<li>  <code>public void init(ServletConfig )</code>： 创建 Servlet 时执行，只执行一次。</li>
</ul>
<p> <code>&lt;load-on-startup&gt;5&lt;/load-on-startup&gt;</code>：指定创建的时间。【<code>web.xml</code>中的<code>&lt;servlet&gt;</code>标签下】</p>
<blockquote>
<ul>
<li>  负数：在第一次<strong>访问</strong>时，调用<code>init()</code></li>
<li>  0或正数：服务器<strong>启动</strong>时，调用<code>init()</code></li>
</ul>
</blockquote>
<p>问题：</p>
<blockquote>
<p>  init( )在多个用户同时访问时，出现<code>线程安全</code>问题。</p>
</blockquote>
<p>解决：</p>
<blockquote>
<p>  不要在 Servlet 中定义成员变量。【即使定义了成员变量，也不要对该变量进行修改】</p>
</blockquote>
<hr>
<h3 id="7-5-Servlet-3-0-："><a href="#7-5-Servlet-3-0-：" class="headerlink" title="7.5 Servlet 3.0 ："></a>7.5 Servlet 3.0 ：</h3><p>好处：支持使用<code>注解</code> 来配置 Servlet，无需<code>web.xml</code></p>
<p>步骤：</p>
<blockquote>
<ol>
<li> 创建JavaEE项目，选择Servlet3.0版本以上。</li>
<li> 自定义一个类，实现Servlet接口。</li>
<li> 重写Servlet接口的方法。</li>
<li> 在自定义的类上，使用<code>@WebServlet</code>注解来配置 Servlet 。</li>
</ol>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用注解配置Servlet</span></span><br><span class="line"><span class="comment">//【等价于 @WebServlet(&quot;/demo&quot;) 】</span></span><br><span class="line">    <span class="meta">@WebServlet(urlPatterns=&#123;&quot;/demo&quot;&#125;)</span> </span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="7-6-IDEA和Tomcat的相关配置："><a href="#7-6-IDEA和Tomcat的相关配置：" class="headerlink" title="7.6 IDEA和Tomcat的相关配置："></a>7.6 IDEA和Tomcat的相关配置：</h3><ul>
<li>  IDEA会为每个Tomcat项目单独分配一份配置文件，存放位置可以查看运行的时候控制台的日志【Catalina_Base】</li>
</ul>
<ul>
<li><strong>IDEA工作空间下的项目</strong> 和 <strong>Tomcat部署的项目</strong>：<ul>
<li>  Tomcat 部署的项目 来自 IDEA工作空间下的项目的Web目录，但不是同一个【相当于 复制了一份】</li>
<li>  IDEA 项目的<code>WEB-INF目录</code>下的文件无法直接被<code>浏览器访问</code>。</li>
</ul>
</li>
</ul>
<ul>
<li>  断点调试：以 <code>debug</code>的形式启动。</li>
</ul>
<ul>
<li>  解决 IDEA中的 Tomcat控制台的<code>乱码</code>：<a href="https://www.jianshu.com/p/b438332d1069">解决Tomcat日志-控制台乱码</a></li>
</ul>
<h3 id="7-7-Servlet的体系结构："><a href="#7-7-Servlet的体系结构：" class="headerlink" title="7.7 Servlet的体系结构："></a>7.7 Servlet的体系结构：</h3><p>Servlet接口的两个子抽象类：</p>
<ul>
<li>  GenericServlet：只需重写抽象的<code>service()</code>方法，该类的其他方法都已做了空实现【方法体 内无代码】</li>
<li>  HttpServlet【常用】：简化了书写判断【Get、POST】等请求方式的的代码。【doGet( )、doPost( )】</li>
</ul>
<p>【使用<code>子类的原因</code>：为了<code>无需</code>再<code>重写</code>Servlet接口的<code>所有方法</code>（只<code>按需</code>重写）】</p>
<p>HttpServlet的使用步骤：</p>
<blockquote>
<ul>
<li>  自定义一个类，extends 继承 HttpServlet类</li>
<li>  覆盖重写 <code>doGet( )</code>、<code>doPost( )</code></li>
</ul>
</blockquote>
<h4 id="1-Servlet："><a href="#1-Servlet：" class="headerlink" title="1. Servlet："></a>1. Servlet：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.my.servletdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/demo1&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;This is Demo1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="2-GenericServlet："><a href="#2-GenericServlet：" class="headerlink" title="2. GenericServlet："></a>2. GenericServlet：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.my.servletdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.GenericServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/demo2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> <span class="keyword">extends</span> <span class="title">GenericServlet</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;This is Demo2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="3-HttpServlet"><a href="#3-HttpServlet" class="headerlink" title="3. HttpServlet:"></a>3. HttpServlet:</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.my.servletdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/demo3&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="7-8-Servlet的配置-："><a href="#7-8-Servlet的配置-：" class="headerlink" title="7.8 Servlet的配置 ："></a>7.8 Servlet的配置 ：</h3><p>注解<code>@WebServlet(参数1，参数2.......)</code> 中的参数：</p>
<ul>
<li>  <code>urlpattens</code>：路径，可以有多个<code>@WebServlet(&#123;&quot;/d4&quot;,&quot;/dd4&quot;,&quot;ddd4&quot;&#125;)</code></li>
</ul>
<blockquote>
<p>  urlpattens路径的3种规则：</p>
<ul>
<li>  <code>/xxx</code></li>
<li>  <code>/xxx/xxx</code>：多层路径【目录结构】</li>
<li>  <code>*.do</code>：拓展名匹配【注意：此方式没有斜杠，do为自定义的拓展名】</li>
</ul>
</blockquote>
<h2 id="8-HTTP"><a href="#8-HTTP" class="headerlink" title="8. HTTP"></a>8. HTTP</h2><h3 id="8-1-HTTP概述："><a href="#8-1-HTTP概述：" class="headerlink" title="8.1 HTTP概述："></a>8.1 HTTP概述：</h3><p>概念：超文本传输协议。</p>
<p>传输协议：定义了通信时传输的格式。</p>
<p>特点：</p>
<blockquote>
<ul>
<li>  基于TCP/IP协议</li>
<li>  默认端口：80</li>
<li>  请求/响应模型：1请求，1响应</li>
<li>  无状态：每次请求之间相互独立，请求与请求之间不能交换数据。</li>
</ul>
</blockquote>
<p>HTTP协议的版本：</p>
<blockquote>
<ul>
<li>  1.0版：建立连接、请求、响应、断开连接【每一次请求都需重新建立连接】</li>
<li>  1.1版：建立连接、请求、响应【复用连接】</li>
</ul>
</blockquote>
<h3 id="8-2-请求报文："><a href="#8-2-请求报文：" class="headerlink" title="8.2 请求报文："></a>8.2 请求报文：</h3><p>Request报文的格式：【请求行 + 请求头 + 空格 + 请求体】</p>
<blockquote>
<ul>
<li><p>请求行</p>
<p>  ​    格式：</p>
<p>  ​                请求方式    请求url    请求协议/版本号</p>
<p>  ​    例如：    GET <a href="http://localhost/login.html">http://localhost/login.html</a>    HTTP/1.1</p>
<pre><code>   请求方式：
                                                                                                                                                                                                                        
       GET：参数放在url后，不安全，url的长度有限制
       POST：参数放在请求体里，url长度无限制，相对安全
</code></pre>
</li>
<li><p>请求头：</p>
<p>  ​    格式：</p>
<p>  ​                请求头名：请求头值，请求头值</p>
<p>  ​    常见的请求体：</p>
<pre><code>      - HOST：主机名，IP地址
      - User-Agent【常用】：浏览器版本信息（可在服务端获取该信息，并做一些处理来解决兼容性问题）
      - Referer【常用】：来自哪里（作用：防盗链，统计）
      - Accept：浏览器允许接收的信息。
      - Connection：连接状态
</code></pre>
</li>
<li><p>  空行</p>
</li>
<li><p>  请求体</p>
</li>
</ul>
</blockquote>
<h4 id="8-2-1-Request-原理："><a href="#8-2-1-Request-原理：" class="headerlink" title="8.2.1 Request 原理："></a>8.2.1 Request 原理：</h4><p><img src="https://z3.ax1x.com/2021/06/26/R3old0.png" alt="req + res"></p>
<p>注意：</p>
<ul>
<li>  Request 和 Response对象是由Tomcat服务器创建的，</li>
<li>  Request对象：获取消息</li>
<li>  Response对象：响应消息</li>
</ul>
<h4 id="8-2-2-Request对象的继承体系结构："><a href="#8-2-2-Request对象的继承体系结构：" class="headerlink" title="8.2.2 Request对象的继承体系结构："></a>8.2.2 Request对象的继承体系结构：</h4><ul>
<li>ServletRequest 接口<ul>
<li>HttpServletRequest 接口<ul>
<li>  org.apache.catalina.connector.RequestFacade 类：由Tomcat来实现</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="8-2-3-Request对象的概念："><a href="#8-2-3-Request对象的概念：" class="headerlink" title="8.2.3 Request对象的概念："></a>8.2.3 Request对象的概念：</h4><ul>
<li><p>获取请求数据：</p>
<ul>
<li><p>请求行： 格式 =》<code>GET    /day1/demo1?username=zhangsan    HTTP/1.1</code></p>
<blockquote>
<p>   获取请求方式：GET</p>
<p>  ​            <code>String getMethod( )</code></p>
<p>  获取虚拟目录：【常用】 /day1</p>
<p>  ​            <code>    String getContextPath( )</code></p>
<p>  获取Servlet的路径：/demo1</p>
<p>  ​            <code>    String getServletPath( )</code></p>
<p>  获取GET请求的参数：username=zhangsan </p>
<p>  ​            <code>String getQueryString( )</code></p>
<p>  获取URI：【常用】</p>
<p>  ​            <code>String getRequestURI( )</code>：<code>/day1/demo1</code></p>
<p>  ​            <code>StringBuffer getRequestURL( )</code>：<code>http://localhost/day1/demo1</code></p>
<p>  获取协议、版本号：Http/1.1</p>
<p>  ​            <code>String getProtocol( )</code></p>
<p>  获取客户机的IP：</p>
<p>  ​            <code>String getRemoteAddr( )</code></p>
</blockquote>
</li>
<li><p>请求头： 格式 =》<code>UserAgent:Chrome</code></p>
<blockquote>
<p>  获取请求头：</p>
<p>  ​                <code>String getHeader(String name)</code>：【常用】，其中的name不区分大小写。</p>
<p>  ​                <code>Eumeration&lt;String&gt; getHeaderNames()</code>：返回1个迭代器</p>
<pre><code>                          + hasMoreElements( )
                          + nextElement( )
</code></pre>
</blockquote>
</li>
</ul>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取请求头</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> cn.mydemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Enumeration;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/demo2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// get / post</span></span><br><span class="line">        String method = req.getMethod();</span><br><span class="line">        System.out.println(method);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 虚拟目录</span></span><br><span class="line">        String contextPath = req.getContextPath();</span><br><span class="line">        System.out.println(contextPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 目录</span></span><br><span class="line">        String servletPath = req.getServletPath();</span><br><span class="line">        System.out.println(servletPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// http/1.1</span></span><br><span class="line">        String protocol = req.getProtocol();</span><br><span class="line">        System.out.println(protocol);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// /demo2</span></span><br><span class="line">        String requestURI = req.getRequestURI();</span><br><span class="line">        System.out.println(requestURI);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// http://localhost/demo2</span></span><br><span class="line">        StringBuffer requestURL = req.getRequestURL();</span><br><span class="line">        System.out.println(requestURL);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 客户端ip</span></span><br><span class="line">        String remoteAddr = req.getRemoteAddr();</span><br><span class="line">        System.out.println(remoteAddr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 请求头的所有键</span></span><br><span class="line">        Enumeration&lt;String&gt; headerNames = req.getHeaderNames();</span><br><span class="line">        <span class="keyword">while</span>(headerNames.hasMoreElements())&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line">            <span class="comment">// 键</span></span><br><span class="line">            String s = headerNames.nextElement();</span><br><span class="line">            <span class="comment">// 值</span></span><br><span class="line">            String header = req.getHeader(s);</span><br><span class="line">            System.out.println(s+<span class="string">&quot; = &quot;</span>+header);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>请求体：</p>
<blockquote>
<p>  只有POST方式才有请求体，请求体中封装了请求的参数。</p>
<p>  步骤：</p>
<ul>
<li>Request 获取<code>流对象</code>：<ul>
<li>  <code>BufferedReader getReader()</code>获取字符输入流，只操作字符。</li>
<li>  <code>ServletInputStream getInputStream()</code>：获取字节输入流。</li>
</ul>
</li>
<li>  从<code>流对象</code>中获取<code>数据</code>。</li>
</ul>
</blockquote>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>其他：</p>
<ul>
<li><p>获取请求参数：【GET、POST】</p>
<p>  ​        解决参数的中文乱码：</p>
<p>  ​                        GET：参数中的中文乱码在Tomcat8以上的版本中已被解决。</p>
<p>  ​                        POST：中文乱码可以在获取参数前通过设置Request的编码<code>req.setCharacterEncoding(“utf-8”)</code></p>
<blockquote>
<p>  <code>String getParamter(String name)</code>根据参数名获取参数值，user = lisi&amp;psw=123。</p>
<p>  <code>String[] getParamterValues(String name)</code>根据参数名获取参数值的数组，hobby=aaa&amp;hobby=bbb</p>
<p>  <code>Eumeration&lt;String&gt; getParamterNames(String name)</code> 获取所有参数名</p>
<p>  <code>Map&lt;String,String[]&gt; getParamterMap()</code>获取所有参数的集合</p>
</blockquote>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 通用方法获取参数【以post为例】</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下省略了导包语句</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/demo5&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// POST方式 , 获取请求体里的参数     </span></span><br><span class="line">        String usr = req.getParameter(<span class="string">&quot;usr&quot;</span>);</span><br><span class="line">        System.out.println(usr);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

</li>
<li><p>资源转发：在服务器内部资源跳转。</p>
<p>  ​                特点：</p>
<p>  ​                            1、 浏览器地址栏不变</p>
<p>  ​                            2、只能访问当前服务器内部的资源</p>
<p>  ​                            3、转发是1次请求</p>
<blockquote>
<p>  <code>RequestDispatcher  rd =  req.getRequestDispatcher(String path) </code></p>
<p>  <code>rd.forward(req,res)</code></p>
</blockquote>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// demo5页面的请求转发到demo6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下省略了导包语句</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/demo5&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 转发请求        </span></span><br><span class="line">        System.out.println(<span class="string">&quot;This is demo 5&quot;</span>);</span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;/demo6&quot;</span>).forward(req,resp);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

</li>
<li><p>共享数据：【域对象：在作用范围内共享数据】</p>
<blockquote>
<p>  Request域：【用于一次请求在多次转发时共享数据】</p>
<ul>
<li>  setAttribute(String name，Object obj)</li>
<li>  getAttribute(String name)</li>
<li>  removeAttribute(String name)</li>
</ul>
</blockquote>
</li>
<li><p>  获取ServletContext：<code>getServletContext(String name)</code></p>
</li>
</ul>
</li>
</ul>
<h4 id="8-2-4-Request案例：登录"><a href="#8-2-4-Request案例：登录" class="headerlink" title="8.2.4 Request案例：登录"></a>8.2.4 Request案例：登录</h4><p><img src="https://z3.ax1x.com/2021/06/26/R8Astf.png" alt="案例需求"></p>
<p><img src="https://z3.ax1x.com/2021/06/26/R8ZaX4.png" alt="分析"></p>
<p>步骤：</p>
<p>1、创建项目，导入Jar包，创建login.html页面，【表单的action：<code>虚拟目录 + servlet的资源路径</code>】</p>
<p>2、创建数据库。</p>
<p>3、创建User类</p>
<p>4、创建UserDao类，提供login方法，测试login( )</p>
<p>以下为简化版示例【未连数据库、未创建User和UserDao】</p>
<p>Servlet01部分：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(name = &quot;Servlet01&quot;, value = &quot;/Servlet01&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Servlet01</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        </span><br><span class="line">        String username = request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String psw = request.getParameter(<span class="string">&quot;psw&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;123&quot;</span>.equals(psw) &amp;&amp; <span class="string">&quot;abc&quot;</span>.equals(username))&#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;servlet01... =&gt; 开始跳转到Servlet02&quot;</span>);</span><br><span class="line"></span><br><span class="line">            response.setStatus(<span class="number">302</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;location&quot;</span>,<span class="string">&quot;/JavaWeb/Servlet02&quot;</span>);</span><br><span class="line">            <span class="comment">//response.sendRedirect(&quot;/JavaWeb/Servlet02&quot;);</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            response.getWriter().write(<span class="string">&quot;密码错误！！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>JSP部分:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// action后应该为 URI（包括虚拟目录的路径）</span></span><br><span class="line"> &lt;form action=<span class="string">&quot;/JavaWeb/Servlet01&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> placeholder=<span class="string">&quot;用户名&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;psw&quot;</span> placeholder=<span class="string">&quot;密码&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>

<p>Servlet02部分：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(name = &quot;Servlet02&quot;, value = &quot;/Servlet02&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Servlet02</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;servlet02...&quot;</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h4 id="8-2-5-BeanUtils"><a href="#8-2-5-BeanUtils" class="headerlink" title="8.2.5 BeanUtils"></a>8.2.5 BeanUtils</h4><p>Spring的一个工具类。</p>
<p>Java Bean：用于封装数据的Java类。</p>
<ul>
<li>  类名：public</li>
<li>  成员变量：private，使用getter、setter来访问。</li>
</ul>
<p>BeanUtils的常用方法：</p>
<blockquote>
<p>  getProperty( )</p>
<p>  setProperty( )</p>
<p>  populate( obj )</p>
</blockquote>
<h3 id="8-3-响应报文："><a href="#8-3-响应报文：" class="headerlink" title="8.3 响应报文："></a>8.3 响应报文：</h3><p>Response对象-功能：设置响应消息（响应行、响应头、响应体）。</p>
<p>​        </p>
<ul>
<li>  设置响应行：</li>
</ul>
<blockquote>
<p>  1、格式：<code>HTTP1.1  200  OK</code></p>
<p>  2、设置状态码：<code>setStatus( int 状态码)</code></p>
</blockquote>
<ul>
<li>  设置响应头：</li>
</ul>
<blockquote>
<p>  <code>setHeaders(String name,String value)</code></p>
<p>   =》<code> response.setHeader(&quot;content-type&quot;,&quot;text/html;charset=utf-8&quot;);</code></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> demo1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">// value后的路径不包括虚拟目录</span></span><br><span class="line"><span class="meta">@WebServlet(name = &quot;Servlet01&quot;, value = &quot;/Servlet01&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Servlet01</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;servlet01... =&gt; 开始跳转到Servlet02&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重定向【方式1】：</span></span><br><span class="line">        <span class="comment">//		先设置状态码，再设置location = URI(包括虚拟目录)</span></span><br><span class="line">        response.setStatus(<span class="number">302</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;location&quot;</span>,<span class="string">&quot;/JavaWeb/Servlet02&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;content-type&quot;</span>,<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 重定向【方式2】</span></span><br><span class="line">        response.sendRedirect(<span class="string">&quot;/JavaWeb/Servlet02&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<ul>
<li>  设置响应体：</li>
</ul>
<blockquote>
<p>  1、获取输出流</p>
<p>  ​            =》字符输出流：<code>PrintWriter getWriter();</code></p>
<p>  ​            =》字节输出流：<code>ServletOutputStream getOutputStream()</code></p>
<p>  2、使用输出流，输出到客户端</p>
</blockquote>
<p>**重定向 redirect **与 <strong>转发 forward</strong> 的区别：( 转发在8.2.3小节 )</p>
<blockquote>
<p>  转发的特点：</p>
<p>  ​        1、地址栏不变。</p>
<p>  ​        2、只能访问到当前这台服务器内部的资源。</p>
<p>  ​        3、转发无论转多少次，都只是在对同1个请求在转发。（只有1次请求）</p>
<p>  重定向的特点：</p>
<p>  ​        1、地址栏发生变化</p>
<p>  ​        2、可以访问其他服务器的资源</p>
<p>  ​        3、重定向是2次请求</p>
</blockquote>
<p>响应头的格式：</p>
<blockquote>
<ul>
<li>  响应头名：值</li>
<li>  ContentType：告诉客户端编码格式</li>
<li>  Content-disposition：告诉服务器当前的客户端是使用什么格式打开的。</li>
</ul>
</blockquote>
<h4 id="1、路径的写法："><a href="#1、路径的写法：" class="headerlink" title="1、路径的写法："></a>1、路径的写法：</h4><p><a href="https://blog.csdn.net/linghuainian/article/details/82227177">java web中的各种servlet路径</a></p>
<ul>
<li>  绝对路径：<code>/abc/1.html</code></li>
<li>  相对路径：<code>../2.html</code>   |   <code>./3.html</code></li>
</ul>
<p>什么时候需要在<code>路径中加虚拟目录</code>?</p>
<blockquote>
<ul>
<li><p><code>客户端</code>和服务器之间使用时，需要有虚拟目录（客户端发出：表单）</p>
<p>  虚拟目录一般使用动态获取路径：<code>request.getContextPath()</code> =&gt; <code>&lt;a&gt;</code>、<code>&lt;form&gt;</code>、重定向。</p>
</li>
<li><p>  <code>服务器</code>与服务器之间使用时，不需要有虚拟目录：（request对象的路径转发）</p>
</li>
</ul>
</blockquote>
<h4 id="2、解决响应报文的中文乱码：【3种】"><a href="#2、解决响应报文的中文乱码：【3种】" class="headerlink" title="2、解决响应报文的中文乱码：【3种】"></a>2、解决响应报文的中文乱码：【3种】</h4><blockquote>
<p>  1、<code>response.setCharacterEncoding (“GBK”)</code></p>
<p>  2、<code>response.setContentType(&quot;text/html;charset=utf-8&quot;);</code></p>
<p>  3、<code>response.setHeader(&quot;content-type&quot;,&quot;text/html;charset=utf-8&quot;);</code></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;servlet02...&quot;</span>);</span><br><span class="line">       response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">       <span class="comment">// 发送响应报文</span></span><br><span class="line">       response.getWriter().write(<span class="string">&quot;你好，world&quot;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>









<h4 id="3、验证码的实现："><a href="#3、验证码的实现：" class="headerlink" title="3、验证码的实现："></a>3、验证码的实现：</h4><blockquote>
<p>  本质：图片</p>
<p>  目的：防止恶意的注册</p>
</blockquote>
<p>验证码-后端代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> demo1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/CheckCode&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckCode</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> width =<span class="number">100</span>;</span><br><span class="line">        <span class="keyword">int</span> height =<span class="number">50</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建缓存图片对象</span></span><br><span class="line">        BufferedImage bimg = <span class="keyword">new</span> BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置验证码图片的背景色-粉色</span></span><br><span class="line">        Graphics g = bimg.getGraphics();</span><br><span class="line">        g.setColor(Color.PINK);</span><br><span class="line">        g.fillRect(<span class="number">0</span>,<span class="number">0</span>,width,height);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置验证码图片的边框</span></span><br><span class="line">        g.setColor(Color.black);</span><br><span class="line">        g.drawRect(<span class="number">0</span>,<span class="number">0</span>,width-<span class="number">1</span>,height-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成验证码字符</span></span><br><span class="line">        String str = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Random rd = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//生成随机角标</span></span><br><span class="line">            <span class="keyword">int</span> idx = rd.nextInt(str.length());</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取随机字符</span></span><br><span class="line">            <span class="keyword">char</span> ch = str.charAt(idx);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 写验证码</span></span><br><span class="line">            g.drawString(ch+<span class="string">&quot;&quot;</span>,(width+<span class="number">2</span>)/<span class="number">5</span>*i,height/<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 画验证码的干扰线</span></span><br><span class="line">        g.setColor(Color.green);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">10</span> ; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x1 = rd.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> x2 = rd.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> y1 = rd.nextInt(height);</span><br><span class="line">            <span class="keyword">int</span> y2 = rd.nextInt(height);</span><br><span class="line">            g.drawLine(x1,y1,x2,y2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出验证码</span></span><br><span class="line">        ImageIO.write(bimg,<span class="string">&quot;jpg&quot;</span>,resp.getOutputStream());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>验证码前端代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//获取图片</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> img = <span class="built_in">document</span>.getElementById(<span class="string">&quot;checkcode&quot;</span>);</span></span><br><span class="line"><span class="javascript">            </span></span><br><span class="line"><span class="javascript">            img.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 为了保证点击图片可以切换验证码，可以将src的地址 = servlet的地址</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 因为浏览器有缓存，所以必须在src后的地址中拼接1个时间戳，让验证码刷新</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> time = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span></span><br><span class="line"><span class="javascript">                img.src = <span class="string">&quot;/JavaWeb/CheckCode?&quot;</span> + time;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;checkcode&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/JavaWeb/CheckCode&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;changecode&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>看不清，换一张<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>











<h3 id="8-4-ServletContext"><a href="#8-4-ServletContext" class="headerlink" title="8.4 ServletContext"></a>8.4 ServletContext</h3><p>概念： <code>ServletContext接口</code> 代表整个Servlet应用，可以和程序的容器（Tomcat）通信。</p>
<p>功能：</p>
<blockquote>
<ul>
<li>获取 MIME类型<ul>
<li>  <code>MIME类型</code>是一种文件数据类型，格式为：<code>大类型/小类型</code>，如：<code>text/html</code>，<code>image/jpeg</code></li>
<li>  获取MIME类型的方法：<code>String getMimeType(文件名)</code></li>
<li>  获取MIME的目的：设置 ContentType</li>
</ul>
</li>
<li>  域对象：共享数据（req.getAttr）</li>
<li>  获取文件在服务器上的真实路径。</li>
</ul>
</blockquote>
<p>获取 ServletContext（2种）</p>
<ul>
<li>  <code>request.getServletContext( )</code></li>
<li>  <code>this.getServletContext( )</code></li>
</ul>
<p>获取MIME类型：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">String type = context.getMimeType(<span class="string">&quot;123.jpg&quot;</span>);</span><br><span class="line">System.out.println(type);</span><br></pre></td></tr></table></figure>







<p>获取域对象：</p>
<ul>
<li>  <code>request.setAttribute(key,value);</code></li>
<li>  <code>request.getAttribute(key,value);</code></li>
<li>  <code>request.removeAttribute(key);</code></li>
</ul>
<p>ServletContext可以共享所有用户的数据。</p>
<p>获取真实的文件路径：</p>
<ul>
<li>  <code>getRealPath(路径);</code></li>
</ul>
<p>配置文件的存放位置：</p>
<blockquote>
<ul>
<li>  项目的src下</li>
<li>  web目录下</li>
<li>  web/WEB-INF目录下</li>
</ul>
</blockquote>
<p>演示-获取<code>项目下的web/b.txt</code>文件：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">String path = context.getRealPath(<span class="string">&quot;/b.txt&quot;</span>);</span><br><span class="line">File file = <span class="keyword">new</span> File(path);</span><br></pre></td></tr></table></figure>







<h3 id="8-5-案例：文件下载"><a href="#8-5-案例：文件下载" class="headerlink" title="8.5 案例：文件下载"></a>8.5 案例：文件下载</h3><p>需求：任何文件，只要点击，就弹出下载框</p>
<p>思路：使用 response对象的<code>content-disposition:attachment;filename=xxx</code>，其中 filename 后的值为弹出框要显示的名称。</p>
<p>步骤：</p>
<blockquote>
<p>  1、创建html页面，将超链接的 href 指向 servlet地址：<code>href=&quot;/servlet01?filename=abc.jpg&quot;</code>。</p>
<p>  2、创建servlet，获取文件名，使用<code>字节输入流</code>将文件加载入内存。</p>
<p>  3、指定response的<code>ContentType</code>和<code>content-disposition:attachment;filename=xxx</code></p>
<p>  4、利用<code>response输出流</code>，将数据写出。</p>
</blockquote>
<p>前端：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/JavaWeb/downloadServlet?filename=1.jpg&quot;</span>&gt;</span></span><br><span class="line">      下载图片1</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>后端：[文件路径、读写部分 可能有误]</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> demo1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/downloadServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImgDownload</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">		<span class="comment">// 获取前端传过来的参数filename</span></span><br><span class="line">        String filename = req.getParameter(<span class="string">&quot;filename&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 利用ServletContext对象来获取：路径、文件类型</span></span><br><span class="line">        ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取文件的物理路径</span></span><br><span class="line">        String realPath = context.getRealPath(<span class="string">&quot;/img/&quot;</span>+filename);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		<span class="comment">// 设置要下载的文件的类型、以附件形式下载、下载的文件名</span></span><br><span class="line">        String mimeType = context.getMimeType(filename);</span><br><span class="line">        resp.setContentType(mimeType);</span><br><span class="line">        resp.setHeader(<span class="string">&quot;content-disposition&quot;</span>,<span class="string">&quot;attachment;filename=&quot;</span>+filename);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 将图片读入内存</span></span><br><span class="line">        <span class="comment">//【经验证发现，此处代码查找的是out目录下的文件，但编写代码时，是在web/img下】，可能存在错误</span></span><br><span class="line">        <span class="comment">// 要想在调试时出现效果，可将/img目录复制到out目录下</span></span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(realPath);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] buff = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>*<span class="number">22</span>];</span><br><span class="line">        ServletOutputStream sos = resp.getOutputStream();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 浏览器下载</span></span><br><span class="line">        <span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>((len=fis.read(buff))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            sos.write(buff,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>解决文件下载案例中，中文文件名错乱的问题。</p>
<blockquote>
<p>  思路：</p>
<ul>
<li>  获取浏览器的版本信息</li>
<li>  根据浏览器版本，选择中文文件名的编码</li>
</ul>
</blockquote>
<p>工具类：</p>
<p><img src="https://z3.ax1x.com/2021/07/12/WF8gHA.png" alt="解决java下载文件名的中文乱码"></p>
<h3 id="8-6-会话技术（Cookie、Session）"><a href="#8-6-会话技术（Cookie、Session）" class="headerlink" title="8.6 会话技术（Cookie、Session）"></a>8.6 会话技术（Cookie、Session）</h3><p><strong>会话</strong>：一次会话包含了多次请求+响应。</p>
<p><strong>会话的功能</strong>：在1次会话的范围内共享数据。</p>
<p><strong>分类</strong>：</p>
<ul>
<li>  客户端会话：cookie，将数据保存在客户端。</li>
<li>  服务端会话：session</li>
</ul>
<h4 id="1、cookie："><a href="#1、cookie：" class="headerlink" title="1、cookie："></a>1、cookie：</h4><p>使用步骤：</p>
<blockquote>
<ol>
<li> 创建Cookie对象，设置数据：<code>new Cookie(key,value)</code></li>
<li> 发送Cookie：<code>response.addCookie(cookie对象)</code></li>
<li> 接收Cookie，获取数据：<code>Cookie[] request.getCookies()</code></li>
</ol>
</blockquote>
<hr>
<p>cookie的设置过程：</p>
<p><img src="https://z3.ax1x.com/2021/07/13/WkZEW9.png" alt="cookie的设置过程"></p>
<hr>
<p>cookie的实现原理：</p>
<blockquote>
<ul>
<li>  在 Response的响应头中，使用 <code>set-Cookie：键=值</code></li>
<li>  在 Request的请求头中，使用 <code>Cookie:cookie值</code></li>
</ul>
</blockquote>
<hr>
<p>Cookie的使用细节：</p>
<blockquote>
<ol>
<li><p> cookie可以一次使用<code>多个</code></p>
</li>
<li><p>cookie在浏览器中<code>保存时间</code>：默认关闭浏览器就销毁（可以手动设置保存时间）</p>
<ul>
<li>cookie的持久化存储：<ul>
<li>  <code>setMaxAge(int seconds)</code>：正数(持久化存储时间)；负数(默认值)；0(删除cookie)</li>
</ul>
</li>
</ul>
</li>
<li><p> cookie支持<code>中文</code>（<code>Tomcat8</code> 以及之后的版本支持中文；8之前的版本需要URL编码）</p>
</li>
<li><p>cookie<code>获取的范围</code>：</p>
<ul>
<li>  假设<code>同一台Tomcat服务器</code>中部署了<code>多个web项目</code>，则多个项目之间<code>默认无法共享Cookie</code></li>
<li>  设置指定路径下的项目才能访问到某个cookie：<code>cookie对象.setPath(path);</code></li>
<li>  设置所有的项目都能访问到某个cookie：<code>cookie对象.setPath(“/&quot;);</code></li>
<li>  <code>不同的Tomcat服务器</code>之间共享Cookie可以通过<code>设置一级域名</code>：<code>cookie对象.setDomain(path)</code></li>
</ul>
</li>
<li><p>浏览器对<code>单个Cookie</code>大小有限制（<code>不超过4KB</code>）;同一域名下的<code>Cookie个数</code>也有限制（<code>20</code>个）。</p>
<p> ​    </p>
</li>
</ol>
</blockquote>
<hr>
<p>案例：【页面显示上一次的登录时间】</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*	获取request中的cookies数组，遍历cookie数组，如果当前遍历到的cookie的名字为“lastLoginTime”，</span></span><br><span class="line"><span class="comment">	则获取该cookie的值，并在页面上输出该cookie的值，然后重新生成时间并更新原来的时间【时间需要使用URL编码才能确保不乱码】</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> demo3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/RemenberLoginTime&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RemenberLoginTime</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        Cookie[] cookies = req.getCookies();</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(cookies!=<span class="keyword">null</span> &amp;&amp; cookies.length&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="string">&quot;lastLoginTime&quot;</span>.equals(cookie.getName()))&#123;</span><br><span class="line"></span><br><span class="line">                    </span><br><span class="line">                    String value = cookie.getValue();</span><br><span class="line"></span><br><span class="line">                    resp.getWriter().write(<span class="string">&quot;&lt;h1&gt;上一次的登录时间为：&quot;</span>+URLDecoder.decode(value,<span class="string">&quot;utf-8&quot;</span>)+<span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">                    Date date = <span class="keyword">new</span> Date();</span><br><span class="line">                    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy年MM月dd日 HH:mm:ss&quot;</span>);</span><br><span class="line">                    String format_date = sdf.format(date);</span><br><span class="line">                    String s = URLEncoder.encode(format_date, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                    cookie.setValue(s);</span><br><span class="line">                    cookie.setMaxAge(<span class="number">60</span>*<span class="number">3</span>);</span><br><span class="line">                    resp.addCookie(cookie);</span><br><span class="line">                    System.out.println(<span class="string">&quot;上一次的登录时间为：&quot;</span>+format_date);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">            Date date = <span class="keyword">new</span> Date();</span><br><span class="line">            SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy年MM月dd日 HH:mm:ss&quot;</span>);</span><br><span class="line">            String format_date = sdf.format(date);</span><br><span class="line">            String s = URLEncoder.encode(format_date, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            Cookie lastLoginTime = <span class="keyword">new</span> Cookie(<span class="string">&quot;lastLoginTime&quot;</span>, s);</span><br><span class="line">            lastLoginTime.setMaxAge(<span class="number">60</span>*<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">            resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            resp.addCookie(lastLoginTime);</span><br><span class="line">            System.out.println(<span class="string">&quot;首次的登录时间为：&quot;</span>+format_date);</span><br><span class="line"></span><br><span class="line">            resp.getWriter().write(<span class="string">&quot;&lt;h1&gt;首次的登录时间为：&quot;</span>+format_date+<span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h4 id="2、JSP："><a href="#2、JSP：" class="headerlink" title="2、JSP："></a>2、JSP：</h4><ul>
<li><p>  概念：JSP（Java Server Page）：Java服务端的页面。页面中既可以写HTML，也可以写Java代码。</p>
</li>
<li><p>格式：</p>
<ul>
<li>  格式-1：<code>&lt;% java代码 %&gt;</code>：转化成<code>.java</code>文件后，出现在<code>service方法</code>中</li>
<li>  格式-2：<code>&lt;%! java代码 %&gt;</code>：定义的是Java类的<code>成员</code>（变量、方法等）</li>
<li>  格式-3：<code>&lt;%= java代码 %&gt;</code>：转化成<code>.java</code>文件后，出现在<code>service方法</code>中，定义的内容会<code>输出</code>到页面上。</li>
</ul>
</li>
<li><p>  作用：简化书写。</p>
</li>
<li><p>  实质：JSP就是一种 Servlet，自动帮我们输出了一些HTML代码。</p>
</li>
</ul>
<hr>
<p>下图：【JSP的解析过程】</p>
<p><img src="https://z3.ax1x.com/2021/07/15/WeqTP0.png" alt="jsp的解析过程"></p>
<hr>
<p>JSP的内置对象：</p>
<ul>
<li>  Request</li>
<li>  Response</li>
<li>  out：输出，类似：<code>response.getWriter();</code>【需要导入：<code>jsp-api.jar</code>】</li>
</ul>
<hr>
<p><code>out.write() </code> 与 <code>response.getWriter().write()</code>的区别：</p>
<blockquote>
<p>  out对象：定义在哪个位置，就在哪个位置输出。</p>
<p>  response对象的输出：永远在out对象前面先输出。（因为Tomcat先找Reponse对象的缓冲区，再找out对象的缓冲区）</p>
</blockquote>
<p>【建议】：统一使用 <code>out</code> 对象来输出到页面。</p>
<hr>
<h4 id="3、session："><a href="#3、session：" class="headerlink" title="3、session："></a>3、session：</h4><ul>
<li>  概念：Session是将 <strong>一次会话的多次请求</strong> 中的<code>任意类型、任意大小的数据</code>保存在服务器的一种方式，类似Cookie的作用。</li>
</ul>
<hr>
<p>使用：</p>
<ol>
<li> 获取Session：<code>request.getSession(session的名字)；</code></li>
<li> 使用Session：</li>
</ol>
<blockquote>
<p>  HttpSession对象的常用方法：</p>
<p>  ​    1、<code>getAttribute(String name)</code></p>
<p>  ​    2、<code>setAttribute(String name,Object value)</code></p>
<p>  ​    3、<code>removeAttribute(String name)</code></p>
</blockquote>
<hr>
<p>Session是依赖Cookie的，当Client请求Session时，Server如果没有Session，就在Server中开辟内存来存放Session。将开辟出来的Session设置1个ID（JSessionID），在返回Request时，在Request对象的请求头中<code>Set-Cookie:具体的SessionID</code>。</p>
<hr>
<p>保证2次请求的Session是同一个Session的过程：</p>
<p><img src="https://z3.ax1x.com/2021/07/15/Wm3yx1.png" alt="Session的使用过程"></p>
<hr>
<p>Session的细节：</p>
<blockquote>
<p>  1、Client关闭、Server开启：两次请求的Session默认不是同一个。( 原因：client关闭后，清除了cookie)</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 解决不是同一个的问题：</span></span><br><span class="line"></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line"></span><br><span class="line">Cookie c = <span class="keyword">new</span> Cookie(<span class="string">&quot;JSessionID&quot;</span>,session.getId());</span><br><span class="line"></span><br><span class="line">c.setMaxAge(<span class="number">60</span> * <span class="number">60</span>); <span class="comment">// 保存1小时</span></span><br><span class="line"></span><br><span class="line">response.addCookie(c);</span><br></pre></td></tr></table></figure>

<p>  2、Client开启、Server关闭：两次请求的Session不是同一个。</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*	解决Server关闭后Session丢失的问题：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">		1、应用场景：购物车</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">		2、解决方案：</span></span><br><span class="line"><span class="comment">        		- Session的钝化：服务器关闭前，将 Session序列化 到硬盘上。</span></span><br><span class="line"><span class="comment">        		- Session的活化：服务器启动后，将Session文件转化为内存中的Session对象。</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>  3、Session的销毁  ：</p>
<ul>
<li>  服务器 关闭时销毁。</li>
<li>  Session对象调用<code>inValidate()</code></li>
<li>默认的失效时间：<code>30分钟</code>【可以在 <code>Tomcat -&gt; conf -&gt; web.xml-&gt;sessionConfig标签</code>中修改失效的时间】</li>
</ul>
</blockquote>
<p>Session 与Cookie的区别：</p>
<blockquote>
<p>  1、Session存放在服务端，Cookie存放在客户端。</p>
<p>  2、Session可以存放任意类型、大小的数据；Cookie的大小和数量由浏览器来限制。</p>
<p>  3、Session相对安全，Cookie相对不安全。</p>
</blockquote>
<hr>
<h4 id="【-案例】：Session来实现验证码："><a href="#【-案例】：Session来实现验证码：" class="headerlink" title="【 案例】：Session来实现验证码："></a>【 案例】：Session来实现验证码：</h4><p><img src="https://z3.ax1x.com/2021/07/15/WmdhIx.png" alt="验证码-案例需求"></p>
<p><img src="https://z3.ax1x.com/2021/07/15/WmB5iq.png" alt="验证码登录-案例思路"></p>
<p>依赖包：</p>
<ul>
<li>  <code>jsp-api.jar</code>：从Tomcat的lib中复制</li>
<li>  <code>servlet-api.jar</code>：从Tomcat的lib中复制</li>
<li>  <code>mysql-connector-java-5.0.4-bin.jar</code>：百度下载</li>
</ul>
<p>注意：</p>
<blockquote>
<ul>
<li>  此案例的<code>MySQL驱动</code>需要放在<code>web/WEB-INF/lib</code>目录下，然后再<code>关联添加到项目</code>依赖中。</li>
</ul>
</blockquote>
<p><code>DBUtils.class</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> dbutils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DBUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String  url = <span class="string">&quot;jdbc:mysql://localhost:3306/school_1?serverTimezone=Asia/Shanghai&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String user = <span class="string">&quot;javaUser&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String psw = <span class="string">&quot;javaUser&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Connection conn = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立连接、</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = DriverManager.getConnection(url,user,psw);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> conn;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 释放连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">releaseConn</span><span class="params">(Connection conn, PreparedStatement ps, ResultSet rs)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">            rs.close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ps != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ps.close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">            conn.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<p><code>index.jsp</code>页面：</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: y</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">7</span>/<span class="number">16</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">56</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;登录页&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/demo/loginServlet&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">        &lt;table border=<span class="string">&quot;0&quot;</span>&gt;</span><br><span class="line">          &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;用户名：&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line">          &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;密码：&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;psw&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line">          &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;验证码&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;checkcode&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;img id=<span class="string">&quot;checkcode&quot;</span> src=<span class="string">&quot;/demo/checkcodeServlet?&quot;</span> alt=<span class="string">&quot;验证码&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td style=<span class="string">&quot;color: red;&quot;</span>&gt;</span><br><span class="line">              &lt;%=</span><br><span class="line">                request.getAttribute(<span class="string">&quot;checkcode_error&quot;</span>)==<span class="keyword">null</span>?<span class="string">&quot;&quot;</span>:request.getAttribute(<span class="string">&quot;checkcode_error&quot;</span>)</span><br><span class="line">              %&gt;&amp;nbsp;&amp;nbsp;</span><br><span class="line">              &lt;%=</span><br><span class="line">              request.getAttribute(<span class="string">&quot;login_error&quot;</span>)==<span class="keyword">null</span>?<span class="string">&quot;&quot;</span>:request.getAttribute(<span class="string">&quot;login_error&quot;</span>)</span><br><span class="line">              %&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line">          &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      let img = document.getElementById(<span class="string">&quot;checkcode&quot;</span>);</span><br><span class="line">        </span><br><span class="line">      img.onclick = ()=&gt;&#123;</span><br><span class="line">         let time = <span class="keyword">new</span> Date().getTime();</span><br><span class="line">         img.src = <span class="string">&quot;/demo/checkcodeServlet?&quot;</span>+time;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><code>checkCodeServlet</code>页面：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> login;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/checkcodeServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">checkcodeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> width = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">int</span> height = <span class="number">40</span>;</span><br><span class="line">        </span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);</span><br><span class="line"></span><br><span class="line">        Graphics g = image.getGraphics();</span><br><span class="line">        </span><br><span class="line">		<span class="comment">// 画背景色</span></span><br><span class="line">        g.setColor(Color.pink);</span><br><span class="line">        g.fillRect(<span class="number">0</span>,<span class="number">0</span>,width,height);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 画边框</span></span><br><span class="line">        g.setColor(Color.black);</span><br><span class="line">        g.drawRect(<span class="number">0</span>,<span class="number">0</span>,width,height);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 画验证码</span></span><br><span class="line">        g.setColor(Color.black);</span><br><span class="line">        String str = <span class="string">&quot;ABCDEFGHIJKLMOPQRSTUVWXYZ0123456789&quot;</span>;</span><br><span class="line">        Random rd = <span class="keyword">new</span> Random();</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> id = rd.nextInt(str.length());</span><br><span class="line">            <span class="keyword">char</span> ch = str.charAt(id);</span><br><span class="line">            g.drawString(ch+<span class="string">&quot;&quot;</span>,<span class="number">15</span>+<span class="number">15</span>*i,height/<span class="number">2</span>);</span><br><span class="line">            sb.append(ch);</span><br><span class="line">        &#125;</span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        session.setAttribute(<span class="string">&quot;checkcode&quot;</span>,sb);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 画干扰线</span></span><br><span class="line">        g.setColor(Color.lightGray);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x1 = rd.nextInt(width-<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">int</span> x2 = rd.nextInt(width-<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">int</span> y1 = rd.nextInt(height-<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">int</span> y2 = rd.nextInt(height-<span class="number">1</span>);</span><br><span class="line">            g.drawLine(x1,y1,x2,y2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ImageIO.write(image,<span class="string">&quot;jpg&quot;</span>,response.getOutputStream());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<p><code>loginServlet</code>页面：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> login;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> dbutils.DBUtils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/loginServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">loginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 客户端发送的用户名、密码、验证码</span></span><br><span class="line">        String username = request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String psw = request.getParameter(<span class="string">&quot;psw&quot;</span>);</span><br><span class="line">        String u_checkcode = request.getParameter(<span class="string">&quot;checkcode&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 服务端的验证码Servlet页面发送的验证码</span></span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        StringBuilder checkcode1 = (StringBuilder)session.getAttribute(<span class="string">&quot;checkcode&quot;</span>);</span><br><span class="line">        String checkcode2= <span class="keyword">new</span> String(checkcode1);</span><br><span class="line">        session.removeAttribute(<span class="string">&quot;checkcode&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果验证码不为空且用户输入的验证码正确，则向数据库发送用户名、密码</span></span><br><span class="line">        <span class="comment">// 数据库中有符合该用户名、密码的记录，则跳转页面，否则返回登录页</span></span><br><span class="line">        <span class="keyword">if</span>(u_checkcode!=<span class="keyword">null</span> &amp;&amp; checkcode2.equalsIgnoreCase(u_checkcode))&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Connection conn = DBUtils.getConn();</span><br><span class="line">                String sql = <span class="string">&quot;select * from stu where sname=? and spsw =?&quot;</span>;</span><br><span class="line">                PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class="line">                ps.setString(<span class="number">1</span>,username);</span><br><span class="line">                ps.setString(<span class="number">2</span>,psw);</span><br><span class="line"></span><br><span class="line">                ResultSet rs = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(!rs.next())&#123;</span><br><span class="line">                    request.setAttribute(<span class="string">&quot;login_error&quot;</span>,<span class="string">&quot;用户名或密码错误！！&quot;</span>);</span><br><span class="line"></span><br><span class="line">                    request.getRequestDispatcher(<span class="string">&quot;/&quot;</span>).forward(request,response);</span><br><span class="line"></span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">                    response.sendRedirect(request.getContextPath()+<span class="string">&quot;/home.jsp&quot;</span>);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">            request.setAttribute(<span class="string">&quot;checkcode_error&quot;</span>,<span class="string">&quot;验证码错误&quot;</span>);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;/&quot;</span>).forward(request,response);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><code>home.jsp</code>页面：</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.text.SimpleDateFormat&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Date&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.net.URLEncoder&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.net.URLDecoder&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: y</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">7</span>/<span class="number">16</span></span><br><span class="line">  Time: <span class="number">19</span>:<span class="number">22</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;主页&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;%</span><br><span class="line">    Cookie[] cookies = request.getCookies();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(cookies!=<span class="keyword">null</span> &amp;&amp;cookies.length&gt;<span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">        <span class="keyword">if</span>(cookie.getName().equalsIgnoreCase(<span class="string">&quot;lastLoginTime&quot;</span>))&#123;</span><br><span class="line">          String value = cookie.getValue();</span><br><span class="line">          String decode_time = URLDecoder.decode(value,<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">          response.getWriter().write(<span class="string">&quot;欢迎回来，上一次的登录时间为：&quot;</span>+decode_time);</span><br><span class="line"></span><br><span class="line">          Date date = <span class="keyword">new</span> Date();</span><br><span class="line">          SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy年MM月dd日，HH：mm：ss&quot;</span>);</span><br><span class="line">          String format_time = sdf.format(date);</span><br><span class="line">          String encode_time = URLEncoder.encode(format_time,<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">          cookie.setValue(encode_time);</span><br><span class="line">          cookie.setMaxAge(<span class="number">60</span>*<span class="number">3</span>);</span><br><span class="line">          response.addCookie(cookie);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      Date date = <span class="keyword">new</span> Date();</span><br><span class="line">      SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy年MM月dd日，HH：mm：ss&quot;</span>);</span><br><span class="line">      String format_time = sdf.format(date);</span><br><span class="line">      String encode_time = URLEncoder.encode(format_time,<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">      Cookie lastLoginTime = <span class="keyword">new</span> Cookie(<span class="string">&quot;lastLoginTime&quot;</span>, encode_time);</span><br><span class="line">      lastLoginTime.setMaxAge(<span class="number">60</span>*<span class="number">3</span>);</span><br><span class="line">      response.addCookie(lastLoginTime);</span><br><span class="line">      response.getWriter().write(<span class="string">&quot;首次登录的时间为：&quot;</span>+format_time);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>









<h2 id="9-JSP"><a href="#9-JSP" class="headerlink" title="9. JSP"></a>9. JSP</h2><p>部分内容在：<code>8.6-1 会话技术小节</code>.</p>
<ul>
<li>  格式-1：<code>&lt;% java代码 %&gt;</code>：转化成<code>.java</code>文件后，出现在<code>service方法</code>中</li>
<li>  格式-2：<code>&lt;%! java代码 %&gt;</code>：定义的是Java类的<code>成员</code>（变量、方法等）</li>
<li>  格式-3：<code>&lt;%= java代码 %&gt;</code>：转化成<code>.java</code>文件后，出现在<code>service方法</code>中，定义的内容会<code>输出</code>到页面上。</li>
</ul>
<hr>
<h3 id="9-1-JSP-指令："><a href="#9-1-JSP-指令：" class="headerlink" title="9.1 JSP-指令："></a>9.1 JSP-指令：</h3><ul>
<li>  作用：在页面中导入资源文件。</li>
<li>  格式：<code>&lt;%@ 指令名  属性名1=属性值1 属性名2=属性值2 %&gt;</code></li>
</ul>
<p>JSP指令的示例：<code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</code></p>
<p>JSP的指令分类：</p>
<ul>
<li>  <code>page</code>：配置页面</li>
<li>  <code>include</code>：导入页面资源</li>
<li>  <code>taglib</code>：导入资源，标签库</li>
</ul>
<hr>
<p><strong>Page指令：</strong></p>
<p>​    1、ContentType属性：等价于<code>response.setContentType(MIME类型和字符集)</code></p>
<blockquote>
<ul>
<li>  功能：设置response的MIME类型和字符集；设置页面的字符集（高级的iDE，低级的工具使用pageEncoding属性来设置页面的字符集）</li>
</ul>
</blockquote>
<p>​    2、PageEncoding属性：设置页面字符集编码。</p>
<p>​    3、buffer属性：设置页面缓冲区大小(需要带上单位)。</p>
<p>​    4、import属性：导入Java的包。</p>
<p>​    5、errorPage属性：页面发生异常时，自动跳转到该属性所指定的页面。</p>
<p>​    6、isErrorPage属性：标识是否为出错时跳转到的页面，true/false。指定为true时，允许在页面中用jsp的语法显示exception对象的相关消息。</p>
<hr>
<p><strong>include指令：</strong></p>
<p>​    1、file属性：资源的路径。如：<code>&lt;%@incluse file=&quot;top.jsp&quot; %&gt;</code></p>
<hr>
<p><strong>taglib指令：</strong></p>
<p>​    1、使用任何标签库都需要：</p>
<blockquote>
<ul>
<li>  <code>web-&gt;WEB-INF-&gt;lib</code>中放入<code>JSTL.jar</code>包，</li>
<li>  导入<code>JSTL.jar</code>到项目中</li>
<li>  页面中导入标签库：<code>&lt;%@taglib  prefix=&quot;自定义的标签名&quot;  uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</code></li>
<li>  使用时：<code>&lt;上面自定义的标签名: if &gt;</code></li>
</ul>
</blockquote>
<hr>
<h3 id="9-2-JSP-注释："><a href="#9-2-JSP-注释：" class="headerlink" title="9.2 JSP-注释："></a>9.2 JSP-注释：</h3><ul>
<li>  HTML的注释：<code>&lt;!-- --&gt;</code>，注释会发送到浏览器。</li>
<li>  JSP的注释【推荐】：<code>&lt;%-- --%&gt;</code> ，可以注释JSP代码和HTML代码，不会发送到浏览器。</li>
</ul>
<hr>
<h3 id="9-3-JSP-内置对象："><a href="#9-3-JSP-内置对象：" class="headerlink" title="9.3 JSP-内置对象："></a>9.3 JSP-内置对象：</h3><p>JSP的 9个内置对象：</p>
<table>
<thead>
<tr>
<th align="center">序号</th>
<th align="center">变量名（JSP的内置对象名）</th>
<th>实际类型</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">page</td>
<td>Object</td>
<td>当前页面 this</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">pageContext</td>
<td>PageContext</td>
<td>当前页面内 共享数据，可获取其他8个内置对象</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">request</td>
<td>HttpServletRequest</td>
<td>一次请求获取多个资源（request转发）</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">response</td>
<td>HttpServletResponse</td>
<td>响应对象</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">session</td>
<td>HttpSession</td>
<td>一次会话、多次请求。</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">application</td>
<td>ServletContext</td>
<td>所有用户共享数据</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">out</td>
<td>JspWriter</td>
<td>输出数据到页面上</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">config</td>
<td>ServletConfig</td>
<td>Servlet配置对象</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">exception</td>
<td>Throwable</td>
<td>只有<code>page指令</code>的<code> isErrorPage=true</code>时，才会生效。</td>
</tr>
</tbody></table>
<p>pageContext、request、session、application：都可用于共享数据。</p>
<hr>
<h3 id="9-4-MVC开发模式简介："><a href="#9-4-MVC开发模式简介：" class="headerlink" title="9.4 MVC开发模式简介："></a>9.4 MVC开发模式简介：</h3><p>JSP的演变历史：</p>
<blockquote>
<p>  1、一开始只有Servlet，往前端输出只能借助Presonse对象，很不方便。</p>
<p>  2、出现JSP，简化了操作，但出现滥用JSP现象，造成代码的可读性差、难维护。</p>
<p>  3、借鉴了MVC开发模式，使得程序设计更合理。</p>
</blockquote>
<hr>
<p>MVC开发模式：</p>
<blockquote>
<ul>
<li>  M：mdel，模型，业务处理，如：操作数据库</li>
<li>  V：view，视图，展示数据。</li>
<li>  C：controller，控制器，获取输入、调用模型、将数据传给视图。</li>
</ul>
</blockquote>
<hr>
<p>MVC的优点：</p>
<blockquote>
<ul>
<li>  解耦</li>
<li>  可重用</li>
</ul>
</blockquote>
<p>MVC的缺点：</p>
<blockquote>
<ul>
<li>  使得项目的架构变复杂，对开发者要求更高</li>
</ul>
</blockquote>
<p><font style="color:red;">使用了MVC模式后，JSP里不写Java代码，java代码写在EL表达式、JSTL标签中。</font></p>
<hr>
<h3 id="9-5-EL表达式："><a href="#9-5-EL表达式：" class="headerlink" title="9.5 EL表达式："></a>9.5 EL表达式：</h3><ul>
<li>  功能：替换、简化 JSP中的Java代码的书写。</li>
<li>  语法：<code>$&#123; 表达式的内容 &#125;</code></li>
<li>  注意：JSP 默认支持 EL表达式。</li>
</ul>
<p>忽略EL表达式（2种方式）：</p>
<blockquote>
<ul>
<li>  <code>page指令</code>上的<code>isElIgnored属性的值设置为true</code></li>
<li>  在EL表达式前加<code>\</code>，如：<code>\$&#123;表达式内容&#125;</code></li>
</ul>
</blockquote>
<hr>
<p>EL表达式中的运算符：</p>
<blockquote>
<ul>
<li>  算术运算符</li>
<li>  关系运算符</li>
<li>  逻辑运算符</li>
<li>  空运算符empty：<code>$&#123; empty list2 &#125;</code>，判断<code>数组、字符串、集合</code>是否<code>为空 或 长度为0</code>。</li>
<li>  非运算符 not empty：<code>$&#123; not empty list2 &#125;</code>，判断<code>数组、字符串、集合</code>是否<code>为空 或 长度为0</code>。</li>
</ul>
</blockquote>
<hr>
<p><strong>EL表达式获取值：</strong></p>
<p>【注意】：EL表达式<font style="color: red;">只能获取域中的值</font>。</p>
<p>1、EL_语法-1：<code>$&#123; 域名称.键名 &#125;</code></p>
<blockquote>
<p>  El表达式语法中的<code>域名称</code>:</p>
<ul>
<li>  pageScope：从 pageContext 中获取数据</li>
<li>  requestScope：从 request 对象中获取数据</li>
<li>  sessionScope：从 session 对象中获取数据</li>
<li>  applicationScope：从 servletContext 对象中获取数据</li>
</ul>
</blockquote>
<p>例如：</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 假设request域中已经有了数据 ： name=&quot;张三&quot;</span></span><br><span class="line">&lt;%</span><br><span class="line">	request.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">	session.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;李四&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 域中设置对象</span></span><br><span class="line">	Person user = <span class="keyword">new</span> Person();</span><br><span class="line">	user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">	user.setBirth(<span class="keyword">new</span> Date());</span><br><span class="line">	request.setAttribute(<span class="string">&quot;u&quot;</span>,user);</span><br><span class="line">	</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 利用EL表达式获取数据：[第一种]</span></span><br><span class="line"></span><br><span class="line">	$&#123; requestScope.name &#125;</span><br><span class="line"></span><br><span class="line">	$&#123; sessionScope.name &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// EL获取域中的对象：【域名.对象名.属性名】</span></span><br><span class="line"><span class="comment">//		属性：将get方法名，去掉get，再全部转换成小写字母</span></span><br><span class="line"><span class="comment">//			如：user对象的getBirth()方法  =》 user.birth</span></span><br><span class="line"></span><br><span class="line">	$&#123; requestScope.u.birth &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// EL获取域中的 List集合：【 域名.集合名[下标] 】</span></span><br><span class="line">	$&#123; requestScope.list2 &#125;</span><br><span class="line">	$&#123; requestScope.list2[<span class="number">3</span>] &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// EL获取域中的 Map集合：【 域名.集合名.键名 】</span></span><br><span class="line">	$&#123; requestScope.map1 &#125;</span><br><span class="line">	$&#123; requestScope.map1.age &#125;</span><br></pre></td></tr></table></figure>





<p>2、EL_语法-2：<code>$&#123; 键名 &#125;</code></p>
<ul>
<li>  该语法：先从最小的域开始找数据，没有数据再向上一级域找数据，一直找到。</li>
</ul>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 假设request域中已经有了数据 ： name=&quot;张三&quot;</span></span><br><span class="line">&lt;%</span><br><span class="line">	request.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">	session.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">	</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 利用EL表达式获取数据：[第二种]	</span></span><br><span class="line"></span><br><span class="line">	$&#123; name &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<hr>
<p>EL 表达式的隐式对象【11个】：</p>
<p>其中的<code>pageContext</code>隐式对象同时也是 JSP的9大内置对象之一。</p>
<p>用法：</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 动态获取请求路径：</span></span><br><span class="line">/$&#123; pageContext.request.contextPath &#125;</span><br><span class="line"></span><br><span class="line">    &lt;form action=<span class="string">&quot;$&#123; pageContext.request.contextPath &#125;/login.jsp&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/form&gt;</span><br></pre></td></tr></table></figure>





<hr>
<h3 id="9-6-JSTL："><a href="#9-6-JSTL：" class="headerlink" title="9.6 JSTL："></a>9.6 JSTL：</h3><p><strong>概念：</strong> Java Server Tag Lib，Java标准标签库，是Apache免费提供的JSP标签库。</p>
<p><strong>作用：</strong> 简化和替换部分JSP页面中的Java代码。</p>
<hr>
<p><strong>使用步骤：</strong></p>
<blockquote>
<p>  1、项目中引入JSTL的JAR包：<a href="http://static.runoob.com/download/jakarta-taglibs-standard-1.1.2.tar.gz">jar包的下载地址</a></p>
<p>  2、JSP页面中引入标签库：利用Taglib指令。<code>&lt;%@ taglib prefix=&quot;自定义标签名&quot; uri=&quot;标签库地址&quot; %&gt;</code></p>
<p>  3、页面中使用标签。</p>
</blockquote>
<hr>
<p><strong>常见的JSTL标签：</strong></p>
<blockquote>
<ul>
<li>  if：必选的属性<code>test</code>，一般与<code>EL表达式</code>配合使用。</li>
<li>  choose：相当于Java中的 <code>switch </code>语句</li>
<li>  when：相当于<code>case</code>语句</li>
<li>  otherwise：相当于<code>default</code>语句</li>
<li>  forEach：相当于Java中的<code>for</code>语句，【常用属性：begin、end、var、step，varStatus】</li>
</ul>
</blockquote>
<p>if 标签：</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 页面导入标签库</span></span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">	<span class="comment">// test=true时，才显示标签中的内容(类似vue)，一般与`EL表达式`配合使用。</span></span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;false&quot;</span>&gt; 我是test属性为<span class="keyword">true</span>时显示的内容(为<span class="keyword">false</span>时不显示) &lt;/c:<span class="keyword">if</span>&gt;   </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// EL表达式与JSTL标签联合使用。</span></span><br><span class="line">     &lt;%</span><br><span class="line">    	List arr = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    	arr.add(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">    	request.setAttribute(<span class="string">&quot;list_1&quot;</span>,arr);</span><br><span class="line">    </span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123; not empty list_1 &#125;&quot;</span>&gt; </span><br><span class="line">    	arr不为空时，我才显示</span><br><span class="line">    &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123; num_1 % 2 ==1 &#125;&quot;</span>&gt; </span><br><span class="line">    	num_1为奇数时，我才显示</span><br><span class="line">    &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<p>chhose-when-otherwise标签配合使用：</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 页面导入标签库</span></span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">     &lt;%</span><br><span class="line">    	List arr = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    	arr.add(<span class="number">1</span>);	    </span><br><span class="line">    	request.setAttribute(<span class="string">&quot;list_1&quot;</span>,arr);</span><br><span class="line">    </span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;c:choose&gt; </span><br><span class="line">    	&lt;c:when test=<span class="string">&quot;$&#123; list_1[0] == 1 &#125;&quot;</span>&gt;星期一 &lt;/c:when&gt; </span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123; list_1[1] == 2 &#125;&quot;</span>&gt;星期二 &lt;/c:when&gt; </span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123; list_1[2] == 3 &#125;&quot;</span>&gt;星期三 &lt;/c:when&gt; </span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123; list_1[3] == 4 &#125;&quot;</span>&gt;星期四 &lt;/c:when&gt; </span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123; list_1[4] == 5 &#125;&quot;</span>&gt;星期五 &lt;/c:when&gt; </span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123; list_1[5] == 6 &#125;&quot;</span>&gt;星期六 &lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123; list_1[5] == 6 &#125;&quot;</span>&gt;星期日 &lt;/c:when&gt;</span><br><span class="line">        &lt;c:otherwis&gt; 输入有误&lt;/c:otherwise&gt;     </span><br><span class="line">    &lt;/c:choose&gt;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<hr>
<p>forEach标签：</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 页面导入标签库</span></span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">     &lt;%</span><br><span class="line">    	List arr = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    	arr.add(<span class="number">1</span>);	    </span><br><span class="line">    	request.setAttribute(<span class="string">&quot;list_1&quot;</span>,arr);</span><br><span class="line">    </span><br><span class="line">    %&gt;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 【普通for循环】</span></span><br><span class="line">    <span class="comment">// 打印变量i, 范围：[0,9]，步长=1，</span></span><br><span class="line">    <span class="comment">// varStatus的属性：index，索引，从0开始</span></span><br><span class="line">    <span class="comment">// varStatus的属性：count，计数器，从1开始</span></span><br><span class="line">    &lt;c:forEach begin=<span class="string">&quot;0&quot;</span> end=<span class="string">&quot;9&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;i&quot;</span> step=<span class="string">&quot;1&quot;</span> varStatus=<span class="string">&quot;s&quot;</span> &gt; </span><br><span class="line">    	  $&#123; i &#125;  ===&gt; $&#123; s.index &#125;  ====&gt; $&#123; s.count &#125;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 【集合的for循环】</span></span><br><span class="line">    &lt;c:forEach items=<span class="string">&quot;$&#123;list_1&#125;&quot;</span>  <span class="keyword">var</span>=<span class="string">&quot;i&quot;</span> varStatus=<span class="string">&quot;s&quot;</span>&gt; </span><br><span class="line">    	  $&#123; i &#125;  ===&gt; $&#123; s.index &#125;  ====&gt; $&#123; s.count &#125;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>





<hr>
<h3 id="9-7-三层架构："><a href="#9-7-三层架构：" class="headerlink" title="9.7 三层架构："></a>9.7 三层架构：</h3><ul>
<li>  界面层（web 层）：与用户界面交互。包的命名：<code>域名.项目名</code></li>
<li>  业务逻辑层（service 层）：处理业务逻辑。包的命名：<code>域名.service</code></li>
<li>  数据访问层（dao 层）：控制数据库的访问。包的命名：<code>域名.dao</code></li>
</ul>
<p><img src="https://z3.ax1x.com/2021/07/18/W3wPte.png" alt="三层架构图"></p>
<p>项目步骤：</p>
<ul>
<li>  <strong>需求分析</strong>：要完成什么功能</li>
<li><strong>设计</strong>：<ul>
<li>  技术选型：例如，<code>JSP + Servlet + MySQL + Druid + JdbcTemplete + BeanUtils + Tomcat</code></li>
<li>  数据库的设计</li>
</ul>
</li>
<li><strong>开发</strong>：<ul>
<li>搭建环境<ul>
<li>  搭建数据库环境</li>
<li>  导入JAR包</li>
</ul>
</li>
<li>  编写代码</li>
</ul>
</li>
<li>  <strong>测试</strong>：</li>
<li>  <strong>部署 + 运维</strong></li>
</ul>
<blockquote>
<p>  使用三层架构的技巧：</p>
<ul>
<li><p>  0、创建：<code>jdbc工具类</code></p>
</li>
<li><p>  1、创建：<code>实体类</code>（成员变量与数据表完全对应）。</p>
</li>
<li><p>  2、创建：<code>dao接口 + 实现类</code>：JDBC操作。</p>
</li>
<li><p>  3、创建：<code>service接口 + 实现类</code>：new出dao实现类，调用dao实现类的方法来完成一些功能。</p>
</li>
<li><p>  4、创建：<code>servlet</code>：执行页面访问时的操作。</p>
</li>
<li><p>  5、创建：<code>JSP页面</code></p>
</li>
</ul>
</blockquote>
<hr>
<h3 id="9-8-案例：【用户查询】"><a href="#9-8-案例：【用户查询】" class="headerlink" title="9.8 案例：【用户查询】"></a>9.8 案例：【用户查询】</h3><p><img src="https://z3.ax1x.com/2021/07/18/W320Zd.png" alt="用户列表信息查询-整体逻辑图"></p>
<p><strong>目标：</strong></p>
<p><img src="https://z3.ax1x.com/2021/07/19/WGiqHO.png" alt="案例目标"></p>
<p><code>分页的格式：页数= 总记录数%每页显示数==0？总记录数%每页显示数：总记录数%每页显示数+1</code></p>
<p><strong>步骤：</strong></p>
<blockquote>
<p>  0、创建数据库</p>
<p>  1、创建项目</p>
<p>  2、在<code>web/WEB-INF</code>目录下新建目录<code>lib</code>，将所有的<code>Jar</code>都放入<code>lib</code>目录下。</p>
<p>  3、在<code>src</code>目录下创建项目所需的所有包：<code>实体包、web包、service包、dao包、util包</code></p>
<p>  4、在包下创建各种接口、实现类、Servlet。</p>
<p>  5、在 <code>dao实现类</code>中使用<code>Druid + JdbcTemplete</code>获取数据，并返回给 <code>service实现类</code></p>
<p>  6、 <code>service实现类</code> 中<code>new</code>出<code>dao对象</code>，调用<code>dao对象</code>中的获取数据的方法，返回数据给<code>Servlet</code></p>
<p>  7、<code>servlet</code>获取数据到<code>集合</code>中，将<code>集合</code>存放到 <code>Request对象的域中</code>，调用<code>Request对象</code>的<code>请求转发</code> </p>
<p>  8、<code>JSP页面</code> 引用<code>JSTL库</code>，<code>JSTL和 EL表达式</code>获取<code>Request域中的数据</code>，<code>JSTL的forEach</code>显示数据。</p>
</blockquote>
<h4 id="1、创建数据库："><a href="#1、创建数据库：" class="headerlink" title="1、创建数据库："></a>1、创建数据库：</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database exercise_2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ---------------------</span></span><br><span class="line">use exercise_2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ---------------------</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `<span class="keyword">user</span>`(</span><br><span class="line">	`id` <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">	`name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	`gender` <span class="type">varchar</span>(<span class="number">5</span>),</span><br><span class="line">	`age` <span class="type">int</span>,</span><br><span class="line">	`address` <span class="type">varchar</span>(<span class="number">32</span>),</span><br><span class="line">	`QQ` <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">	`email` <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">	`username` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	`psw` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- -------------</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `<span class="keyword">user</span>`(`name`,`gender`,`age`,`address`,`QQ`,`email`,`username`,`psw`)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;23&#x27;</span>,<span class="string">&#x27;浙江省杭州市西湖区&#x27;</span>,<span class="string">&#x27;123445&#x27;</span>,<span class="string">&#x27;123445@qq.com&#x27;</span>,<span class="string">&#x27;zs&#x27;</span>,<span class="string">&#x27;123&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `<span class="keyword">user</span>`(`name`,`gender`,`age`,`address`,`QQ`,`email`,`username`,`psw`)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;21&#x27;</span>,<span class="string">&#x27;浙江省杭州市上城区&#x27;</span>,<span class="string">&#x27;223445&#x27;</span>,<span class="string">&#x27;223445@qq.com&#x27;</span>,<span class="string">&#x27;ls&#x27;</span>,<span class="string">&#x27;123&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `<span class="keyword">user</span>`(`name`,`gender`,`age`,`address`,`QQ`,`email`,`username`,`psw`)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;27&#x27;</span>,<span class="string">&#x27;浙江省金华市&#x27;</span>,<span class="string">&#x27;223445&#x27;</span>,<span class="string">&#x27;323445@qq.com&#x27;</span>,<span class="string">&#x27;ww&#x27;</span>,<span class="string">&#x27;123&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `<span class="keyword">user</span>`(`name`,`gender`,`age`,`address`,`QQ`,`email`,`username`,`psw`)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;马燕&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;22&#x27;</span>,<span class="string">&#x27;浙江省台州市黄岩区&#x27;</span>,<span class="string">&#x27;423445&#x27;</span>,<span class="string">&#x27;423445@qq.com&#x27;</span>,<span class="string">&#x27;my&#x27;</span>,<span class="string">&#x27;123&#x27;</span>);</span><br></pre></td></tr></table></figure>



<h4 id="2、目录结构："><a href="#2、目录结构：" class="headerlink" title="2、目录结构："></a>2、目录结构：</h4><ul>
<li>  所需JAR包：</li>
</ul>
<p>![所需JAR包](Java Web-笔记/WG0DPO.png)</p>
<hr>
<ul>
<li>  整体的包结构：</li>
</ul>
<p><img src="https://z3.ax1x.com/2021/07/18/W8CpSP.png" alt="整体包结构"></p>
<hr>
<ul>
<li>  详细包结构：</li>
</ul>
<p><img src="https://z3.ax1x.com/2021/07/18/W8Cskd.png" alt="详细包结构"></p>
<hr>
<h4 id="3、Utils包："><a href="#3、Utils包：" class="headerlink" title="3、Utils包："></a>3、Utils包：</h4><p>DBUtils.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DBUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        InputStream is = DBUtils.class.getClassLoader().getResourceAsStream(<span class="string">&quot;druid.properties&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            properties.load(is);</span><br><span class="line">            dataSource = DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回 静态的数据库连接池</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<hr>
<h4 id="4、实体包："><a href="#4、实体包：" class="headerlink" title="4、实体包："></a>4、实体包：</h4><p>User.java：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> String qq;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String psw;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, address=&#x27;&quot;</span> + address + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, qq=&#x27;&quot;</span> + qq + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, psw=&#x27;&quot;</span> + psw + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGender</span><span class="params">(String gender)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getQq</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> qq;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setQq</span><span class="params">(String qq)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.qq = qq;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPsw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> psw;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPsw</span><span class="params">(String psw)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.psw = psw;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(<span class="keyword">int</span> id, String name, String gender, <span class="keyword">int</span> age, String address, String qq, String email, String username, String psw)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">        <span class="keyword">this</span>.qq = qq;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">        <span class="keyword">this</span>.psw = psw;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<hr>
<h4 id="5、Dao包："><a href="#5、Dao包：" class="headerlink" title="5、Dao包："></a>5、Dao包：</h4><p>UserDaoImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cyw.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.cyw.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.cyw.util.DBUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.dao.DataAccessException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.BeanPropertyRowMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    DataSource dataSource= DBUtils.getDataSource();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jt = <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       String sql = <span class="string">&quot;select * from user&quot;</span>;</span><br><span class="line">        List&lt;User&gt; users = jt.query(sql, <span class="keyword">new</span> BeanPropertyRowMapper&lt;User&gt;(User.class));</span><br><span class="line">        <span class="keyword">return</span> users;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findUserByUsernameAndPsw</span><span class="params">(String username,String psw)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String sql = <span class="string">&quot;select * from user where username=? and psw=?&quot;</span>;        </span><br><span class="line">        User user = <span class="keyword">null</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            user = jt.queryForObject(sql, <span class="keyword">new</span> BeanPropertyRowMapper&lt;User&gt;(User.class), username, psw);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DataAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<hr>
<h4 id="6、Service包"><a href="#6、Service包" class="headerlink" title="6、Service包"></a>6、Service包</h4><p>UserServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cyw.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.cyw.dao.impl.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.cyw.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.cyw.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> UserDao dao = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 调用 dao层的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span>  dao.findUserByUsernameAndPsw(user.getUsername(), user.getPsw());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span>  <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>











<h4 id="7、Web包（Servlet包）："><a href="#7、Web包（Servlet包）：" class="headerlink" title="7、Web包（Servlet包）："></a>7、Web包（Servlet包）：</h4><hr>
<h5 id="验证码Servlet："><a href="#验证码Servlet：" class="headerlink" title="验证码Servlet："></a>验证码Servlet：</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/checkCodeServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">checkCodeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 禁用验证码的缓存</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;pragma&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;cache-control&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;expires&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> width = <span class="number">80</span>;</span><br><span class="line">        <span class="keyword">int</span> height = <span class="number">30</span>;</span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line"></span><br><span class="line">        Graphics g = image.getGraphics();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 画背景色</span></span><br><span class="line">        g.setColor(Color.gray);</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 画边框</span></span><br><span class="line">        g.setColor(Color.black);</span><br><span class="line">        g.drawRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 画验证码</span></span><br><span class="line">        g.setColor(Color.yellow);</span><br><span class="line">        String checkCode = getRandomCheckCode();</span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        session.setAttribute(<span class="string">&quot;checkCode&quot;</span>, checkCode);</span><br><span class="line">        g.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;黑体&quot;</span>, Font.BOLD, <span class="number">24</span>));</span><br><span class="line">        g.drawString(checkCode, <span class="number">15</span>, <span class="number">25</span>);</span><br><span class="line"></span><br><span class="line">        ImageIO.write(image, <span class="string">&quot;jpg&quot;</span>, response.getOutputStream());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 随机生成验证码</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getRandomCheckCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String str = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890&quot;</span>;</span><br><span class="line">        Random rd = <span class="keyword">new</span> Random();</span><br><span class="line">        String rst = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> idx = rd.nextInt(str.length());</span><br><span class="line">            <span class="keyword">char</span> ch = str.charAt(idx);</span><br><span class="line">            rst += ch;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> rst;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<hr>
<h5 id="登录Servlet"><a href="#登录Servlet" class="headerlink" title="登录Servlet:"></a>登录Servlet:</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cyw.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.cyw.service.impl.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/loginServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">loginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 设置编码</span></span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取表单数据</span></span><br><span class="line">        String verifycode = req.getParameter(<span class="string">&quot;verifycode&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 验证码校验</span></span><br><span class="line">        HttpSession session = req.getSession();</span><br><span class="line">        String checkCode = (String)session.getAttribute(<span class="string">&quot;checkCode&quot;</span>);</span><br><span class="line">        session.removeAttribute(<span class="string">&quot;checkCode&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(!checkCode.equalsIgnoreCase(verifycode))&#123;</span><br><span class="line">            <span class="comment">// 验证码不正确</span></span><br><span class="line">            req.setAttribute(<span class="string">&quot;login_err&quot;</span>,<span class="string">&quot;验证码错误！！&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/login.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">			<span class="comment">// 【注意】：表单的name属性与User实体类的属性必须完全一致b</span></span><br><span class="line">            Map&lt;String, String[]&gt; map = req.getParameterMap();</span><br><span class="line">            <span class="comment">// 封装User对象</span></span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                BeanUtils.populate(user,map);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 调用Service</span></span><br><span class="line">            UserServiceImpl service = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">            User loginUser = service.login(user);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断是否登录成功</span></span><br><span class="line">            <span class="keyword">if</span> (loginUser!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="comment">// 登录成功，用户存入session,跳转页面</span></span><br><span class="line">                session.setAttribute(<span class="string">&quot;user&quot;</span>,loginUser);</span><br><span class="line">                resp.sendRedirect(req.getContextPath()+<span class="string">&quot;/index.jsp&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 登录失败，提示失败，返回登录页</span></span><br><span class="line">                req.setAttribute(<span class="string">&quot;login_err&quot;</span>,<span class="string">&quot;用户名或密码错误！！&quot;</span>);</span><br><span class="line">                req.getRequestDispatcher(<span class="string">&quot;/login.jsp&quot;</span>).forward(req,resp);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<hr>
<h5 id="用户列表查询Servlet"><a href="#用户列表查询Servlet" class="headerlink" title="用户列表查询Servlet:"></a>用户列表查询Servlet:</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cyw.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.cyw.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.cyw.service.impl.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet( &quot;/userListServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">userListServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        UserService service = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        List&lt;User&gt; users = service.findAll();</span><br><span class="line">        request.setAttribute(<span class="string">&quot;users&quot;</span>,users);</span><br><span class="line">        request.getRequestDispatcher(<span class="string">&quot;/list.jsp&quot;</span>).forward(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<hr>
<h4 id="8、登录页"><a href="#8、登录页" class="headerlink" title="8、登录页"></a>8、登录页</h4><p>login.jsp</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>/&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge&quot;</span>/&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>/&gt;</span><br><span class="line">    &lt;title&gt;管理员登录&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- <span class="number">1.</span> 导入CSS的全局样式 --&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;css/bootstrap.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">    &lt;!-- <span class="number">2.</span> jQuery导入，建议使用<span class="number">1.9</span>以上的版本 --&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;js/jquery-2.1.0.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!-- <span class="number">3.</span> 导入bootstrap的js文件 --&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;js/bootstrap.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">        let img = document.getElementById(<span class="string">&quot;vcode&quot;</span>);</span><br><span class="line">        img.onclick = () =&gt; &#123;</span><br><span class="line">            let time = <span class="keyword">new</span> Date().getTime();</span><br><span class="line">            img.src = <span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/checkCodeServlet?time=&quot;</span> + time;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;container&quot;</span> style=<span class="string">&quot;width: 400px;&quot;</span>&gt;</span><br><span class="line">    &lt;h3 style=<span class="string">&quot;text-align: center;&quot;</span>&gt;管理员登录&lt;/h3&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;$&#123; pageContext.request.contextPath&#125;/loginServlet&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;form-group&quot;</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">&quot;user&quot;</span>&gt;用户名：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;form-control&quot;</span> id=<span class="string">&quot;user&quot;</span> placeholder=<span class="string">&quot;请输入用户名&quot;</span>/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;form-group&quot;</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">&quot;password&quot;</span>&gt;密码：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;psw&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;form-control&quot;</span> id=<span class="string">&quot;password&quot;</span> placeholder=<span class="string">&quot;请输入密码&quot;</span>/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;form-inline&quot;</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">&quot;vcode&quot;</span>&gt;验证码：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;verifycode&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;form-control&quot;</span> id=<span class="string">&quot;verifycode&quot;</span> placeholder=<span class="string">&quot;请输入验证码&quot;</span></span><br><span class="line">                   style=<span class="string">&quot;width: 120px;&quot;</span>/&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;javascript:refreshCode()&quot;</span>&gt;&lt;img src=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/checkCodeServlet&quot;</span></span><br><span class="line">                                                    title=<span class="string">&quot;看不清点击刷新&quot;</span> id=<span class="string">&quot;vcode&quot;</span>/&gt;&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;hr/&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;form-group&quot;</span> style=<span class="string">&quot;text-align: center;&quot;</span>&gt;</span><br><span class="line">            &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btn btn btn-primary&quot;</span> type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 出错显示的信息框 --&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;alert alert-warning alert-dismissible&quot;</span> role=<span class="string">&quot;alert&quot;</span>&gt;</span><br><span class="line">        &lt;button type=<span class="string">&quot;button&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;close&quot;</span> data-dismiss=<span class="string">&quot;alert&quot;</span>&gt;</span><br><span class="line">            &lt;span&gt;&amp;times;&lt;/span&gt;&lt;/button&gt;</span><br><span class="line">        &lt;strong&gt;$&#123; login_err &#125;&lt;/strong&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>





<h4 id="9、首页"><a href="#9、首页" class="headerlink" title="9、首页"></a>9、首页</h4><p>index.jsp</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>/&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge&quot;</span>/&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>/&gt;</span><br><span class="line">  &lt;title&gt;首页&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- <span class="number">1.</span> 导入CSS的全局样式 --&gt;</span><br><span class="line">  &lt;link href=<span class="string">&quot;css/bootstrap.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">  &lt;!-- <span class="number">2.</span> jQuery导入，建议使用<span class="number">1.9</span>以上的版本 --&gt;</span><br><span class="line">  &lt;script src=<span class="string">&quot;js/jquery-2.1.0.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;!-- <span class="number">3.</span> 导入bootstrap的js文件 --&gt;</span><br><span class="line">  &lt;script src=<span class="string">&quot;js/bootstrap.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div&gt;$&#123; user.name&#125;，欢迎你！&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;a</span><br><span class="line">          href=<span class="string">&quot;$&#123; pageContext.request.contextPath&#125;/userListServlet&quot;</span> style=<span class="string">&quot;text-decoration:none;font-size:33px&quot;</span>&gt;查询所有用户信息</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>



<h4 id="10、用户查询页"><a href="#10、用户查询页" class="headerlink" title="10、用户查询页"></a>10、用户查询页</h4><p>list.jsp</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;!-- 网页使用的语言 --&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;!-- 指定字符集 --&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;!-- 使用Edge最新的浏览器的渲染方式 --&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge&quot;</span>&gt;</span><br><span class="line">    &lt;!-- viewport视口：网页可以根据设置的宽度自动进行适配，在浏览器的内部虚拟一个容器，容器的宽度与设备的宽度相同。</span><br><span class="line">    width: 默认宽度与设备的宽度相同</span><br><span class="line">    initial-scale: 初始的缩放比，为<span class="number">1</span>:<span class="number">1</span> --&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span><br><span class="line">    &lt;!-- 上述<span class="number">3</span>个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span><br><span class="line">    &lt;title&gt;用户信息管理系统&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- <span class="number">1.</span> 导入CSS的全局样式 --&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;css/bootstrap.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">    &lt;!-- <span class="number">2.</span> jQuery导入，建议使用<span class="number">1.9</span>以上的版本 --&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;js/jquery-2.1.0.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!-- <span class="number">3.</span> 导入bootstrap的js文件 --&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;js/bootstrap.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">        td, th &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;container&quot;</span>&gt;</span><br><span class="line">    &lt;h3 style=<span class="string">&quot;text-align: center&quot;</span>&gt;用户信息列表&lt;/h3&gt;</span><br><span class="line">    &lt;table border=<span class="string">&quot;1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;table table-bordered table-hover&quot;</span>&gt;</span><br><span class="line">        &lt;tr <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;success&quot;</span>&gt;</span><br><span class="line">            &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;籍贯&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;QQ&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;邮箱&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">        &lt;c:forEach items=<span class="string">&quot;$&#123; users &#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;user&quot;</span> varStatus=<span class="string">&quot;s&quot;</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;$&#123; s.count &#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123; user.name &#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123; user.gender&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123; user.age&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123; user.address&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123; user.qq&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123; user.email&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btn btn-default btn-sm&quot;</span> href=<span class="string">&quot;update.html&quot;</span>&gt;修改&lt;/a&gt;&amp;nbsp;&lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btn btn-default btn-sm&quot;</span> href=<span class="string">&quot;&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td colspan=<span class="string">&quot;8&quot;</span> align=<span class="string">&quot;center&quot;</span>&gt;&lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btn btn-primary&quot;</span> href=<span class="string">&quot;add.html&quot;</span>&gt;添加联系人&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<hr>
<h2 id="10-Filter-过滤器"><a href="#10-Filter-过滤器" class="headerlink" title="10 Filter 过滤器"></a>10 Filter 过滤器</h2><blockquote>
<p>  <a href="https://www.bilibili.com/video/BV1vt411R72s?from=search&seid=12014235413821499147">Filter+Listener视频</a></p>
</blockquote>
<p>JavaWeb的三大组件：<code>Servlet + Filter + Listener</code></p>
<ul>
<li><p>  <strong>概念</strong>：Request请求访问服务器时，可以被过滤器拦截，并实现一些特殊的功能。</p>
</li>
<li><p>  <strong>作用</strong>：完成通过的操作。如：登录验证、统一编码校验、敏感词过滤。</p>
</li>
</ul>
<p>步骤：</p>
<blockquote>
<p>  1、定义类，实现 Filter接口。</p>
<p>  2、覆盖 重写方法。</p>
<p>  3、配置 <font style="color:red;">拦截路径</font> 。</p>
</blockquote>
<hr>
<h3 id="1、过滤器的实现方式（2种）："><a href="#1、过滤器的实现方式（2种）：" class="headerlink" title="1、过滤器的实现方式（2种）："></a>1、过滤器的实现方式（2种）：</h3><ul>
<li>  <code>注解</code></li>
<li>  <code>web.xml</code></li>
</ul>
<h4 id="1-1-注解-实现过滤器："><a href="#1-1-注解-实现过滤器：" class="headerlink" title="1.1 注解-实现过滤器："></a>1.1 注解-实现过滤器：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.filterdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置过滤路径</span></span><br><span class="line"><span class="meta">@WebFilter(&quot;/*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FilterDemo</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;		<span class="comment">// 实现Filter接口，重写3个生命周期方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;过滤器实现类-doFilter方法执行&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 过滤器放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="1-2-过滤器中-web-xml配置："><a href="#1-2-过滤器中-web-xml配置：" class="headerlink" title="1.2 过滤器中 web.xml配置："></a>1.2 过滤器中 web.xml配置：</h4><p>web.xml 实现过滤器：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">	1、定义过滤器名、设置过滤器的全类名</span></span><br><span class="line"><span class="comment"> 	2、</span></span><br><span class="line"><span class="comment">-- &gt;</span></span><br><span class="line"><span class="comment">    &lt;filter&gt;</span></span><br><span class="line"><span class="comment">        &lt;filter-name&gt;demo1&lt;/filter-name&gt;</span></span><br><span class="line"><span class="comment">        &lt;filter-class&gt;com.cyw.filterdemo.FilterDemo&lt;/filter-class&gt;</span></span><br><span class="line"><span class="comment">    &lt;/filter&gt;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    &lt;filter-mapping&gt;</span></span><br><span class="line"><span class="comment">        &lt;filter-name&gt;demo1&lt;/filter-name&gt;</span></span><br><span class="line"><span class="comment">        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment">    &lt;/filter-mapping&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;/web-app&gt;</span></span><br></pre></td></tr></table></figure>



<hr>
<h3 id="2、Filter的生命周期："><a href="#2、Filter的生命周期：" class="headerlink" title="2、Filter的生命周期："></a>2、Filter的生命周期：</h3><ul>
<li>  <code>init()</code>：服务器启动后，创建Filter对象，执行一次 init 方法。</li>
<li>  <code>doFilter()</code>：request请求被拦截的资源时，执行。</li>
<li>  <code>destroy()</code>：服务器正常关闭时，执行 destroy 方法。</li>
</ul>
<hr>
<h3 id="3、Filter的执行流程："><a href="#3、Filter的执行流程：" class="headerlink" title="3、Filter的执行流程："></a>3、Filter的执行流程：</h3><ul>
<li>  执行过滤器</li>
<li>  执行过滤后的放行资源</li>
<li>  再次执行过滤器方向代码下的代码。</li>
</ul>
<hr>
<h3 id="4、过滤器的配置："><a href="#4、过滤器的配置：" class="headerlink" title="4、过滤器的配置："></a>4、过滤器的配置：</h3><p> 【位置：<code>@webFilter(&quot;拦截路径&quot;)</code> 或者 <code>we.xml</code>】</p>
<p>1、拦截路径：</p>
<blockquote>
<ul>
<li><p>拦截具体的资源：</p>
<ul>
<li>  例如：拦截路径配为：<code>/index.jsp</code>，则访问<code>index.jsp</code>页面时，执行过滤器。</li>
</ul>
</li>
<li><p>拦截某个目录：</p>
<ul>
<li>例如：拦截路径配为：<code>/user/*</code>，访问 user 目录下的所有资源时，执行过滤器。</li>
</ul>
</li>
<li><p>拦截文件的后缀名：</p>
<ul>
<li>  例如：拦截拦截配为：<code>*.jsp</code>，访问所有以<code>.jsp</code>结尾的文件时，执行过滤器。</li>
</ul>
</li>
</ul>
</blockquote>
<p>2、拦截方式（资源被访问的方式）：</p>
<blockquote>
<ul>
<li><p>资源被访问的方式：</p>
<ul>
<li>  重定向</li>
<li>请求转发</li>
</ul>
</li>
<li><p>拦截方式的配置：</p>
<ul>
<li>注解：设置@WebFilter注解的dispatcherType属性<ul>
<li>  <code>REQUEST</code>：默认值，拦截请求的资源</li>
<li>  <code>FORWARD</code>：</li>
<li>  <code>INCLUDE</code>：</li>
<li>  <code>ERROE</code>：</li>
<li>  <code>ASYNC</code>：拦截异步访问资源。</li>
</ul>
</li>
<li>  <code>web.xml</code>：<code>&lt;dispatcher&gt;  &lt;/dispatcher&gt;</code></li>
</ul>
</li>
</ul>
</blockquote>
<h3 id="5、-过滤器的执行顺序："><a href="#5、-过滤器的执行顺序：" class="headerlink" title="5、 过滤器的执行顺序："></a>5、 过滤器的执行顺序：</h3><p>假设有2个过滤器，执行顺序：</p>
<blockquote>
<ul>
<li>  过滤器1</li>
<li>  过滤器2</li>
<li>  资源</li>
<li>  过滤器2</li>
<li>  过滤器1</li>
</ul>
</blockquote>
<p>具体顺序：</p>
<blockquote>
<ul>
<li>  注解形式-配置过滤器的过滤路径：比较过滤器的类名，名字字母小的先执行。</li>
<li>  web.xml 形式-配置过滤器：在上面的先执行。</li>
</ul>
</blockquote>
<hr>
<h2 id="11、Listener-监听器："><a href="#11、Listener-监听器：" class="headerlink" title="11、Listener 监听器："></a>11、Listener 监听器：</h2><p>监听 Session、Request、ServletContext的创建、销毁。</p>
<p>使用：类似Servlet和Filter。</p>
<h2 id="12、代理模式"><a href="#12、代理模式" class="headerlink" title="12、代理模式:"></a>12、代理模式:</h2><p>设计模式（23种）：解决某种问题的固定格式。</p>
<hr>
<ul>
<li>  代理模式：【真实对象（手机厂家） + 代理对象（手机店）】</li>
</ul>
<blockquote>
<p>  代理模式的分类：</p>
<ul>
<li>  静态代理：有一个专门的类文件</li>
<li>  动态代理：在内存中生成一个类文件</li>
</ul>
</blockquote>
<hr>
<p>实现步骤：</p>
<blockquote>
<p>  1、真实对象和代理对象<code>实现相同的接口</code>。</p>
<p>  2、获取代理对象的实例，【该方法来自<code>java.lang.reflect.Proxy</code>】</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">代理对象 = Proxy.newProxyInstance(类加载器，真实对象的接口，<span class="keyword">new</span> InvocationHandler()&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 传入代理对象，代理对象调用的方法，调用方法时真实传入的参数    </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> object <span class="title">invoke</span><span class="params">( Object proxy ，Method method ，Object[] args)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">		Object obj = method.invoke(真实对象,args);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>  3、代理对象<code>调用方法</code>。</p>
<p>  4、增强方法。</p>
</blockquote>
<h2 id="13、邮件发送-工具类"><a href="#13、邮件发送-工具类" class="headerlink" title="13、邮件发送-工具类"></a>13、邮件发送-工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.travel.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.mail.*;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发邮件工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">MailUtils</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 使用前，先登录邮箱，并开启邮箱的s</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String USER = <span class="string">&quot;12345@qq.com&quot;</span>; <span class="comment">// 发件人称号，同邮箱地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PASSWORD = <span class="string">&quot;abcde&quot;</span>; <span class="comment">// 如果是qq邮箱可以使户端授权码，或者登录密码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> to 收件人邮箱</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text 邮件正文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> title 标题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">/* 发送验证信息的邮件 */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">sendMail</span><span class="params">(String to, String text, String title)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line">            props.put(<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">            props.put(<span class="string">&quot;mail.smtp.host&quot;</span>, <span class="string">&quot;smtp.qq.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发件人的账号</span></span><br><span class="line">            props.put(<span class="string">&quot;mail.user&quot;</span>, USER);</span><br><span class="line">            <span class="comment">//发件人的密码</span></span><br><span class="line">            props.put(<span class="string">&quot;mail.password&quot;</span>, PASSWORD);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 构建授权信息，用于进行SMTP进行身份验证</span></span><br><span class="line">            Authenticator authenticator = <span class="keyword">new</span> Authenticator() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">protected</span> PasswordAuthentication <span class="title">getPasswordAuthentication</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="comment">// 用户名、密码</span></span><br><span class="line">                    String userName = props.getProperty(<span class="string">&quot;mail.user&quot;</span>);</span><br><span class="line">                    String password = props.getProperty(<span class="string">&quot;mail.password&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> PasswordAuthentication(userName, password);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// 使用环境属性和授权信息，创建邮件会话</span></span><br><span class="line">            Session mailSession = Session.getInstance(props, authenticator);</span><br><span class="line">            <span class="comment">// 创建邮件消息</span></span><br><span class="line">            MimeMessage message = <span class="keyword">new</span> MimeMessage(mailSession);</span><br><span class="line">            <span class="comment">// 设置发件人</span></span><br><span class="line">            String username = props.getProperty(<span class="string">&quot;mail.user&quot;</span>);</span><br><span class="line">            InternetAddress form = <span class="keyword">new</span> InternetAddress(username);</span><br><span class="line">            message.setFrom(form);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置收件人</span></span><br><span class="line">            InternetAddress toAddress = <span class="keyword">new</span> InternetAddress(to);</span><br><span class="line">            message.setRecipient(Message.RecipientType.TO, toAddress);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置邮件标题</span></span><br><span class="line">            message.setSubject(title);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置邮件的内容体</span></span><br><span class="line">            message.setContent(text, <span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">            <span class="comment">// 发送邮件</span></span><br><span class="line">            Transport.send(message);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123; <span class="comment">// 做测试用</span></span><br><span class="line">        MailUtils.sendMail(<span class="string">&quot;23456@qq.com&quot;</span>,<span class="string">&quot;你好，这是一封测试邮件，无需回复。&quot;</span>,<span class="string">&quot;测试邮件&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;发送成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>后端</category>
        <category>Java</category>
        <category>Java Web</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript-笔记</title>
    <url>/2021/08/04/JavaScript-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="JavaScript-笔记"><a href="#JavaScript-笔记" class="headerlink" title="JavaScript-笔记"></a>JavaScript-笔记</h1><p>[toc]</p>
<h2 id="1-数据类型-类型转化"><a href="#1-数据类型-类型转化" class="headerlink" title="1. 数据类型 + 类型转化"></a>1. 数据类型 + 类型转化</h2><ul>
<li>  string</li>
<li>  boolean</li>
<li>  number</li>
<li>  object</li>
<li>  null</li>
<li>  undefined</li>
</ul>
<h3 id="1-1-String-gt-Number"><a href="#1-1-String-gt-Number" class="headerlink" title="1.1 String  =&gt; Number"></a>1.1 String  =&gt; Number</h3><p>【直接查看字符串的首字符 是否 为数字=》不是 =》NaN】</p>
<ul>
<li>  parseInt( )</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;123abc&quot;</span>)   <span class="comment">// 123</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;22.5&quot;</span>) 	 <span class="comment">// 22</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;abc&quot;</span>)		 <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure>



<ul>
<li>  parseFloat( )</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">parseFloat</span>(<span class="string">&quot;123abc&quot;</span>)	<span class="comment">// 123.0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">parseFloat</span>(<span class="string">&quot;123.23.4&quot;</span>)	<span class="comment">// 123.23</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">parseFloat</span>(<span class="string">&quot;abc&quot;</span>)		<span class="comment">// NaN</span></span><br></pre></td></tr></table></figure>

<h3 id="1-2-Number-gt-String"><a href="#1-2-Number-gt-String" class="headerlink" title="1.2  Number =&gt; String"></a>1.2  Number =&gt; String</h3><ul>
<li>  toString( )：转化为字符串</li>
<li>  toFix( 保留的小数位数 )：四舍五入后，转化为字符串</li>
</ul>
<h2 id="2-数组"><a href="#2-数组" class="headerlink" title="2. 数组"></a>2. 数组</h2><h3 id="2-1-定义："><a href="#2-1-定义：" class="headerlink" title="2.1 定义："></a>2.1 定义：</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr1 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr2 = <span class="keyword">new</span> <span class="built_in">Array</span>(size)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr)	<span class="comment">//打印整个数组</span></span><br><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">0</span>]) <span class="comment">//打印数组第一个元素</span></span><br></pre></td></tr></table></figure>



<h3 id="2-2-数组长度："><a href="#2-2-数组长度：" class="headerlink" title="2.2 数组长度："></a>2.2 数组长度：</h3><p>arr.length ，长度可被修改</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr.length)	<span class="comment">//4</span></span><br><span class="line"></span><br><span class="line">arr.length = <span class="number">10</span></span><br></pre></td></tr></table></figure>



<h3 id="2-3-数组元素-数组属性-的修改"><a href="#2-3-数组元素-数组属性-的修改" class="headerlink" title="2.3 数组元素 + 数组属性 的修改"></a>2.3 数组元素 + 数组属性 的修改</h3><p>【下标：若不是数字，则当作属性】</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line">arr[<span class="number">4</span>] = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr)	<span class="comment">//打印整个数组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">arr[<span class="string">&#x27;uname&#x27;</span>]=<span class="string">&#x27;张三&#x27;</span>	<span class="comment">// 向数组中添加一个属性uname ,uname的属性值为张三</span></span><br></pre></td></tr></table></figure>



<h3 id="2-4-数组的-遍历"><a href="#2-4-数组的-遍历" class="headerlink" title="2.4 数组的 遍历"></a>2.4 数组的 遍历</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// for()：不遍历属性</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(arr[i])        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// for... in：不遍历 索引和属性的undefined</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">let</span> index <span class="keyword">in</span> arr)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(index)  </span><br><span class="line">        <span class="built_in">console</span>.log(arr[index])  </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// forEach()：不遍历 索引的undefined</span></span><br><span class="line">	</span><br><span class="line">	ar.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">element,index</span>)</span>&#123;</span><br><span class="line">         <span class="built_in">console</span>.log(index)  </span><br><span class="line">        <span class="built_in">console</span>.log(element)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">	</span><br></pre></td></tr></table></figure>

<h3 id="2-5-数组的-常用方法"><a href="#2-5-数组的-常用方法" class="headerlink" title="2.5 数组的 常用方法"></a>2.5 数组的 常用方法</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * arr.push(元素)：末尾插入</span></span><br><span class="line"><span class="comment"> * arr.pop()：末尾删除</span></span><br><span class="line"><span class="comment"> * arr.unshift(元素)：首部插入</span></span><br><span class="line"><span class="comment"> * arr.shift(元素)：首部删除</span></span><br><span class="line"><span class="comment"> * arr.indexOf(字符)：查找字符的索引</span></span><br><span class="line"><span class="comment"> * arr.reverse()：反转，改变原数组</span></span><br><span class="line"><span class="comment"> * arr.concat(数组2)：数组合并,不改变原数组</span></span><br><span class="line"><span class="comment"> * arr.join(字符串连接符)：将 数组元素 按照连接符  合并为 字符串</span></span><br><span class="line"><span class="comment"> * arr.slice(startIndex,endIndex):切片，不改变原数组=&gt; [start,end)</span></span><br><span class="line"><span class="comment"> * arr/splice(startIndex,count,插入元素1，插入元素2)：替换/删除，改变原数组</span></span><br><span class="line"><span class="comment"> * 		</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="3-函数"><a href="#3-函数" class="headerlink" title="3. 函数"></a>3. 函数</h2><p>定义：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. </span></span><br><span class="line">		<span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a+b;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">		add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. </span></span><br><span class="line">		<span class="keyword">let</span> add = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a+b;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. </span></span><br><span class="line">		<span class="keyword">let</span> add = <span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;return a+b&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="4-内置对象-对象"><a href="#4-内置对象-对象" class="headerlink" title="4.  内置对象 +对象"></a>4.  内置对象 +对象</h2><h3 id="4-1-内置对象"><a href="#4-1-内置对象" class="headerlink" title="4.1 内置对象"></a>4.1 内置对象</h3><ul>
<li>  string</li>
<li>  date</li>
<li>  math</li>
<li>  array</li>
<li>  arguments</li>
</ul>
<h3 id="4-2-对象"><a href="#4-2-对象" class="headerlink" title="4.2 对象"></a>4.2 对象</h3><h4 id="4-2-1-定义："><a href="#4-2-1-定义：" class="headerlink" title="4.2.1. 定义："></a>4.2.1. 定义：</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>，</span><br><span class="line">    <span class="attr">age</span>: <span class="number">20</span>    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj.age = <span class="number">15</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj.name)</span><br></pre></td></tr></table></figure>



<h4 id="4-2-2-序列化-反序列化"><a href="#4-2-2-序列化-反序列化" class="headerlink" title="4.2.2. 序列化 + 反序列化"></a>4.2.2. 序列化 + 反序列化</h4><ul>
<li><p>  序列化 ：对象  =转化为= 》 字符串</p>
</li>
<li><p>  反序列化： 字符串  =转化为= 》对象</p>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">JSON</span>.stringify(obj)</span><br><span class="line"></span><br><span class="line"><span class="built_in">JSON</span>.parse(str)</span><br></pre></td></tr></table></figure>

<h4 id="4-2-3-this"><a href="#4-2-3-this" class="headerlink" title="4.2.3. this"></a>4.2.3. this</h4><p>默认指向window对象。谁调用，this就指向谁</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> print = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = <span class="number">15</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="5-事件"><a href="#5-事件" class="headerlink" title="5. 事件"></a>5. 事件</h2><p><strong>注意</strong>：</p>
<ol>
<li> js最好写html后面，防止加载js时还没有html标签，造成程序报错</li>
<li> 若一定想要写在html前面，则需要在 js 外面套函数：window.onload = function( ){… }</li>
</ol>
<h3 id="5-1-事件定义："><a href="#5-1-事件定义：" class="headerlink" title="5.1 事件定义："></a>5.1 事件定义：</h3><p><strong>事件</strong> = 事件源 + 监听器+ 事件名 + 处理</p>
<p>【3种事件】</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. html事件</span></span><br><span class="line"><span class="comment">//			 事件源:input</span></span><br><span class="line"><span class="comment">//			 监听器:onclick</span></span><br><span class="line"><span class="comment">//			 事件名 + 处理: alert(&#x27;hello world&#x27;)</span></span><br><span class="line">	&lt;input type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;点击&quot;</span> id=<span class="string">&#x27;btn1&#x27;</span> onclick=<span class="string">&quot;alert(&#x27;hello world&#x27;)&quot;</span>&gt;</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 2. dom0级事件 【多次给某个事件添加函数时，只有最后一次添加的函数生效】</span></span><br><span class="line">        &lt;input type=&quot;button&quot; value=&quot;点击&quot; id=&#x27;btn1&#x27;&gt;</span><br><span class="line">        </span><br><span class="line">        let Obtn1 = document.getElementById(&#x27;btn1&#x27;);</span><br><span class="line"></span><br><span class="line">		Obtn1.onclick = function()&#123;</span><br><span class="line">            alert(&#x27;hello world&#x27;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 3. dom2级事件【其中事件:冒泡/捕获的bool值可以 省略,默认：事件冒泡 】</span><br><span class="line">//				Obtn1.addEventListener(事件名，处理函数，是否使用事件捕获=false)</span><br><span class="line">//				Obtn1.removeEventListener(事件名，处理函数，是否使用事件捕获=false)</span><br><span class="line"></span><br><span class="line">		&lt;input type=&quot;button&quot; value=&quot;点击&quot; id=&#x27;btn1&#x27;&gt;</span><br><span class="line">            </span><br><span class="line">        let Obtn1 = document.getElementById(&#x27;btn1&#x27;);</span><br><span class="line"></span><br><span class="line">		Obtn1.addEventListener(&#x27;click&#x27;，function()&#123;alert(&#x27;hello&#x27;)&#125;，false)</span><br><span class="line">        Obtn1.removeEventListener(&#x27;click&#x27;，function()&#123;alert(&#x27;hello&#x27;)&#125;，false)</span><br><span class="line"></span><br><span class="line">		</span><br><span class="line">        </span><br></pre></td></tr></table></figure>

<h3 id="5-2-常用事件："><a href="#5-2-常用事件：" class="headerlink" title="5.2 常用事件："></a>5.2 常用事件：</h3><blockquote>
<ul>
<li>  window.onload</li>
</ul>
<p>鼠标：</p>
<ul>
<li>  on click</li>
<li>  on doublec lick</li>
<li>  on mouse over</li>
<li>  on mouse out</li>
</ul>
<p>键盘：</p>
<ul>
<li>  on key down</li>
<li>  on key up</li>
</ul>
<p>文本框</p>
<ul>
<li>  on focus</li>
<li>  on blur</li>
</ul>
<p>select+option标签</p>
<ul>
<li>  on change</li>
</ul>
</blockquote>
<p>事件流：【事件的触发顺序】</p>
<ul>
<li>  事件冒泡【默认的事件流】：内层标签  =传递到=》外层标签</li>
<li>  事件捕获：外层标签  =传递到=》内层标签</li>
</ul>
<h2 id="6-BOM对象"><a href="#6-BOM对象" class="headerlink" title="6. BOM对象"></a>6. BOM对象</h2><h3 id="6-1-弹窗："><a href="#6-1-弹窗：" class="headerlink" title="6.1 弹窗："></a>6.1 弹窗：</h3><ul>
<li>  alert( ‘警告信息’)</li>
<li>  prompt( ‘ 提示’)：输入弹窗，获取字符串</li>
<li>  confirm( ‘ 提示’)：确认框，返回 bool值</li>
</ul>
<h3 id="6-2-页面【打开、关闭】："><a href="#6-2-页面【打开、关闭】：" class="headerlink" title="6.2 页面【打开、关闭】："></a>6.2 页面【打开、关闭】：</h3><ul>
<li>  window.open(网址str)</li>
<li>  window.close( )：只适用于 关闭window.open( )打开的页面</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.open()	<span class="comment">// 打开空白页面</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.open(<span class="string">&#x27;./abc.html&#x27;</span>)	<span class="comment">// 打开本地页面</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.open(<span class="string">&#x27;www.baidu.com&#x27;</span>)	<span class="comment">// 打开网络页面</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.open(<span class="string">&#x27;www.baidu.com&#x27;</span>，‘_blank’)	<span class="comment">// 以新页面方式，打开网络页面</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.close( )	<span class="comment">//关闭当前打开的页面</span></span><br></pre></td></tr></table></figure>







<h3 id="6-3-时间日期："><a href="#6-3-时间日期：" class="headerlink" title="6.3 时间日期："></a>6.3 时间日期：</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">d.toLocaleDateString()  	<span class="comment">// &quot;2021/5/6&quot;</span></span><br></pre></td></tr></table></figure>







<h3 id="6-4-history对象："><a href="#6-4-history对象：" class="headerlink" title="6.4 history对象："></a>6.4 history对象：</h3><ul>
<li><p>  window.history.length ： 历史记录数</p>
</li>
<li><p>  window.history.back( )：后退按钮</p>
</li>
<li><p>  window.history.forward( )：前进按钮</p>
</li>
<li><p>  window.history.go( num | url )：跳转</p>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">history.go(-<span class="number">1</span>)		<span class="comment">// 上一个页面，-1为 当前页面 与 目标url 的相对位置</span></span><br></pre></td></tr></table></figure>







<h3 id="6-5-location对象："><a href="#6-5-location对象：" class="headerlink" title="6.5 location对象："></a>6.5 location对象：</h3><ul>
<li>  window.location.href：网址</li>
<li>  window.location.reload( )：刷新页面</li>
<li>  window.location.replace( )：替换url</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.location.href = <span class="string">&#x27;http://www/baidu.com&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.location.reload( )</span><br><span class="line"></span><br><span class="line">location.replace(<span class="string">&#x27;http://qq.com&#x27;</span>)</span><br></pre></td></tr></table></figure>





<h2 id="7-DOM对象"><a href="#7-DOM对象" class="headerlink" title="7. DOM对象"></a>7. DOM对象</h2><h3 id="7-1-直接-获取-dom节点："><a href="#7-1-直接-获取-dom节点：" class="headerlink" title="7.1 直接 获取 dom节点："></a>7.1 直接 获取 dom节点：</h3><ul>
<li>  document. getEmenentBy Id ( 标签 id )：<code>ID</code></li>
<li>  document. getEmenentsBy ClassName ( 标签class ) [下标]:<code>类名</code></li>
<li>  document. getElementsBy TagName ( 标签名 ) [下标]：<code>标签</code></li>
<li>  document. getElementsBy Name ( 表单元素的name属性值 ) [下标]：<code>表单名</code></li>
</ul>
<h3 id="7-2-间接-获取-dom节点："><a href="#7-2-间接-获取-dom节点：" class="headerlink" title="7.2 间接 获取 dom节点："></a>7.2 间接 获取 dom节点：</h3><ul>
<li>  parentNode</li>
</ul>
<ul>
<li>  previousSibling</li>
<li>  nextSibling</li>
</ul>
<ul>
<li>  childNodes</li>
<li>  firstChild</li>
<li>  lastChild</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> ul = <span class="built_in">document</span>. getEmenentById(<span class="string">&#x27;uls&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(ul.ChildNodes)</span><br></pre></td></tr></table></figure>







<h3 id="7-3-创建节点"><a href="#7-3-创建节点" class="headerlink" title="7.3 创建节点"></a>7.3 创建节点</h3><ul>
<li>  document.createElement(标签str )</li>
<li>  document.createTextNode(文本str )</li>
<li>  标签1.innerHTML = html字符串</li>
</ul>
<h3 id="7-4-添加节点："><a href="#7-4-添加节点：" class="headerlink" title="7.4 添加节点："></a>7.4 添加节点：</h3><ul>
<li>  标签1.appendChild( 标签2)</li>
<li>  标签1.innerHTML = html字符串</li>
<li>  标签1.insertBefore(标签2)：<code>先找父节点，再调用insertBefore(标签类型，在哪个节点前)</code></li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方式1:  appendChild</span></span><br><span class="line">	<span class="keyword">let</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;div1&#x27;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">let</span> p =  <span class="built_in">document</span>.createElement(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">let</span> txt = <span class="built_in">document</span>.createTextNode(<span class="string">&#x27;你好&#x27;</span>);</span><br><span class="line"></span><br><span class="line">	p.appendChild(txt);</span><br><span class="line">	</span><br><span class="line">	div1.appendChild(p);</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//方式2:  innerHTML</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">let</span> div1 =  <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">	div1.innerHTML = <span class="string">`&lt;p&gt;你好&lt;/p&gt;`</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//方式3:  insertBefore</span></span><br><span class="line">    <span class="comment">// div1前 插入节点 div0</span></span><br><span class="line">   <span class="keyword">let</span> parent =<span class="built_in">document</span>.getElementById(<span class="string">&#x27;div1&#x27;</span>).parent;   </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> div0 =  <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);    </span><br><span class="line">    div0.innerHTML = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"></span><br><span class="line">    parent.insertBefore(<span class="string">&#x27;div&#x27;</span>,<span class="built_in">document</span>.getElementById(<span class="string">&#x27;div1&#x27;</span>))</span><br></pre></td></tr></table></figure>

<h3 id="7-5-删除结点"><a href="#7-5-删除结点" class="headerlink" title="7.5 删除结点"></a>7.5 删除结点</h3><ul>
<li>  removeChild( )</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;div1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">div1.parentNode.removeChild( div1 )		<span class="comment">// 删除div1</span></span><br></pre></td></tr></table></figure>







<h3 id="7-6-修改结点的属性"><a href="#7-6-修改结点的属性" class="headerlink" title="7.6 修改结点的属性"></a>7.6 修改结点的属性</h3><ul>
<li>  直接访问属性后修改</li>
<li>  利用 标签1.setAttribute(属性名，属性值)</li>
<li>  利用  innerHTML 的字符串拼接</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方式1</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">let</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;div1&#x27;</span>)</span><br><span class="line">		<span class="keyword">let</span> img1 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;img&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        img1.width = <span class="number">200</span></span><br><span class="line">		img1.height = <span class="number">200</span></span><br><span class="line">		img1.src = <span class="string">&#x27;./img/pic.jpg&#x27;</span></span><br><span class="line"></span><br><span class="line">		div1.appendChild(img1)</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//方式2</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">let</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;div1&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">		<span class="keyword">let</span> img1 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;img&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        img1.setAttribute(<span class="string">&#x27;src&#x27;</span>,<span class="string">&#x27;./img/pic.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line">		div1.appendChild(img1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//方式3</span></span><br><span class="line">		</span><br><span class="line">	  <span class="keyword">let</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;div1&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">      div1.innerHTML +=<span class="string">`&lt;img width=&quot;200px&quot; height=&quot;200px&quot; src=&quot;./img/pic.jpg&quot; /&gt;`</span></span><br><span class="line">		</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
        <category>基础</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-多线程</title>
    <url>/2021/08/13/Java-%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="Java-多线程"><a href="#Java-多线程" class="headerlink" title="Java-多线程"></a>Java-多线程</h1><p>[toc]</p>
<h2 id="0、资源"><a href="#0、资源" class="headerlink" title="0、资源"></a>0、资源</h2><ul>
<li><p>  <a href="https://www.bilibili.com/video/BV1vE411D7KE?p=39">JUC-入门视频</a></p>
</li>
<li><p>  <a href="https://blog.csdn.net/lizongxiao/article/details/106668806">JUC学习笔记-csdn</a></p>
</li>
</ul>
<h2 id="1、案例-1：Synchronized关键字"><a href="#1、案例-1：Synchronized关键字" class="headerlink" title="1、案例-1：Synchronized关键字"></a>1、案例-1：Synchronized关键字</h2><p>先导知识：</p>
<blockquote>
<p>  多线程涉及的3个包</p>
<ul>
<li>  java.util.concurrent：并发包</li>
<li>  java.util.concurrent.locks：并发锁包</li>
<li>  java.util.concurrent.atomic：并发原子包</li>
</ul>
</blockquote>
<p>30张票，由3个售票员卖。</p>
<p>通用口诀：线程、操作、资源类</p>
<p>步骤1：【定义1个资源类（有1个提供资源的操作方法）】</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ticket</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义操作</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">SaleTicket</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(count&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                String curName = Thread.currentThread().getName();</span><br><span class="line">            	System.out.println(curName +<span class="string">&quot; 卖了第&quot;</span>+(count--)+<span class="string">&quot;张票&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>步骤2：【main方法中，创建资源类和线程的对象】</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建资源类的对象</span></span><br><span class="line">Ticket ticket = <span class="keyword">new</span> Ticket();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在线程的run方法中调用资源类的操作</span></span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">30</span> ; i++) &#123;</span><br><span class="line">            ticket.SaleTicket();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,<span class="string">&quot;aa&quot;</span>).start();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第2个资源类</span></span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">30</span> ; i++) &#123;</span><br><span class="line">            ticket.SaleTicket();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,<span class="string">&quot;bb&quot;</span>).start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">30</span> ; i++) &#123;</span><br><span class="line">            ticket.SaleTicket();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,<span class="string">&quot;cc&quot;</span>).start();</span><br></pre></td></tr></table></figure>





<h2 id="2、可重入锁：ReentrantLock"><a href="#2、可重入锁：ReentrantLock" class="headerlink" title="2、可重入锁：ReentrantLock"></a>2、可重入锁：ReentrantLock</h2><p>使用口诀：</p>
<blockquote>
<ol>
<li>  线程、操作、资源类</li>
<li>  判断、干活、再通知（判断只能使用while来判断）</li>
<li>  标志位</li>
</ol>
</blockquote>
<blockquote>
<p>  为什么不用 Synchronized 关键字 来加锁？</p>
<ul>
<li>  Synchronized 关键字的锁粒度太大，类似于你要封闭1个房间，却把整个大楼关了。</li>
</ul>
</blockquote>
<p>案例-1：使用Reentrantlock可重入锁的改进</p>
<p>资源类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ticket</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count = <span class="number">30</span>;</span><br><span class="line">    <span class="comment">// 在资源类中，创建可重入锁</span></span><br><span class="line">    <span class="keyword">private</span> Lock lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">SaleTicket</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 加锁（一定要写在try-catch的外面）</span></span><br><span class="line">        lock.lock();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(count&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                String curName = Thread.currentThread().getName();</span><br><span class="line">                System.out.println(curName+<span class="string">&quot; 卖了第&quot;</span>+(count--)+<span class="string">&quot;张票&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">200</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 释放锁</span></span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>线程调用：main方法中（将原先匿名内部类run方法中的内容直接写在lambda表达式中）</p>
<p><strong>能用lambda表达式简化的原因：利用了函数式接口的思想（runnable 接口只有1个抽象方法: run方法）</strong></p>
<p>函数式接口默认被@FunctionalInterface注解修饰（类似所有类都继承自Object类，无需手动写就能自动补）</p>
<p>函数式接口可以有多个default关键字修饰的方法，因为default关键字修饰的方法在定义时必须写实现代码。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    	Ticket ticket = <span class="keyword">new</span> Ticket();</span><br><span class="line"><span class="comment">// 使用lanbda表达式简化代码</span></span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">40</span> ; i++)ticket.sell();</span><br><span class="line">        &#125;,<span class="string">&quot;aa&quot;</span>).start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">40</span> ; i++)ticket.sell();</span><br><span class="line">        &#125;,<span class="string">&quot;bb&quot;</span>).start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">40</span> ; i++)ticket.sell();</span><br><span class="line">        &#125;,<span class="string">&quot;cc&quot;</span>).start();</span><br></pre></td></tr></table></figure>







<p>回顾线程的6种状态：</p>
<ul>
<li>  new</li>
<li>  runnable</li>
<li>  waiting：一直等</li>
<li>  time_waiting：时间到了就不等了</li>
<li>  terminated</li>
<li>  blocked</li>
</ul>
<h2 id="3、生产者-消费者模型"><a href="#3、生产者-消费者模型" class="headerlink" title="3、生产者-消费者模型"></a>3、生产者-消费者模型</h2><p>口诀：<strong>while判断、干活、通知</strong></p>
<p>注意：多线时，不要用if来判断，为防止线程的虚假唤醒，应该使用while来判断。</p>
<p>为什么需要使用while来判断?</p>
<ul>
<li>  因为使用if来判断时，假设进入if后还没等到wait就被中断，那么当再次被唤醒时，不会进行判断直接wait，造成了虚假唤醒。</li>
</ul>
<p>案例目标：多线程操作1个数，使其增加或减少</p>
<p>资源类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">myResource</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 增加</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span><span class="keyword">throws</span> InterruptedException</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 判断</span></span><br><span class="line">        <span class="keyword">while</span>(num!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>.wait();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 干活</span></span><br><span class="line">        num++;</span><br><span class="line">        String curName = Thread.currentThread().getName();</span><br><span class="line">        System.out.println(curName+<span class="string">&quot; &quot;</span>+num);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 通知</span></span><br><span class="line">        <span class="keyword">this</span>.notify();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 减少</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">sub</span><span class="params">()</span><span class="keyword">throws</span> InterruptedException</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(num == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>.wait();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        num--;</span><br><span class="line">        String curName = Thread.currentThread().getName();</span><br><span class="line">        System.out.println(curName+<span class="string">&quot; &quot;</span>+num);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">this</span>.notify();</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>线程：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main方法</span></span><br><span class="line"></span><br><span class="line">myResource mr = <span class="keyword">new</span> myResource();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第1个线程</span></span><br><span class="line"><span class="keyword">new</span> Thread(</span><br><span class="line">	()-&gt;&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            mr.add();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">,<span class="string">&quot;AA&quot;</span>).start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第2个线程</span></span><br><span class="line"><span class="keyword">new</span> Thread(</span><br><span class="line">	()-&gt;&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            mr.sub();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">，<span class="string">&quot;BB&quot;</span>).start();</span><br></pre></td></tr></table></figure>







<h2 id="4、新版多线程的写法（Lock锁）"><a href="#4、新版多线程的写法（Lock锁）" class="headerlink" title="4、新版多线程的写法（Lock锁）"></a>4、新版多线程的写法（Lock锁）</h2><p>原先使用 Synchronized - wait( ) - notifyAll( )</p>
<p>现在使用 lock锁 - await( ) - signalAll( )</p>
<p>注意： lock锁 - await( ) - signal( ) 需要先创建Condition对象（condition对象就是钥匙）。</p>
<p>4个线程抢占加减：</p>
<p>资源类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Num2</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    Lock lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line">    Condition condition = lock.newCondition();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span><span class="keyword">throws</span> InterruptedException</span>&#123;</span><br><span class="line">        lock.lock();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(num!=<span class="number">0</span>)&#123;</span><br><span class="line">                condition.await();</span><br><span class="line">            &#125;</span><br><span class="line">            num++;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">&quot;\t&quot;</span>+num);</span><br><span class="line"></span><br><span class="line">            condition.signalAll();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sub</span><span class="params">()</span><span class="keyword">throws</span> InterruptedException</span>&#123;</span><br><span class="line">        lock.lock();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(num==<span class="number">0</span>)&#123;</span><br><span class="line">                condition.await();</span><br><span class="line">            &#125;</span><br><span class="line">            num--;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">&quot;\t&quot;</span>+num);</span><br><span class="line">            condition.signalAll();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<p>main函数：线程抢占</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Condition;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Num2 num2 = <span class="keyword">new</span> Num2();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">10</span> ; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    num2.add();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="string">&quot;AA&quot;</span>).start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">10</span> ; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    num2.sub();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="string">&quot;BB&quot;</span>).start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">10</span> ; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    num2.add();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="string">&quot;CC&quot;</span>).start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">10</span> ; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    num2.sub();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="string">&quot;DD&quot;</span>).start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="5、案例：修改标志位"><a href="#5、案例：修改标志位" class="headerlink" title="5、案例：修改标志位"></a>5、案例：修改标志位</h2><p>题目描述：A打印 5次 -&gt; B打印 10次  -&gt; C打印 15次 ，按顺序轮流打印。</p>
<p>资源类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Print</span></span>&#123;</span><br><span class="line">    Lock lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span>; <span class="comment">// A:1  , B:2 , C:3</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 定义3把锁 给A、B、C</span></span><br><span class="line">    Condition condition1 = lock.newCondition();</span><br><span class="line">    Condition condition2 = lock.newCondition();</span><br><span class="line">    Condition condition3 = lock.newCondition();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printA5</span><span class="params">()</span><span class="keyword">throws</span> InterruptedException</span>&#123;</span><br><span class="line">        lock.lock();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(flag!=<span class="number">1</span>)&#123;</span><br><span class="line">                condition1.await();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 修改标志位</span></span><br><span class="line">            flag=<span class="number">2</span>;</span><br><span class="line">            <span class="comment">// 1打印完，去唤醒2</span></span><br><span class="line">            condition2.signal();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printB10</span><span class="params">()</span><span class="keyword">throws</span> InterruptedException</span>&#123;</span><br><span class="line">        lock.lock();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(flag!=<span class="number">2</span>)&#123;</span><br><span class="line">                condition2.await();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            flag=<span class="number">3</span>;</span><br><span class="line">            condition3.signal();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printC15</span><span class="params">()</span><span class="keyword">throws</span> InterruptedException</span>&#123;</span><br><span class="line">        lock.lock();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(flag!=<span class="number">3</span>)&#123;</span><br><span class="line">                condition3.await();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            condition1.signal();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>main方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Condition;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Print print = <span class="keyword">new</span> Print();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">30</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    print.printA5();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="string">&quot;A&quot;</span>).start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">30</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    print.printB10();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="string">&quot;B&quot;</span>).start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">30</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    print.printC15();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="string">&quot;C&quot;</span>).start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="6、锁对象的小结"><a href="#6、锁对象的小结" class="headerlink" title="6、锁对象的小结"></a>6、锁对象的小结</h2><p>普通的同步方法锁的是 <code>this </code>对象</p>
<p>static 同步方法锁的是<code> .class字节码</code> 对象</p>
<p>主要要判断是否锁住了同一把锁。</p>
<ul>
<li>  <a href="https://blog.csdn.net/qq_35080796/article/details/112613751">多线程-8锁</a></li>
</ul>
<p>题目：多线程8锁<br>1、标准访问，请问先打印邮件还是短信？<br>2、邮件新增暂停4秒钟的方法，请问先打印邮件还是短信？<br>3、新增普通的hello方法，请问先打印邮件还是hello？<code>先 hello方法，因为普通法方法不加锁，无需判断锁的情况，可直接调用</code><br>4、有两部手机，请问先打印邮件还是短信？<br>5、两个静态同步方法，同一部手机，请问先打印邮件还是短信？<br>6、两个静态同步方法，2部手机，请问先打印邮件还是短信？<code>5~6两题都是先打印邮件，因为锁住的是模板类</code><br>7、1个静态同步方法,1个普通同步方法，1部手机，请问先打印邮件还是短信？<code>打印邮件，不同的2把锁，分别锁住了模板类和实例对象</code><br>8、1个静态同步方法,1个普通同步方法，2部手机，请问先打印邮件还是短信？</p>
<h2 id="7、如何解决集合类的线程安全问题"><a href="#7、如何解决集合类的线程安全问题" class="headerlink" title="7、如何解决集合类的线程安全问题"></a>7、如何解决集合类的线程安全问题</h2><p>常见的线程安全异常：（并发修改异常）<code>java.util.concurrentModificationException</code></p>
<blockquote>
<p>  List - 解决方案（常用的几种）：</p>
</blockquote>
<ul>
<li>  加<code> 锁</code></li>
<li>  <code>Vecter</code> 来代替：性能差</li>
<li>  调用<code>Collections工具类</code>的同步方法，如：Collections.synchronizedList(new List())</li>
<li>  JUC包下的<code> CopyOnWriteArrayList</code>类：<code>写入时复制1份Object数组，写完后,将原容器的引用(指向自己的指针)指向新容器（利用Arrays.copyOf方法来复制）</code></li>
</ul>
<blockquote>
<p>  Set- 解决方案（常用的几种）：</p>
</blockquote>
<ul>
<li>  <code>Collections.synchronizedSet(new Set());</code></li>
<li>  <code>CopyOnWriteArraySet</code>类</li>
</ul>
<p><strong>hashset</strong> 的底层是 <strong>hashmap</strong>，在<strong>添加</strong> hashset 的元素时，<strong>传入的是 key</strong>，而 value 是 写死的Object常量。</p>
<p>hashmap的初始容量 16，负载因子 0.75（容量到12就扩容1倍）</p>
<p>注意：arraylist 扩容1半</p>
<blockquote>
<p>  Map- 解决方案（常用的几种）：</p>
</blockquote>
<ul>
<li>  JUC包下的 <code>concurrentHashMap</code>类</li>
</ul>
<h2 id="8、Callable接口"><a href="#8、Callable接口" class="headerlink" title="8、Callable接口"></a>8、Callable接口</h2><ul>
<li>  创建1个实现了Callable接口的普通类</li>
<li>  new 1个 FutureTask对象（runnable接口的子类），传入Callable接口的普通类的对象</li>
<li>  new 1个线程，传入 FutureTask对象</li>
</ul>
<h2 id="9、Volatile关键字"><a href="#9、Volatile关键字" class="headerlink" title="9、Volatile关键字"></a>9、Volatile关键字</h2><p>读不加锁，写加锁。</p>
<p>volatile：修饰变量时，保证<strong>可见性、有序性</strong>，让多个线程都能看到变量的真实情况（cpu直接与内存交互）</p>
]]></content>
      <categories>
        <category>后端</category>
        <category>Java</category>
        <category>Java SE</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>JQuery-入门笔记</title>
    <url>/2021/08/04/Jquery-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Jquery-入门笔记"><a href="#Jquery-入门笔记" class="headerlink" title="Jquery-入门笔记"></a>Jquery-入门笔记</h1><p>[toc]</p>
<h2 id="1、Jquery快速入门"><a href="#1、Jquery快速入门" class="headerlink" title="1、Jquery快速入门"></a>1、Jquery快速入门</h2><p>基本步骤：</p>
<blockquote>
<ul>
<li>  下载</li>
<li>  导入</li>
<li>  使用</li>
</ul>
</blockquote>
<hr>
<h3 id="1-1-Jquery的版本简介"><a href="#1-1-Jquery的版本简介" class="headerlink" title="1.1 Jquery的版本简介"></a>1.1 Jquery的版本简介</h3><p>整体版本：</p>
<blockquote>
<ul>
<li>  1.xxx版：（1.12.4版）兼容IE-6、7、8，不在维护（可以满足基本需求）</li>
<li>  2.xxx版：（2.2.4）不兼容IE-6、7、8</li>
<li>  3.xxx版：支持新版的浏览器，部分老的Jquery无法使用。</li>
</ul>
</blockquote>
<hr>
<p>Jquery-xxx.js与Jquery.xxx.min.js的区别：</p>
<blockquote>
<ul>
<li>  Jquery-xxx.js：给人看的版本，有缩进</li>
<li>  Jquery.xxx.min.js：生产版本，经过压缩，无缩进。</li>
</ul>
</blockquote>
<hr>
<p>初步使用：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!-- head标签中导入 --&gt;</span><br><span class="line"></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- html代码 --&gt;</span><br><span class="line">        </span><br><span class="line">	<span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span>div1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span>&gt;</span>div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">	<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">		<span class="keyword">let</span> div1 = $(<span class="string">&quot;#div1&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		alert(div1.html());</span></span></span><br><span class="line"><span class="javascript"><span class="xml">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>	</span><br></pre></td></tr></table></figure>



<hr>
<h3 id="1-2-入口函数、回调函数"><a href="#1-2-入口函数、回调函数" class="headerlink" title="1.2 入口函数、回调函数"></a>1.2 入口函数、回调函数</h3><p>入口函数：dom文档全部加载完成时，才调用内部的函数。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="comment">// 入口函数，dom文档全部加载完成时，才调用</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 所有的js都卸载这个位置</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>









<p>回调函数：将1个函数作为参数传给另一个函数，参数函数在外面的函数调用结束后自动执行。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">	<span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span>div1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">	<span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span>&gt;</span>div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">	<span class="keyword">let</span> div1 = $(<span class="string">&quot;#div1&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">	$(<span class="string">&quot;#div1&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		alert(<span class="string">&quot;div1 被点击了&quot;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">	&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>	</span><br></pre></td></tr></table></figure>











<hr>
<h3 id="1-3-Jquery的选择器"><a href="#1-3-Jquery的选择器" class="headerlink" title="1.3 Jquery的选择器"></a>1.3 Jquery的选择器</h3><p>基本选择器：</p>
<blockquote>
<ul>
<li>  标签：<code>$(&quot;标签名&quot;)</code></li>
<li>  id：<code>$(&quot;#id&quot;)</code></li>
<li>  类名：<code>$(&quot;.类名&quot;)</code></li>
</ul>
</blockquote>
<p>层级选择器：</p>
<blockquote>
<ul>
<li>  后代选择器：<code>$(&quot;A B&quot;)</code></li>
<li>  子孙选择器：<code>$(&quot;A &gt; B&quot;)</code></li>
</ul>
</blockquote>
<p>属性选择器：</p>
<blockquote>
<ul>
<li>  属性名选择器：<code>$(&quot;元素的选择器名&quot;)[属性名]</code></li>
<li>  属性值选择器（单个属性值）：<code>$(&quot;元素的选择器名[属性名 = 属性值]&quot;)</code></li>
<li>  复合属性选择器（多个属性值）：<code>$(&quot;元素的选择器名[属性名 = 属性值][属性名 = 属性值]&quot;)</code></li>
</ul>
</blockquote>
<p>过滤元素选择器：</p>
<blockquote>
<ul>
<li>  首元素选择器：<code>:first</code></li>
<li>  尾元素选择器：<code>:last</code></li>
<li>  奇数选择器：<code>:odd</code>，  （从0开始的奇数，即：从1开始的偶数）</li>
<li>  偶数选择器：<code>:even</code>，（从0开始的偶数，即：从1开始的奇数）</li>
<li>  大于选择器：<code>:gt(index)</code></li>
<li>  小于选择器：<code>:lt(index)</code></li>
<li>  等于选择器：<code>:eq(index)</code></li>
<li>  非选择器：<code>:not(选择器)</code></li>
<li>  标题选择器：<code>:header</code>，固定写法。</li>
</ul>
</blockquote>
<p>表单选择器：</p>
<blockquote>
<ul>
<li>  可用元素选择器：<code>:enable</code></li>
<li>  禁用元素选择器：<code>:disbale</code></li>
<li>  选中选择器：<code>:selected</code>，下拉框</li>
<li>  选中选择器：<code>:checked</code>，单选、复选框</li>
</ul>
</blockquote>
<h3 id="1-4-Jquery改变标签的CSS"><a href="#1-4-Jquery改变标签的CSS" class="headerlink" title="1.4 Jquery改变标签的CSS"></a>1.4 Jquery改变标签的CSS</h3><ul>
<li>  <code>$(&quot;css选择器&quot;).css(&quot;css属性名&quot;,&quot;css属性值&quot;);</code></li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">		<span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span>div1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">		<span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span>&gt;</span>div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">		<span class="comment">// </span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">		$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			<span class="comment">// 入口函数，dom文档全部加载完成时，才调用</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">			$(<span class="string">&quot;#div1&quot;</span>).css(<span class="string">&quot;background&quot;</span>,<span class="string">&quot;red&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">		&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>	</span><br></pre></td></tr></table></figure>





<h3 id="1-5-Jquery获取表单控件的Value值"><a href="#1-5-Jquery获取表单控件的Value值" class="headerlink" title="1.5 Jquery获取表单控件的Value值"></a>1.5 Jquery获取表单控件的Value值</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">		<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;mybtn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">		$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			<span class="comment">// 弹出内容：请输入用户名</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">			alert($(<span class="string">&quot;input[type=&#x27;text&#x27;]&quot;</span>).val())			</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>	</span></span><br></pre></td></tr></table></figure>





<h3 id="1-6-Jquery的Dom操作："><a href="#1-6-Jquery的Dom操作：" class="headerlink" title="1.6 Jquery的Dom操作："></a>1.6 Jquery的Dom操作：</h3><ul>
<li>  获取标签体的内容（包括标签）：<code>html()</code></li>
<li>  获取标签的文本（不包括标签）：<code>text()</code></li>
<li>  获取表单控件的value值：<code>val()</code></li>
</ul>
<h3 id="1-7-改变属性值："><a href="#1-7-改变属性值：" class="headerlink" title="1.7 改变属性值："></a>1.7 改变属性值：</h3><ul>
<li>  <code>$(&quot;css选择器&quot;).prop(&quot;属性名&quot;，属性值)</code></li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;input id=<span class="string">&quot;btn&quot;</span> type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;切换-动画&quot;</span> onclick=<span class="string">&quot;change()&quot;</span>&gt;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	$(<span class="string">&quot;#btn&quot;</span>).prop(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;123&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="1-8-案例："><a href="#1-8-案例：" class="headerlink" title="1.8 案例："></a>1.8 案例：</h3><p>1、隔行换色</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">	<span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">	<span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">	<span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">	<span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">	<span class="comment">// 入口函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 选择偶数个元素的背景色改为红色</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        $(<span class="string">&quot;ul&gt;li:odd&quot;</span>).css(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;red&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span></span></span><br><span class="line"><span class="javascript"><span class="xml">        $(<span class="string">&quot;ul&gt;li:even&quot;</span>).css(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;blued&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">	&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>	</span><br></pre></td></tr></table></figure>



<hr>
<p>2、全选功能</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">	&lt;input  id=&quot;all&quot; type=&quot;checkbox&quot; value=&quot;all&quot; onclick=&quot;selectAll(this)&quot;&gt;</span><br><span class="line">	&lt;label for=&quot;all&quot;&gt;全选&lt;/label&gt; &lt;br&gt;</span><br><span class="line"></span><br><span class="line">	&lt;input class=&quot;fruit&quot; id=&quot;apple&quot; type=&quot;checkbox&quot; value=&quot;苹果&quot;&gt;</span><br><span class="line">	&lt;label for=&quot;apple&quot;&gt;苹果&lt;/label&gt; &lt;br&gt;</span><br><span class="line"></span><br><span class="line">	&lt;input class=&quot;fruit&quot; id=&quot;banana&quot; type=&quot;checkbox&quot; value=&quot;香蕉&quot;&gt;</span><br><span class="line">	&lt;label for=&quot;banana&quot;&gt;香蕉&lt;/label&gt; &lt;br&gt;</span><br><span class="line"></span><br><span class="line">	&lt;input class=&quot;fruit&quot; id=&quot;watermelon&quot; type=&quot;checkbox&quot; value=&quot;西瓜&quot;&gt;</span><br><span class="line">	&lt;label for=&quot;watermelon&quot;&gt;西瓜&lt;/label&gt; &lt;br&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">	function selectAll(obj)&#123;</span><br><span class="line">		$(&quot;.fruit&quot;).prop(&quot;checked&quot;,obj.checked);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;	</span><br></pre></td></tr></table></figure>



<hr>
<p>3、下拉列表复制：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">		<span class="xml"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;left&quot;</span> <span class="attr">multiple</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">			<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;xg&quot;</span>&gt;</span>西瓜<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">			<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;pg&quot;</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">			<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;xj&quot;</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line">		&lt;br&gt;		</span><br><span class="line">		&lt;input id=&quot;toRight&quot; type=&quot;button&quot; value=&quot;=&gt;&quot;&gt;</span><br><span class="line">		&lt;br&gt;</span><br><span class="line">		&lt;input id=&quot;toLeft&quot; type=&quot;button&quot; value=&quot;&lt;=&quot;&gt;		</span><br><span class="line">		&lt;br&gt;</span><br><span class="line">		&lt;select name=&quot;&quot; id=&quot;right&quot; multiple=&quot;true&quot;&gt;</span><br><span class="line">			</span><br><span class="line"></span><br><span class="line">		&lt;/select&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">         $(function()&#123;</span><br><span class="line">                // 复制到右边</span><br><span class="line">                $(&quot;#toRight&quot;).click(function()&#123;</span><br><span class="line">                    $(&quot;#right&quot;).append($(&quot;#left&gt;option:selected&quot;).clone())</span><br><span class="line"></span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                // 复制到左边</span><br><span class="line">                $(&quot;#toLeft&quot;).click(function()&#123;</span><br><span class="line">                    $(&quot;#right&gt;option:selected&quot;).appendTo($(&quot;#left&quot;))</span><br><span class="line"></span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">&lt;/script&gt;	</span><br></pre></td></tr></table></figure>





<h2 id="2、Jquery高级"><a href="#2、Jquery高级" class="headerlink" title="2、Jquery高级"></a>2、Jquery高级</h2><h3 id="2-1-动画"><a href="#2-1-动画" class="headerlink" title="2.1 动画"></a>2.1 动画</h3><p>显示和隐藏：</p>
<blockquote>
<p>  参数：</p>
<ul>
<li><p>  速度：（slow | normal | fast | 毫秒数）</p>
</li>
<li><p>  擦除效果的取值：（swing 慢快慢 |  linear 匀速）</p>
</li>
</ul>
<p>  1、默认的显示+隐藏：</p>
<ul>
<li>  show(速度，擦除效果，回调函数)</li>
<li>  hide(速度，擦除，回调函数)</li>
<li>  toggle(速度，擦除，回调函数)</li>
</ul>
<p>  2、滑动的显示+隐藏：</p>
<ul>
<li>  slideDown(速度，擦除，回调函数)</li>
<li>  slideUp(速度，擦除，回调函数)</li>
<li>  slideToggle(速度，擦除，回调函数)</li>
</ul>
<p>  3、淡入淡出显示+隐藏：</p>
<ul>
<li>  fadeIn(速度，擦除，回调函数)</li>
<li>  fadeOut(速度，擦除，回调函数)</li>
<li>  fadeToggle(速度，擦除，回调函数)</li>
</ul>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">		<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;切换-动画&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;change()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">		<span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">		<span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			$(<span class="string">&quot;#demo&quot;</span>).toggle(<span class="string">&quot;normal&quot;</span>,<span class="string">&quot;swing&quot;</span>)			</span></span></span><br><span class="line"><span class="javascript"><span class="xml">		&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>	</span><br></pre></td></tr></table></figure>





<h3 id="2-2-循环"><a href="#2-2-循环" class="headerlink" title="2.2 循环"></a>2.2 循环</h3><ul>
<li>  <code>for(let i=0;i&lt;10;i++)&#123;&#125;</code></li>
<li>  <code>Jquery对象.each(function(index,element)&#123;&#125;)</code></li>
<li>  <code>$.each(obj,回调函数)</code></li>
<li>  <code>for(item of arr) </code></li>
</ul>
<h3 id="2-3-事件绑定与解绑"><a href="#2-3-事件绑定与解绑" class="headerlink" title="2.3 事件绑定与解绑"></a>2.3 事件绑定与解绑</h3><ul>
<li>  事件绑定：<code>$(&quot;css选择器&quot;).on(&quot;事件&quot;，回调函数)</code></li>
<li>  事件解绑：<code>$(&quot;css选择器&quot;).off(&quot;事件&quot;)</code></li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">		<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;切换-动画&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;change()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">		<span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">			$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">				$(<span class="string">&quot;#btn&quot;</span>).on(<span class="string">&quot;mouseover&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">					alert(<span class="string">&quot;123&quot;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">				&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            </span></span></span><br><span class="line"><span class="javascript"><span class="xml">            	<span class="comment">//解绑</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            	$(<span class="string">&quot;#btn&quot;</span>).on(<span class="string">&quot;click&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">					$(<span class="string">&quot;#btn&quot;</span>).off(<span class="string">&quot;click&quot;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">				&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">			&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>	</span><br></pre></td></tr></table></figure>









<h3 id="2-4-Ajax"><a href="#2-4-Ajax" class="headerlink" title="2.4 Ajax"></a>2.4 Ajax</h3><ul>
<li>  <code>$.ajax(&#123;键值对&#125;)</code></li>
</ul>
<blockquote>
<p>   常见参数：</p>
<ol>
<li> url：目标地址</li>
<li> type：get | post</li>
<li> data：自定义的参数对象</li>
<li> success：请求成功的回调函数 </li>
<li> error：请求失败的回调函数 </li>
<li> dataType：接收的文件类型【<code>xml</code> |  <code>json</code>  |  <code>text</code> |  <code>html</code> | <code>script</code> | <code>jsonp</code>】</li>
</ol>
</blockquote>
<hr>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&quot;/demoServlet&quot;</span>,</span><br><span class="line">    <span class="attr">type</span>:<span class="string">&quot;post&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="string">&quot;username&quot;</span>:<span class="string">&quot;zhangsan&quot;</span>,</span><br><span class="line">        <span class="string">&quot;psw&quot;</span>:<span class="string">&quot;123&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">success</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 请求成功时调用的函数</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">dataType</span>:<span class="string">&quot;text&quot;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<hr>
<ul>
<li>  <code>$.get()</code></li>
</ul>
<blockquote>
<ol>
<li> url：目标地址</li>
<li> data：参数对象</li>
<li> 回调函数</li>
<li> type：接收的数据类型</li>
</ol>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.get(</span><br><span class="line">   <span class="string">&quot;/login.Servlet&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">      <span class="string">&quot;username&quot;</span>:<span class="string">&quot;zhangsan&quot;</span>  </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;text&quot;</span>    </span><br><span class="line">)</span><br></pre></td></tr></table></figure>



<hr>
<ul>
<li>  <code>$.post()</code></li>
</ul>
<h3 id="2-5-JSON"><a href="#2-5-JSON" class="headerlink" title="2.5 JSON"></a>2.5 JSON</h3><p>json是一种以键值对形式存储数据的格式，每个键值对之间使用逗号分隔。（键需要有引号包裹）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> persons = &#123;</span><br><span class="line">    <span class="string">&quot;p1&quot;</span>:&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">12</span>&#125;,</span><br><span class="line">    <span class="string">&quot;p2&quot;</span>:&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">23</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取值：对象[键]</span></span><br><span class="line"><span class="keyword">let</span> p1 = psersons[<span class="string">&quot;p1&quot;</span>]</span><br></pre></td></tr></table></figure>



<h4 id="1、JSON解析库"><a href="#1、JSON解析库" class="headerlink" title="1、JSON解析库"></a>1、JSON解析库</h4><blockquote>
<ul>
<li>  jsonlib</li>
<li>  fastjson</li>
<li>  jackson</li>
<li>  gson</li>
</ul>
</blockquote>
<hr>
<h4 id="2、Java对象转Json"><a href="#2、Java对象转Json" class="headerlink" title="2、Java对象转Json"></a>2、Java对象转Json</h4><p>以Jackson解析库为例：</p>
<p>步骤：</p>
<blockquote>
<p>  1、导入jackson的相关jar包</p>
<p>  2、创建Jackson的核心对象：ObjectMapper对象</p>
<p>  3、调用ObjectMapper对象的转化方法<code>writeValueAsString(obj)</code></p>
</blockquote>
<p>常用注解：(放在需要<strong>被转化的类</strong>的某个属性上)</p>
<ul>
<li>  <code>@JsonIgnore</code></li>
<li>  <code>@JsonFormat(pattern=“相应的格式”)</code></li>
</ul>
<hr>
<h4 id="3、Json转Java对象"><a href="#3、Json转Java对象" class="headerlink" title="3、Json转Java对象"></a>3、Json转Java对象</h4><p>步骤：</p>
<blockquote>
<p>  1、导入jackson的相关jar包</p>
<p>  2、创建Jackson的核心对象：ObjectMapper对象</p>
<p>  3、调用ObjectMapper对象的转化方法<code>readValue(json字符串,java类.class)</code></p>
<p>  4、将Java的Response对象的数据返回格式：<code>resp.setContentType(&quot;Application/json;charset=utf-8&quot;)</code></p>
</blockquote>
]]></content>
      <categories>
        <category>后端</category>
        <category>前端</category>
        <category>Java</category>
        <category>基础</category>
        <category>Java Web</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS_7 配置笔记</title>
    <url>/2021/08/04/Linux-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="CentOS-7-配置笔记"><a href="#CentOS-7-配置笔记" class="headerlink" title="CentOS_7 配置笔记"></a>CentOS_7 配置笔记</h1><p>[toc]</p>
<h2 id="1-JDK-安装"><a href="#1-JDK-安装" class="headerlink" title="1. JDK 安装"></a>1. JDK 安装</h2><ol>
<li><p>下载：<code>https://mirrors.tuna.tsinghua.edu.cn/AdoptOpenJDK/8/jdk/x64/linux/</code></p>
</li>
<li><p>上传到CentOS:</p>
<ul>
<li>XShell在 <code>/usr.</code>下新建一个目录用于作为JAVA_HOME:<code>/usr/java/jdk</code></li>
<li>XFTP将 jdk 上传到<code>/use/java/jdk</code>目录【上述目录】</li>
</ul>
</li>
<li><p>解压【进入上述目录】： <code>tar -xzvf     jdk压缩包名     -C    目标目录</code>，<br> 即：<code>tar -xzvf OpenJDK8U-jdk_x64_linux_openj9_8u282b08_openj9-0.24.0.tar.gz -C /usr/java/jdk</code></p>
</li>
<li><p>给解压后的文件夹改一个短的名字：<code>mv ./jdk8u282-b08 ./jdk8</code></p>
</li>
<li><p>设置jdk的环境变量：</p>
<ul>
<li><p><code>echo  &quot;export JAVA_HOME=/usr/java/jdk/jdk8&quot; &gt;&gt; /etc/profile</code>    </p>
</li>
<li><p><code>echo  &quot;export CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib&quot; &gt;&gt; /etc/profile</code></p>
</li>
<li><p><code>echo  &quot;export PATH=$JAVA_HOME/bin:$PATH&quot; &gt;&gt; /etc/profile</code></p>
</li>
</ul>
</li>
<li><p>使环境变量生效：<code>source /etc/profile</code></p>
</li>
<li><p>验证jdk使用可用：<code>java -version</code></p>
</li>
</ol>
<h2 id="2-MySQL-安装"><a href="#2-MySQL-安装" class="headerlink" title="2. MySQL 安装"></a>2. MySQL 安装</h2><ol>
<li>下载源：<code>wget http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm</code></li>
<li>安装源：<code>yum localinstall mysql57-community-release-el7-8.noarch.rpm</code></li>
<li>检测源是否安装完成：<code>yum repolist enabled | grep &quot;mysql.*-community.*&quot;</code></li>
<li>安装mysql：<code>yum install mysql-community-server</code></li>
<li>启动mysql 服务：<code>systemctl enable mysqld</code></li>
<li>查看mysql 版本：<code>rpm -aq | grep -i mysql</code></li>
<li>重启mysql 服务：<code>systemctl restart mysqld</code></li>
<li>查看初始密码：<code>grep &#39;A temporary password&#39; /var/log/mysqld.log</code></li>
<li>更改初始密码：<code>mysqladmin -u root -p&#39;旧密码&#39; password &#39;新密码&#39;</code>【若报错，可设置复杂的密码】</li>
<li>设置权限：<ul>
<li>进入mysql：<code> mysql -uroot -p密码</code></li>
<li>授予权限：<code>grant all privileges on *.* to &#39;用户名&#39;@&#39;ip地址&#39; identified by &#39;密码&#39; with grant option;</code>【ip地址可改为<code>%%</code>以表示所有ip】</li>
</ul>
</li>
<li>设置轻应用服务器 防火墙的3306端口</li>
<li>重启服务器</li>
</ol>
<p> <strong>测试 mysql 连接</strong><br> 下面使用 MySQL WorkBench远程连接到mysql:<br> <img src="https://z3.ax1x.com/2021/06/02/2QBlwj.png" alt="mysql workbench"></p>
<h2 id="3-Nginx-安装"><a href="#3-Nginx-安装" class="headerlink" title="3. Nginx 安装"></a>3. Nginx 安装</h2><ol>
<li>创建Nginx的根目录并进入：如：<code>/usr/nginx</code></li>
<li>下载： <code>wget https://nginx.org/download/nginx-1.15.9.tar.gz</code></li>
<li>解压：<code>tar -xvf nginx-1.15.9.tar.gz</code></li>
<li>进入：<code>cd ./nginx-1.15.9</code></li>
<li>解决make报错：<pre><code>-  `yum -y install make zlib-devel gcc-c++ libtool openssl openssl-devel`
- `./configure `
- `make &amp;&amp; make install`
</code></pre>
</li>
<li>创建nginx用户：<code>useradd nginx</code></li>
<li>配置nginx： <code>./configure --user=nginx --group=nginx --prefix=nginx安装目录 --with-http_stub_status_module --with-http_ssl_module  </code></li>
<li>编译nginx： <code>make &amp;&amp; make install</code></li>
<li>检查是否安装成功，命令：<code>cd /usr/local/nginx/sbin</code>、<code>./nginx -t</code></li>
<li>创建软链接：<code>ln -s /usr/nginx安装目录/sbin/nginx /usr/sbin/</code></li>
<li>安装完成后查看Nginx的相关环境配置信息是否正确 ，命令：<code>/usr/local/nginx/sbin/nginx –V</code></li>
</ol>
<p>Nginx命令：</p>
<ul>
<li>目录：<code>/usr/nginx/installFolder/</code></li>
<li>启动Nginx：<code>cd /usr/nginx/installFolder/sbin</code> ，<code>./nginx</code></li>
<li>停止Nginx：<code>pkill -9 nginx</code></li>
<li>查看nginx进程号及运行情况：<code>ps -ef | grep nginx</code></li>
<li>测试nginx是否运行正常：<code>浏览器：ip地址</code></li>
</ul>
<h2 id="4-httpd-的安装"><a href="#4-httpd-的安装" class="headerlink" title="4. httpd 的安装"></a>4. httpd 的安装</h2><ul>
<li>下载安装：<code>yum -y install httpd</code></li>
<li>设为启动项：<code>systemctl  enable  httpd</code></li>
<li>启动httpd：<code>system restart  httpd</code></li>
<li>查看是否运行成功：<code>systemctl status httpd</code> </li>
<li>将编写好的html文件改为<code>index.html</code>，并传到<code>/var/www/html</code>目录中</li>
<li>将80端口改为8080端口：<a href="https://jingyan.baidu.com/article/86112f136573352736978744.html">更改端口</a></li>
<li>然后在服务器控制台开放8080端口，即可使用浏览器访问页面</li>
</ul>
]]></content>
      <categories>
        <category>后端</category>
        <category>操作系统</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown 入门篇</title>
    <url>/2021/08/04/Markdown%E5%85%A5%E9%97%A8-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Markdown-入门语法-笔记"><a href="#Markdown-入门语法-笔记" class="headerlink" title="Markdown 入门语法-笔记"></a>Markdown 入门语法-笔记</h1><p>[toc]</p>
<h3 id="1-编写工具："><a href="#1-编写工具：" class="headerlink" title="1. 编写工具："></a>1. 编写工具：</h3><p>typora、vscode+插件、sublime+插件</p>
<h3 id="2-标题："><a href="#2-标题：" class="headerlink" title="2. 标题："></a>2. 标题：</h3><p> 使用 “#”</p>
<blockquote>
<p><code># 一级标题</code><br><code>## 二级标题</code><br><code>### 三级标题</code><br><code>#### 四级标题</code><br><code>##### 五级标题</code><br><code>###### 六级标题</code>  </p>
<h3 id="3-换行：空格-空格-Enter"><a href="#3-换行：空格-空格-Enter" class="headerlink" title="3. 换行：空格 + 空格 + Enter"></a>3. 换行：<kbd>空格</kbd> + <kbd>空格</kbd> + <kbd>Enter</kbd></h3></blockquote>
<h3 id="4-斜体："><a href="#4-斜体：" class="headerlink" title="4. 斜体："></a>4. 斜体：</h3><p><code>*你好*</code> =&gt; <em>你好</em></p>
<h3 id="5-粗体："><a href="#5-粗体：" class="headerlink" title="5. 粗体："></a>5. 粗体：</h3><p><code>**世界**</code>=&gt; <strong>世界</strong></p>
<h3 id="6-粗斜体："><a href="#6-粗斜体：" class="headerlink" title="6. 粗斜体："></a>6. 粗斜体：</h3><p> <code>***你好，世界***</code>=&gt;<em><strong>你好，世界</strong></em></p>
<h3 id="7-分割线："><a href="#7-分割线：" class="headerlink" title="7. 分割线："></a>7. 分割线：</h3><p><code>************</code></p>
<h3 id="8-删除线："><a href="#8-删除线：" class="headerlink" title="8.  删除线："></a>8.  删除线：</h3><p><code>~~这是删除线~~</code>=&gt; <del>这是删除线</del></p>
<h3 id="9-代码块："><a href="#9-代码块：" class="headerlink" title="9.  代码块："></a>9.  代码块：</h3><p>使用 `abc` 或者 ```abc```</p>
<h3 id="10-无序列表："><a href="#10-无序列表：" class="headerlink" title="10. 无序列表："></a>10. 无序列表：</h3><ul>
<li>第一级   </li>
<li>第二级</li>
</ul>
<h3 id="11-有序列表："><a href="#11-有序列表：" class="headerlink" title="11. 有序列表："></a>11. 有序列表：</h3><ol>
<li>abc</li>
<li>def</li>
<li>ghi </li>
</ol>
<h3 id="12-区块："><a href="#12-区块：" class="headerlink" title="12. 区块："></a>12. 区块：</h3><p>【 <kbd>></kbd> + <kbd>空格</kbd> 】</p>
<pre><code>                    &gt;   第一级区块
                    &gt;&gt;  第二级区块
                    &gt;&gt;&gt; 第三级区块
</code></pre>
<h3 id="13-链接-："><a href="#13-链接-：" class="headerlink" title="13. 链接 ："></a>13. 链接 ：</h3><pre><code>            `[百度](http://www.baidu.com) ` :  
</code></pre>
<p><a href="https://www.baidu.com/">百度</a>                                  </p>
<h3 id="14-图片"><a href="#14-图片" class="headerlink" title="14. 图片 :"></a>14. 图片 :</h3><p><code>![提示信息](地址)</code> ：</p>
<h3 id="15-表格"><a href="#15-表格" class="headerlink" title="15. 表格 :"></a>15. 表格 :</h3><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">//   -:   表示右对齐</span><br><span class="line">//  :-:   表示左对齐</span><br><span class="line">//   -： 表示居中对齐</span><br><span class="line">						|<span class="string">表头</span>|<span class="string">表头</span>|<span class="string">表头  </span>|</span><br><span class="line">						|<span class="string"> -: </span>|<span class="string"> :-: </span>|<span class="string"> :- </span>|</span><br><span class="line">						|<span class="string"> a  </span>|<span class="string">  b  </span>|<span class="string">  c  </span>|</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center">姓名</th>
<th align="center">年龄</th>
<th align="center">性别</th>
</tr>
</thead>
<tbody><tr>
<td align="center">张三</td>
<td align="center">15</td>
<td align="center">男</td>
</tr>
<tr>
<td align="center">李四</td>
<td align="center">42</td>
<td align="center">女</td>
</tr>
<tr>
<td align="center">王五</td>
<td align="center">64</td>
<td align="center">男</td>
</tr>
<tr>
<td align="center">马六</td>
<td align="center">54</td>
<td align="center">女</td>
</tr>
</tbody></table>
<h3 id="16-目录"><a href="#16-目录" class="headerlink" title="16. 目录:"></a>16. 目录:</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">在开头目录位置处插入：				</span><br><span class="line"><span class="string">[TOC]</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程工具</category>
        <category>文档编写工具</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 8.0版本-安装篇</title>
    <url>/2021/08/04/MySQL%208.0%E7%89%88%E6%9C%AC-%E5%AE%89%E8%A3%85%E7%AF%87/</url>
    <content><![CDATA[<h1 id="MySQL-8-0版本-安装篇"><a href="#MySQL-8-0版本-安装篇" class="headerlink" title="MySQL 8.0版本-安装篇"></a>MySQL 8.0版本-安装篇</h1><p>[toc]</p>
<h3 id="1-MySQL免安装版下载-8-0-22"><a href="#1-MySQL免安装版下载-8-0-22" class="headerlink" title="1. MySQL免安装版下载(8.0.22)"></a>1. MySQL免安装版下载(8.0.22)</h3><p>进入：<a href="https://www.mysql.com/">MySQL官网</a><br><img src="https://img-blog.csdnimg.cn/2020112714302283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127143131278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127150613416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20201127143501926.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>之后 等待下载。</p>
<h3 id="2-MySQL的安装"><a href="#2-MySQL的安装" class="headerlink" title="2. MySQL的安装"></a>2. MySQL的安装</h3><h4 id="2-1-解压-下载好的压缩包【路径不为中文】"><a href="#2-1-解压-下载好的压缩包【路径不为中文】" class="headerlink" title="2.1 解压 下载好的压缩包【路径不为中文】"></a>2.1 解压 下载好的压缩包【路径不为中文】</h4><p><img src="https://img-blog.csdnimg.cn/20201127151330477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="2-2-创建-my-ini-配置文件-并生成初始密码"><a href="#2-2-创建-my-ini-配置文件-并生成初始密码" class="headerlink" title="2.2 创建 my.ini 配置文件,并生成初始密码"></a>2.2 创建 my.ini 配置文件,并生成初始密码</h4><p><strong>第一步：</strong><br>    在 bin 的同一级目录创建my.ini配置文件<br>配置文件中，需要更改的2部分为：</p>
<ul>
<li>basedir: 安装路径</li>
<li>datadir：安装路径\data</li>
</ul>
<p>输入的配置：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"># 设置<span class="number">3306</span>端口</span><br><span class="line">port=<span class="number">3306</span></span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir=E:\mysql<span class="number">-8.0</span><span class="number">.22</span>-winx64</span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir=E:\mysql<span class="number">-8.0</span><span class="number">.22</span>-winx64\Data</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections=<span class="number">200</span></span><br><span class="line"># 允许连接失败的次数。</span><br><span class="line">max_connect_errors=<span class="number">10</span></span><br><span class="line"># 服务端使用的字符集默认为utf8mb4</span><br><span class="line">character-<span class="built_in">set</span>-server=utf8mb4</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line"><span class="keyword">default</span>-storage-engine=INNODB</span><br><span class="line"># 默认使用“mysql_native_password”插件认证</span><br><span class="line">#mysql_native_password</span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br><span class="line">[mysql]</span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line"><span class="keyword">default</span>-character-<span class="built_in">set</span>=utf8mb4</span><br><span class="line">[client]</span><br><span class="line"># 设置mysql客户端连接服务端时默认使用的端口</span><br><span class="line">port=<span class="number">3306</span></span><br><span class="line"><span class="keyword">default</span>-character-<span class="built_in">set</span>=utf8mb4</span><br></pre></td></tr></table></figure>
<p><strong>第二步：</strong><br>以<strong>管理员</strong>身份运行 cmd，进入MySQL的 bin 目录，<br><img src="https://img-blog.csdnimg.cn/20201127152842804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>为了生成Data目录和初始密码，输入：<br> <code>mysqld --initialize --console </code><br>若出现  如下报错：<br><img src="https://img-blog.csdnimg.cn/2020112715354489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>则 百度下载：vcruntime140_1.dll<br>并复制到以下目录<code>C:\Windows\System32</code>：<br><img src="https://img-blog.csdnimg.cn/20201127153801616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>复制完该文件后，<br>重新在 cmd 输入:  <code>mysqld --initialize --console</code><br><img src="https://img-blog.csdnimg.cn/20201127154427353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>上图红色部分为：随机生成的初始密码【记录下来，方便后面使用】</p>
<h4 id="2-3-安装-启动-MySQL服务"><a href="#2-3-安装-启动-MySQL服务" class="headerlink" title="2.3 安装 + 启动 MySQL服务"></a>2.3 安装 + 启动 MySQL服务</h4><p><strong>安装：</strong><br>cmd输入：<code>mysqld --install [服务名]</code>,<br>其中，<strong>服务名可省略</strong><br>即：输入：<code>mysqld --install</code><br><strong>卸载服务：</strong> <code>mysqld --remove mysql</code><br><img src="https://img-blog.csdnimg.cn/20201127155811577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>启动：</strong> 两种方式</p>
<ul>
<li> cmd 中输入： <code>net start  mysql</code> 【如果服务<strong>没有设为自动</strong>，则每次开机都要输一遍】（关闭指令:<code>net stop mysql</code>）</li>
<li><pre><code> 右键 “计算机” =》 “管理” =》 “服务” =》 找到 mysql =》启动
</code></pre>
【将其设为<strong>自动</strong>，这样可以不用每次开机都手动开启 mysql 服务】<h4 id="2-4-进入MySQL"><a href="#2-4-进入MySQL" class="headerlink" title="2.4 进入MySQL"></a>2.4 进入MySQL</h4>输入：<code>mysql -u root –p</code><br>输入刚才生成的初始密码【必须手动输入】<br>更改初始密码<br><code>ALTER USER &quot;root&quot;@&quot;localhost&quot; IDENTIFIED BY &quot;你的新密码&quot;;</code><h4 id="2-5-配置环境变量"><a href="#2-5-配置环境变量" class="headerlink" title="2.5 配置环境变量"></a>2.5 配置环境变量</h4>配置环境变量是为了在cmd下的任意目录中都能使用mysql</li>
</ul>
<p><strong>配置MySQL的主目录</strong><br><img src="https://img-blog.csdnimg.cn/20201128100208106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>配置path</strong><br><img src="https://img-blog.csdnimg.cn/20201128100511736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3次确定</p>
<h3 id="3-Navacat的安装"><a href="#3-Navacat的安装" class="headerlink" title="3. Navacat的安装"></a>3. Navacat的安装</h3><p>参考：<code>https://www.cnblogs.com/yanghongtao/p/10976526.html</code><br><img src="https://img-blog.csdnimg.cn/20201127163008138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163020957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163104351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020112716311497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020112716312449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163146205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163332149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163344601.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163351105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163412973.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163421884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163444278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163549530.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163600171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020112716361083.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163644942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163725455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163741557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201127163807439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="4-常用的MySQL命令"><a href="#4-常用的MySQL命令" class="headerlink" title="4. 常用的MySQL命令"></a>4. 常用的MySQL命令</h3><p>注意：MySQL的所有命令都以英文分号<kbd>;</kbd>结尾</p>
<h4 id="4-1-显示所有数据库"><a href="#4-1-显示所有数据库" class="headerlink" title="4.1 显示所有数据库"></a>4.1 显示所有数据库</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure>

<h4 id="4-2-创建数据库"><a href="#4-2-创建数据库" class="headerlink" title="4.2 创建数据库"></a>4.2 创建数据库</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database School;</span><br></pre></td></tr></table></figure>
<h4 id="4-3-删除数据库"><a href="#4-3-删除数据库" class="headerlink" title="4.3 删除数据库"></a>4.3 删除数据库</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> database School;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SQL</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven 笔记</title>
    <url>/2021/08/04/Maven%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Maven-笔记"><a href="#Maven-笔记" class="headerlink" title="Maven 笔记"></a>Maven 笔记</h1><p>[toc]</p>
<p>视频：<a href="https://www.bilibili.com/video/BV1x5411P7Hh?p=2">maven入门教程</a></p>
<h2 id="0、Maven的作用："><a href="#0、Maven的作用：" class="headerlink" title="0、Maven的作用："></a>0、Maven的作用：</h2><ul>
<li>  管理依赖，帮助清理、编译、测试、打包、部署项目。</li>
<li>  可以批量编译<code>.java程序</code>（<code>javac命令</code>只能1次编译1个文件）</li>
</ul>
<h2 id="1、Maven的目录结构"><a href="#1、Maven的目录结构" class="headerlink" title="1、Maven的目录结构"></a>1、Maven的目录结构</h2><p><img src="https://z3.ax1x.com/2021/07/26/WWcQUO.png" alt="目录结构"></p>
<p><img src="https://z3.ax1x.com/2021/07/26/WfFYqJ.png" alt="maven的工作方式"></p>
<hr>
<h2 id="2、安装、配置-Maven"><a href="#2、安装、配置-Maven" class="headerlink" title="2、安装、配置 Maven"></a>2、安装、配置 Maven</h2><ol start="0">
<li><p> 前提：确保已经配置好JDK的环境。</p>
</li>
<li><p> 下载链接：<a href="http://maven.apache.org/download.cgi">maven官网下载</a></p>
</li>
<li><p> 新建环境变量<code>Maven_Home</code>，并将该环境变量指向安装目录（bin的上一级）</p>
</li>
<li><p> 将<code>%Maven_Home%\bin</code>加入环境变量的<code>Path</code>中。</p>
</li>
<li><p>设置maven的 <code>Mirror 镜像</code>：</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">	maven的安装目录&quot; /conf/settings.xml  &quot;文件中，</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	找到mirrors标签： </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">、		<span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    			<span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    			<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    			<span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    			<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>设置项目的JDK版本，<code>pom.xml </code>文件的 <code>project标签</code>内添加以下内容：【此方式只能配置1个项目】</p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"> 		<span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">	 	<span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>12<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">	 	<span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>12<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<hr>
<h2 id="3、编译、运行-Maven项目"><a href="#3、编译、运行-Maven项目" class="headerlink" title="3、编译、运行 Maven项目"></a>3、编译、运行 Maven项目</h2><ul>
<li>  cmd进入Maven项目目录（pom.xml所在的那一层），输入：mvn compile</li>
<li>  进入编译生成的 target/classes/ 目录</li>
<li>  cmd 输入 java  包名.类文件名</li>
<li>  cmd中自动运行java程序</li>
</ul>
<h2 id="4、POM-xml文件"><a href="#4、POM-xml文件" class="headerlink" title="4、POM.xml文件"></a>4、POM.xml文件</h2><p><code>pom</code>：project object model项目对象模型，是maven的灵魂。maven将项目当作1个模型处理。maven通过pom.xml文件来实现项目的构建和依赖的管理。</p>
<p>pom.xml实例：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; ?&gt;</span></span><br><span class="line"></span><br><span class="line">// 根标签</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    // 版本说明</span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   // 坐标：确定资源，是资源的唯一标识（由3个部分组成，简称 gav）</span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyw<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  		// 公司的标识，常写为公司域名的倒写</span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>		// 项目名称,如果groupid中已有项目名，则此处填写子项目名</span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span>	// 项目版本，由3部分组成：主版本.次版本.小版本号【SNAPSHOT表示：不稳定版】</span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span>			// 项目的打包类型（jar【默认】,war,ear）</span><br><span class="line">    </span><br><span class="line">    // 项目名</span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	  </span><br><span class="line">    // 依赖环境</span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	// 编译设置</span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">	 	 <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>12<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">	 	 <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>12<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>1、每个项目都需要有自己的 gav【在pom.xml文件中的3个坐标标签】</p>
<blockquote>
<p>  gav的示例：</p>
<ul>
<li>  <code>&lt;groupId&gt;com.cyw&lt;/groupId&gt;</code>：公司的标识，常写为公司域名的倒写。</li>
<li>  <code>&lt;artifactId&gt;Hello&lt;/artifactId&gt;    </code>：项目名称,如果groupid中已有项目名，则此处填写子项目名。</li>
<li>  <code>&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</code>：项目版本，由3部分组成：主版本.次版本.小版本号【SNAPSHOT表示：不稳定版】</li>
</ul>
</blockquote>
<p>2、项目所需的Jar包也需要在<code>pom.xml</code>中有gav作为唯一标识。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    // 依赖jar包的 gav,【gav可以从 mvnrepository仓库 中获取】</span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>3、gav可以从 mvnrepository仓库中获取：<a href="https://mvnrepository.com/">mvnrepository官网</a></p>
<blockquote>
<p>  搜索maven的gav详细的步骤：</p>
<ul>
<li>  搜索JAR包</li>
<li>  点击所需的版本号</li>
<li>  复制 gav信息</li>
</ul>
</blockquote>
<hr>
<h2 id="5、依赖"><a href="#5、依赖" class="headerlink" title="5、依赖"></a>5、依赖</h2><p>依赖：所需的 jar包。由dependence 和 gav 标签组合。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    // 依赖jar包的 gav,【gav可以从 mvnrepository仓库 中获取】</span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    // 第2个依赖包</span><br><span class="line">    	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    		<span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>







<h2 id="6、仓库"><a href="#6、仓库" class="headerlink" title="6、仓库"></a>6、仓库</h2><p>仓库是存东西的，Maven的仓库中存放的是</p>
<ul>
<li>  Maven自己的Jar包</li>
<li>  第三方的Jar包</li>
<li>  自己编写并打包的Jar包</li>
</ul>
<hr>
<p>仓库的分类：</p>
<ul>
<li>  本地仓库：自己电脑上的某个目录，默认路径：<code>系统账户目录/.m2/repository</code></li>
</ul>
<p>1、修改本地仓库的配置文件：</p>
<blockquote>
<p>  本地仓库没有所需的Jar包时，才从网络上下载。</p>
<ul>
<li>  创建<code>1个文件夹</code>作为本地仓库的根目录（不能为中文）</li>
<li>  修改Maven工具的<code>settings文件</code>：<code>&lt;localRepository&gt;修改后的路径&lt;/localRepository&gt;</code></li>
</ul>
</blockquote>
<h2 id="7、Maven的命令："><a href="#7、Maven的命令：" class="headerlink" title="7、Maven的命令："></a>7、Maven的命令：</h2><p>maven的命令是通过插件来实现的。<font style="color:red;">插件</font>也就是一些<font style="color:red;">Jar包</font>。</p>
<p><strong>Maven的生命周期命令</strong>：【清理、编译、测试、打包、安装、部署】</p>
<ol>
<li><p> <code>mvn clean </code>：清除上次生成编译生成的 target 目录</p>
</li>
<li><p> <code>mvn complie </code> ：编译，将<code>src/main/java/</code>下的<code>java文件</code>编译为<code>class文件</code>，放入到<code>/target/classes/</code>目录下(即：复制到<code> classpath</code> 中)</p>
</li>
<li><p> <code>mvn test-complie </code>：（单元测试）编译<code>/src/test/java</code>下的java文件</p>
</li>
<li><p> <code>mvn package</code>：打包，打包成<code>jar 或 war</code>，生成的文件名（<code>artifactId-version-packaging</code>）</p>
</li>
<li><p> <code>mvn install</code>：安装，将打包后的文件添加到Maven仓库中。</p>
</li>
<li><p> <code>mvn deploy</code>：部署</p>
</li>
</ol>
<hr>
<p>单元测试：测的是方法。</p>
<p>步骤：</p>
<ol>
<li> 在项目的<code>pom.xml</code>中添加依赖标签</li>
<li> <code>/src/test/java</code>中编写测试类：类名以Test开头，方法public void，包名与原来的类相同。</li>
</ol>
<hr>
<h2 id="8、IDEA-集成-Maven"><a href="#8、IDEA-集成-Maven" class="headerlink" title="8、IDEA 集成 Maven"></a>8、IDEA 集成 Maven</h2><p>idea中已经有了自带的maven，但是修改麻烦，所以需要我们自己集成1个maven。</p>
<p>集成maven的步骤：</p>
<ol>
<li> file =&gt; settings =&gt; build =&gt; buildTools =&gt; maven </li>
<li> 设置maven的安装目录，settings配置文件，本地仓库路径</li>
</ol>
<p><img src="https://z3.ax1x.com/2021/07/26/Wf6WWQ.png" alt="idea中集成maven"></p>
<p><img src="https://z3.ax1x.com/2021/07/26/Wfcnmt.png" alt="idea集成maven-2"></p>
<p><img src="https://z3.ax1x.com/2021/07/26/WfcR76.png" alt="idea集成maven-3"></p>
]]></content>
      <categories>
        <category>后端</category>
        <category>编程工具</category>
        <category>Java</category>
        <category>Java Web</category>
        <category>项目管理</category>
        <category>Maven</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL-入门笔记</title>
    <url>/2021/08/04/MySQL-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="MySQL-入门笔记【5-6版本】"><a href="#MySQL-入门笔记【5-6版本】" class="headerlink" title="MySQL-入门笔记【5.6版本】"></a>MySQL-入门笔记【5.6版本】</h1><p>[toc]</p>
<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><h3 id="1-1-MySQL的-安装-配置"><a href="#1-1-MySQL的-安装-配置" class="headerlink" title="1.1 MySQL的 安装 + 配置"></a>1.1 MySQL的 安装 + 配置</h3><ul>
<li><p>  <a href="https://blog.csdn.net/dzg_chat/article/details/88619120">mysql-笔记-网传</a></p>
</li>
<li><p>  <a href="https://www.bilibili.com/video/BV1BX4y1G7cn">MySQL-学习视频-b站</a></p>
</li>
<li><p>  <a href="https://downloads.mysql.com/archives/community/">MySQL下载地址</a></p>
</li>
<li><p>  <a href="https://blog.csdn.net/CharmJay/article/details/94330268">MySQL（5.5）安装+配置</a></p>
</li>
<li><p>  <a href="https://www.jianshu.com/p/70143ef3d4a3">Navicat 15.x for MySQL激活教程</a></p>
</li>
<li><p>  <a href="https://zhuanlan.zhihu.com/p/32137597">50道SQL练习题 - 知乎 (zhihu.com)</a></p>
</li>
</ul>
<p>安装、配置完毕后，查看端口是否打开：</p>
<ul>
<li>  win + R</li>
<li>  <code>services.msc</code></li>
</ul>
<h3 id="1-2-命令行-连接MySQL"><a href="#1-2-命令行-连接MySQL" class="headerlink" title="1.2 命令行-连接MySQL"></a>1.2 命令行-连接MySQL</h3><p>进入MySQL，查看当前MySQL中所有的数据库:</p>
<ul>
<li>  打开cmd</li>
<li>  输入：<code>mysql -uroot -p</code>，回车</li>
<li>  输入密码【刚才安装时，密码设为了：root】</li>
<li>  <code>show databases;</code>【注意：mysql 中所有语句结束，必须在后面加 分号 来表示】</li>
</ul>
<h3 id="1-3-Navicat-连接-MySQL"><a href="#1-3-Navicat-连接-MySQL" class="headerlink" title="1.3 Navicat 连接 MySQL"></a>1.3 Navicat 连接 MySQL</h3><ul>
<li>  点击 <code>连接</code> =》 <code>MySQL</code></li>
<li>  输入<code>连接名</code>【自定义的名字】，主机【ip地址】，端口【默认：3306】，用户名/密码【安装时设置的】</li>
<li>  双击打开 <code>连接</code></li>
</ul>
<h3 id="1-4-执行SQL"><a href="#1-4-执行SQL" class="headerlink" title="1.4 执行SQL"></a>1.4 执行SQL</h3><ul>
<li>  选中 <code>连接名</code> =》 右键 =》<code>新建查询</code>【或 直接点击工具栏的 <code>新建查询</code>】</li>
<li>  编写SQL语句</li>
<li>  点击 <code>运行</code></li>
<li>  右键<code>表</code> =》 <code>刷新</code></li>
</ul>
<h3 id="1-5-导出数据表的SQL"><a href="#1-5-导出数据表的SQL" class="headerlink" title="1.5 导出数据表的SQL"></a>1.5 导出数据表的SQL</h3><ul>
<li>  选中 数据表</li>
<li>  右键 =》 转储SQL文件  =》 结构和数据</li>
<li>  选择保存的位置</li>
</ul>
<h2 id="2-select-查询-DQL"><a href="#2-select-查询-DQL" class="headerlink" title="2. select 查询-DQL"></a>2. select 查询-DQL</h2><p><a href="https://note.youdao.com/ynoteshare1/index.html?id=45d4298f42397bd52ccf6fc716e27ee9&type=note#/">练习-数据</a></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询 student表的 所有内容</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- student表的 Sname列</span></span><br><span class="line"><span class="keyword">select</span> Sname </span><br><span class="line"><span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong> </p>
<ul>
<li><p>  所有关键字最好大写，以便 与用户的数据部分 区分开</p>
</li>
<li><p>  任意数据与null一起运算，结果都为 null 。</p>
</li>
</ul>
<p>【由此可知：数据表在设计时，若某列需要参与计算，则最好不要允许插入null】</p>
<h3 id="2-1-as-别名-："><a href="#2-1-as-别名-：" class="headerlink" title="2.1 as 别名 ："></a>2.1 as 别名 ：</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- name 作为 Sname列 的别名，其中 as关键字 可以省略</span></span><br><span class="line"><span class="keyword">select</span> Sname <span class="keyword">as</span> name </span><br><span class="line"><span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 别名 中包含 空格 时，需要使用 反引号</span></span><br><span class="line"><span class="keyword">select</span> Sname <span class="keyword">as</span> `name <span class="number">1</span>` </span><br><span class="line"><span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> SId <span class="keyword">as</span> `学号`,Sname <span class="keyword">as</span> `姓名`, Ssex <span class="keyword">as</span> `性别` </span><br><span class="line"><span class="keyword">from</span> student;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="2-2-distinct-关键字："><a href="#2-2-distinct-关键字：" class="headerlink" title="2.2 distinct 关键字："></a>2.2 distinct 关键字：</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> Sname  <span class="keyword">as</span> `name <span class="number">1</span>` </span><br><span class="line"><span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure>







<h3 id="2-3-where-关键字"><a href="#2-3-where-关键字" class="headerlink" title="2.3 where 关键字"></a>2.3 where 关键字</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SId <span class="keyword">as</span> `学号`,Sname <span class="keyword">as</span> `姓名`, Ssex <span class="keyword">as</span> `性别` </span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> SId <span class="operator">=</span>&quot;01&quot;;		<span class="comment">-- 找学号为01的学生</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> SId <span class="keyword">as</span> `学号`,Sname <span class="keyword">as</span> `姓名`, Ssex <span class="keyword">as</span> `性别` </span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> SId <span class="operator">!=</span> &quot;01&quot;;	<span class="comment">-- 找学号不是01的学生</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> SId <span class="keyword">as</span> `学号`,Sname <span class="keyword">as</span> `姓名`, Ssex <span class="keyword">as</span> `性别` </span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> SId <span class="operator">!=</span> &quot;01&quot; <span class="keyword">and</span> SId <span class="operator">!=</span> &quot;02&quot;; 	<span class="comment">-- 找学号 不是01，也不是02 的学生</span></span><br></pre></td></tr></table></figure>

<h3 id="2-4-between-关键字"><a href="#2-4-between-关键字" class="headerlink" title="2.4 between 关键字"></a>2.4 between 关键字</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `sc`</span><br><span class="line"><span class="keyword">where</span> </span><br><span class="line">	score <span class="operator">&gt;=</span> <span class="number">80</span> <span class="keyword">and</span> score <span class="operator">&lt;=</span><span class="number">90</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 等价于</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `sc`</span><br><span class="line"><span class="keyword">where</span> score <span class="keyword">between</span> <span class="number">80</span> <span class="keyword">and</span> <span class="number">90</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-5-in-关键字"><a href="#2-5-in-关键字" class="headerlink" title="2.5 in 关键字"></a>2.5 in 关键字</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `sc`</span><br><span class="line"><span class="keyword">where</span> score <span class="keyword">in</span> (<span class="number">70</span>,<span class="number">80</span>,<span class="number">90</span>);		<span class="comment">-- 找出 分数在 集合(70,80,90) 内的记录</span></span><br></pre></td></tr></table></figure>



<h3 id="2-6-like-关键字"><a href="#2-6-like-关键字" class="headerlink" title="2.6 like 关键字"></a>2.6 like 关键字</h3><p>like + %或者_ ，可以匹配字符串：【%多个字符，_1个字符】</p>
<ul>
<li>  like  “%雷%”：找出所有名字中有“雷”的人</li>
<li>  like “吴_”：找出姓吴，且名字是2个字的人</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> `s_c_t_sc_view`</span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span> Sname <span class="keyword">like</span> &quot;吴%&quot;;		<span class="comment">-- 找出姓吴的人</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-7-order-by-关键字"><a href="#2-7-order-by-关键字" class="headerlink" title="2.7 order by 关键字"></a>2.7 order by 关键字</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> 	</span><br><span class="line"><span class="keyword">FROM</span> `s_c_t_sc_view` 	</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line">	CId <span class="keyword">ASC</span> , score <span class="keyword">DESC</span>; <span class="comment">-- cid升序，score降序</span></span><br><span class="line">		</span><br><span class="line">							<span class="comment">--【desc降序 / asc升序】,【不指定des时，默认升序】</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="2-8-group-by-having-条件"><a href="#2-8-group-by-having-条件" class="headerlink" title="2.8 group by  + having 条件"></a>2.8 group by  + having 条件</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 无条件的分组</span></span><br><span class="line">	<span class="keyword">select</span> SId,Sname 	</span><br><span class="line">	<span class="keyword">from</span> `s_c_t_sc_view`	</span><br><span class="line">	<span class="keyword">group</span> <span class="keyword">by</span> SId			<span class="comment">--按学号分组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">select</span> SId,Sname,<span class="built_in">max</span>(score)	</span><br><span class="line">	<span class="keyword">from</span> `s_c_t_sc_view`	</span><br><span class="line">	<span class="keyword">group</span> <span class="keyword">by</span> SId			<span class="comment">--按学号分组,找出每个人的每个科目的最高分</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 有条件的分组</span></span><br><span class="line">	<span class="keyword">SELECT</span> 	SId,<span class="built_in">max</span>( score ) <span class="keyword">AS</span> max_score </span><br><span class="line">	<span class="keyword">FROM</span> `sc` 	</span><br><span class="line">	<span class="keyword">GROUP</span> <span class="keyword">BY</span> sid	</span><br><span class="line">	<span class="keyword">HAVING</span> max_score <span class="operator">&gt;=</span> <span class="number">60</span>		<span class="comment">-- 按学号分组后，找出最高成绩 &gt; 60 的学生的学号和最高分数</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="2-9-子查询"><a href="#2-9-子查询" class="headerlink" title="2.9 子查询"></a>2.9 子查询</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> Sname,max_score</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s</span><br><span class="line">	<span class="keyword">join</span></span><br><span class="line">		(</span><br><span class="line">            <span class="keyword">select</span>	SId,<span class="built_in">max</span>(score) <span class="keyword">as</span> max_score <span class="keyword">from</span> `sc` <span class="keyword">group</span> <span class="keyword">by</span> sid</span><br><span class="line">        ) <span class="keyword">as</span> t</span><br><span class="line">	<span class="keyword">on</span> s.SId <span class="operator">=</span> t.SId</span><br><span class="line"> 	</span><br><span class="line"><span class="comment">-- 先 按学号分组 并进行 子查询，找出每个学生所有课程的最高成绩；</span></span><br><span class="line"><span class="comment">-- 然后 将子查询的结果作为一张表连接到 学生表</span></span><br><span class="line"><span class="comment">-- 最后找出 学生姓名+最高个人的成绩</span></span><br></pre></td></tr></table></figure>







<h3 id="2-10-常用函数"><a href="#2-10-常用函数" class="headerlink" title="2.10 常用函数"></a>2.10 常用函数</h3><table>
<thead>
<tr>
<th>函数</th>
<th>效果</th>
</tr>
</thead>
<tbody><tr>
<td>select     upper(“aaa”) as <code>str1</code>;</td>
<td>“AAA”</td>
</tr>
<tr>
<td>select     lower( “AAA”)</td>
<td>“aaa”</td>
</tr>
<tr>
<td>select     concat(‘abcdefg’,’123’) as <code>str1</code>;</td>
<td><code>www-baidu-com</code></td>
</tr>
<tr>
<td>select     char_length(“aaa”) as <code>str1</code>;</td>
<td>3</td>
</tr>
<tr>
<td>select     substring(‘123456’,1,3) as <code>str1</code>;</td>
<td>“123”</td>
</tr>
<tr>
<td>select     ltrim(‘   abc   ‘) as <code>str1</code>;</td>
<td>“abc   ”</td>
</tr>
<tr>
<td>select     rtrim(‘   abc   ‘) as <code>str1</code>;</td>
<td>“   abc”</td>
</tr>
<tr>
<td>select     trim(‘   abc   ‘) as <code>str1</code>;</td>
<td>“abc”</td>
</tr>
<tr>
<td>select     abs(- 4.2) as <code>num1</code>;</td>
<td>4.2</td>
</tr>
<tr>
<td>select    ceil(- 4.21) as <code>num1</code>;</td>
<td>-4</td>
</tr>
<tr>
<td>select    floor(- 4.21) as <code>num1</code>;</td>
<td>-5</td>
</tr>
<tr>
<td>select   round(- 4.2138 , 3) as <code>num1</code>;</td>
<td>-4.214</td>
</tr>
<tr>
<td>select  curtime( ) as <code>now_time</code>;</td>
<td>11:59</td>
</tr>
<tr>
<td>select  now( ) as <code>now</code>;</td>
<td>2021-05-08 12:00:03</td>
</tr>
<tr>
<td>select  year(now( )) as <code>now</code>;</td>
<td>2021</td>
</tr>
<tr>
<td>select month(curdate( )) as <code>now</code>;</td>
<td>5</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>count( 属性名 )</td>
<td></td>
</tr>
<tr>
<td>count( * )</td>
<td></td>
</tr>
<tr>
<td>sum( 属性名)</td>
<td></td>
</tr>
<tr>
<td>avg( 属性名 )</td>
<td></td>
</tr>
<tr>
<td>min( 属性名)</td>
<td></td>
</tr>
<tr>
<td>max( 属性名)</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="3-基本表-DDL"><a href="#3-基本表-DDL" class="headerlink" title="3. 基本表-DDL"></a>3. 基本表-DDL</h2><h3 id="3-1-创建基本表-插入数据"><a href="#3-1-创建基本表-插入数据" class="headerlink" title="3.1 创建基本表 + 插入数据"></a>3.1 创建基本表 + 插入数据</h3><p><a href="https://note.youdao.com/ynoteshare1/index.html?id=45d4298f42397bd52ccf6fc716e27ee9&type=note#/">练习-数据</a></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Student(</span><br><span class="line">    SId <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">    Sname <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">    Sage datetime,</span><br><span class="line">    Ssex <span class="type">varchar</span>(<span class="number">10</span>)，</span><br><span class="line">    <span class="keyword">primary</span> key (SId)</span><br><span class="line">)engine<span class="operator">=</span>InnoDB <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入 数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;01&#x27;</span> , <span class="string">&#x27;赵雷&#x27;</span> , <span class="string">&#x27;1990-01-01&#x27;</span> , <span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;02&#x27;</span> , <span class="string">&#x27;钱电&#x27;</span> , <span class="string">&#x27;1990-12-21&#x27;</span> , <span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;03&#x27;</span> , <span class="string">&#x27;孙风&#x27;</span> , <span class="string">&#x27;1990-05-20&#x27;</span> , <span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;04&#x27;</span> , <span class="string">&#x27;李云&#x27;</span> , <span class="string">&#x27;1990-08-06&#x27;</span> , <span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;05&#x27;</span> , <span class="string">&#x27;周梅&#x27;</span> , <span class="string">&#x27;1991-12-01&#x27;</span> , <span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;06&#x27;</span> , <span class="string">&#x27;吴兰&#x27;</span> , <span class="string">&#x27;1992-03-01&#x27;</span> , <span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;07&#x27;</span> , <span class="string">&#x27;郑竹&#x27;</span> , <span class="string">&#x27;1989-07-01&#x27;</span> , <span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;09&#x27;</span> , <span class="string">&#x27;张三&#x27;</span> , <span class="string">&#x27;2017-12-20&#x27;</span> , <span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;10&#x27;</span> , <span class="string">&#x27;李四&#x27;</span> , <span class="string">&#x27;2017-12-25&#x27;</span> , <span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;11&#x27;</span> , <span class="string">&#x27;李四&#x27;</span> , <span class="string">&#x27;2017-12-30&#x27;</span> , <span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;12&#x27;</span> , <span class="string">&#x27;赵六&#x27;</span> , <span class="string">&#x27;2017-01-01&#x27;</span> , <span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;13&#x27;</span> , <span class="string">&#x27;孙七&#x27;</span> , <span class="string">&#x27;2018-01-01&#x27;</span> , <span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3-1-1-常见约束"><a href="#3-1-1-常见约束" class="headerlink" title="3.1.1 常见约束"></a>3.1.1 常见约束</h4><p>【主要用于 表的定义阶段】</p>
<ul>
<li>  主键：primary key( 属性名)   =》 <code>primary key (SId,CId)</code>【SC表】</li>
<li>  外键： foreign key 外键名(属性名) references  表名 (属性名)  =》 <code>foreign key fk_cid(cid) references Course(CId)</code></li>
<li>  空/非空：null/not null  【判断：is null , is  not null】=》 <code>Sname char(10) not null</code></li>
<li>  唯一：unique =》<code>CardID char(10) unique </code></li>
<li>  自定义：check(条件) =》 <code>age int check(age &gt;=0 and age &lt;=150 )</code></li>
<li>  默认值：default 默认值 =》<code>age int default 20 </code></li>
<li>  自增：auto_increment =》<code>id int primary key auto_increment</code>【不允许手动插入，插的时候填null】</li>
</ul>
<p>外键实例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> sc(</span><br><span class="line">	sid <span class="type">int</span> ,</span><br><span class="line">    cid <span class="type">int</span>,</span><br><span class="line">    score <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="keyword">foreign</span> key fk_sid(sid) <span class="keyword">references</span> s(Sid),</span><br><span class="line">    <span class="keyword">foreign</span> key fk_cid(cid) <span class="keyword">references</span> c(Cid),</span><br><span class="line">    <span class="keyword">primary</span> key (sid,cid)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>







<p>自增实例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 自增实例:</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> person(</span><br><span class="line">	id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)   	</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--自定义自增的初始值</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> person(</span><br><span class="line">	id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)   	</span><br><span class="line">) auto_increment<span class="operator">=</span><span class="number">100</span>		<span class="comment">--自增初始值为100</span></span><br></pre></td></tr></table></figure>





<h3 id="3-2-删除基本表-数据"><a href="#3-2-删除基本表-数据" class="headerlink" title="3.2 删除基本表-数据"></a>3.2 删除基本表-数据</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> student;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="3-3-修改基本表-数据"><a href="#3-3-修改基本表-数据" class="headerlink" title="3.3 修改基本表-数据"></a>3.3 修改基本表-数据</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">update student </span><br><span class="line">	<span class="keyword">set</span> student.Sname<span class="operator">=</span>&quot;aaa&quot; </span><br><span class="line">	<span class="keyword">where</span> student.SId <span class="operator">=</span> &quot;01&quot;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="3-4-查询基本表-数据"><a href="#3-4-查询基本表-数据" class="headerlink" title="3.4 查询基本表-数据"></a>3.4 查询基本表-数据</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure>



<h2 id="4-视图"><a href="#4-视图" class="headerlink" title="4.视图"></a>4.视图</h2><h3 id="4-1-创建视图"><a href="#4-1-创建视图" class="headerlink" title="4.1 创建视图"></a>4.1 创建视图</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> s_c_t_sc_View</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span>  student.SId,student.Sage,student.Sname,student.Ssex,	<span class="comment">--学生表</span></span><br><span class="line">		course.CId,course.Cname,								<span class="comment">--课程表</span></span><br><span class="line">		teacher.TId,teacher.Tname,								<span class="comment">--教师表</span></span><br><span class="line">		sc.score												<span class="comment">--成绩表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span>  student,course,teacher,sc</span><br><span class="line"><span class="keyword">where</span> student.SId <span class="operator">=</span> sc.SId </span><br><span class="line">	<span class="keyword">and</span> course.CId <span class="operator">=</span> sc.CId</span><br><span class="line">	<span class="keyword">and</span> course.TId  <span class="operator">=</span> teacher.TId;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="4-2-删除视图"><a href="#4-2-删除视图" class="headerlink" title="4.2 删除视图"></a>4.2 删除视图</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> s_c_t_sc_View;</span><br></pre></td></tr></table></figure>



<h2 id="5-分页查询"><a href="#5-分页查询" class="headerlink" title="5. 分页查询"></a>5. 分页查询</h2><p>limt  start，单个分页长度offset</p>
<p>初始下标start：从0开始</p>
<p>终点下标：(start + offset - 1)</p>
<p>偏移量offset：分页大小（分页后的记录条数）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> `s_c_t_sc_view`</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span></span><br><span class="line">limit <span class="number">5</span>;			<span class="comment">-- 分页，每页5条数据【前5条，从0开始数】</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> `s_c_t_sc_view`</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span></span><br><span class="line">limit <span class="number">5</span>,<span class="number">5</span>;			<span class="comment">-- 分页，每页5条数据，第一个5是 起点的下标，第二个5是 偏移量【第5条~第10条记录】</span></span><br><span class="line">					<span class="comment">-- 初始下标：5，分页长度5，终点下标：9</span></span><br></pre></td></tr></table></figure>





<h2 id="6-索引"><a href="#6-索引" class="headerlink" title="6. 索引"></a>6. 索引</h2><p>索引：在1列或几列，建立索引，可以提高查询速度，相当于给数据表加了个目录。【适合调优】</p>
<p>索引建立后，可以在 “设计表” 界面下的 “索引” 中查看</p>
<p>常用的索引：</p>
<ul>
<li>  B -Tree【实际上是B+树】</li>
<li>  Hash【innoDB引擎 不支持 Hash索引】</li>
</ul>
<p>索引的 创建、删除：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建索引</span></span><br><span class="line"><span class="keyword">create</span> index idx_sname </span><br><span class="line"><span class="keyword">on</span> student(Sname);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除索引</span></span><br><span class="line"><span class="keyword">drop</span> index idx_sname </span><br><span class="line"><span class="keyword">on</span> student</span><br></pre></td></tr></table></figure>







<h2 id="7-事务"><a href="#7-事务" class="headerlink" title="7. 事务"></a>7. 事务</h2><h3 id="7-1-事务的定义："><a href="#7-1-事务的定义：" class="headerlink" title="7.1 事务的定义："></a>7.1 事务的定义：</h3><p>事务：【Trans action】</p>
<blockquote>
<p>  一组 要么 全执行成功，要么全执行失败的SQL操作。</p>
<p>  【<code>默认</code>：1个<strong>DML</strong>语句(数据的增、删、改)，就是1个<strong>事务</strong>】</p>
<p>  事务由 DBMS 中的事务处理子系统控制。</p>
<p>  常见的 存储引擎：InnoDB【5.5版本后默认，支持事务】，myISAM【不支持 事务】</p>
</blockquote>
<h3 id="7-2-事务的特点：【ACID】"><a href="#7-2-事务的特点：【ACID】" class="headerlink" title="7.2 事务的特点：【ACID】"></a>7.2 事务的特点：【ACID】</h3><ul>
<li>  <strong>原子性</strong> ：事务中所有不可再分的操作，要么全成功，要么全失败</li>
<li>  <strong>一致性</strong> ：从一个一致的状态  =到=》另一个一致的状态</li>
<li>  <strong>隔离性</strong> ：多个事务之间 互不干扰</li>
<li>  <strong>持久性</strong> ：一旦提交，永久存储</li>
</ul>
<h3 id="7-3-事务-实例1："><a href="#7-3-事务-实例1：" class="headerlink" title="7.3 事务-实例1："></a>7.3 事务-实例1：</h3><p>事务-实例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">update account <span class="keyword">set</span> balance<span class="operator">=</span> balance <span class="operator">-</span> <span class="number">200</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">update account <span class="keyword">set</span> balance<span class="operator">=</span> balance <span class="operator">+</span> <span class="number">200</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">3</span>;	<span class="comment">--以上是2个事务</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--手动开启事务，将上面两条SQL语句放在1个事务里【回滚/提交前,数据是在缓存中修改】</span></span><br><span class="line">	<span class="keyword">start</span> transaction;</span><br><span class="line"></span><br><span class="line">	update account <span class="keyword">set</span> balance<span class="operator">=</span> balance <span class="operator">-</span> <span class="number">200</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">	update account <span class="keyword">set</span> balance<span class="operator">=</span> balance <span class="operator">+</span> <span class="number">200</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--手动回滚</span></span><br><span class="line">	<span class="keyword">rollback</span>;</span><br><span class="line">	</span><br><span class="line"><span class="comment">--手动提交</span></span><br><span class="line">	<span class="keyword">commit</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">【案例】：</span><br><span class="line">	<span class="comment">-- 关闭自动提交</span></span><br><span class="line">        <span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">0</span>;	</span><br><span class="line">        <span class="keyword">start</span> transaction;	<span class="comment">-- 开启事务</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">--  更改数据</span></span><br><span class="line">        update account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">-</span> <span class="number">100</span> <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        update account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">+</span> <span class="number">100</span> <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">--	成功-&gt;提交</span></span><br><span class="line">        <span class="keyword">commit</span>;</span><br><span class="line">        </span><br><span class="line">  <span class="comment">--   失败-&gt; 回滚       </span></span><br><span class="line">        <span class="keyword">rollback</span>;</span><br><span class="line">        </span><br><span class="line">  <span class="comment">--   重新打开事务的自动提交</span></span><br><span class="line">        <span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="7-4-事务的并发："><a href="#7-4-事务的并发：" class="headerlink" title="7.4 事务的并发："></a>7.4 事务的并发：</h3><h4 id="7-4-1-脏读："><a href="#7-4-1-脏读：" class="headerlink" title="7.4.1 脏读："></a>7.4.1 脏读：</h4><blockquote>
<p>  <code>事务A</code> 读取了 <code>事务B</code>  <strong>尚未提交</strong> 的数据，导致2次读取的数据的不一致。</p>
<p>  【读取未提交的数据】</p>
</blockquote>
<h4 id="7-4-2-不可重复读："><a href="#7-4-2-不可重复读：" class="headerlink" title="7.4.2 不可重复读："></a>7.4.2 不可重复读：</h4><blockquote>
<p>  <code>事务A</code>  多次读取了数据，在读取还没结束时, <code>事务B</code>  修改数据，导致2次读取的数据的不一致。</p>
<p>  【数据<strong>更新</strong>导致的 =》多次读取的数据不一致】  </p>
<p>  =》<strong>解决方案</strong>：锁 1行 记录</p>
</blockquote>
<h4 id="7-4-3-幻读"><a href="#7-4-3-幻读" class="headerlink" title="7.4.3 幻读"></a>7.4.3 幻读</h4><blockquote>
<p>  <code>事务A</code> 读取数据后，<code>事务B</code> 插入数据，<code>事务A</code> 再次读取数据时，两次数据不一致.</p>
<p>  【数据<strong>插入</strong>导致的 =》多次读取的数据不一致】</p>
<p>  =》<strong>解决方案</strong>：锁 1张 表</p>
</blockquote>
<h3 id="7-5-事务的隔离级别"><a href="#7-5-事务的隔离级别" class="headerlink" title="7.5 事务的隔离级别"></a>7.5 事务的隔离级别</h3><p> 隔离级别：为解决并发问题。</p>
<ul>
<li>  读 未提交 ( read uncommited)：会出现 =》脏读+不可重复读+幻读</li>
<li>  读 已提交 ( read commited)：     会出现 =》不可重复读+幻读</li>
<li>  可重复读  ( repeatable read)：   会出现 =》幻读</li>
<li>  序列化      ( serializable )：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查看默认的事务隔离级别，MySQL默认的隔离级别：可重复读</span></span><br><span class="line">	<span class="keyword">select</span> @<span class="variable">@transaction</span>_isolation;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 设置事务的隔离级别</span></span><br><span class="line">	<span class="keyword">set</span> session transation isolation level read uncommited;</span><br><span class="line">	<span class="keyword">set</span> session transation isolation level read commited;</span><br><span class="line">	<span class="keyword">set</span> session transation isolation level repeatable read; <span class="comment">-- MySQL默认的隔离级别</span></span><br><span class="line">	<span class="keyword">set</span> session transaction isolation level serializable;</span><br></pre></td></tr></table></figure>











<h2 id="8-存储过程"><a href="#8-存储过程" class="headerlink" title="8. 存储过程"></a>8. 存储过程</h2><p>存储过程：相互之间有关联、可以使用流程控制的SQL语句的集合【类似：批处理语句】</p>
<p>使用 <code>存储过程</code> 的优点:</p>
<ul>
<li>  <strong>提高性能</strong>。每一次执行SQL都要进行语法分析、编译、执行。而<strong>使用存储过程后</strong>，只需进行1次语法分析、编译、执行。</li>
<li>  <strong>减轻负担</strong>。使用存储过程后，只需client向server传递参数，无需传递SQL语句。</li>
<li>  <strong>将数据库的处理黑盒化</strong> 。应用程序<strong>无需在意 存储过程内部</strong> 的详细处理。</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 定义：1个 无返回值 的存储过程</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> &quot;%诸葛%&quot;;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">create</span> procudure myPro01(name <span class="type">varchar</span>(<span class="number">20</span>))</span><br><span class="line">	<span class="keyword">begin</span> </span><br><span class="line">		if name <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">or</span> name <span class="operator">=</span>&quot;&quot; <span class="keyword">then</span></span><br><span class="line">			<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        	<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> concat(&quot;%&quot;,name,&quot;%&quot;);</span><br><span class="line">        endif;</span><br><span class="line">	<span class="keyword">end</span>;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"><span class="comment">-- 删除 储过程</span></span><br><span class="line">	<span class="keyword">drop</span> procudure myPro01;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"><span class="comment">--调用 存储过程</span></span><br><span class="line">	<span class="keyword">call</span> myPro01(<span class="keyword">null</span>);</span><br><span class="line">	<span class="keyword">call</span> myPro01(&quot;孔明&quot;);</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"><span class="comment">-----------------------------------------------------------		</span></span><br><span class="line"><span class="comment">-----------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 定义：1个 有返回值 的存储过程</span></span><br><span class="line">	<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> &quot;%诸葛%&quot;;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">-- in可省略，out修饰返回值</span></span><br><span class="line">	<span class="keyword">create</span> procudure myPro02(<span class="keyword">in</span> name <span class="type">varchar</span>(<span class="number">20</span>),<span class="keyword">out</span> num <span class="type">int</span>(<span class="number">3</span>)) </span><br><span class="line">	<span class="keyword">begin</span> </span><br><span class="line">	</span><br><span class="line">		if name <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">or</span> name <span class="operator">=</span>&quot;&quot; <span class="keyword">then</span></span><br><span class="line">			<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        	<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> concat(&quot;%&quot;,name,&quot;%&quot;);</span><br><span class="line">        endif;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">--found_rows()是MySQL中 返回查询结果的条数的函数</span></span><br><span class="line">        <span class="keyword">select</span> found_rows() <span class="keyword">into</span> num;	</span><br><span class="line">	<span class="keyword">end</span>;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"><span class="comment">-- 调用 存储过程</span></span><br><span class="line">	<span class="keyword">call</span> myPro02(&quot;张&quot;,<span class="variable">@num</span>);</span><br><span class="line">	<span class="keyword">select</span> <span class="variable">@num</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="9-数据控制语言-DCL"><a href="#9-数据控制语言-DCL" class="headerlink" title="9. 数据控制语言-DCL"></a>9. 数据控制语言-DCL</h2><p>回顾：</p>
<ul>
<li>  DDL：数据定义语言  =》create、alter、drop</li>
<li>  DML：数据操纵语言 =》insert，delete，update</li>
<li>  DQL：数据查询语言 =》select</li>
<li>  DCL：数据控制语言 =》grant、revoke</li>
</ul>
<p>DCL：数据控制语言</p>
<p>DCL的功能：</p>
<blockquote>
<ul>
<li>  管理用户：添加用户、删除用户、修改用户密码、查询用户</li>
<li>  授予用户权限：</li>
</ul>
</blockquote>
<p>用户信息：</p>
<blockquote>
<p>  存储在 <code>mysql_db -&gt; user表</code></p>
</blockquote>
<h3 id="9-1-管理用户"><a href="#9-1-管理用户" class="headerlink" title="9.1 管理用户"></a>9.1 管理用户</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span> 步骤：</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>	<span class="number">1.</span> 切换到mysql数据库</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>	<span class="number">2.</span> 查询<span class="keyword">user</span>表</span><br><span class="line"></span><br><span class="line">use mysql;</span><br><span class="line"></span><br><span class="line"><span class="operator">-</span> 查询用户</span><br><span class="line">	<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span>; </span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"><span class="operator">-</span> 创建用户【主机名可以用<span class="operator">%</span>,表示所有主机】</span><br><span class="line">	<span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;密码&#x27;</span>;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"><span class="operator">-</span> 删除用户</span><br><span class="line">	<span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"><span class="operator">-</span> 修改用户密码【方式<span class="number">-1</span>】	</span><br><span class="line">	update <span class="keyword">user</span> <span class="keyword">set</span> password <span class="operator">=</span> password(<span class="string">&#x27;新密码&#x27;</span>) <span class="keyword">where</span> <span class="keyword">user</span> <span class="operator">=</span> <span class="string">&#x27;用户名&#x27;</span>; </span><br><span class="line">	</span><br><span class="line"><span class="operator">-</span> 修改用户密码【方式<span class="number">-2</span>】	</span><br><span class="line">	update password <span class="keyword">for</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> <span class="operator">=</span> password(<span class="string">&#x27;新密码&#x27;</span>); 	</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="9-2-授予权限："><a href="#9-2-授予权限：" class="headerlink" title="9.2 授予权限："></a>9.2 授予权限：</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">-</span> 查看权限</span><br><span class="line">	<span class="keyword">show</span> grants <span class="keyword">for</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br><span class="line">		</span><br><span class="line">		例如：</span><br><span class="line">			<span class="keyword">show</span> grants <span class="keyword">for</span> <span class="string">&#x27;lisi&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"><span class="operator">-</span> 授予权限</span><br><span class="line">	<span class="keyword">grant</span> 权限列表 <span class="keyword">on</span> 数据库名.表名 <span class="keyword">to</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br><span class="line">	</span><br><span class="line">			例如：</span><br><span class="line">				<span class="keyword">grant</span> <span class="keyword">select</span>,update <span class="keyword">on</span> school.stu <span class="keyword">to</span> <span class="string">&#x27;user_1&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">				</span><br><span class="line">				<span class="operator">/</span><span class="operator">/</span> 给用户zhangsan授予所有库的所有权限</span><br><span class="line">				<span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;zhangsan&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">		</span><br><span class="line">	</span><br><span class="line">		</span><br><span class="line">	</span><br><span class="line"><span class="operator">-</span> 撤销权限</span><br><span class="line">	<span class="keyword">revoke</span> 权限列表 <span class="keyword">on</span> 数据库名.表名 <span class="keyword">from</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br><span class="line">	</span><br><span class="line">			例如：</span><br><span class="line">				<span class="keyword">revoke</span> <span class="keyword">insert</span>,update <span class="keyword">on</span> school.stu <span class="keyword">from</span> <span class="string">&#x27;lisi&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">	</span><br></pre></td></tr></table></figure>





<h3 id="9-3-解决：忘记Root用户密码的问题："><a href="#9-3-解决：忘记Root用户密码的问题：" class="headerlink" title="9.3 解决：忘记Root用户密码的问题："></a>9.3 解决：忘记Root用户密码的问题：</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">-</span> 解决忘记Root用户密码的问题【步骤】：</span><br><span class="line">        <span class="number">1.</span> 管理员身份运行<span class="operator">-</span>cmd : 输入 net stop mysql</span><br><span class="line"></span><br><span class="line">        <span class="number">2.</span> 以无验证的方式启动 mysql : 输入 mysqld <span class="comment">--skip-grant-tables</span></span><br><span class="line"></span><br><span class="line">        <span class="number">3.</span> 再启动<span class="number">1</span>个新的cmd窗口：输入 mysql</span><br><span class="line"></span><br><span class="line">        <span class="number">4.</span> 改密码：</span><br><span class="line">                use mysql;</span><br><span class="line">                update password <span class="keyword">for</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> <span class="operator">=</span> password(<span class="string">&#x27;新密码&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="number">5.</span> 任务管理器 <span class="operator">=</span><span class="operator">&gt;</span> 关闭 mysqld进程	</span><br><span class="line">        </span><br><span class="line">        <span class="number">6.</span> 重新启动mysql服务：net <span class="keyword">start</span> mysql</span><br></pre></td></tr></table></figure>









<h2 id="10-面试题："><a href="#10-面试题：" class="headerlink" title="10. 面试题："></a>10. 面试题：</h2><h3 id="10-1-比较效率："><a href="#10-1-比较效率：" class="headerlink" title="10.1 比较效率："></a>10.1 比较效率：</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptNo<span class="operator">=</span><span class="number">10</span> <span class="keyword">and</span> eName <span class="keyword">like</span> &quot;%A%&quot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> eName <span class="keyword">like</span> &quot;%A%&quot;<span class="keyword">and</span>  deptNo<span class="operator">=</span><span class="number">10</span></span><br></pre></td></tr></table></figure>

<p>解答：</p>
<blockquote>
<p>  理论上，第一条语句的效率更好，因为查询 数字 比 查询 字符串 速度更快。</p>
<p>  实际上，数据库会对SQL语句进行优化</p>
</blockquote>
<h3 id="10-2-主从复制的延迟问题："><a href="#10-2-主从复制的延迟问题：" class="headerlink" title="10.2 主从复制的延迟问题："></a>10.2 主从复制的延迟问题：</h3><p>主从复制的延迟问题 =》 涉及到MySQL集群</p>
<p>MySQL集群：</p>
<ul>
<li>  =》主从复制 </li>
<li>   =》读写分离【部分DB专门用于‘读’，剩余的DB负责‘写’】 =&gt; 需要保持：数据一致</li>
<li>  =》分库分表</li>
</ul>
<p>DB 性能 取决于：</p>
<ul>
<li>  内存</li>
<li>  CPU</li>
<li>  磁盘</li>
<li>  带宽</li>
</ul>
<p>DB的优化：</p>
<ul>
<li>  监控 SQL</li>
<li>  查看 连接数</li>
<li>  设计 数据表时，选择合适的数据类型</li>
<li>  建立 索引</li>
<li>  设置 MySQL 参数</li>
<li>  建立 分布式集群</li>
</ul>
<p>日志：</p>
<ul>
<li>  bin log       =属于=》 mysql 服务        </li>
<li>  undo log   =属于=》 innodb存储引擎</li>
<li>  redo log    =属于=》 innodb存储引擎</li>
</ul>
<p>主从复制的过程：</p>
<ul>
<li><p>  client 对 <strong>master DB</strong> 进行 DML 后，产生<strong>bin log</strong>。</p>
</li>
<li><p>  bin log 在主从复制时，通过<strong>IO线程</strong>，被 <strong>slave DB</strong>借鉴，在slave上进行<strong>持久化存储</strong>，产生 <strong>中继日志 relay log</strong> 。【效率较高的阶段，顺序读写】</p>
</li>
<li><p>  通过 <strong>sql 线程</strong> 对 relay log 进行重放【效率较低的阶段，随机读写】，可以在 slave 上恢复 master 的 bin log。</p>
</li>
</ul>
<p>【binlog  需要手动开启】</p>
<p>粒度：【粒度越小，效率越高】</p>
<ul>
<li>  库【5.6以上版本支持】</li>
<li>  表</li>
<li>  行</li>
</ul>
<p>主从复制中的延时问题：</p>
<blockquote>
<p>  延时 主要发生在 sql 线程运行阶段【MTS：muti-thread salve】</p>
</blockquote>
]]></content>
      <categories>
        <category>SQL</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis-入门</title>
    <url>/2021/08/13/Mybatis-%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="Mybatis-入门"><a href="#Mybatis-入门" class="headerlink" title="Mybatis-入门"></a>Mybatis-入门</h1><p>[toc]</p>
<hr>
<ul>
<li>  <a href="https://www.bilibili.com/video/BV1mE411X7yp?p=9">视频：SSM框架合集-bilibili</a></li>
<li>  <a href="https://www.bilibili.com/video/BV1NE411Q7Nx?p=2">狂神说-mybatis</a></li>
<li>  <a href="https://mybatis.org/mybatis-3/zh/index.html">官方中文-文档</a></li>
</ul>
<ul>
<li>  mybatis有道笔记：</li>
</ul>
<blockquote>
<ul>
<li>  <a href="http://note.youdao.com/s/TiZlbvyu">http://note.youdao.com/s/TiZlbvyu</a></li>
<li>  <a href="http://note.youdao.com/s/582K2o08">http://note.youdao.com/s/582K2o08</a></li>
<li>  <a href="http://note.youdao.com/s/P6lsYYPa">http://note.youdao.com/s/P6lsYYPa</a></li>
<li>  <a href="http://note.youdao.com/s/GStngY9I">http://note.youdao.com/s/GStngY9I</a></li>
<li>  <a href="http://note.youdao.com/s/LlyG6F9D">http://note.youdao.com/s/LlyG6F9D</a></li>
<li>  <a href="http://note.youdao.com/s/6itQ06sM">http://note.youdao.com/s/6itQ06sM</a></li>
<li>  <a href="http://note.youdao.com/s/QqCX2pY6">http://note.youdao.com/s/QqCX2pY6</a></li>
<li>  <a href="http://note.youdao.com/s/TsyIKKGN">http://note.youdao.com/s/TsyIKKGN</a></li>
<li>  <a href="http://note.youdao.com/s/ROBlOd50">http://note.youdao.com/s/ROBlOd50</a></li>
<li>  <a href="http://note.youdao.com/s/V4t6L4xg">http://note.youdao.com/s/V4t6L4xg</a></li>
<li>  <a href="http://note.youdao.com/s/clAdMNlv">http://note.youdao.com/s/clAdMNlv</a></li>
<li>  <a href="http://note.youdao.com/s/N52FP2j9">http://note.youdao.com/s/N52FP2j9</a></li>
<li>  <a href="http://note.youdao.com/s/OupQYDaB">http://note.youdao.com/s/OupQYDaB</a></li>
<li>  <a href="http://note.youdao.com/s/7Cr6MA45">http://note.youdao.com/s/7Cr6MA45</a></li>
<li>  <a href="http://note.youdao.com/s/XXBFJgZg">http://note.youdao.com/s/XXBFJgZg</a></li>
<li>  <a href="http://note.youdao.com/s/9L5TytEZ">http://note.youdao.com/s/9L5TytEZ</a></li>
</ul>
</blockquote>
<h2 id="0、前导"><a href="#0、前导" class="headerlink" title="0、前导"></a>0、前导</h2><ol>
<li><p>  框架简述：开发时为解决某些问题而使用的半成品软件，是一种解决方案。</p>
</li>
<li><p>  使用框架的好处：封装了很多细节，提高了效率。</p>
</li>
<li><p>三层架构：</p>
<blockquote>
<ul>
<li>  表现层：展现数据</li>
<li>  业务层：处理业务</li>
<li>  持久层：数据库交互</li>
</ul>
</blockquote>
</li>
<li><p>持久层的解决方案：</p>
<blockquote>
<ul>
<li>  JDBC：Connection + PreparedStatement + ResultSet</li>
<li>  Spring的JdbcTemplete：Spring对JDBC的简单封装</li>
<li>  Apache的DBUtils</li>
</ul>
<p>  以上3种都只是工具，还算不上框架</p>
</blockquote>
</li>
</ol>
<hr>
<h2 id="1、Mybatis的概述"><a href="#1、Mybatis的概述" class="headerlink" title="1、Mybatis的概述"></a>1、Mybatis的概述</h2><p>Mybatis是一款优秀的<font style="color:red;">持久层框架</font>，封装了JDBC，使得开发者只需要关注SQL本身。通过<font style="color:red;">XML 或注解</font>的形式配置Statement，通过<font style="color:red;">Java对象和Statement的动态参数</font>映射成为SQL语句。（Mybatis框架通过<font style="color:red;"> ORM</font> 解决了实体与数据库的映射问题）。</p>
<p>ORM 模型：（Object Relation Mapping）数据库的1张表 对应 1个Java实体类。</p>
<hr>
<h2 id="2、Mybatis的环境搭建"><a href="#2、Mybatis的环境搭建" class="headerlink" title="2、Mybatis的环境搭建"></a>2、Mybatis的环境搭建</h2><ol>
<li>  IDEA 新建 Maven工程（不选模板）</li>
<li>  在 POM.xml中导入配置（前提是：已经配好maven环境）</li>
</ol>
<p>pom.xml：【Mybatis的坐标可以直接官网复制，然后填写版本号】</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyw<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MyBatisDemo_day01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>



<ol start="3">
<li>  在包下创建 <font style="color:red;">实体类（com.cyw.entity.User）</font></li>
<li>  在包下创建 <font style="color:red;">接口(com.cyw..dao.UserDao)、在接口中定义方法（findAll）</font></li>
<li>  在<font style="color:red;">Resource目录</font>下创建 <font style="color:red;">Mybatis的主配置文件（SqlMapConfig.xml）</font>（数据库的配置文件）</li>
</ol>
<p>SqlMapConfig.xml：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    配置环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        配置mysql的环境--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            配置事务类型--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                配置连接数据库的4个信息--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatisdemo&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    映射配置文件的位置(要用/来分割)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/cyw/dao/UserDao.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>



<ol start="3">
<li>  在<font style="color:red;">Resource目录</font>下创建1个<font style="color:red;">映射配置文件</font>（与Dao接口的全类名相同的 xml文件）<font style="color:red;">( com/cyw/dao/UserDao.xml )</font></li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.cyw.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    配置接口的方法：查询所有用户--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.cyw.entity.User&quot;</span>&gt;</span></span><br><span class="line">        select * from user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>环境配置的注意要点：</p>
<blockquote>
<ul>
<li>  <strong>接口的 xml 映射配置文件</strong> 和 <strong>接口的名字</strong> 要保持一致。（Dao也可以叫Mapper）</li>
<li>  IDEA中，创建<strong>包</strong>要用<strong>小数点</strong>分割，创建<strong>目录</strong>要用<strong>斜杠</strong>分割</li>
<li>  <strong>映射配置文件的目录结构</strong>   要与 <strong>接口的包结构</strong> 保持一致。</li>
<li>  <strong>映射配置文件的Mapper标签的 namespace属性</strong> 的属性值必须是<strong>接口的全类名</strong></li>
<li>  <strong>映射配置文件的操作标签（select）的 id属性</strong> 的属性值必须是<strong>接口的方法名</strong></li>
</ul>
<p>  遵循第3~5点好处：无需写dao接口的实现类。</p>
</blockquote>
<h3 id="环境配置小结："><a href="#环境配置小结：" class="headerlink" title="环境配置小结："></a>环境配置小结：</h3><blockquote>
<ol>
<li>  配置maven的 pom.xml</li>
<li>  在 src/main/resources/ 目录中创建SqlMapConfig.xml （mybatis全局配置），填写4个DB信息</li>
<li>  创建实体类</li>
<li>  创建 dao接口</li>
<li>  创建 dao接口的 xml 配置文件</li>
<li>  在 SqlMapConfig.xml 指定 dao接口配置文件的路径</li>
<li>  在  dao接口的 xml 配置文件 中 指定 接口的全类名、要调用的接口方法、实体对象的全类名，sql语句。</li>
<li>  创建1个获取 SqlSession的工具类</li>
<li>  获取 SqlMapConfig.xml 的资源输入流</li>
<li>  在 SqlSession工具类中创建SqlSeeesionBulider对象</li>
<li>  SqlSeeesionBulider对象 根据 资源输入流 建造1个SqlSessionFatory对象</li>
<li>  SqlSessionFatory对象 调用 OpenSqlSession( ) 获取 SqlSession</li>
<li>  SqlSession 调用 getMapper(接口名.class) 得到 dao对象</li>
<li>   dao对象 调用 接口的方法得到 结果集</li>
</ol>
</blockquote>
<hr>
<h2 id="3、Mybatis的入门案例"><a href="#3、Mybatis的入门案例" class="headerlink" title="3、Mybatis的入门案例"></a>3、Mybatis的入门案例</h2><p>案例-踩坑：【log4j:ERROR call failed】</p>
<ul>
<li>  原因：虚拟机里没划分D盘，只有E盘</li>
<li>  解决：打开 log4j.properties 文件，log4j.appender.LOGFILE.File 的值改为 e:\axis.log</li>
</ul>
<p> log4j.properties 文件：</p>
 <figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set root category priority to INFO and its only appender to CONSOLE.</span></span><br><span class="line"><span class="comment">#log4j.rootCategory=INFO, CONSOLE            debug   info   warn error fatal</span></span><br><span class="line"><span class="meta">log4j.rootCategory</span>=<span class="string">debug, CONSOLE, LOGFILE</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># Set the enterprise logger category to FATAL and its only appender to CONSOLE.</span></span><br><span class="line"><span class="meta">log4j.logger.org.apache.axis.enterprise</span>=<span class="string">FATAL, CONSOLE</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># CONSOLE is set to be a ConsoleAppender using a PatternLayout.</span></span><br><span class="line"><span class="meta">log4j.appender.CONSOLE</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.CONSOLE.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.CONSOLE.layout.ConversionPattern</span>=<span class="string">%d&#123;ISO8601&#125; %-6r [%15.15t] %-5p %30.30c %x - %m\n</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># LOGFILE is set to be a File appender using a PatternLayout.</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE</span>=<span class="string">org.apache.log4j.FileAppender</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 注意：日志的存放位置（要选择电脑上已存在的盘）</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE.File</span>=<span class="string">e:\axis.log</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE.Append</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE.layout.ConversionPattern</span>=<span class="string">%d&#123;ISO8601&#125; %-6r [%15.15t] %-5p %30.30c %x - %m\n</span></span><br></pre></td></tr></table></figure>



<ul>
<li>  踩坑-2：java.lang.ExceptionInInitializerError</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">// 在 pom.xml中加入</span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>









<h3 id="3-1-案例-1："><a href="#3-1-案例-1：" class="headerlink" title="3.1 案例-1："></a>3.1 案例-1：</h3><h4 id="0-Pom-xml"><a href="#0-Pom-xml" class="headerlink" title="0. Pom.xml"></a>0. Pom.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyw<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MyBatisDemo_day01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h4 id="1-SQL"><a href="#1-SQL" class="headerlink" title="1.   SQL"></a>1.   SQL</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database `MybatisDemo`;</span><br><span class="line"></span><br><span class="line">use `MybatisDemo`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `<span class="keyword">user</span>`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> auto_increment,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户名称&#x27;</span>,</span><br><span class="line">  `birthday` datetime <span class="keyword">default</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;生日&#x27;</span>,</span><br><span class="line">  `sex` <span class="type">char</span>(<span class="number">1</span>) <span class="keyword">default</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">  `address` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">default</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;地址&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY  (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> `<span class="keyword">user</span>`(`id`,`username`,`birthday`,`sex`,`address`) <span class="keyword">values</span> (<span class="number">41</span>,<span class="string">&#x27;老王&#x27;</span>,<span class="string">&#x27;2018-02-27 17:47:08&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>),(<span class="number">42</span>,<span class="string">&#x27;小二王&#x27;</span>,<span class="string">&#x27;2018-03-02 15:09:37&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;北京金燕龙&#x27;</span>),(<span class="number">43</span>,<span class="string">&#x27;小二王&#x27;</span>,<span class="string">&#x27;2018-03-04 11:34:34&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;北京金燕龙&#x27;</span>),(<span class="number">45</span>,<span class="string">&#x27;传智播客&#x27;</span>,<span class="string">&#x27;2018-03-04 12:04:06&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;北京金燕龙&#x27;</span>),(<span class="number">46</span>,<span class="string">&#x27;老王&#x27;</span>,<span class="string">&#x27;2018-03-07 17:37:26&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>),(<span class="number">48</span>,<span class="string">&#x27;小马宝莉&#x27;</span>,<span class="string">&#x27;2018-03-08 11:44:00&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;北京修正&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h4 id="2-User-实体类"><a href="#2-User-实体类" class="headerlink" title="2. User 实体类"></a>2. User 实体类</h4><p>com/cyw/entity/User 实体类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String  sex;</span><br><span class="line">    <span class="keyword">private</span> String  address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Integer id, String username, Date birthday, String sex, String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">        <span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, birthday=&quot;</span> + birthday +</span><br><span class="line">                <span class="string">&quot;, sex=&#x27;&quot;</span> + sex + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, address=&#x27;&quot;</span> + address + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> birthday;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(Date birthday)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="3-UserDao接口"><a href="#3-UserDao接口" class="headerlink" title="3. UserDao接口"></a>3. UserDao接口</h4><p>com/cyw/dao/UserDao接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cyw.entity.User;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 用注解代替xml的映射配置：@Select(&quot;select * from user&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="4-log4j-properties-配置文件"><a href="#4-log4j-properties-配置文件" class="headerlink" title="4.  log4j.properties 配置文件"></a>4.  log4j.properties 配置文件</h4><p> src/main/resources/log4j.properties </p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set root category priority to INFO and its only appender to CONSOLE.</span></span><br><span class="line"><span class="comment">#log4j.rootCategory=INFO, CONSOLE            debug   info   warn error fatal</span></span><br><span class="line"><span class="meta">log4j.rootCategory</span>=<span class="string">debug, CONSOLE, LOGFILE</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># Set the enterprise logger category to FATAL and its only appender to CONSOLE.</span></span><br><span class="line"><span class="meta">log4j.logger.org.apache.axis.enterprise</span>=<span class="string">FATAL, CONSOLE</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># CONSOLE is set to be a ConsoleAppender using a PatternLayout.</span></span><br><span class="line"><span class="meta">log4j.appender.CONSOLE</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.CONSOLE.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.CONSOLE.layout.ConversionPattern</span>=<span class="string">%d&#123;ISO8601&#125; %-6r [%15.15t] %-5p %30.30c %x - %m\n</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># LOGFILE is set to be a File appender using a PatternLayout.</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE</span>=<span class="string">org.apache.log4j.FileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE.File</span>=<span class="string">e:\axis.log</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE.Append</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.LOGFILE.layout.ConversionPattern</span>=<span class="string">%d&#123;ISO8601&#125; %-6r [%15.15t] %-5p %30.30c %x - %m\n</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="5-SqlMapConfig-xml"><a href="#5-SqlMapConfig-xml" class="headerlink" title="5. SqlMapConfig.xml"></a>5. SqlMapConfig.xml</h4><p>src/main/resources/SqlMapConfig.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    配置环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        配置mysql的环境--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            配置事务类型--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                配置连接数据库的4个信息--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatisdemo&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    映射配置文件的位置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/cyw/dao/UserDao.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--    使用注解配置时，</span></span><br><span class="line"><span class="comment">				可以直接在下面的mapper标签中设置class属性来代替 resource属性,</span></span><br><span class="line"><span class="comment">				即：com.cyw.dao.UserDao</span></span><br><span class="line"><span class="comment">					&lt;mapper class=&quot;com.cyw.dao.UserDao&quot;/&gt;</span></span><br><span class="line"><span class="comment">				然后在接口定义的方法上写SQL操作的注解，例如： @Select(“sql语句”)</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com/cyw/dao/UserDao.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="6-UserDao-xml"><a href="#6-UserDao-xml" class="headerlink" title="6. UserDao.xml"></a>6. UserDao.xml</h4><p> src/main/resources/com/cyw/dao/UserDao.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.cyw.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    配置接口的方法：查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.cyw.entity.User&quot;</span>&gt;</span></span><br><span class="line">        select * from user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h4 id="7-Main"><a href="#7-Main" class="headerlink" title="7.  Main"></a>7.  Main</h4><p>test/java/com/cyw/test/UserDaoTest</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cyw.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.cyw.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取配置文件</span></span><br><span class="line">        InputStream is = Resources.getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 创建SqlSessionFactoryBuilder</span></span><br><span class="line">        SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 建造sqlSessionFactory</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = builder.build(is);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取会话</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取接口的代理对象（动态代理）,map就是dao</span></span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 调用方法</span></span><br><span class="line">        List&lt;User&gt; users = userDao.findAll();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 关闭资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">        is.close();        </span><br><span class="line">        </span><br><span class="line">        。</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="8-封装工具类"><a href="#8-封装工具类" class="headerlink" title="8. 封装工具类"></a>8. 封装工具类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SqlSessionUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory factory;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream is = Resources.getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">            SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">            factory = builder.build(is);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">	<span class="comment">// 返回SqlSession</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> factory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<p>注意：</p>
<blockquote>
<ol>
<li>  Dao配置文件的<strong>namespace的包名</strong>要与<strong>dao / mapper 接口名</strong>一致。</li>
</ol>
</blockquote>
<h3 id="3-2-解决结果集的实体类属性与数据库中的字段名不一致的问题："><a href="#3-2-解决结果集的实体类属性与数据库中的字段名不一致的问题：" class="headerlink" title="3.2 解决结果集的实体类属性与数据库中的字段名不一致的问题："></a>3.2 解决结果集的实体类属性与数据库中的字段名不一致的问题：</h3><p>2种解决方案：</p>
<ul>
<li>  在SQL查询时，数据库字段取 别名。</li>
<li>  dao的配置文件中定义1个ResultMap，指定 id 和 type（type为结果集实体类）。 在ResultMap标签内，定义Result标签，绑定Result标签的 column属性 (数据库字段) 和 property属性 (实体类的属性) 属性。定义Select标签的ResultMap属性= ResultMap的 id 。</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">// resultMap中一般只指定【sql字段】与【结果集的实体类的属性】不一致的属性</span><br><span class="line">// property：结果集实体类的属性</span><br><span class="line">// column：数据表的列名</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;user_id&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span> <span class="attr">column</span>=<span class="string">&quot;user_name&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">column</span>=<span class="string">&quot;hashed_password&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUsers&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userResultMap&quot;</span>&gt;</span></span><br><span class="line">  select user_id, user_name, hashed_password</span><br><span class="line">  from some_table</span><br><span class="line">  where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span>    </span><br></pre></td></tr></table></figure>







<h3 id="3-3-配置日志"><a href="#3-3-配置日志" class="headerlink" title="3.3 配置日志"></a>3.3 配置日志</h3><p>在mybatis的核心配置文件（SqlMapConfig.xml）中的Configuration标签下settings 标签中 配置日志</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">// 注意：setting标签下的 value属性的取值为：</span><br><span class="line">// NO_LOGGING</span><br><span class="line">// STDOUT_LOGGING</span><br><span class="line">// LOG4J	【前3个重点掌握】</span><br><span class="line">// LOG4J2</span><br><span class="line">// SLF4J</span><br><span class="line">// JDK_LOGGING</span><br><span class="line">// COMMONS_LOGGING</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">settings</span>&gt;</span>    </span><br><span class="line">        	<span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;LOG4J&quot;</span>/&gt;</span>   </span><br><span class="line">      <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>





















<hr>
<h2 id="4、Mybatis的单表（CRUD）"><a href="#4、Mybatis的单表（CRUD）" class="headerlink" title="4、Mybatis的单表（CRUD）"></a>4、Mybatis的单表（CRUD）</h2><p><strong>注意：</strong> 在接口的配置文件中编写SQL语句时，传参数可以使用占位符<code>#&#123;实体类属性名&#125;</code>，示例可参照案例2的第2步。</p>
<h3 id="4-1-案例-2（CRUD）："><a href="#4-1-案例-2（CRUD）：" class="headerlink" title="4.1 案例-2（CRUD）："></a>4.1 案例-2（CRUD）：</h3><p>在案例-1的基础上实现增删改查</p>
<p>前提：数据库、实体类都不变。</p>
<p>dao接口：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cyw.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">User <span class="title">findUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">delUser</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insertUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<blockquote>
<ol>
<li>  查找所有用户 (MybatisTest测试类中)</li>
</ol>
</blockquote>
<p>配置：（接口的xml配置文件的mapper标签内）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//     id=&quot;findAll&quot; 为接口的方法名</span><br><span class="line">// 	   resultType=&quot;com.cyw.entity.User&quot;  为结果实体类的全类名</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.cyw.entity.User&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatisdemo.user;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>执行：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession sqlSession = SqlSessionUtil.getSqlSession();</span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    List&lt;User&gt; users = mapper.findAll();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sqlSession.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<blockquote>
<ol start="2">
<li>  查找单个用户</li>
</ol>
</blockquote>
<p>配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//     id=&quot;findUserById&quot; 为接口的方法名</span><br><span class="line">// 	   resultType=&quot;com.cyw.entity.User&quot;  为结果实体类的全类名 </span><br><span class="line">// 	   parameterType=&quot;int&quot; 为方法调用时，所需传入的参数的类型</span><br><span class="line">//	   #&#123;传入的参数，即：实体类的属性&#125;  为占位符</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.cyw.entity.User&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatisdemo.user where id=#&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>执行：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findUserById</span><span class="params">()</span></span>&#123;</span><br><span class="line">      </span><br><span class="line">      SqlSession sqlSession = SqlSessionUtil.getSqlSession();</span><br><span class="line">      </span><br><span class="line">      UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 查找 id为42的人</span></span><br><span class="line">      User user = mapper.findUserById(<span class="number">42</span>);</span><br><span class="line">      </span><br><span class="line">      System.out.println(user);</span><br><span class="line">      </span><br><span class="line">      sqlSession.close();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>



<blockquote>
<ol start="3">
<li>  删除用户</li>
</ol>
</blockquote>
<p>配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;delUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">    delete from  mybatisdemo.user where id=#&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>执行：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession sqlSession = SqlSessionUtil.getSqlSession();</span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    mapper.delUser(<span class="number">41</span>);</span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<blockquote>
<ol start="4">
<li>  更新用户</li>
</ol>
</blockquote>
<p>配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.cyw.entity.User&quot;</span> &gt;</span></span><br><span class="line">        update  mybatisdemo.user set username = #&#123;username&#125;,birthday = #&#123;birthday&#125;,sex = #&#123;sex&#125;,address = #&#123;address&#125; where id=#&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>执行：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession sqlSession = SqlSessionUtil.getSqlSession();</span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    mapper.updateUser(<span class="keyword">new</span> User(<span class="number">50</span>,<span class="string">&quot;张三&quot;</span>,<span class="keyword">new</span> Date(<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>),<span class="string">&quot;男&quot;</span>,<span class="string">&quot;石家庄&quot;</span>));</span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<hr>
<h3 id="4-2-SqlMapConfig-xml-的常用参数："><a href="#4-2-SqlMapConfig-xml-的常用参数：" class="headerlink" title="4.2  SqlMapConfig.xml 的常用参数："></a>4.2  SqlMapConfig.xml 的常用参数：</h3><blockquote>
<ol>
<li>  数据库连接信息：</li>
</ol>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">// 1. SqlMapConfig 中,property可以定义在外部的properties文件中，</span><br><span class="line">// 	  然后通过SqlMapConfig配置文件的properties标签的resource属性引入。</span><br><span class="line">// 2. 也可以直接将property写在properties标签内。</span><br><span class="line">// 注意：当既有外部的properties、又有内部的properties时，优先使用外部的属性配置。</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;com/cyw/db.properties&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;cyw&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;psw&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<blockquote>
<ol start="2">
<li>  结果集类取<strong>别名</strong>：</li>
</ol>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">// 指定全类名的别名（取在在具体的类上，可以自定义别名）</span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        // 给1个类取别名</span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.cyw.entity.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;User&quot;</span>/&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 指定全类名的别名（取在在具体的包上，不能自定义别名，只能是非限定类名，想自定义则必须配合注解使用）</span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        // 给1个包取别名，然后在javabean的定义上使用注解：@Alias(&quot;user&quot;)</span><br><span class="line">       <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.cyw.entity&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<blockquote>
<ol start="3">
<li>  数据库的连接环境</li>
</ol>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">// environments标签的 default属性 指定的是 内部environment标签的id</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatisdemo&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    	<span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatisdemo&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure>






<p>在上面的案例中，Mybatis在使用代理dao时，只干了2件事：</p>
<blockquote>
<ul>
<li>  创建代理对象（getMapper方法获取的dao）</li>
<li>  利用代理对象来调用 接口的方法</li>
</ul>
</blockquote>
<p>小结：</p>
<ul>
<li>  代理对象调用接口的方法（传入参数）=》接口的定义 =》接口的 xml 配置文件</li>
</ul>
<hr>
<h2 id="5、Mybatis-参数和返回值"><a href="#5、Mybatis-参数和返回值" class="headerlink" title="5、Mybatis 参数和返回值"></a>5、Mybatis 参数和返回值</h2><hr>
<h2 id="6、Mybatis的dao操作"><a href="#6、Mybatis的dao操作" class="headerlink" title="6、Mybatis的dao操作"></a>6、Mybatis的dao操作</h2><hr>
<h2 id="7、Mybatis的配置细节"><a href="#7、Mybatis的配置细节" class="headerlink" title="7、Mybatis的配置细节"></a>7、Mybatis的配置细节</h2><hr>
<h2 id="8、Mybatis连接池"><a href="#8、Mybatis连接池" class="headerlink" title="8、Mybatis连接池"></a>8、Mybatis连接池</h2><hr>
<h2 id="9、Mybatis事务控制"><a href="#9、Mybatis事务控制" class="headerlink" title="9、Mybatis事务控制"></a>9、Mybatis事务控制</h2><hr>
<h2 id="10、Mybatis多表查询"><a href="#10、Mybatis多表查询" class="headerlink" title="10、Mybatis多表查询"></a>10、Mybatis多表查询</h2><hr>
<h2 id="11、Mybaiis的加载机制"><a href="#11、Mybaiis的加载机制" class="headerlink" title="11、Mybaiis的加载机制"></a>11、Mybaiis的加载机制</h2><hr>
<h2 id="12、Mybaiis的缓存"><a href="#12、Mybaiis的缓存" class="headerlink" title="12、Mybaiis的缓存"></a>12、Mybaiis的缓存</h2><hr>
<h2 id="13、Mybaiis的注解开发"><a href="#13、Mybaiis的注解开发" class="headerlink" title="13、Mybaiis的注解开发"></a>13、Mybaiis的注解开发</h2>]]></content>
      <categories>
        <category>后端</category>
        <category>Java</category>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx-入门</title>
    <url>/2021/08/04/Nginx-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Nginx-基础"><a href="#Nginx-基础" class="headerlink" title="Nginx-基础"></a>Nginx-基础</h1><p>[toc]</p>
<h2 id="0-教程"><a href="#0-教程" class="headerlink" title="0. 教程"></a>0. 教程</h2><ul>
<li>  <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=2">b站-Nginx通俗视频教程</a></li>
</ul>
<h2 id="1-Nginx的相关概念"><a href="#1-Nginx的相关概念" class="headerlink" title="1. Nginx的相关概念"></a>1. Nginx的相关概念</h2><ul>
<li><strong>正向代理：</strong> 隐藏客户机。利用正向代理服务器的 ip 访问服务器的数据【fan墙】</li>
<li><strong>反向代理：</strong> 隐藏服务器。利用反向代理服务器的ip，将服务端的数据传给客户机【服务器的负载分担】</li>
<li><strong>动静分离：</strong> 准备若干台服务器，一部分服务器专门存放<strong>静态资源</strong>(html+css+js+img等)，另一部分服务器存放<strong>动态的资源</strong>。</li>
</ul>
<h2 id="2-Nginx的安装-启动"><a href="#2-Nginx的安装-启动" class="headerlink" title="2. Nginx的安装+启动"></a>2. Nginx的安装+启动</h2><ol>
<li> ssh 连接到 Linux（以下以centos为例）</li>
<li>下载依赖、nginx： openssl + pcre + zlib +nginx</li>
<li>安装完后，nginx的根目录为：<code>/usr/local/nginx/</code></li>
</ol>
<ul>
<li>  安装 openssl +zlib：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel</span><br></pre></td></tr></table></figure>



<ul>
<li>  安装pcre:    </li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下载最新版本的，注意不要用pcre2</span></span><br><span class="line">wget https://jaist.dl.sourceforge.net/project/pcre/pcre/8.42/pcre-8.42.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">tar -xvf pcre-8.42.tar.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> pcre-8.42 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装编译</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看pcre版本</span></span><br><span class="line">pcre-config --version</span><br></pre></td></tr></table></figure>


<ul>
<li>  下载 + 安装 + 启动 Nginx:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://nginx.org/download/nginx-1.15.9.tar.gz</span><br><span class="line"></span><br><span class="line">tar -xvf nginx-1.15.9.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> nginx-1.15.9</span><br><span class="line"></span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装后的nginx在：</span></span><br><span class="line">/usr/<span class="built_in">local</span>/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx的启动脚本：</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/sbin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 nginx</span></span><br><span class="line">./nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看nginx是否启动成功：</span></span><br><span class="line">ps -ef | grep nginx</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

















<h2 id="3-Nginx常用命令"><a href="#3-Nginx常用命令" class="headerlink" title="3. Nginx常用命令"></a>3. Nginx常用命令</h2><p> <strong>Nginx命令：</strong> 所有nginx命令都必须在 <code>/usr/local/nginx/conf</code> 目录下进行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># nginx配置文件的位置,所有nginx命令都必须在此目录下进行</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 查看nginx版本号</span></span><br><span class="line">./nginx -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 启动nginx</span></span><br><span class="line">./nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 关闭nginx</span></span><br><span class="line">./nginx -s stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 重启nginx</span></span><br><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure>



















<h2 id="4-配置Nginx"><a href="#4-配置Nginx" class="headerlink" title="4. 配置Nginx"></a>4. 配置Nginx</h2><ol>
<li><p>开放防火墙(可选,在虚拟机中 |  ecs中开放安全组的相关端口)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看防火墙的端口</span></span><br><span class="line">firewall-cmd --list-all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加端口</span></span><br><span class="line">sudo firewall-cmd --add-port=8001-tcp --permanent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启防火墙</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p><strong>Nginx的配置文件</strong> 的位置: <code>/usr/local/nginx/conf/nginx.conf</code></p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/conf</span><br><span class="line"></span><br><span class="line">vim ./nginx.conf</span><br></pre></td></tr></table></figure>
<p>Nginx的配置文件的3部分组成【每个层次都有1个全局块】：</p>
<ul>
<li><p><strong>全局块：</strong> 最外面1层的内容，影响<strong>全局运行配置</strong></p>
<blockquote>
<p>例如：<br>worker_processes  1;    // nginx处理的并发数，越大越多</p>
</blockquote>
</li>
<li><p><strong>events块：</strong> 影响网络连接</p>
<blockquote>
<p>worker_connections  1024;    //最大连接数</p>
</blockquote>
</li>
<li><p><strong>http块：</strong> 最频繁操作的部分，<strong>代理+缓存+日志</strong>等内容</p>
<ul>
<li>http全局块：文件引入+MIME类型+超时+日志+单次请求数上限</li>
<li>server块：虚拟主机相关<ul>
<li>全局server：</li>
<li>location server：</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="5-案例1：反向代理的配置1"><a href="#5-案例1：反向代理的配置1" class="headerlink" title="5. 案例1：反向代理的配置1"></a>5. 案例1：反向代理的配置1</h2><p><strong>效果：</strong> </p>
<blockquote>
<p>浏览器访问Nginx的域名时，跳转到 Tomcat 的页面</p>
</blockquote>
<h3 id="5-1-步骤一：安装Tomcat"><a href="#5-1-步骤一：安装Tomcat" class="headerlink" title="5.1 步骤一：安装Tomcat"></a>5.1 步骤一：安装Tomcat</h3><p><a href="https://blog.csdn.net/zhaoyanjun6/article/details/79131856">tomcat的安装</a></p>
<ol>
<li>安装tomcat,使用其默认的8080端口：<code>yum -y install tomcat</code>,</li>
<li>安装目录在 ：<code>/usr/share/tomcat</code>，</li>
<li>查看tomcat的状态：<code>systemctl status tomcat</code>，</li>
<li>启动Tomcat：<code>systemctl start tomcat</code>，</li>
<li>安装tomcat的web界面：<code>cd webapps/</code> + <code>yum install -y tomcat-webapps tomcat-admin-webapps</code></li>
<li>tomcat 的其他命令：<blockquote>
<p>关闭：systemctl stop tomcat<br>重启：systemctl restart tomcat<br>开机启动：systemctl enable tomcat</p>
<p><strong>注意：</strong> 要开放防火墙的8080端口【ecs则要配置安全组的8080端口】</p>
</blockquote>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开放端口</span></span><br><span class="line">firewall-cmd   --add-port=8080/tcp   --permanent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启防火墙</span></span><br><span class="line">firewall-cmd   --reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看端口开放情况</span></span><br><span class="line">firewall-cmd   --list-all</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="5-2-步骤二：配置Nginx反向代理"><a href="#5-2-步骤二：配置Nginx反向代理" class="headerlink" title="5.2 步骤二：配置Nginx反向代理"></a>5.2 步骤二：配置Nginx反向代理</h3><ol>
<li>域名解析：<blockquote>
<p>为了实现<strong>访问 nginx的域名 =》tomcat</strong>。因为目前<strong>手上没域名</strong>，使用我们需要先修改本地Windows的<strong>hosts文件</strong>，来实现域名的ip的映射。<br><code>C:\Windows\System32\drivers\etc\hosts</code></p>
</blockquote>
</li>
<li>配置Nginx的请求转发</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/conf</span><br><span class="line"></span><br><span class="line">vim ./nginx.conf</span><br></pre></td></tr></table></figure>
<blockquote>
<p>找到 <code>server</code>下的<code>server_name</code>,将后面的localhost改为 nginx的 ip地址<br>将 <code>location</code> 的大括号内,添加<code>proxy_pass http://127.0.0.1:8080;</code><br>保存：<code>:wq</code><br>3. 重启nginx,使得配置生效：</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/sbin</span><br><span class="line"></span><br><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure>



















<h2 id="6-案例2：反向代理的配置2"><a href="#6-案例2：反向代理的配置2" class="headerlink" title="6. 案例2：反向代理的配置2"></a>6. 案例2：反向代理的配置2</h2><p><strong>效果：</strong> </p>
<blockquote>
<p>浏览器访问 <strong>Nginx</strong> 的域名时【监听9001】，根据域名后的<strong>路径不同</strong>，跳转<strong>不同的页面</strong>【遇到edu=&gt;跳到8080的服务器；遇到vod=&gt;跳到8081的服务器】</p>
</blockquote>
<h3 id="6-1-准备"><a href="#6-1-准备" class="headerlink" title="6.1 准备"></a>6.1 准备</h3><p>准备两个tomcat服务器,1个开放8080，一个开放8081</p>
<h3 id="6-2-创建测试页面"><a href="#6-2-创建测试页面" class="headerlink" title="6.2 创建测试页面"></a>6.2 创建测试页面</h3><p>在两台服务器的 tomcat 的安装目录下的 webapps内分别创建文件夹：</p>
<ul>
<li>edu：a.html</li>
<li>vod：b.html</li>
</ul>
<h3 id="6-3-配置Nginx反向代理"><a href="#6-3-配置Nginx反向代理" class="headerlink" title="6.3 配置Nginx反向代理"></a>6.3 配置Nginx反向代理</h3><ol>
<li><p>开放 9001，8080，8081端口</p>
</li>
<li><p>打开配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/conf</span><br><span class="line"></span><br><span class="line">vim ./nginx.conf</span><br></pre></td></tr></table></figure></li>
<li><p>修改 nginx.conf</p>
<ul>
<li>将原来 被注释的server及其内部 取消注释，将监听的端口改为9001</li>
<li>server_name 后面的对应项改为 ip地址</li>
<li>将location复制1份，粘贴<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">	listen       9001;	<span class="comment">#监听9001端口</span></span><br><span class="line">	</span><br><span class="line">	server_name  相应的ip地址;</span><br><span class="line">	</span><br><span class="line">	location ~ /edu/ &#123;	<span class="comment"># 遇见/edu路径，转发到8080端口</span></span><br><span class="line">		proxy_pass http:127.0.0.1:8080;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	location ~ /vod/ &#123;	<span class="comment"># 遇见/vod路径，转发到8081端口</span></span><br><span class="line">		proxy_pass http:127.0.0.1:8081;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>注意：</strong><br>location后，大括号前的为正则表达式，用于匹配路径。<br>主要有以下几项：</p>
<ul>
<li>~   表示 区分大小写的正则表达式</li>
<li>~* 表示 不区分大小写的正则表达式</li>
<li>=   表示严格匹配</li>
</ul>
</blockquote>
</li>
</ul>
</li>
<li><p>重启nginx【<code>/usr/local/nginx/sbin</code>】：<code>./nginx -s reload</code></p>
</li>
</ol>
<h2 id="7-案例3：负载均衡"><a href="#7-案例3：负载均衡" class="headerlink" title="7. 案例3：负载均衡"></a>7. 案例3：负载均衡</h2><h3 id="7-1-负载均衡的概念："><a href="#7-1-负载均衡的概念：" class="headerlink" title="7.1 负载均衡的概念："></a>7.1 负载均衡的概念：</h3><blockquote>
<p>  通过 增加1台 负载均衡服务器，由 <code>负载均衡服务器</code> 将 <code>客户端的请求</code> 分发到<code>多台服务器</code>中</p>
</blockquote>
<h3 id="7-2-效果："><a href="#7-2-效果：" class="headerlink" title="7.2 效果："></a>7.2 效果：</h3><blockquote>
<p>  在浏览器的地址栏，输入：<code>http://ip地址/edu/a.html</code> ,负载均衡后，平均请求到8080、8081两个端口。</p>
<p>  即：将<code>http://ip地址:80/edu/a.html</code>的请求，</p>
<p>  ​    =&gt; 转发到<code>http://ip地址:8080/edu/a.html</code></p>
<p>  ​    =&gt; 转发到<code>http://ip地址:8081/edu/a.html</code></p>
</blockquote>
<h3 id="7-3-准备工作："><a href="#7-3-准备工作：" class="headerlink" title="7.3 准备工作："></a>7.3 准备工作：</h3><blockquote>
<ul>
<li>  准备<code>2台Tomcat</code>服务器，1台监听<code>8080</code>，另一台监听<code>8081</code></li>
<li>  在2台Tomcat的 <code>WebApps目录</code>中，创建edu文件夹，并放入测试的 a.html【利用XFTP工具远程上传】</li>
<li>  启动2台Tomcat</li>
</ul>
</blockquote>
<h3 id="7-4-步骤："><a href="#7-4-步骤：" class="headerlink" title="7.4 步骤："></a>7.4 步骤：</h3><ul>
<li>  在Nginx的<code>配置文件</code>中，<code>http块</code>内，配置以下的相关内容</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 新增项，(配置：分配策略)表示要转发到哪两个服务器【要点】</span><br><span class="line">   upstream myserver&#123;</span><br><span class="line">     ip_hash;	// ip_hash策略</span><br><span class="line">     server 123.60.25.23:8080 weight=1;	 // weight =1是默认值，值越大，分配到的请求越多</span><br><span class="line">     server 123.60.25.23:8081 weight=1;</span><br><span class="line">     fair;	// 第三方的分配策略</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">            </span><br><span class="line">// 新增项，【要点】</span><br><span class="line">            proxy_pass http://myserver;</span><br><span class="line">            proxy_connect_timeout 10;</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>







<h3 id="7-5-Nginx负载均衡的分配策略："><a href="#7-5-Nginx负载均衡的分配策略：" class="headerlink" title="7.5 Nginx负载均衡的分配策略："></a>7.5 Nginx负载均衡的分配策略：</h3><ul>
<li>  <code>轮询</code> -（<strong>默认的策略</strong>）:【按照时间逐一分配，若服务器down掉，自动剔除。】</li>
<li>  <code>weight权重</code>：默认1，数字越高表示分配的请求越多。</li>
<li>  <code>ip_hash</code>：根据请求的IP地址的 hash值来决定分配的服务器，该策略可以保证某个客户端每次请求都分配同一个服务器，解决了Session的问题。</li>
<li>  fair：【第三方的策略】按照响应时间来分配，响应快的优先。</li>
</ul>
<p>注意：当轮询几率相同时，weight权重 与 访问率 成正比。适用于后端服务器性能不一的情况。</p>
]]></content>
      <categories>
        <category>后端</category>
        <category>服务器</category>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Node.js-入门笔记</title>
    <url>/2021/08/04/NodeJS-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Node-js-入门笔记"><a href="#Node-js-入门笔记" class="headerlink" title="Node.js-入门笔记"></a>Node.js-入门笔记</h1><p>[toc]</p>
<h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><p>安装教程：<code>https://www.runoob.com/nodejs/nodejs-install-setup.html</code><br>【以windows为例：】</p>
<ol>
<li><p>【直接下载 .exe文件,然后配置环境变量】<br><a href="https://nodejs.org/dist/">下载地址：</a><br><code>https://nodejs.org/dist/</code></p>
</li>
<li><p>【下载 .msi安装包，配置环境变量】<br><a href="https://nodejs.org/en/download/">下载地址：</a><br><code>https://nodejs.org/en/download/</code></p>
</li>
</ol>
<p>安装完毕后，打开 cmd ，检查 node.js 版本</p>
<h2 id="二、Node-js-基础"><a href="#二、Node-js-基础" class="headerlink" title="二、Node.js 基础"></a>二、Node.js 基础</h2><h3 id="2-1-Node-js-的两种模式"><a href="#2-1-Node-js-的两种模式" class="headerlink" title="2.1 Node.js 的两种模式"></a>2.1 Node.js 的两种模式</h3><ul>
<li><code>脚本模式</code>：先写代码，保存为<code>xxx.js</code>后，使用 node 运行</li>
<li><code>交换模式</code>：实时运行 REPL【类似 python的 <code>IDLE</code>】，cmd中输入 <code>node</code></li>
</ul>
<h3 id="2-2-Node应用程序的组成部分"><a href="#2-2-Node应用程序的组成部分" class="headerlink" title="2.2 Node应用程序的组成部分"></a>2.2 Node应用程序的组成部分</h3><ol>
<li>引入 required 模块：我们可以使用 require 指令来载入 Node.js 模块。</li>
<li>创建服务器：服务器可以监听客户端的请求，类似于 Apache 、Nginx 等 HTTP 服务器。</li>
<li>接收请求与响应请求 服务器很容易创建，客户端可以使用浏览器或终端发送 HTTP 请求，服务器接收请求后返回响应数据。</li>
</ol>
<h3 id="实例1："><a href="#实例1：" class="headerlink" title="实例1："></a>实例1：</h3><ol>
<li>保存下列代码为 <code>1.js</code></li>
<li>cmd中进入该文件所在目录，输入<code>node 1.js</code> 【1.js为文件名】</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># 请求node自带的http服务，并赋给变量http_s</span><br><span class="line">	<span class="keyword">var</span> http_s = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"></span><br><span class="line">#  创建服务，并使用回调函数</span><br><span class="line">	http_s.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">request,response</span>)</span>&#123;</span><br><span class="line">	</span><br><span class="line">		#  在浏览器中显示</span><br><span class="line">		response.writeHead(<span class="number">200</span>,&#123;<span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;text/plain&quot;</span>&#125;);</span><br><span class="line">		response.end(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line"></span><br><span class="line">	&#125;).listen(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line">#  在node后端显示</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">&#x27;Server running at http://127.0.0.1:8888/&#x27;</span>);</span><br></pre></td></tr></table></figure>
<img src="NodeJS-入门笔记/2Q6yQ0.png" alt="2Q6yQ0.png" border="0" />
![2](https://z3.ax1x.com/2021/06/02/2Q64Y9.png)

<p>小结：</p>
<blockquote>
<p>  实例1-要点：</p>
<ul>
<li>引入 <code>http</code>模块</li>
<li>使用<code>http</code>模块的 <code>createServser( ).listen(端口号)</code></li>
</ul>
</blockquote>
<h3 id="2-3-NPM-包管理器"><a href="#2-3-NPM-包管理器" class="headerlink" title="2.3  NPM 包管理器"></a>2.3  NPM 包管理器</h3><p>注意：【一般用<code> 淘宝的cnpm</code>代替 npm 】</p>
<p>下载 NPM【使用淘宝镜像】:<br><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p>
<h4 id="2-3-1-NPM-安装服务器上的程序："><a href="#2-3-1-NPM-安装服务器上的程序：" class="headerlink" title="2.3.1 NPM 安装服务器上的程序："></a>2.3.1 NPM 安装服务器上的程序：</h4><p>语法：<code>npm install 模块名</code><br>例如：<code>npm install express</code>   </p>
<ul>
<li>安装node中的web框架-express，</li>
<li>下载到了工程目录的node_modules 目录下，</li>
<li>因此，无需指定路径，</li>
<li>可以直接引用<code>var express = require(&#39;express&#39;);</code></li>
</ul>
<h4 id="2-3-2-全局安装-和-本地安装"><a href="#2-3-2-全局安装-和-本地安装" class="headerlink" title="2.3.2 全局安装  和  本地安装"></a>2.3.2 全局安装  和  本地安装</h4><ul>
<li>全局安装 ：<ul>
<li><code>npm install express          # 本地安装</code></li>
<li>安装包放在 ./node_modules 下（运行 npm 命令时所在的目录）</li>
<li>通过 require() 来引入</li>
</ul>
</li>
<li>本地安装 ：<ul>
<li><code>npm install express -g   # 全局安装</code></li>
<li>安装包放在 /usr/local 下或者你 node 的安装目录</li>
<li> 可直接在命令行里使用</li>
</ul>
</li>
</ul>
<h5 id="1-列出-全局安装-的所有模块"><a href="#1-列出-全局安装-的所有模块" class="headerlink" title="1. 列出 全局安装 的所有模块"></a>1. 列出 全局安装 的所有模块</h5><p>cmd中直接输入<code>npm list -g</code>【不要在REPL中输入】</p>
<h5 id="2-列出-全局安装-的某个模块"><a href="#2-列出-全局安装-的某个模块" class="headerlink" title="2. 列出 全局安装 的某个模块"></a>2. 列出 全局安装 的某个模块</h5><p>cmd中直接输入<code>npm list 模块名</code></p>
<h5 id="3-package-json"><a href="#3-package-json" class="headerlink" title="3. package.json"></a>3. package.json</h5><p>package.json 位于模块的目录下，用于定义包的属性</p>
<h5 id="4-卸载、更新、搜索-模块"><a href="#4-卸载、更新、搜索-模块" class="headerlink" title="4. 卸载、更新、搜索  - 模块"></a>4. 卸载、更新、搜索  - 模块</h5><ul>
<li><code>npm uninstall 模块名</code></li>
<li><code>npm update 模块名</code></li>
<li><code>npm search 模块名</code></li>
</ul>
<h2 id="三、案例"><a href="#三、案例" class="headerlink" title="三、案例"></a>三、案例</h2><h3 id="3-1-基础"><a href="#3-1-基础" class="headerlink" title="3.1 基础"></a>3.1 基础</h3><p>Node.js是 1个 让 js运行在服务器端的开发平台。<br>在以前，js代码需要借助 HTML 才能运行。</p>
<ul>
<li>使用运行 js的指令【在命令行下】：<code>node ./abc.js</code>，然后在浏览器<code>127.0.0.1:3000</code></li>
<li>每次对js文件进行<strong>修改</strong>，就要<code>ctrl + c</code>,然后重新<code>node ./abc.js</code></li>
<li>通用模板：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 请求模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建服务</span></span><br><span class="line"><span class="keyword">const</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//设置字符集</span></span><br><span class="line">    res.setHeader(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;text/html;charset=UTF8&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    res.end(<span class="string">&quot;你好，世界~~!!&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//监听端口</span></span><br><span class="line">server.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>


<p><img src="https://z3.ax1x.com/2021/06/02/2QcSSI.png" alt="3"></p>
<h3 id="3-2-res-write-与-res-end-的区别："><a href="#3-2-res-write-与-res-end-的区别：" class="headerlink" title="3.2 res.write( )  与 res.end( ) 的区别："></a>3.2 res.write( )  与 res.end( ) 的区别：</h3><p>【都可输出html标签】<br>    - res.write( )： 普通的输出，在其后必须要有 res.end( )；不能输出非字符串<br>    - res.end( )：最后一次输出，只要遇到 res.end( )，即使后面有 res.write( )也不执行；不能输出非字符串</p>
<h3 id="3-3-前导-实例"><a href="#3-3-前导-实例" class="headerlink" title="3.3 前导-实例"></a>3.3 前导-实例</h3><p><img src="https://z3.ax1x.com/2021/06/02/2Qcl0U.png" alt="4"></p>
<p><img src="https://z3.ax1x.com/2021/06/02/2QcstH.png" alt="5"></p>
<h3 id="3-4-fs模块【异步读取本地文件】"><a href="#3-4-fs模块【异步读取本地文件】" class="headerlink" title="3.4 fs模块【异步读取本地文件】"></a>3.4 fs模块【异步读取本地文件】</h3><p><img src="https://z3.ax1x.com/2021/06/02/2Qc4HS.png" alt="6"></p>
<h3 id="实例1：读取文件"><a href="#实例1：读取文件" class="headerlink" title="实例1：读取文件"></a>实例1：读取文件</h3><p><img src="https://z3.ax1x.com/2021/06/02/2QcLj0.png" alt="7"></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建 http服务</span></span><br><span class="line"><span class="keyword">const</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置字符集</span></span><br><span class="line">    res.setHeader(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;text/html;charset=UTF8&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取本地文件</span></span><br><span class="line">    fs.readFile(<span class="string">&quot;./public/1.html&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//console.log(req.url);</span></span><br><span class="line">        <span class="comment">//如果地址栏的域名的后面的地址为 “/abc”,则输出读取的内容，否则输出提示</span></span><br><span class="line">        <span class="keyword">if</span>(req.url == <span class="string">&quot;/abc&quot;</span>)&#123;</span><br><span class="line">            res.end(data);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.end(<span class="string">&quot;无此页面！！&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;        </span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">3000</span>)</span><br></pre></td></tr></table></figure>








<h3 id="实例2：路由1"><a href="#实例2：路由1" class="headerlink" title="实例2：路由1"></a>实例2：路由1</h3><p>传统：路由即文件夹<br>node.js: 颠覆传统，通过路由读取文件，实现顶层路由设计<br><img src="https://z3.ax1x.com/2021/06/02/2QgCC9.png" alt="8"></p>
<h3 id="实例2：路由2-页面跳转"><a href="#实例2：路由2-页面跳转" class="headerlink" title="实例2：路由2-页面跳转"></a>实例2：路由2-页面跳转</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    res.setHeader(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;text/html;charset=UTF8&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取地址栏的地址</span></span><br><span class="line">    <span class="keyword">let</span> url = req.url</span><br><span class="line"></span><br><span class="line">    <span class="comment">//匹配地址：/user/字符串1/字符串2</span></span><br><span class="line">    <span class="keyword">let</span> arr = url.match(<span class="regexp">/\/user\/(.+)\/(.+)$/</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(arr);</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">if</span>(!arr)&#123;</span><br><span class="line">        res.end(<span class="string">&quot;&lt;h1&gt;无页面显示！！&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数据模拟</span></span><br><span class="line">        <span class="keyword">let</span> user = &#123;</span><br><span class="line">            <span class="string">&#x27;zy&#x27;</span>:<span class="string">&quot;张毅&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;wj&#x27;</span>:<span class="string">&quot;吴京&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;xs&#x27;</span>:<span class="string">&#x27;许嵩&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> list = &#123;</span><br><span class="line">            <span class="string">&quot;post&quot;</span>:<span class="string">&quot;文章&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ask&quot;</span>:<span class="string">&#x27;提问&#x27;</span>,</span><br><span class="line">            <span class="string">&quot;pic&quot;</span>:<span class="string">&quot;照片&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// arr[0]域名后的完整路径，arr[1]匹配的第一项，arr[1]匹配的第二项</span></span><br><span class="line">        <span class="keyword">let</span> item1 = arr[<span class="number">1</span>];  </span><br><span class="line">        <span class="keyword">let</span> item2 = arr[<span class="number">2</span>]; </span><br><span class="line">           </span><br><span class="line">		<span class="comment">//http://127.0.0.1:3000/user/wj/post</span></span><br><span class="line">        res.write(<span class="string">&quot;&lt;h1&gt;欢迎,&quot;</span>+user[item1]+<span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        res.write(<span class="string">&quot;&lt;h1&gt;&quot;</span>+list[item2]+<span class="string">&quot; 板块&lt;/h1&gt;&quot;</span>);    </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">3000</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>








<h3 id="实例3：路由-图片"><a href="#实例3：路由-图片" class="headerlink" title="实例3：路由-图片"></a>实例3：路由-图片</h3><p><img src="https://z3.ax1x.com/2021/06/02/2QgmUe.png" alt="9"></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    res.setHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html;charset=UTF8&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> url = req.url;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (url == <span class="string">&quot;/user/jj&quot;</span>) &#123;</span><br><span class="line">        fs.readFile(<span class="string">&quot;./public/1/jj.html&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">            res.end(data);</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(url == <span class="string">&quot;/user/jj/jj.jpg&quot;</span>)&#123;</span><br><span class="line">        res.setHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;image/jpg;&quot;</span>);</span><br><span class="line">        fs.readFile(<span class="string">&quot;./public/img/jj.jpg&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">            res.end(data)</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.end(<span class="string">&quot;&lt;h1&gt;无此页面&lt;/h1&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>








<h3 id="实例4：路由-页面-图片"><a href="#实例4：路由-页面-图片" class="headerlink" title="实例4：路由-页面+图片"></a>实例4：路由-页面+图片</h3><p><img src="https://z3.ax1x.com/2021/06/02/2Qg8Df.png" alt="10"></p>
<p><img src="https://z3.ax1x.com/2021/06/02/2QgtUg.png" alt="11"></p>
<p>当需要请求的资源很多时，可使用 node 的 express 模块来静态化1个文件夹，使得文件夹内的文件无需单独设置路由就可直接加载。</p>
<p><img src="https://z3.ax1x.com/2021/06/02/2Qg6VU.png" alt="12"></p>
<h3 id="3-5-模块"><a href="#3-5-模块" class="headerlink" title="3.5 模块"></a>3.5 模块</h3><ol>
<li>在 1个 HTML中引入多个 js 文件，则这些js文件共用1个宿主环境，公用作用域，所有的变量都属于 window对象</li>
<li>require( “模块名”)<br><img src="https://z3.ax1x.com/2021/06/02/2Qgg54.png" alt="13"></li>
<li>在Node中，所有的js文件的作用域都是隔离的【因为node没有window对象】，<br>为了使js文件可以向其他文件暴露出部分内容，可以使用 exports</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//模块文件</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>;</span><br><span class="line"><span class="built_in">exports</span>.a = a;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="built_in">require</span>(<span class="string">&quot;./1.1.5&quot;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(a);	<span class="comment">// a就是导入的模块的对象，好处是有自己的命名空间</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>









<h3 id="3-6-exports-和-module-exports-的区别："><a href="#3-6-exports-和-module-exports-的区别：" class="headerlink" title="3.6 exports 和 module.exports 的区别："></a>3.6 exports 和 module.exports 的区别：</h3><ul>
<li>exports 可以暴露模块的多个参数</li>
<li>module.exports 只暴露1个参数【通常为构造函数】</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">People</span>(<span class="params">name,age,sex</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">    <span class="built_in">this</span>.sex = sex</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//成员方法</span></span><br><span class="line">People.prototype.sayHello = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;我是&quot;</span>+<span class="built_in">this</span>.name+<span class="string">&quot;,今年&quot;</span>+<span class="built_in">this</span>.age+<span class="string">&quot;岁了，性别为&quot;</span>+<span class="built_in">this</span>.sex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//暴露构造方法</span></span><br><span class="line"><span class="built_in">module</span>.exports  = People</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> People = <span class="built_in">require</span>(<span class="string">&quot;./1.1.5&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> xiaoming  = <span class="keyword">new</span> People(<span class="string">&quot;小明&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>)</span><br><span class="line"></span><br><span class="line">xiaoming.sayHello();</span><br></pre></td></tr></table></figure>









<h3 id="3-7-导入模块"><a href="#3-7-导入模块" class="headerlink" title="3.7 导入模块"></a>3.7 导入模块</h3><p><img src="https://z3.ax1x.com/2021/06/02/2QgXRA.png" alt="14"></p>
<p><img src="https://z3.ax1x.com/2021/06/02/2Q2es0.png" alt="15"></p>
<h3 id="3-8-NPM"><a href="#3-8-NPM" class="headerlink" title="3.8 NPM"></a>3.8 NPM</h3><p><a href="https://www.npmjs.com/">npm社区</a><br><code>https://www.npmjs.com/</code></p>
<p>在社区中搜索关键字，查找模块，根据文档安装和使用模块</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install 模块名</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
        <category>基础</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Pythonn-OpenCV</title>
    <url>/2021/09/08/Python-OpenCV/</url>
    <content><![CDATA[<h1 id="Python-OpenCV"><a href="#Python-OpenCV" class="headerlink" title="Python-OpenCV"></a>Python-OpenCV</h1><p>[toc]</p>
<h2 id="0、资料"><a href="#0、资料" class="headerlink" title="0、资料"></a>0、资料</h2><ul>
<li>  <a href="https://www.bilibili.com/video/BV1tb4y1C7j7?p=1">openCV-唐宇迪</a>：<a href="https://www.bilibili.com/video/BV1tb4y1C7j7?p=1">https://www.bilibili.com/video/BV1tb4y1C7j7?p=1</a></li>
</ul>
<h2 id="1、OpenCV-环境的搭建"><a href="#1、OpenCV-环境的搭建" class="headerlink" title="1、OpenCV 环境的搭建"></a>1、OpenCV 环境的搭建</h2><blockquote>
<p>  环境：</p>
</blockquote>
<ul>
<li>  Python 3.6</li>
<li>  （Anaconda）Jupyter NoteBook</li>
<li>opencv-python（<code>pip install opencv-python==3.4.1.15</code>）【最新版有部分算法不开源】<ul>
<li>进入python的交互模式，检查是否安装opencv的库：<ul>
<li>  <code>import cv2</code></li>
<li>  <code>cv2.__version__</code></li>
<li>  <code>exit()</code></li>
</ul>
</li>
</ul>
</li>
<li>  opencv-contrib–python（<code>pip install opencv-contrib-python==3.4.1.15</code>）【版本需一致】</li>
</ul>
<blockquote>
<p>  启动 Jypyter NotaBook</p>
</blockquote>
<ul>
<li><p>  前提：安装完 Anaconda</p>
</li>
<li><p>  启动软件：cmd中输入 <code>jupyter notebook</code></p>
</li>
<li><p>打开界面：浏览器输入 <code>http://localhost:8888/</code></p>
</li>
</ul>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210906093522233.png" alt="image-20210906093522233"></p>
<blockquote>
<p>  新建 1个Python文件，运行（ <kbd>shift + Enter</kbd> ）</p>
</blockquote>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210906093821634.png" alt="image-20210906093821634"></p>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210906093935198.png" alt="image-20210906093935198"></p>
<blockquote>
<p>  上传文件</p>
</blockquote>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210906115334774.png" alt="image-20210906115334774"></p>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210906115411850.png" alt="image-20210906115411850"></p>
<h2 id="2、计算机眼中的图像"><a href="#2、计算机眼中的图像" class="headerlink" title="2、计算机眼中的图像"></a>2、计算机眼中的图像</h2><p>计算机中的<strong>图像</strong>是由<strong>像素</strong>构成的。</p>
<ul>
<li><p>  像素点：取值（表示亮度）为（0~255 ，其中 0 为黑色，255 为白色 ）。</p>
</li>
<li><p>  RGB：图像的颜色通道（3 通道）。</p>
</li>
<li><p>  黑白图：只有1个通道。</p>
</li>
</ul>
<h3 id="2-1-读取图像"><a href="#2-1-读取图像" class="headerlink" title="2.1 读取图像"></a>2.1 读取图像</h3><blockquote>
<p>  图像色彩：</p>
</blockquote>
<ul>
<li>  <code>cv2.IMREAD_COLOR</code>：彩色图像</li>
<li>  <code>cv2.IMREAD_GRAYSCALE</code>：灰色图像</li>
</ul>
<blockquote>
<p>  图像显示：</p>
</blockquote>
<ul>
<li>  <code>%matplotlib inline</code>：在 notebook 中直接展示图片，无需调用 <code> plt.show()</code></li>
</ul>
<blockquote>
<p>  图像 读、写</p>
</blockquote>
<ul>
<li>  读取：<code>cv2.imread(&quot;图片名&quot;)</code></li>
<li>  写入：<code>cv2.imwrite(&quot;图片名&quot;,已读取的图片)</code></li>
</ul>
<blockquote>
<p>  图片的常用属性</p>
</blockquote>
<ul>
<li>  底层格式：<code>type(img1)</code></li>
<li>  像素点的个数：<code>img.size</code></li>
<li>  数据类型：<code>img.dtype</code></li>
</ul>
<blockquote>
<p>  模板：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="comment"># 默认读取的是BGR（而不是 RGB）</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line">img1 = cv2.imread(<span class="string">&quot;cat.jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到图像的矩阵（三维数组）</span></span><br><span class="line"><span class="comment">## 三维数组一般用：[h,w,c] 来表示</span></span><br><span class="line"><span class="built_in">print</span>(img1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&quot;窗口标题&quot;</span>,img1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># （等待的毫秒数），0表示按任意键停止等待</span></span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭窗口</span></span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>





<blockquote>
<p>  读取图片-案例：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line">img1 = cv2.imread(<span class="string">&quot;1.jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&quot;pic-1&quot;</span>,img1)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>





<blockquote>
<p>  将读取图片的代码封装为函数</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myCV_show</span>(<span class="params">win_name,imgName</span>):</span></span><br><span class="line">    img = cv2.imread(imgName)</span><br><span class="line">    cv2.imshow(win_name,img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line">myCV_show(<span class="string">&quot;pic-2&quot;</span>,<span class="string">&quot;1.jpg&quot;</span>)</span><br></pre></td></tr></table></figure>





<blockquote>
<p>  读取灰度图</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myCV_show</span>(<span class="params">win_name,imgName</span>):</span></span><br><span class="line">    <span class="comment"># 指定参数：灰度图（只有1个通道，打印形状也只有[h,w]）</span></span><br><span class="line">    img = cv2.imread(imgName,cv2.IMREAD_GRAYSCALE)    </span><br><span class="line">    <span class="comment"># 打印形状</span></span><br><span class="line">    <span class="built_in">print</span>(img.shape)</span><br><span class="line">    cv2.imshow(win_name,img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>





<blockquote>
<p>  写入灰度图</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot  <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">&quot;1.jpg&quot;</span>,cv2.IMREAD_GRAYSCALE)</span><br><span class="line">cv2.imshow(<span class="string">&quot;pic-4&quot;</span>,img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br><span class="line">cv2.imwrite(<span class="string">&quot;2.jpg&quot;</span>,img)</span><br></pre></td></tr></table></figure>







<h3 id="2-2-读取视频"><a href="#2-2-读取视频" class="headerlink" title="2.2 读取视频"></a>2.2 读取视频</h3><ul>
<li>  <code>cv2.videoCapture(&quot;视频名&quot;)</code></li>
</ul>
<blockquote>
<p>  模板</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot  <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vc = cv2.VideoCapture(<span class="string">&quot;1.mp4&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># open：是否 打开成功</span></span><br><span class="line"><span class="comment"># frame: 当前这一帧图像</span></span><br><span class="line"><span class="keyword">if</span> vc.isOpened:</span><br><span class="line">    <span class="built_in">open</span>,frame = vc.read()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">open</span> = <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#打开成功，则不断遍历每一帧,处理每一帧</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">open</span>:</span><br><span class="line">    isopen,frame = vc.read()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> frame <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span> isopen == <span class="literal">True</span>:</span><br><span class="line">        gray = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)</span><br><span class="line">        cv2.imshow(<span class="string">&quot;res-Pic&quot;</span>,gray)	<span class="comment"># 展示灰度视频</span></span><br><span class="line">        cv2.imshow(<span class="string">&quot;res-Pic&quot;</span>,frame) <span class="comment"># 展示正常有颜色的视频</span></span><br><span class="line">        <span class="comment"># 10：代表 每一帧处理完后等待10秒</span></span><br><span class="line">        <span class="comment"># 27：代表 键盘上的 esc 键，退出</span></span><br><span class="line">        <span class="keyword">if</span> cv2.waitKey(<span class="number">10</span>) &amp; <span class="number">0xFF</span>==<span class="number">27</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">vc.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>





<h3 id="2-3-ROI-截取图像"><a href="#2-3-ROI-截取图像" class="headerlink" title="2.3 ROI 截取图像"></a>2.3 ROI 截取图像</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot  <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">&quot;1.jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line">res_img = img[<span class="number">100</span>:<span class="number">200</span>,<span class="number">100</span>:<span class="number">200</span>]</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&quot;pic-1&quot;</span>,res_img)</span><br><span class="line"></span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">cv2.destroyAllWindows()</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="2-4-提取、合并颜色通道-BGR"><a href="#2-4-提取、合并颜色通道-BGR" class="headerlink" title="2.4 提取、合并颜色通道 BGR"></a>2.4 提取、合并颜色通道 BGR</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot  <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line">img1 = cv2.imread(<span class="string">&quot;1.jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分离通道</span></span><br><span class="line">b,g,r = cv2.split(img1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并通道</span></span><br><span class="line">img2 = cv2.merge((b,g,r))</span><br></pre></td></tr></table></figure>







<blockquote>
<p>  只保留一个通道</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot  <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">img  = cv2.imread(<span class="string">&quot;1.jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># BGR 三个通道中，只保留 B通道（下标0~2）</span></span><br><span class="line">img_1 = img.copy()</span><br><span class="line">img_1[:,:,<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line">img_1[:,:,<span class="number">2</span>] = <span class="number">0</span></span><br><span class="line">cv2.imshow(<span class="string">&quot;pic-B&quot;</span>,img_1)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># BGR 三个通道中，只保留 G通道（下标 0 ~ 2 代表3个通道）</span></span><br><span class="line">img_2 = img.copy()</span><br><span class="line">img_2[:,:,<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">img_2[:,:,<span class="number">2</span>] = <span class="number">0</span></span><br><span class="line">cv2.imshow(<span class="string">&quot;pic-G&quot;</span>,img_2)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># BGR 三个通道中，只保留 R通道（下标0~2）</span></span><br><span class="line">img_3 = img.copy()</span><br><span class="line">img_3[:,:,<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">img_3[:,:,<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line">cv2.imshow(<span class="string">&quot;pic-R&quot;</span>,img_3)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="2-5-边界填充"><a href="#2-5-边界填充" class="headerlink" title="2.5 边界填充"></a>2.5 边界填充</h3><ul>
<li><code>cv2.copyMakeBorder(图片,上填充,下填充,左填充,右填充,borderType=cv2.BORDER_REPLICATE)</code><ul>
<li><code>borderType</code>属性的取值：<ul>
<li>  <code>cv2.BORDER_REPLICATE </code>：replicate，复制边缘像素</li>
<li>  <code>cv2.BORDER_REPFLECT</code>：reflect，反射（可能有重复）</li>
<li>  <code>cv2.BORDER_REPFLECT_101</code>：reflect，反射（不重复）</li>
<li>  <code>cv2.BORDER_WRAP</code>：wrap，包裹边缘</li>
<li>  <code>BORDER_CONSTANT</code>：constant，配合value属性使用</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">&quot;1.jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 边界的填充大小都设为50px</span></span><br><span class="line">top_px,bottom_px,left_px,right_px =(<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制</span></span><br><span class="line">replicate = cv2.copyMakeBorder(img,top_px,bottom_px,left_px,right_px,borderType=cv2.BORDER_REPLICATE)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 反射</span></span><br><span class="line">reflect = cv2.copyMakeBorder(img,top_px,bottom_px,left_px,right_px,borderType=cv2.BORDER_REFLECT)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 反射</span></span><br><span class="line">reflect_101 = cv2.copyMakeBorder(img,top_px,bottom_px,left_px,right_px,borderType=cv2.BORDER_REFLECT_101)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 包裹</span></span><br><span class="line">warp = cv2.copyMakeBorder(img,top_px,bottom_px,left_px,right_px,borderType=cv2.BORDER_WRAP)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 常量</span></span><br><span class="line">constant = </span><br><span class="line">cv2.copyMakeBorder(img,top_px,bottom_px,left_px,right_px,borderType=cv2.BORDER_CONSTANT,value=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">231</span>),plt.imshow(img,<span class="string">&quot;gray&quot;</span>),plt.title(<span class="string">&quot;orignal&quot;</span>)</span><br><span class="line">plt.subplot(<span class="number">232</span>),plt.imshow(replicate,<span class="string">&quot;gray&quot;</span>),plt.title(<span class="string">&quot;replicate&quot;</span>)</span><br><span class="line">plt.subplot(<span class="number">233</span>),plt.imshow(reflect,<span class="string">&quot;gray&quot;</span>),plt.title(<span class="string">&quot;reflect&quot;</span>)</span><br><span class="line">plt.subplot(<span class="number">234</span>),plt.imshow(reflect_101,<span class="string">&quot;gray&quot;</span>),plt.title(<span class="string">&quot;reflect_101&quot;</span>)</span><br><span class="line">plt.subplot(<span class="number">235</span>),plt.imshow(warp,<span class="string">&quot;gray&quot;</span>),plt.title(<span class="string">&quot;warp&quot;</span>)</span><br><span class="line">plt.subplot(<span class="number">236</span>),plt.imshow(constant,<span class="string">&quot;gray&quot;</span>),plt.title(<span class="string">&quot;constant&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="2-6-图像融合"><a href="#2-6-图像融合" class="headerlink" title="2.6 图像融合"></a>2.6 图像融合</h3><p>将2张图片合为一张图片</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line">img1 = cv2.imread(<span class="string">&quot;1.jpg&quot;</span>)</span><br><span class="line">img2 = cv2.imread(<span class="string">&quot;2.jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># shape 的大小(1200,1000,3)</span></span><br><span class="line"><span class="built_in">print</span>(img1.shape)</span><br><span class="line"><span class="comment"># shape 的大小(1000,1000,3)</span></span><br><span class="line"><span class="built_in">print</span>(img2.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将所需融合的2张图片的大小更改为一致的大小【按固定大小更改】（高h，宽w）</span></span><br><span class="line">img3 = cv2.resize(img1,(<span class="number">1000</span>,<span class="number">1000</span>))</span><br><span class="line"><span class="comment"># 将所需融合的2张图片的大小更改为一致的大小【按高、宽的倍数更改】（高h，宽w）</span></span><br><span class="line"><span class="comment"># img4 = cv2.resize(img1,(0，0)，fx=3,fy=1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 融合图片（参数说明：0.4为img1的权重，0.6为img2的权重，0为提高亮度的偏移）</span></span><br><span class="line">res_img = cv2.addWeighted(img1,<span class="number">0.4</span>,img2,<span class="number">0.6</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示</span></span><br><span class="line">plt.imshow(res_img )</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="2-7-图像阈值"><a href="#2-7-图像阈值" class="headerlink" title="2.7 图像阈值"></a>2.7 图像阈值</h3><p><code>res,dst = cv2.threshold( 原单通道灰度图，阈值127，最大阈值255，类型)</code></p>
<p>参数-“类型”的取值（用于与==参数-最大阈值==结合起来使用）：</p>
<ul>
<li>  <code>cv2.THRESH_BINARY</code>：超过部分取才最大阈值，否则取0【亮的像素全白，暗的像素全黑】</li>
<li>  <code>cv2.THRESH_BINARY_INV</code>：反转【亮的像素全黑，暗的像素全白】</li>
<li>  <code>cv2.THRESH_TRUNC</code>：截断，亮度大于阈值的部分才设置，亮度小于的部分不变</li>
<li>  <code>cv2.THRESH_TOZERO</code>：大于阈值的部分不变，小于阈值的部分取0（小于阈值的部分，其像素为黑）</li>
<li>  <code>cv2.THRESH_TOZERO_INV</code>：反转（大于阈值的部分，其像素为黑）</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line">img2 = cv2.imread(<span class="string">&quot;2.jpg&quot;</span>,cv2.IMREAD_GRAYSCALE)</span><br><span class="line"></span><br><span class="line">threshold,img = cv2.threshold(img2,<span class="number">127</span>,<span class="number">255</span>,cv2.THRESH_BINARY)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(threshold)</span><br><span class="line"></span><br><span class="line">plt.imshow(img,<span class="string">&quot;gray&quot;</span>)</span><br></pre></td></tr></table></figure>







<h2 id="3、图像平滑处理"><a href="#3、图像平滑处理" class="headerlink" title="3、图像平滑处理"></a>3、图像平滑处理</h2><p>图像平滑处理 也就是对图像进行滤波操作。</p>
]]></content>
      <categories>
        <category>后端</category>
        <category>Python3</category>
      </categories>
      <tags>
        <tag>Python3</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3—笔记</title>
    <url>/2021/08/04/Python3%E2%80%94%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Python3—笔记"><a href="#Python3—笔记" class="headerlink" title="Python3—笔记"></a>Python3—笔记</h1><p>部分内容来自知乎和中国大学mooc</p>
<p>[toc]</p>
<h2 id="1-Python概述"><a href="#1-Python概述" class="headerlink" title="1. Python概述"></a>1. Python概述</h2><h3 id="1-1-代码编写方式："><a href="#1-1-代码编写方式：" class="headerlink" title="1.1 代码编写方式："></a>1.1 代码编写方式：</h3><ul>
<li>交互式</li>
<li>全部编辑好后运行</li>
</ul>
<h3 id="1-2-作用域"><a href="#1-2-作用域" class="headerlink" title="1.2 作用域"></a>1.2 作用域</h3><ul>
<li>默认使用 ‘缩进’ 来区分代码 属于哪部分</li>
</ul>
<h3 id="1-3-注释"><a href="#1-3-注释" class="headerlink" title="1.3 注释"></a>1.3 注释</h3><ul>
<li>单行 <kbd># 注释内容</kbd></li>
<li>多行 <kbd>&#39;'’  注释内容&#39;'’</kbd></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这是单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">	这是多行注释，实际上是一个字符串</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="1-4-输入——input"><a href="#1-4-输入——input" class="headerlink" title="1.4 输入——input()"></a>1.4 输入——input()</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 括号内为提示信息，输入的信息存储在变量 name 中</span></span><br><span class="line"><span class="comment">#注意：input（）输入的实际上是字符串，若要输入数字进行运算，可以使用强制转换  </span></span><br><span class="line">	name = <span class="built_in">input</span>(<span class="string">&#x27;请输入你的姓名&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制转换:</span></span><br><span class="line">	<span class="comment">#第1种方法（适用于所有类型）：    </span></span><br><span class="line">           age  = <span class="built_in">input</span>(<span class="string">&#x27;输入年龄&#x27;</span>)</span><br><span class="line">           newAge = <span class="built_in">int</span>(age)+<span class="number">1</span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">    <span class="comment">#第2种方法（适用于数值类型,eval()实际上是将字符串强行作为数字使用，相当于去掉引号）：    		</span></span><br><span class="line">          age  = <span class="built_in">input</span>(<span class="string">&#x27;输入年龄&#x27;</span>)</span><br><span class="line">          newAge = <span class="built_in">eval</span>(age)+<span class="number">1</span></span><br></pre></td></tr></table></figure>

<h3 id="1-5-输出——print"><a href="#1-5-输出——print" class="headerlink" title="1.5 输出——print()"></a>1.5 输出——print()</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#单个字符串</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#多个字符串，print()会依次打印每个字符串，遇到逗号“,”会输出一个空格</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The quick brown fox&#x27;</span>, <span class="string">&#x27;jumps over&#x27;</span>, <span class="string">&#x27;the lazy dog&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#输出 计算结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">100</span> + <span class="number">200</span>)</span><br></pre></td></tr></table></figure>
<h3 id="1-6-数据类型"><a href="#1-6-数据类型" class="headerlink" title="1.6 数据类型"></a>1.6 数据类型</h3><blockquote>
<p> <strong>注意：</strong>   <em>整数</em> 和 <em>浮点数</em> 在计算机内部存储的方式是不同的，<em>整数</em> 运算永远是精确的（除法也是精确的），而<em>浮点数</em> 运算则可能会有四舍五入的误差。</p>
</blockquote>
<h4 id="1-6-1-int"><a href="#1-6-1-int" class="headerlink" title="1.6.1 int"></a>1.6.1 int</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#十进制</span></span><br><span class="line">	<span class="number">123</span>，-<span class="number">123</span>，<span class="number">200</span></span><br><span class="line"><span class="comment">#十六进制  用0x前缀和0-9，a-f表示</span></span><br><span class="line">	<span class="number">0xff00</span>，<span class="number">0xa5b4c3d2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#对于很大的数，例如10000000000，很难数清楚0的个数。Python允许在数字中间以_分隔，因此，写成10_000_000_000和10000000000是完全一样的。十六进制数也可以写成0xa1b2_c3d4</span></span><br></pre></td></tr></table></figure>

<h4 id="1-6-2-float"><a href="#1-6-2-float" class="headerlink" title="1.6.2  float"></a>1.6.2  float</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#对于很大或很小的浮点数，就必须用科学计数法表示，把10用e替代，</span></span><br><span class="line">	<span class="number">1.23</span>x10^<span class="number">9</span>    就是   <span class="number">1.23e9</span>，</span><br><span class="line">    </span><br><span class="line">	<span class="number">12.3e8</span>  ，<span class="number">0.000012</span>   可以写成   <span class="number">1.2e-5</span></span><br></pre></td></tr></table></figure>
<h4 id="1-6-3-str"><a href="#1-6-3-str" class="headerlink" title="1.6.3  str"></a>1.6.3  str</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用单引号或者双引号包裹</span></span><br><span class="line">		<span class="string">&#x27;你好&#x27;</span></span><br><span class="line">    	<span class="string">&quot;你好&quot;</span></span><br><span class="line"><span class="comment"># 如果字符串内需要有单引号:外面用双引号</span></span><br><span class="line">		<span class="string">&quot; I&#x27;m a boy &quot;</span></span><br><span class="line"><span class="comment"># 如果字符串内需要有双引号:外面用单引号  </span></span><br><span class="line">		<span class="string">&#x27; I am a &quot;boy&quot; &#x27;</span></span><br><span class="line"><span class="comment">#  如果字符串内需要有 单引号和双引号 ：使用转移字符\</span></span><br><span class="line">		<span class="string">&#x27;  I\&#x27;m \&quot;OK\&quot;!   &#x27;</span>   表示 I<span class="string">&#x27;m &quot;OK&quot;!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#如果字符串很长，需要换行：使用三引号</span></span><br><span class="line"><span class="string">		print(&#x27;</span><span class="string">&#x27;&#x27;</span>line1</span><br><span class="line">		line2</span><br><span class="line">		line3<span class="string">&#x27;&#x27;&#x27;)</span></span><br></pre></td></tr></table></figure>
<h4 id="1-6-4-bool"><a href="#1-6-4-bool" class="headerlink" title="1.6.4  bool"></a>1.6.4  bool</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#布尔值只有True、False两种值,布尔值可以用and、or和not运算</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span> <span class="keyword">and</span> <span class="literal">True</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span> <span class="keyword">and</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">False</span> <span class="keyword">and</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">5</span> &gt; <span class="number">3</span> <span class="keyword">and</span> <span class="number">3</span> &gt; <span class="number">1</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<h4 id="1-6-5-None-空值"><a href="#1-6-5-None-空值" class="headerlink" title="1.6.5  None 空值"></a>1.6.5  None 空值</h4><h4 id="1-6-6-list-有序列表"><a href="#1-6-6-list-有序列表" class="headerlink" title="1.6.6  list (有序列表)"></a>1.6.6  list (有序列表)</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">list有以下几个特点：</span></span><br><span class="line"><span class="string">			查找和插入的时间随着元素的增加而增加；</span></span><br><span class="line"><span class="string">			占用空间小，浪费内存很少。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># list的格式（list中的元素的 数据类型 可以不同，甚至可以是1个list)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates = [<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用len() 获取list长度</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(classmates)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用index 访问list中的元素（index的范围为：0 ~ len-1  ），当索引超出了范围时，Python会报一个IndexError错误</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates[<span class="number">0</span>]</span><br><span class="line"><span class="string">&#x27;Michael&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># list 的最后一个元素的两种表示方法</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates[<span class="built_in">len</span>(classmates) - <span class="number">1</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">##############   插入相关的方法 ########################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 向list的末尾追加1个元素 append()</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.append(<span class="string">&#x27;Adam&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>, <span class="string">&#x27;Adam&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在指定位置前 插入1个元素</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.insert(<span class="number">1</span>, <span class="string">&#x27;Jack&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>, <span class="string">&#x27;Adam&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############   删除相关的方法 ########################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除 最后1个元素</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.pop()</span><br><span class="line"><span class="string">&#x27;Adam&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除 指定元素</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.pop(<span class="number">1</span>)</span><br><span class="line"><span class="string">&#x27;Jack&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############  替换相关的方法 ########################</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates[<span class="number">1</span>] = <span class="string">&#x27;Sarah&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Sarah&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br></pre></td></tr></table></figure>
<h4 id="1-6-7-tuple-元组"><a href="#1-6-7-tuple-元组" class="headerlink" title="1.6.7 tuple (元组)"></a>1.6.7 tuple (元组)</h4><blockquote>
<p> 一种内部元素不可更改的list ， 相较于 list 更安全</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">############# tuple 的定义 ###############</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个只有1个元素的tuple，</span></span><br><span class="line"><span class="comment"># 后面加逗号是为了避免被直接当成内部元素</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="number">1</span>,)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="number">1</span>,)</span><br></pre></td></tr></table></figure>
<h4 id="1-6-8-dict-字典"><a href="#1-6-8-dict-字典" class="headerlink" title="1.6.8  dict (字典)"></a>1.6.8  dict (字典)</h4><blockquote>
<p>字典： 内部为键值对，键 在该字典中必须唯一 ,字典是无序的</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">dict有以下几个特点：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		查找和插入的速度极快，不会随着key的增加而变慢；</span></span><br><span class="line"><span class="string">		需要占用大量的内存，内存浪费多。</span></span><br><span class="line"><span class="string">		key 不可变，因为用key查找value时，必须依靠key进行 hash运算</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############## dict的定义 ###############</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">&#x27;Michael&#x27;</span>: <span class="number">95</span>, <span class="string">&#x27;Bob&#x27;</span>: <span class="number">75</span>, <span class="string">&#x27;Tracy&#x27;</span>: <span class="number">85</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">&#x27;Michael&#x27;</span>]</span><br><span class="line"><span class="number">95</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 放入元素</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">&#x27;Adam&#x27;</span>] = <span class="number">67</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">&#x27;Adam&#x27;</span>]</span><br><span class="line"><span class="number">67</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取元素方法 get(键，当键不存在时的返回值【默认为None】)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.get(<span class="string">&#x27;Thomas&#x27;</span>)</span><br><span class="line"><span class="literal">None</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.get(<span class="string">&#x27;Thomas&#x27;</span>, -<span class="number">1</span>)</span><br><span class="line">-<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除某个键时，该键的值也会删除</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.pop(<span class="string">&#x27;Bob&#x27;</span>)</span><br><span class="line"><span class="number">75</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d</span><br><span class="line">&#123;<span class="string">&#x27;Michael&#x27;</span>: <span class="number">95</span>, <span class="string">&#x27;Tracy&#x27;</span>: <span class="number">85</span>&#125;</span><br></pre></td></tr></table></figure>
<h4 id="1-6-9-set-集合"><a href="#1-6-9-set-集合" class="headerlink" title="1.6.9  set  (集合)"></a>1.6.9  set  (集合)</h4><blockquote>
<p>集合类型 ： 要创建一个set，需要提供一个list作为输入集合， set是无序的， 重复元素在set中自动被过滤 ，与dict一样内部元素不可变</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="built_in">set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="built_in">set</span>([<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">############ 添加 set的元素 ########</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加set的元素 add( )</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.add(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.add(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除元素 remove( )</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.remove(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">########### 集合set 之间的运算  ########### </span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 = <span class="built_in">set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s2 = <span class="built_in">set</span>([<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 并集</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 &amp; s2</span><br><span class="line">&#123;<span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#交集</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 | s2</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-7-运算符"><a href="#1-7-运算符" class="headerlink" title="1.7 运算符"></a>1.7 运算符</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># +</span></span><br><span class="line">		a = <span class="number">1</span>+<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># - </span></span><br><span class="line">		a= <span class="number">3</span>-<span class="number">1</span>    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># *    </span></span><br><span class="line">		a= <span class="number">3</span>*<span class="number">2</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># / 除法结果一定是小数</span></span><br><span class="line">		a= <span class="number">2</span>/<span class="number">3</span>	<span class="comment"># 0.66666666</span></span><br><span class="line">    	b= <span class="number">6</span>/<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># // 整除</span></span><br><span class="line">		a= <span class="number">6</span>//<span class="number">5</span> <span class="comment"># 1</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># % 取余数    </span></span><br><span class="line">		a = <span class="number">7</span> % <span class="number">5</span>  <span class="comment"># 2</span></span><br></pre></td></tr></table></figure>
<h3 id="1-8-条件判断"><a href="#1-8-条件判断" class="headerlink" title="1.8 条件判断"></a>1.8 条件判断</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">if语句执行有个特点，它是从上往下判断，如果在某个判断上是True，把该判断对应的语句执行后，就忽略掉剩下的elif和else</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式</span></span><br><span class="line">age = <span class="number">3</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;adult&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt;= <span class="number">6</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;teenager&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;kid&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 简写，其中 x 只要为 非零数值、非空字符串、非空list等，就判断为True，否则为False</span></span><br><span class="line"><span class="keyword">if</span> x:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;True&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="1-9-循环"><a href="#1-9-循环" class="headerlink" title="1.9 循环"></a>1.9 循环</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#################  for 循环 ######################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># for...in 循环</span></span><br><span class="line">names = [<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    <span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># range（a,b）函数 的范围是[a,b) </span></span><br><span class="line"><span class="comment"># 例如：结果=5050   即：0-100</span></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">101</span>):</span><br><span class="line">    <span class="built_in">sum</span> = <span class="built_in">sum</span> + x</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################  while循环 ########################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在循环内部变量n不断自减，直到变为-1时，不再满足while条件，循环退出</span></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">n = <span class="number">99</span></span><br><span class="line"><span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">sum</span> = <span class="built_in">sum</span> + n</span><br><span class="line">    n = n - <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################### break关键字 #################### </span></span><br><span class="line">n = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> n &lt;= <span class="number">100</span>:</span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">10</span>: <span class="comment"># 当n = 11时，条件满足，执行break语句</span></span><br><span class="line">        <span class="keyword">break</span> <span class="comment"># break语句会结束循环</span></span><br><span class="line">    <span class="built_in">print</span>(n)</span><br><span class="line">    n = n + <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;END&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################### continue关键字 #################### </span></span><br><span class="line">n = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> n &lt; <span class="number">10</span>:</span><br><span class="line">    n = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span>: <span class="comment"># 如果n是偶数，执行continue语句</span></span><br><span class="line">        <span class="keyword">continue</span> <span class="comment"># continue语句会直接继续下一轮循环，后续的print()语句不会执行</span></span><br><span class="line">    <span class="built_in">print</span>(n)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="1-10-编码：-Unicode-，ASCII-，UTF-8"><a href="#1-10-编码：-Unicode-，ASCII-，UTF-8" class="headerlink" title="1.10 编码： Unicode  ，ASCII ，UTF-8"></a>1.10 编码： Unicode  ，ASCII ，UTF-8</h3><ul>
<li>ASCII编码和Unicode编码的区别：<blockquote>
<ol>
<li><strong>ASCII编码</strong> 是 <strong>1个字节</strong>，而 <strong>Unicode编码</strong> 通常是<strong>2个字节</strong>。</li>
<li>文本上<strong>全部</strong>是<strong>英文</strong>时，<strong>Unicode 编码</strong> 比 <strong>ASCII 编码</strong> 需要多一倍的存储空间，在存储和传输上就十分不划算。</li>
<li>把<strong>Unicode编码</strong>转化为“可变长编码”的 <strong>UTF-8编码</strong>。<strong>UTF-8编码</strong>把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的<strong>英文字母</strong>被编码成<strong>1个字节</strong>，<strong>汉字</strong>通常是<strong>3个字节</strong>，只有很<strong>生僻的字符</strong>才会被编码成<strong>4-6个字节</strong>。</li>
<li>传输的文本包含大量英文字符时，用 <strong>UTF-8编码</strong> 更节省空间 。 </li>
</ol>
</blockquote>
</li>
</ul>
<h3 id="1-11-函数"><a href="#1-11-函数" class="headerlink" title="1.11  函数"></a>1.11  函数</h3><h4 id="1-11-1-内置函数-速查表"><a href="#1-11-1-内置函数-速查表" class="headerlink" title="1.11.1 内置函数 速查表"></a>1.11.1 内置函数 速查表</h4><p>官网： <code>https://docs.python.org/3/library/functions.html </code><br><img src="https://img-blog.csdnimg.cn/20201207202023696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="内置函数表"></p>
<h4 id="1-11-2-自定义函数"><a href="#1-11-2-自定义函数" class="headerlink" title="1.11.2 自定义函数"></a>1.11.2 自定义函数</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"> 调用函数的时候，如果传入的参数数量不对，会报`TypeError`的错误 </span></span><br><span class="line"><span class="string"> 数据类型检查可以用内置函数isinstance()实现</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###################### 自定义 函数  ###################### </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果没有return语句，函数执行完毕后也会返回结果，只是结果为None。return None可以简写为return</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">#定义一个什么事也不做的空函数，使用pass 来充当占位符</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nop</span>():</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#  数据类型检查可以用内置函数isinstance()实现</span></span><br><span class="line"><span class="comment"># isinstance(参数1，参数2) 如果参数1（object）的类型 与 参数二的类型（classinfo）相同则返回 True，否则返回 False</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(x, (<span class="built_in">int</span>, <span class="built_in">float</span>)):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&#x27;bad operand type&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 返回多个值的函数（实际上返回的是1个 tuple）</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">move</span>(<span class="params">x, y, step, angle=<span class="number">0</span></span>):</span>	<span class="comment">#实际上 move( )返回的是1个 tuple</span></span><br><span class="line">    nx = x + step * math.cos(angle)</span><br><span class="line">    ny = y - step * math.sin(angle)</span><br><span class="line">    <span class="keyword">return</span> nx, ny</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x, y = move(<span class="number">100</span>, <span class="number">100</span>, <span class="number">60</span>, math.pi / <span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(x, y)</span><br><span class="line"><span class="number">151.96152422706632</span> <span class="number">70.0</span></span><br></pre></td></tr></table></figure>
<h4 id="1-11-3-函数参数"><a href="#1-11-3-函数参数" class="headerlink" title="1.11.3 函数参数"></a>1.11.3 函数参数</h4><ol>
<li>默认参数：<blockquote>
<p>默认参数必须指向 不可变的对象【如： str , tuple等】<br>如果默认参数为一个 list，则每次调用会记住上次调用的操作，造成结果不对</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">############### 默认参数 ###############</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 例如 以下的 n=2 就是默认参数</span></span><br><span class="line">	<span class="comment"># 当我们调用power(5)时，相当于调用power(5, 2)</span></span><br><span class="line">	<span class="comment"># 而对于n &gt; 2的其他情况，就必须明确地传入n，比如power(5, 3)</span></span><br><span class="line">	</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">power</span>(<span class="params">x, n=<span class="number">2</span></span>):</span></span><br><span class="line">    s = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        n = n - <span class="number">1</span></span><br><span class="line">        s = s * x</span><br><span class="line">    <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>可变参数（即：参数前加*）：<blockquote>
<p>允许传入<strong>0个或任意个</strong>参数，这些可变参数在函数调用时自动组装为一个tuple</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">############### 可变参数 ###############</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在函数内部，参数numbers接收到的是一个tuple，</span></span><br><span class="line"><span class="comment"># 因此，函数代码完全不变。但是，调用该函数时，可以传入任意个参数，</span></span><br><span class="line"><span class="comment"># 包括0个参数，即：在普通的参数前加上*</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span>(<span class="params">*numbers</span>):</span></span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> numbers:</span><br><span class="line">        <span class="built_in">sum</span> = <span class="built_in">sum</span> + n * n</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>calc()</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>关键字参数（即：参数前加2个星号<code>*</code>）：<blockquote>
<p>允许你传入<strong>0个或任意个</strong>含参数名的参数，这些关键字参数在函数内部自动组装为一个dict</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">############### 关键字参数 ###############</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关键字参数 允许你传入0个或任意个含参数名的参数，</span></span><br><span class="line"><span class="comment"># 这些关键字参数在函数内部自动组装为一个dict</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span>(<span class="params">name, age, **kw</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;name:&#x27;</span>, name, <span class="string">&#x27;age:&#x27;</span>, age, <span class="string">&#x27;other:&#x27;</span>, kw)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 只传入必选参数时</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Michael&#x27;</span>, <span class="number">30</span>)</span><br><span class="line">name: Michael age: <span class="number">30</span> other: &#123;&#125;   </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 传入任意个数的关键字参数时           </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Adam&#x27;</span>, <span class="number">45</span>, gender=<span class="string">&#x27;M&#x27;</span>, job=<span class="string">&#x27;Engineer&#x27;</span>)</span><br><span class="line">name: Adam age: <span class="number">45</span> other: &#123;<span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;job&#x27;</span>: <span class="string">&#x27;Engineer&#x27;</span>&#125;    </span><br></pre></td></tr></table></figure>

<ol start="4">
<li>命名关键字参数：<blockquote>
<p><strong>限制</strong>关键字<strong>参数的名字</strong>，命名关键字参数需要一个<code>特殊的分隔符*</code>，后面的参数被视为命名关键字参数，如果函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了。<strong>命名关键字参数必须传入参数名</strong>。</p>
</blockquote>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#########  命名关键字参数  ################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 命名关键字参数：限制关键字参数的名字</span></span><br><span class="line"><span class="comment">#命名关键字参数需要一个特殊分隔符*，*后面的参数被视为命名关键字参数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span>(<span class="params">name, age, *, city, job</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(name, age, city, job)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 如果函数定义中已经有了一个可变参数，</span></span><br><span class="line"><span class="comment"># 后面跟着的命名关键字参数就不再需要一个特殊分隔符*了 </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span>(<span class="params">name, age, *args, city, job</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(name, age, args, city, job)</span><br><span class="line">    </span><br><span class="line"><span class="comment">#命名关键字参数 （调用时）必须连同 参数名 一起传入【有默认值时除外】   </span></span><br><span class="line">person(<span class="string">&#x27;Jack&#x27;</span>, <span class="number">24</span>, city=<span class="string">&#x27;Beijing&#x27;</span>, job=<span class="string">&#x27;Engineer&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="2-Python-自动化办公"><a href="#2-Python-自动化办公" class="headerlink" title="2. Python 自动化办公"></a>2. Python 自动化办公</h2><h3 id="2-1-Excel-速查表"><a href="#2-1-Excel-速查表" class="headerlink" title="2.1 Excel 速查表"></a>2.1 Excel 速查表</h3><p><img src="https://img-blog.csdnimg.cn/20201207203552904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="excel速查表"></p>
<h2 id="3-Python-爬虫"><a href="#3-Python-爬虫" class="headerlink" title="3. Python 爬虫"></a>3. Python 爬虫</h2><h3 id="3-1-常用的爬虫库"><a href="#3-1-常用的爬虫库" class="headerlink" title="3.1 常用的爬虫库"></a>3.1 常用的爬虫库</h3><p><img src="https://img-blog.csdnimg.cn/20201207203715257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="3-2-requests-库"><a href="#3-2-requests-库" class="headerlink" title="3.2 requests 库"></a>3.2 requests 库</h3><p><img src="https://img-blog.csdnimg.cn/20201207203809826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="3-2-1-案例1-京东商品详情页"><a href="#3-2-1-案例1-京东商品详情页" class="headerlink" title="3.2.1 案例1     京东商品详情页"></a>3.2.1 案例1     京东商品详情页</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#实例1：爬取京东商品详情页</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&#x27;http://item.jd.com/2967929.html&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r=requests.get(url)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#检查Response状态码,若不是200则产生HttpError异常</span></span><br><span class="line">    r.raise_for_status()  </span><br><span class="line">	</span><br><span class="line">	<span class="comment"># 将编码设 utf-8 </span></span><br><span class="line">    r.encoding=r.apparent_encoding</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 截取页面前1000行</span></span><br><span class="line">    <span class="built_in">print</span>(r.text[:<span class="number">1000</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>
<h4 id="3-2-2-案例2-亚马逊商品详情页"><a href="#3-2-2-案例2-亚马逊商品详情页" class="headerlink" title="3.2.2 案例2 亚马逊商品详情页"></a>3.2.2 案例2 亚马逊商品详情页</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#实例2：爬取亚马逊商品详情页————协议头</span></span><br><span class="line">url=<span class="string">&#x27;https://www.amazon.cn/dp/B076YGLN6G?smid=A3CQWPW49OI3BQ&amp;ref_=Oct_CBBBCard_dsk_asin2&amp;pf_rd_r=X83064H6KVVDTZ4WWDFB&amp;pf_rd_p=5a0738df-7719-4914-81ee-278221dce082&amp;pf_rd_m=A1AJ19PSB66TGU&amp;pf_rd_s=desktop-3&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    res = requests.get(url)</span><br><span class="line">    res.raise_for_status()        <span class="comment">#503</span></span><br><span class="line">    res.encoding=r.apparent_encoding   <span class="comment">#&#x27;ISO-8859-1&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(res.text[:<span class="number">1000</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;爬取错误&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">res.request.headers</span></span><br><span class="line"><span class="string">输出：</span></span><br><span class="line"><span class="string">&#123;&#x27;User-Agent&#x27;: &#x27;python-requests/2.22.0&#x27;, &#x27;Accept-Encoding&#x27;: &#x27;gzip, deflate&#x27;, &#x27;Accept&#x27;: &#x27;*/*&#x27;, &#x27;Connection&#x27;: &#x27;keep-alive&#x27;&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    kv=&#123;<span class="string">&#x27;user-agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0&#x27;</span>&#125;  <span class="comment">#浏览器身份标识的字段</span></span><br><span class="line">    r=requests.get(url,headers=kv)</span><br><span class="line">    r.raise_for_status()  <span class="comment">#r.status_code   200</span></span><br><span class="line">    r.encoding=r.apparent_encoding</span><br><span class="line">    <span class="built_in">print</span>(r.text[<span class="number">1000</span>:<span class="number">3000</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>
<h4 id="3-2-3-案例3-百度-360搜索关键字"><a href="#3-2-3-案例3-百度-360搜索关键字" class="headerlink" title="3.2.3 案例3 百度/360搜索关键字"></a>3.2.3 案例3 百度/360搜索关键字</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#实例3：爬取搜索页面</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    kw=&#123;<span class="string">&#x27;wd&#x27;</span>:<span class="string">&#x27;python&#x27;</span>&#125;</span><br><span class="line">    r=requests.get(<span class="string">&#x27;https://www.baidu.com/s&#x27;</span>,params=kw)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    r.encoding=r.apparent_encoding</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(r.text))</span><br><span class="line">    <span class="comment">#r.request.url  返回的是百度安全验证的链接？</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;爬取失败&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    kw=&#123;<span class="string">&#x27;q&#x27;</span>:<span class="string">&#x27;python&#x27;</span>&#125;  <span class="comment">#360搜索的关键字的键为q</span></span><br><span class="line">    r=requests.get(<span class="string">&#x27;https://www.so.com/s&#x27;</span>,params=kw)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    r.encoding=r.apparent_encoding</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(r.text))  <span class="comment">#257468</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>
<h4 id="3-2-4-案例4-网络图片爬取及存储"><a href="#3-2-4-案例4-网络图片爬取及存储" class="headerlink" title="3.2.4 案例4     网络图片爬取及存储"></a>3.2.4 案例4     网络图片爬取及存储</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#实例4：爬取图片</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;r.content  #表示返回内容的二进制格式&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">root=<span class="string">&#x27;./Pic/&#x27;</span></span><br><span class="line">path=root+url.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>].split(<span class="string">&#x27;@&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">url=<span class="string">&#x27;http://img0.dili360.com/ga/M00/02/AB/wKgBzFQ26i2AWujSAA_-xvEYLbU441.jpg@!rw9&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(root):</span><br><span class="line">        os.mkdir(root)  <span class="comment">#创建根目录</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line"></span><br><span class="line">        r=requests.get(url)</span><br><span class="line">        <span class="comment"># 如何将二进制转化为图片保存</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(r.content)</span><br><span class="line">            f.close()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;图片保存成功&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;文件已存在&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure>
<h4 id="3-2-5-案例5-IP地址归属地查询"><a href="#3-2-5-案例5-IP地址归属地查询" class="headerlink" title="3.2.5 案例5     IP地址归属地查询"></a>3.2.5 案例5     IP地址归属地查询</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#实例5：IP地址归属地查询</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&#x27;http://www.ip138.com/iplookup.asp?ip=&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r=requests.get(url+<span class="string">&#x27;183.216.163.144&#x27;</span>,headers=kv)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    r.encoding=r.apparent_encoding</span><br><span class="line">    <span class="built_in">print</span>(r.text[:-<span class="number">500</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;爬取失败&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="3-3-urllib库"><a href="#3-3-urllib库" class="headerlink" title="3.3 urllib库"></a>3.3 urllib库</h3><p>特点：不用安装，python自带</p>
<h4 id="3-3-1-urllib基础："><a href="#3-3-1-urllib基础：" class="headerlink" title="3.3.1 urllib基础："></a>3.3.1 urllib基础：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将网页保存到本地，参数为抓取的网址和保存网页的文件路径</span></span><br><span class="line">	urllib.request.urlretrieve(url,file)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将urlretrieve产生的缓存清除</span></span><br><span class="line">	urllib.request.urlcleanup()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 爬取网页   </span></span><br><span class="line">	file=urllib.request.urlopen(url)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取header的信息  </span></span><br><span class="line">	file.info()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取爬取网页的状态码（200,403,404等）    </span></span><br><span class="line">	file.getcode() </span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取目前爬取的网址  </span></span><br><span class="line">	file.geturl()     </span><br></pre></td></tr></table></figure>
<h4 id="3-3-2-urllib-库超时设置"><a href="#3-3-2-urllib-库超时设置" class="headerlink" title="3.3.2 urllib 库超时设置"></a>3.3.2 urllib 库超时设置</h4><p>根据 <strong>网速</strong> 和 <strong>对方服务器响应</strong> 的快慢设置相应的超时设置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        file=urllib.request.urlopen(<span class="string">&quot;http://www.baidu.com&quot;</span>,timeout=<span class="number">2</span>)</span><br><span class="line">        data=file.read()</span><br><span class="line">        <span class="built_in">print</span>(i,<span class="built_in">len</span>(data))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;出现异常&quot;</span>+<span class="built_in">str</span>(e))</span><br></pre></td></tr></table></figure>
<h4 id="3-3-3-自动模拟http请求："><a href="#3-3-3-自动模拟http请求：" class="headerlink" title="3.3.3 自动模拟http请求："></a>3.3.3 自动模拟http请求：</h4><h5 id="3-3-3-1-get"><a href="#3-3-3-1-get" class="headerlink" title="3.3.3.1 get"></a>3.3.3.1 get</h5><p>常用于：搜索关键词，获得搜索界面</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#get请求</span></span><br><span class="line"></span><br><span class="line">keywd=<span class="string">&quot;Python&quot;</span></span><br><span class="line">url=<span class="string">&quot;http://www.baidu.com/s?wd=&quot;</span>+keywd  <span class="comment">#网址构造</span></span><br><span class="line"><span class="built_in">print</span>(url)</span><br><span class="line">req=urllib.request.Request(url) <span class="comment">#以请求的方式获取,网址</span></span><br><span class="line">data=urllib.request.urlopen(req).read()</span><br><span class="line"></span><br><span class="line">fh=<span class="built_in">open</span>(<span class="string">&quot;C:/Users/admin/Desktop/a.html&quot;</span>,<span class="string">&quot;wb&quot;</span>) <span class="comment">#以二进制写入html文件</span></span><br><span class="line">fh.write(data)</span><br><span class="line">fh.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#若搜索关键词为中文</span></span><br><span class="line">keywd1=<span class="string">&quot;亚马逊&quot;</span></span><br><span class="line">keywd1=urllib.request.quote(keywd1)  <span class="comment">#利用quote对中文进行编码</span></span><br><span class="line">url1=<span class="string">&quot;http://www.baidu.com/s?wd=&quot;</span>+keywd1</span><br><span class="line">req=urllib.request.Request(url1)</span><br><span class="line">data=urllib.request.urlopen(req).read()</span><br><span class="line"></span><br><span class="line">fh=<span class="built_in">open</span>(<span class="string">&quot;C:/Users/admin/Desktop/a.html&quot;</span>,<span class="string">&quot;wb&quot;</span>) <span class="comment">#二进制</span></span><br><span class="line">fh.write(data)</span><br><span class="line">fh.close()</span><br></pre></td></tr></table></figure>
<h5 id="3-3-3-2-post"><a href="#3-3-3-2-post" class="headerlink" title="3.3.3.2 post"></a>3.3.3.2 post</h5><p>常用于：登录某些网站</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#post请求</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;https://www.iqianyue.com/mypost/&quot;</span>  <span class="comment">#地址</span></span><br><span class="line">login=urllib.parse.urlencode(</span><br><span class="line">    &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;1121640425@qq.com&quot;</span>,<span class="string">&quot;pass&quot;</span>:<span class="string">&quot;123&quot;</span>&#125;</span><br><span class="line">).encode(<span class="string">&quot;utf-8&quot;</span>)  <span class="comment">#登录数据</span></span><br><span class="line">req=urllib.request.Request(url,login)</span><br><span class="line"></span><br><span class="line">data=urllib.request.urlopen(req).read()</span><br><span class="line"></span><br><span class="line">fh=<span class="built_in">open</span>(<span class="string">&quot;C:/Users/admin/Desktop/a.html&quot;</span>,<span class="string">&quot;wb&quot;</span>)</span><br><span class="line">fh.write(data)</span><br><span class="line">fh.close()</span><br></pre></td></tr></table></figure>
<h3 id="3-4-bs4"><a href="#3-4-bs4" class="headerlink" title="3.4 bs4"></a>3.4 bs4</h3><p>来自：<code>https://blog.csdn.net/qq_35490191/article/details/80598620</code><br><a href="https://blog.csdn.net/qq_35490191/article/details/80598620">来源博客</a></p>
<p><strong>功能：</strong> 解析、遍历、维护标签树。</p>
<p>例如：<code>&lt;p class=&#39;title&#39;&gt;...&lt;/p&gt;</code></p>
<ul>
<li>标签名 p</li>
<li>属性名称 class</li>
<li>属性值 title<h4 id="3-4-1-bs4-的解析器对比"><a href="#3-4-1-bs4-的解析器对比" class="headerlink" title="3.4.1  bs4 的解析器对比"></a>3.4.1  bs4 的解析器对比</h4><img src="https://img-blog.csdnimg.cn/20201207205934178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<p><strong>具体用法：</strong> <code>soup=BeautifulSoup(markup,from_encoding=&quot;编码方式&quot;) </code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;span&gt; Elsie &lt;/span&gt;&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment">#######################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.prettify()) <span class="comment">#输出清晰的树形结构</span></span><br></pre></td></tr></table></figure>
<p><strong>Beautifu Soup</strong>将复杂的<strong>HTML文档</strong>转化为<strong>树形结构</strong>，每个<strong>节点</strong>都是<strong>Python对象</strong>：</p>
<ul>
<li>Tag：标签；</li>
<li>NavigableString：被包裹在tag内的字符串；</li>
<li>BeautifulSoup：表示一个文档的全部内容，大部分时候可以看做一个tag对象，支持遍历文档树和搜索文档树的方法；</li>
<li>Comment：特殊NavigableString，会以特殊格式输出，比如注释类型。<h4 id="3-4-2-bs4-基本用法"><a href="#3-4-2-bs4-基本用法" class="headerlink" title="3.4.2  bs4 基本用法"></a>3.4.2  bs4 基本用法</h4><blockquote>
<p> <strong>搜索文档树</strong>：<em><strong>soup.tag.property</strong></em> 按顺序获得第一个标签 </p>
</blockquote>
</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20201207210350414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p><strong>获取所有 ? 标签</strong>： soup.find_all( tag )    // 返回1个list</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20201207210447518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p>将tag的<strong>子节点</strong>以<strong>列表</strong>方式输出  ： <em><strong>tag.contents</strong></em> </p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20201207210519210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<ul>
<li>对tag的<strong>子节点</strong> 进行 <strong>循环</strong> ：  <strong>tag.children</strong> </li>
<li>对tag的<strong>子孙节点</strong> 进行 <strong>循环</strong> ： <em><strong>tag.descendants</strong></em> </li>
</ul>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20201207210743907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p>获取tag（只有一个子节点）下所有的文本内容 ： <em><strong>tag.string</strong></em></p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20201207210819127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p> 从文档中获取<strong>所有的文字内容</strong> ：<em><strong>soup.get_text( )</strong></em></p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20201207210859608.png" alt="在这里插入图片描述"></p>
<h4 id="3-4-3-bs4-用法-思维导图"><a href="#3-4-3-bs4-用法-思维导图" class="headerlink" title="3.4.3 bs4 用法  思维导图"></a>3.4.3 bs4 用法  思维导图</h4><p><img src="https://img-blog.csdnimg.cn/20201207211020405.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="4、正则表达式【用于提取信息】"><a href="#4、正则表达式【用于提取信息】" class="headerlink" title="4、正则表达式【用于提取信息】"></a>4、正则表达式【用于提取信息】</h2><p><img src="https://img-blog.csdnimg.cn/20201208100448613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="4-1-正则表达式—思维导图"><a href="#4-1-正则表达式—思维导图" class="headerlink" title="4.1 正则表达式—思维导图"></a>4.1 正则表达式—思维导图</h3><p><img src="https://img-blog.csdnimg.cn/2020120810080011.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="4-2-常见的原子类型-正则表达式最基本的单位"><a href="#4-2-常见的原子类型-正则表达式最基本的单位" class="headerlink" title="4.2 常见的原子类型-正则表达式最基本的单位"></a>4.2 常见的<strong>原子类型</strong>-正则表达式最基本的单位</h3><p><img src="https://img-blog.csdnimg.cn/20201208103436181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="4-3-元字符-正则表达式中具有特殊含义的字符"><a href="#4-3-元字符-正则表达式中具有特殊含义的字符" class="headerlink" title="4.3  元字符-正则表达式中具有特殊含义的字符"></a>4.3  元字符-正则表达式中具有特殊含义的字符</h3><p> <img src="https://img-blog.csdnimg.cn/20201208103636986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="4-4-模式修正符-在不改变正则表达式的前提下，调整匹配结果"><a href="#4-4-模式修正符-在不改变正则表达式的前提下，调整匹配结果" class="headerlink" title="4.4 模式修正符-在不改变正则表达式的前提下，调整匹配结果"></a>4.4 模式修正符-在不改变正则表达式的前提下，调整匹配结果</h3><p><img src="https://img-blog.csdnimg.cn/2020120810371828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="4-5-贪婪模式和懒惰模式"><a href="#4-5-贪婪模式和懒惰模式" class="headerlink" title="4.5 贪婪模式和懒惰模式"></a>4.5 贪婪模式和懒惰模式</h3><p><img src="https://img-blog.csdnimg.cn/20201208103827958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="4-6-正则表达式函数"><a href="#4-6-正则表达式函数" class="headerlink" title="4.6 正则表达式函数"></a>4.6 正则表达式函数</h3><p><img src="https://img-blog.csdnimg.cn/20201208103901541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="4-7-练习题："><a href="#4-7-练习题：" class="headerlink" title="4.7 练习题："></a>4.7 练习题：</h3><p><a href="https://zhuanlan.zhihu.com/p/91689180?utm_source=qq&utm_medium=social&utm_oi=772119850515431424">正则表达式-练习题</a></p>
<h2 id="5、二维码制作"><a href="#5、二维码制作" class="headerlink" title="5、二维码制作"></a>5、二维码制作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> MyQR <span class="keyword">import</span> myqr</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createmyqr</span>():</span></span><br><span class="line">    myqr.run(words=<span class="string">&quot;http://cder123.gitee.io/&quot;</span>,</span><br><span class="line">             picture=<span class="string">&#x27;C:\\Users\\y\\Desktop\\1.gif&#x27;</span>,</span><br><span class="line">             colorized=<span class="literal">True</span>,</span><br><span class="line">             save_name=<span class="string">&quot;demo.gif&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    createmyqr()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;完成&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>后端</category>
        <category>Python3</category>
      </categories>
      <tags>
        <tag>Python3</tag>
      </tags>
  </entry>
  <entry>
    <title>Python爬虫-案例篇</title>
    <url>/2021/08/04/Python%E7%88%AC%E8%99%AB-%E6%A1%88%E4%BE%8B%E7%AF%87/</url>
    <content><![CDATA[<h1 id="Python爬虫-案例篇"><a href="#Python爬虫-案例篇" class="headerlink" title="Python爬虫-案例篇"></a>Python爬虫-案例篇</h1><p>[toc]</p>
<h2 id="0、资料："><a href="#0、资料：" class="headerlink" title="0、资料："></a>0、资料：</h2><ul>
<li>  <a href="https://www.bilibili.com/video/BV1RJ411z7tH?p=9">视频教程</a></li>
</ul>
<h2 id="1、百度翻译"><a href="#1、百度翻译" class="headerlink" title="1、百度翻译"></a>1、百度翻译</h2><p>步骤：</p>
<ul>
<li>  打开页面，切换到移动端，找到<code>sug</code>报文</li>
<li>  封装请求</li>
<li>  获取数据</li>
<li>  数据解析</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 百度翻译</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 浏览器控制台切换成手机模式</span></span><br><span class="line"><span class="comment">## 找到XHR =&gt; sug报文</span></span><br><span class="line"><span class="comment">## 返回的数据示例：</span></span><br><span class="line"><span class="comment">### 	&#123;&#x27;errno&#x27;: 0, &#x27;data&#x27;: [&#123;&#x27;k&#x27;: &#x27;北京大学&#x27;, &#x27;v&#x27;: &#x27;名. Peking University&#x27;&#125;]&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://fanyi.baidu.com/sug&quot;</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0&#x27;</span>&#125;</span><br><span class="line">src_word = <span class="built_in">input</span>(<span class="string">&quot;请输入要翻译的中文：&quot;</span>)</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;kw&#x27;</span>: src_word</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(url, data=data, headers=headers)</span><br><span class="line"></span><br><span class="line">code = res.status_code</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印状态码</span></span><br><span class="line"><span class="built_in">print</span>(code)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果请求成功，解析为JSON格式</span></span><br><span class="line"><span class="keyword">if</span> code == <span class="number">200</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请求成功！！&quot;</span>)</span><br><span class="line">    res.encoding = <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">    data_json = res.json()</span><br><span class="line">    <span class="keyword">if</span> data_json[<span class="string">&#x27;errno&#x27;</span>] == <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># 打印返回的整个Json数据</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;整体：&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(data_json)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 打印关键字</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;键：&quot;</span>,end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(data_json[<span class="string">&quot;data&quot;</span>][<span class="number">0</span>][<span class="string">&#x27;k&#x27;</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 打印对应的值</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;值：&quot;</span>,end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(data_json[<span class="string">&quot;data&quot;</span>][<span class="number">0</span>][<span class="string">&#x27;v&#x27;</span>].split(<span class="string">&#x27;;&#x27;</span>)[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;出错了！！&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="2、爬取CSDN自己的收藏"><a href="#2、爬取CSDN自己的收藏" class="headerlink" title="2、爬取CSDN自己的收藏"></a>2、爬取CSDN自己的收藏</h2><p>携带 Cookie 爬取</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 响应数据示例：</span></span><br><span class="line"></span><br><span class="line">    &#123;	&#x27;code&#x27;: <span class="number">200</span>, </span><br><span class="line">        &#x27;message&#x27;: &#x27;成功&#x27;, </span><br><span class="line">        &#x27;data&#x27;: &#123;</span><br><span class="line">            &#x27;result&#x27;: [&#123;</span><br><span class="line">                &#x27;ID&#x27;: <span class="number">10063298</span>, </span><br><span class="line">                &#x27;Name&#x27;: &#x27;Java-JVM&#x27;,</span><br><span class="line">                &#x27;FavoriteNum&#x27;: <span class="number">1</span>,</span><br><span class="line">                &#x27;FollowNum&#x27;: <span class="number">0</span>, </span><br><span class="line">                &#x27;Favorites&#x27;: None, </span><br><span class="line">                &#x27;Follows&#x27;: None, </span><br><span class="line">                &#x27;Username&#x27;: &#x27;c13365_&#x27;, </span><br><span class="line">                &#x27;Description&#x27;: &#x27;&#x27;,</span><br><span class="line">                &#x27;IsPrivate&#x27;: <span class="number">0</span>,</span><br><span class="line">                &#x27;CreatedAt&#x27;: &#x27;<span class="number">2021</span><span class="number">-07</span><span class="number">-13</span>T16:<span class="number">40</span>:<span class="number">23</span>+<span class="number">08</span>:<span class="number">00</span>&#x27;,</span><br><span class="line">                &#x27;UpdatedAt&#x27;: &#x27;<span class="number">2021</span><span class="number">-07</span><span class="number">-13</span>T16:<span class="number">42</span>:<span class="number">39</span>+<span class="number">08</span>:<span class="number">00</span>&#x27;</span><br><span class="line">             &#125;],</span><br><span class="line">        &#x27;total&#x27;: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://me.csdn.net/api/favorite/folderList&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 伪装User-Agent、携带Cookie</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27; cookie值&#x27;</span> <span class="comment"># 浏览器抓包folderList响应，找到Cookie,复制到这里</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = requests.get(url,headers=headers)</span><br><span class="line"></span><br><span class="line">code = res.status_code</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(code)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> code ==<span class="number">200</span>:</span><br><span class="line">    res.encoding=<span class="string">&quot;utf-8&quot;</span>    </span><br><span class="line">    res_json = res.json() <span class="comment"># 解析json数据</span></span><br><span class="line">    <span class="built_in">print</span>(res_json[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;result&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;Name&#x27;</span>]) <span class="comment"># 打印指定的数据（收藏文章的名字）</span></span><br></pre></td></tr></table></figure>





<h2 id="3、爬取网易云的歌曲评论"><a href="#3、爬取网易云的歌曲评论" class="headerlink" title="3、爬取网易云的歌曲评论"></a>3、爬取网易云的歌曲评论</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># url = url + &quot;type=&quot; + &quot;search&quot; + &quot;&amp;search_type=1&amp;s=&quot; + &quot;28012031&quot;</span></span><br><span class="line"></span><br><span class="line">base_url = <span class="string">&#x27;https://api.imjad.cn/cloudmusic/?&#x27;</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    song_id = <span class="built_in">input</span>(<span class="string">&quot;请输入歌曲id【以便爬取评论】：&quot;</span>)</span><br><span class="line">    url = base_url + <span class="string">&quot;type=&quot;</span> + <span class="string">&quot;comments&quot;</span> + <span class="string">&quot;&amp;id=&quot;</span> + song_id</span><br><span class="line"></span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    res = requests.get(url, headers=headers)</span><br><span class="line">    code = res.status_code</span><br><span class="line">    <span class="built_in">print</span>(code)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> code == <span class="number">200</span>:</span><br><span class="line">        res.encoding = <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">        res_json = res.json()</span><br><span class="line">        <span class="built_in">print</span>(url)</span><br><span class="line">        <span class="built_in">print</span>(res_json)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> res_json[<span class="string">&quot;more&quot;</span>] != <span class="literal">False</span>:</span><br><span class="line">            comments = res_json[<span class="string">&quot;comments&quot;</span>]</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./comments.txt&quot;</span>, <span class="string">&quot;w+&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                <span class="keyword">for</span> item <span class="keyword">in</span> comments:</span><br><span class="line">                    f.write(item[<span class="string">&quot;content&quot;</span>])</span><br><span class="line">                    f.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                f.close()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;无此歌曲的评论！！&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="4、Xpath的使用："><a href="#4、Xpath的使用：" class="headerlink" title="4、Xpath的使用："></a>4、Xpath的使用：</h2><p>第一种解析方式：【解析html字符串】</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html_str = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;Title&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">        &lt;ul&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;1.html&quot;&gt;张三&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;2.html&quot;&gt;李四&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;item-mid&quot;&gt;&lt;a href=&quot;3.html&quot;&gt;成龙&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;4.html&quot;&gt;王五&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;5.html&quot;&gt;赵六&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析html</span></span><br><span class="line">html_1 = etree.HTML(html_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取数据：找出类名class=&quot;item-mid&quot;的标签的文本n</span></span><br><span class="line">data = html_1.xpath(<span class="string">&quot;/html/body/ul/li[@class=&#x27;item-mid&#x27;]/a/text()&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure>



<hr>
<p>第二种解析方式：【读取html文件并解析】</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 第二种获取HTML的语法</span></span><br><span class="line">html2 = etree.parse(<span class="string">&quot;./1.html&quot;</span>,etree.HTMLParser())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到 ul &gt; li &gt; a[href=&#x27;5.html&#x27;] 的文本内容</span></span><br><span class="line">res = html2.xpath(<span class="string">&quot;//ul/li/a[@href=&#x27;5.html&#x27;]/text()&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res) <span class="comment"># [&#x27;赵六&#x27;]</span></span><br></pre></td></tr></table></figure>







<h2 id="5、有道翻译"><a href="#5、有道翻译" class="headerlink" title="5、有道翻译"></a>5、有道翻译</h2><p>爬取有道翻译，记录到本地的<code>data.txt</code>中</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 有道翻译</span></span><br><span class="line">url = <span class="string">&quot;https://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule&quot;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    src_word = <span class="built_in">input</span>(<span class="string">&quot;请输入要翻译的内容【按Q/q退出】：&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> src_word.upper() == <span class="string">&quot;Q&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;退出成功，欢迎下次使用！！&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;i&#x27;</span>: src_word,</span><br><span class="line">            <span class="string">&#x27;doctype&#x27;</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;version&#x27;</span>: <span class="string">&#x27;2.1&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        res = requests.post(url, data, headers=headers)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">            restData = res.json()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> restData[<span class="string">&quot;errorCode&quot;</span>] == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;\t&quot;</span>+restData.get(<span class="string">&#x27;translateResult&#x27;</span>)[<span class="number">0</span>][<span class="number">0</span>].get(<span class="string">&quot;src&quot;</span>) + <span class="string">&quot; ===&gt; &quot;</span>+ restData.get(<span class="string">&#x27;translateResult&#x27;</span>)[<span class="number">0</span>][<span class="number">0</span>].get(<span class="string">&quot;tgt&quot;</span>))</span><br><span class="line"></span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./data.txt&quot;</span>, <span class="string">&quot;a+&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    f.write(restData.get(<span class="string">&#x27;translateResult&#x27;</span>)[<span class="number">0</span>][<span class="number">0</span>].get(<span class="string">&quot;src&quot;</span>) + <span class="string">&quot; ===&gt; &quot;</span>+ restData.get(<span class="string">&#x27;translateResult&#x27;</span>)[<span class="number">0</span>][<span class="number">0</span>].get(<span class="string">&quot;tgt&quot;</span>))</span><br><span class="line">                    f.write(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">                    f.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>后端</category>
        <category>Python3</category>
      </categories>
      <tags>
        <tag>Python3</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis-入门笔记</title>
    <url>/2021/08/04/Redis-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Redis-入门笔记"><a href="#Redis-入门笔记" class="headerlink" title="Redis-入门笔记"></a>Redis-入门笔记</h1><p>[toc]</p>
<h2 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h2><p>Redis是一种高性能的非关系型数据库。</p>
<p>关系型数据库与非关系型数据库是互补的。</p>
<p>思想：缓存（将常用但又不经常变动的数据放入缓存）, 将Redis作为1个大缓存。</p>
<p><img src="https://z3.ax1x.com/2021/07/31/WjPQHA.png"></p>
<hr>
<h2 id="2、下载安装"><a href="#2、下载安装" class="headerlink" title="2、下载安装"></a>2、下载安装</h2><p>在生产中，使用的是Linux版，以下为便于学习，使用了Windows版，占用<code>6379</code>端口。</p>
<ul>
<li>  下载地址：<a href="https://www.redis.net.cn/">Redis中文网</a></li>
<li>  安装：可以直接解压使用</li>
</ul>
<p>主要的3个文件：</p>
<blockquote>
<ol>
<li> <code>redis.windows.conf</code>：配置文件</li>
<li> <code>redis-cli.exe</code>：客户端</li>
<li> <code>redis-server.exe</code>：服务器</li>
</ol>
</blockquote>
<hr>
<h2 id="3、Redis-的使用"><a href="#3、Redis-的使用" class="headerlink" title="3、Redis 的使用"></a>3、Redis 的使用</h2><h3 id="3-1-Redis的数据结构（数据类型）："><a href="#3-1-Redis的数据结构（数据类型）：" class="headerlink" title="3.1 Redis的数据结构（数据类型）："></a>3.1 Redis的数据结构（数据类型）：</h3><blockquote>
<p>  1、键值对（key-value）：其中键为字符串，值有以下<font style="color:red;">5种类型</font>：</p>
<ul>
<li>  string：字符串类型的数据</li>
<li>  hash：map格式的数据</li>
<li>  set：不重复的无序集合</li>
<li>  sortedSet：不重复的有序集合</li>
<li>  list：linkedList类型的数据</li>
</ul>
</blockquote>
<hr>
<h3 id="3-2-常用操作命令"><a href="#3-2-常用操作命令" class="headerlink" title="3.2 常用操作命令"></a>3.2 常用操作命令</h3><p>1、string 的 <font style="color:red;">存储、获取、删除</font></p>
<blockquote>
<ul>
<li>  <code>set 键 值</code></li>
<li>  <code>get 键 值</code></li>
<li>  <code>del 键 值</code></li>
</ul>
</blockquote>
<p>2、hash 的  <font style="color:red;">存储、获取、删除</font></p>
<blockquote>
<ul>
<li>  <code>hset 键 字段名 值</code>：<code>hset myhash username 123</code>，<code>hset myhash psw 456</code></li>
<li>  <code>hget 键 字段名</code> 或 <code>hgetall 键 </code></li>
<li>  <code>hdel 键 字段名 </code></li>
</ul>
</blockquote>
<p>3、list 的  <font style="color:red;">存储、获取、删除</font></p>
<blockquote>
<ul>
<li>  <code>lpush</code></li>
<li>  <code>rpush</code></li>
<li>  <code>lrange 键 起始下标 终止下标</code>：起始下标从0开始</li>
<li>  <code>lpop 键</code></li>
</ul>
</blockquote>
<p>4、set 的  <font style="color:red;">存储、获取、删除</font></p>
<blockquote>
<ul>
<li>  <code>sadd 键 值</code></li>
<li>  <code>smembers 键 </code></li>
<li>  <code>srem 键 值</code></li>
</ul>
</blockquote>
<p>5、sortedSet   <font style="color:red;">存储、获取、删除</font></p>
<blockquote>
<ul>
<li>  <code>zadd 键 分数 值</code></li>
<li>  <code>zrange 键 起始下标 终止下标</code>：zrange myss 0 -1 withscore</li>
<li>  <code>zrem 键 值</code></li>
</ul>
</blockquote>
<p>6、通用命令：</p>
<blockquote>
<ol>
<li> <code>keys *</code>：</li>
<li> <code>type 键</code></li>
<li> <code>del 键</code></li>
</ol>
</blockquote>
<hr>
<h3 id="3-3-Redis数据的持久化"><a href="#3-3-Redis数据的持久化" class="headerlink" title="3.3 Redis数据的持久化"></a>3.3 Redis数据的持久化</h3><ul>
<li>  RDB：（redis.windows.conf文件）默认的机制，在一定的间隔时间内检测key的变化，并持久化。</li>
</ul>
<blockquote>
<ol>
<li><p>编辑配置文件：</p>
<p> 例如：<code>save 900 1</code> ，表示 900秒（15min）后有1个key发生变化，就持久化1次。 </p>
</li>
<li><p> 重启Redis服务,并指定配置文件名：<code>redis-server.exe redis.windows.conf </code></p>
</li>
</ol>
</blockquote>
<ul>
<li>  AOF：以日志的形式记录每条命令。</li>
</ul>
<blockquote>
<ol>
<li><p>编辑配置文件：</p>
<p> 将<code>redis.windows.conf文件</code>下的<code>appendonly配置</code>改为<code>yes</code></p>
<p> a. <code>appendfync always</code>：每次操作都持久化。</p>
<p> b. <code>appendfsync everysec</code>：每隔一秒持久化1次</p>
<p> c. <code>appendfsync no</code>：不持久化</p>
</li>
</ol>
</blockquote>
<hr>
<h2 id="4、Jedis"><a href="#4、Jedis" class="headerlink" title="4、Jedis"></a>4、Jedis</h2><p>Jedis 是Jave操作Redis数据库的工具，相当于jdbc的作用。</p>
<p>步骤：</p>
<blockquote>
<p>  1、下载并导入Jar包（<code>commons-pool.jar</code>和<code>jedis.jar</code>）</p>
<p>  2、使用</p>
</blockquote>
<p>字符串的使用（其他数据类型类似）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在Java中，导入相关的2个jar包，new出对象</span></span><br><span class="line"></span><br><span class="line">	Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">&quot;ip地址&quot;</span>,端口号)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储数据    </span></span><br><span class="line">	jedis.set(<span class="string">&quot;键&quot;</span>,<span class="string">&quot;值&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 指定过期时间    </span></span><br><span class="line">	jedis.setex(<span class="string">&quot;键&quot;</span>,毫秒数)    </span><br><span class="line">        </span><br><span class="line"><span class="comment">// 关闭连接    </span></span><br><span class="line">	jedis.close()    </span><br><span class="line"></span><br></pre></td></tr></table></figure>







<hr>
<h2 id="5、JedisPool-连接池"><a href="#5、JedisPool-连接池" class="headerlink" title="5、JedisPool 连接池"></a>5、JedisPool 连接池</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main函数</span></span><br><span class="line">	JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig()</span><br><span class="line">	config.setMaxTotal(<span class="number">50</span>);	<span class="comment">// 最大连接数</span></span><br><span class="line">	config.setMaxIdle(<span class="number">10</span>);	<span class="comment">// 空闲连接</span></span><br><span class="line"></span><br><span class="line">	JedisPool jp = <span class="keyword">new</span> JedisPool(config,<span class="string">&quot;ip地址&quot;</span>,端口号);</span><br><span class="line"></span><br><span class="line">	Jedis jedis = jp.getResource();</span><br><span class="line"></span><br><span class="line">	jedis.set(<span class="string">&quot;键&quot;</span>，值);</span><br><span class="line"></span><br><span class="line">	jedis.close()</span><br><span class="line">        </span><br></pre></td></tr></table></figure>





<p>一般写1个Jdedis的工具类，提供设置参数和获取连接的方法。</p>
<ul>
<li>  配置文件(<code>jedis.properties</code>)：</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">host</span>=<span class="string">127.0.0.1</span></span><br><span class="line"><span class="attr">port</span>=<span class="string">6379</span></span><br><span class="line"><span class="attr">maxTotal</span>=<span class="string">50</span></span><br><span class="line"><span class="attr">maxIdle</span>=<span class="string">10</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<ul>
<li>  工具类（<code>JedisPoolUtils</code>）</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 步骤：</span></span><br><span class="line"><span class="comment">//  1. 加载配置文件: /src/jedis.properties文件</span></span><br><span class="line"><span class="comment">//	2、获取连接：getJedis()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisPoolUtils</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JedisPool jp;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        InputStream is = JedisPoolUtils.class.getClassLoader.getResourceAsStream(<span class="string">&quot;jedis.properties&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        properties.load(is);</span><br><span class="line">        </span><br><span class="line">        JedisPoolConfig config =  <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">        </span><br><span class="line">        config.setMaxTotal(properties.getProperty(<span class="string">&quot;maxTotal&quot;</span>));	<span class="comment">// 最大连接数</span></span><br><span class="line">		config.setMaxIdle(properties.getProperty(<span class="string">&quot;maxIdle&quot;</span>));	<span class="comment">// 空闲连接</span></span><br><span class="line">        </span><br><span class="line">        jp = <span class="keyword">new</span> JedisPool(config,properties.getProperty(<span class="string">&quot;host&quot;</span>),properties.getProperty(<span class="string">&quot;port&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Jedis <span class="title">getJedis</span><span class="params">()</span></span>&#123;        </span><br><span class="line">        <span class="keyword">return</span> jp.getResource();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>后端</category>
        <category>Java</category>
        <category>SQL</category>
        <category>Redis</category>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-入门</title>
    <url>/2021/09/01/Spring5-%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="Spring5-入门"><a href="#Spring5-入门" class="headerlink" title="Spring5-入门"></a>Spring5-入门</h1><p>[toc]</p>
<h2 id="0、资料"><a href="#0、资料" class="headerlink" title="0、资料"></a>0、资料</h2><ul>
<li>  <a href="https://spring.io/">Spring-官网（只有文档）</a></li>
<li>  <a href="https://repo.spring.io/ui/packages#/home">Spring-下载页</a></li>
<li>  <a href="https://www.bilibili.com/video/BV1Vf4y127N5?p=2">Spring5-视频_尚硅谷</a></li>
</ul>
<p>笔记：</p>
<blockquote>
<p>  <a href="https://blog.csdn.net/weixin_47872288/article/details/117921644?spm=1001.2014.3001.5501">Spring框架-笔记</a></p>
<p>  1、<a href="https://blog.csdn.net/weixin_45496190/article/details/107059038">https://blog.csdn.net/weixin_45496190/article/details/107059038</a><br>           2、<a href="https://blog.csdn.net/weixin_45496190/article/details/107067200">https://blog.csdn.net/weixin_45496190/article/details/107067200</a><br>           3、<a href="https://blog.csdn.net/weixin_45496190/article/details/107071204">https://blog.csdn.net/weixin_45496190/article/details/107071204</a><br>           4、<a href="https://blog.csdn.net/weixin_45496190/article/details/107082732">https://blog.csdn.net/weixin_45496190/article/details/107082732</a><br>           5、<a href="https://blog.csdn.net/weixin_45496190/article/details/107092107">https://blog.csdn.net/weixin_45496190/article/details/107092107</a></p>
</blockquote>
<h2 id="1、下载-Spring5"><a href="#1、下载-Spring5" class="headerlink" title="1、下载 Spring5"></a>1、下载 Spring5</h2><p><a href="https://blog.csdn.net/sgliuxiu/article/details/104629795">下载教程</a></p>
<p><a href="https://repo.spring.io/ui/repos/tree/General/release%2Forg%2Fspringframework%2Fspring%2F5.3.9%2Fspring-5.3.9-dist.zip">下载链接</a></p>
<blockquote>
<p>  Maven依赖：(导入以下1个个依赖，会自动导入spring所需的依赖)</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;5.3.9&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>



<h2 id="2、入门案例（IOC）"><a href="#2、入门案例（IOC）" class="headerlink" title="2、入门案例（IOC）"></a>2、入门案例（IOC）</h2><h3 id="2-1-案例1：-实体类没有成员变量"><a href="#2-1-案例1：-实体类没有成员变量" class="headerlink" title="2.1 案例1：(实体类没有成员变量)"></a>2.1 案例1：(实体类没有成员变量)</h3><p>案例目标：利用spring创建对象、执行方法。</p>
<p>步骤：</p>
<blockquote>
<ol>
<li>  下载Spring的Jar包（案例中使用jar包：commons.log + spring bean + core + conext + expression）</li>
<li>  创建1个普通的 java项目。</li>
<li>  项目中添加 jar 包依赖。</li>
<li>  创建JavaBean：<code>User</code>类</li>
<li>  创建 Spring的配置文件（idea创建的springXML自动生成约束）：<code>bean1.xml</code></li>
<li>  测试Spring效果（Junit）</li>
</ol>
</blockquote>
<p>User类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;add方法执行了。。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>bean1.xml：(resources资源目录下)</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- bean标签中，</span></span><br><span class="line"><span class="comment"> 			id：唯一标识，随便取；</span></span><br><span class="line"><span class="comment">            class：JavaBean 的全类名</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userbean&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cyw.User&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>测试效果：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">userTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//加载资源</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean1.xml&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取对象（第1个参数为配置文件中bean标签的id，第2个参数为JavaBean的字节码）</span></span><br><span class="line">        User user = context.getBean(<span class="string">&quot;userbean&quot;</span>, User.class);</span><br><span class="line">        user.add();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="2-2-案例2：-实体类有成员变量"><a href="#2-2-案例2：-实体类有成员变量" class="headerlink" title="2.2 案例2：(实体类有成员变量)"></a>2.2 案例2：(实体类有成员变量)</h3><p>实体类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyw.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String myName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMyName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> myName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMyName</span><span class="params">(String myName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.myName = myName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;add方法执行了。。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>beans.xml：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- id是唯一标识，随便起；class是实体类的全类名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cyw.entity.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">			name为实体类的成员变量名，</span></span><br><span class="line"><span class="comment">			value为变量值</span></span><br><span class="line"><span class="comment">			（value也可以是ref,ref的值为另外一个实体类的bean标签的id） </span></span><br><span class="line"><span class="comment">小结：java自带的类型用value，用户自定义的类型用ref</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;myName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>







<h2 id="3、IOC-容器"><a href="#3、IOC-容器" class="headerlink" title="3、IOC 容器"></a>3、IOC 容器</h2><h3 id="3-1-IOC-简介"><a href="#3-1-IOC-简介" class="headerlink" title="3.1 IOC 简介"></a>3.1 IOC 简介</h3><p>1、什么是 IOC ？</p>
<p>IOC也叫控制反转，是面向对象编程中的一种设计原则。在Spring中，IOC指的是==我们把对象的创建和调用交给Spring来管理==。</p>
<p>2、使用 IOC 的目的：解耦</p>
<p>3、IOC的底层：xml 解析、工厂、反射</p>
<blockquote>
<ul>
<li>  以下操作均在<code>工厂类</code>中完成。</li>
<li>  XML解析Spring的配置文件，得到 JavaBean的全类名</li>
<li>  利用 Class.ForName(全类名)得到 1个 Class 对象</li>
<li>  利用 Class 对象的 newInstance( ) 方法创建对象，并返回。</li>
</ul>
</blockquote>
<p>4、Spring的 IOC接口</p>
<blockquote>
<ul>
<li>  BeanFactory接口（只能Spring内部使用）：加载配置文件时，不创建对象（使用时创建）。</li>
<li>  ApplicationContext接口（程序员使用）：BeanFactory接口的子接口。加载配置时，就创建对象。</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ApplicationContext接口的使用</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 相对路径获取配置文件中的context</span></span><br><span class="line">	ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean1.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 绝对路径获取配置文件中的context</span></span><br><span class="line">	ApplicationContext context1 = <span class="keyword">new</span> FileSystemXmlApplicationContext(<span class="string">&quot;C:\\Desktop\\JavaWorkSpace\\hello_Spring_1\\src\\main\\resources\\beans.xml&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="3-2-设置-实体类-的成员变量（依赖注入）"><a href="#3-2-设置-实体类-的成员变量（依赖注入）" class="headerlink" title="3.2 设置 实体类 的成员变量（依赖注入）"></a>3.2 设置 实体类 的成员变量（依赖注入）</h3><p>依赖注入：</p>
<ul>
<li>  依赖：bean对象的创建过程依赖于容器</li>
<li>  注入：bean对象的成员变量的赋值由容器来完成（值先写在配置文件中，由容器读取配置然后赋值）</li>
</ul>
<p>以下3种方式在beans.xml中设置 ==实体类== 的成员变量：（1种setter、2种构造器）</p>
<blockquote>
<p>  setter方法-设置 实体类 的成员变量【重点】</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cyw.entity.User&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- name为实体类的成员变量名，value为变量值</span></span><br><span class="line"><span class="comment">		name标识的成员变量的类型为普通变量时</span></span><br><span class="line"><span class="comment">--&gt;</span>	</span><br><span class="line">      	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;myName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>/&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">		name标识的成员变量的类型为自定义的类型时（Address类）</span></span><br><span class="line"><span class="comment">--&gt;</span>	</span><br><span class="line">      	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;myAddress&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;Address&quot;</span>/&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">		name标识的成员变量的类型为 array数组时</span></span><br><span class="line"><span class="comment">--&gt;</span>	</span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mybooks&quot;</span> &gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">value</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">value</span>&gt;</span>三国演义<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">value</span>&gt;</span>红楼梦<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">		name标识的成员变量的类型为 list集合时</span></span><br><span class="line"><span class="comment">--&gt;</span>	</span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;myhobby&quot;</span> &gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">value</span>&gt;</span>唱歌<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">value</span>&gt;</span>跳舞<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">value</span>&gt;</span>吃饭<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">		name标识的成员变量的类型为 map集合时</span></span><br><span class="line"><span class="comment">--&gt;</span>	</span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;myCard&quot;</span> &gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;001&quot;</span>/&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>/&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;年龄&quot;</span> <span class="attr">value</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">		name标识的成员变量的类型为 set集合时</span></span><br><span class="line"><span class="comment">--&gt;</span>	</span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;friends&quot;</span> &gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">value</span>&gt;</span>唱歌<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">value</span>&gt;</span>跳舞<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">value</span>&gt;</span>吃饭<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">		name标识的成员变量的类型为 null时</span></span><br><span class="line"><span class="comment">--&gt;</span>	</span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> &gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">null</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">		name标识的成员变量的类型为 properties配置文件时</span></span><br><span class="line"><span class="comment">--&gt;</span>	</span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;myProp&quot;</span> &gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">              	<span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;姓名&quot;</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;年龄&quot;</span>&gt;</span>24<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>





<blockquote>
<p> 构造器-设置 实体类 的成员变量（按：参数名）</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cyw.entity.User&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;myName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;王五&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;22&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>





<blockquote>
<p> 构造器-设置 实体类 的成员变量（按：参数下标）</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cyw.entity.User&quot;</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- index为实体类的构造函数的参数下标，value为参数值	--&gt;</span>	</span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;李四&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>





<blockquote>
<p> 构造器-设置 实体类 的成员变量（按：参数类型）【不推荐使用】</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cyw.entity.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;王五&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">value</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>









<h2 id="4、Spring-的配置"><a href="#4、Spring-的配置" class="headerlink" title="4、Spring 的配置"></a>4、Spring 的配置</h2><h3 id="4-1-实体类的别名"><a href="#4-1-实体类的别名" class="headerlink" title="4.1 实体类的别名"></a>4.1 实体类的别名</h3><p>填写的位置：<code>beans.xml</code>文件</p>
<p>取别名的2种方式：</p>
<ul>
<li>  bean 标签的 name属性</li>
<li>  alias 标签</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">	（第一种取别名的方式）</span></span><br><span class="line"><span class="comment">	bean标签的 name属性来取别名（name可以取多个别名，且别名之间用符号分隔【分隔符：空格、逗号、分号】）</span></span><br><span class="line"><span class="comment">		- 以下示例中的 U和Us都是别名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cyw.entity.User&quot;</span> <span class="attr">name</span>=<span class="string">&quot;U,Us&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;myName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;王五&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;22&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">	（第二种取别名的方式）</span></span><br><span class="line"><span class="comment">	alias标签：取别名</span></span><br><span class="line"><span class="comment">		- name：上面的bean标签中的实体类的id</span></span><br><span class="line"><span class="comment">		- alias: 用户自己取的别名，取完后，凡是使用实体类id的地方都可以用别名来替换</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;U&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="4-2-导入多个配置文件"><a href="#4-2-导入多个配置文件" class="headerlink" title="4.2 导入多个配置文件"></a>4.2 导入多个配置文件</h3><p>使用场景：团队开发时使用</p>
<p>前提：存在多个实体类的xml配置文件，想要导入到1个配置文件中，代码只加载汇总后的配置文件</p>
<p>发生的位置：<code>beans.xml</code>（正规的名字是：<code>ApplicationContext.xml</code>）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cyw.entity.User&quot;</span> <span class="attr">name</span>=<span class="string">&quot;U,U2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;myName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;王五&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;22&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">	导入配置文件 </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;bean1.xml&quot;</span>/&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;bean2.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;bean3.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>后端</category>
        <category>Java</category>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL Server-入门笔记</title>
    <url>/2021/08/04/SQL%20Server-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="SQL-Server-入门笔记"><a href="#SQL-Server-入门笔记" class="headerlink" title="SQL Server-入门笔记"></a>SQL Server-入门笔记</h1><p>[toc]</p>
<h2 id="1-登录"><a href="#1-登录" class="headerlink" title="1. 登录"></a>1. 登录</h2><p>2种方式：</p>
<ul>
<li>  windows身份验证：登录windows账户后就能使用 数据库</li>
<li>  混合身份验证：登录windows账户后，还需要知道 数据库的用户名+密码</li>
</ul>
<h2 id="2-数据库"><a href="#2-数据库" class="headerlink" title="2. 数据库"></a>2. 数据库</h2><h3 id="2-1-创建数据库"><a href="#2-1-创建数据库" class="headerlink" title="2.1 创建数据库"></a>2.1 创建数据库</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE school</span><br><span class="line"><span class="keyword">on</span></span><br><span class="line">(</span><br><span class="line">	name <span class="operator">=</span> <span class="string">&#x27;school&#x27;</span>,</span><br><span class="line">	filename <span class="operator">=</span> <span class="string">&#x27;E:\DB_demo\school.mdf&#x27;</span>,</span><br><span class="line">	size<span class="operator">=</span><span class="number">5</span>mb,</span><br><span class="line">	maxsize <span class="operator">=</span> <span class="number">50</span>mb,</span><br><span class="line">	filegrowth <span class="operator">=</span> <span class="number">1</span><span class="operator">%</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"><span class="comment">-- 后可以跟 其他文件组，文件组与文件组之间使用逗号分隔</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">log <span class="keyword">on</span>(</span><br><span class="line">	name <span class="operator">=</span> <span class="string">&#x27;school_db&#x27;</span>,</span><br><span class="line">	filename <span class="operator">=</span> <span class="string">&#x27;E:\DB_demo\school_log.ldf&#x27;</span>,</span><br><span class="line">	size<span class="operator">=</span><span class="number">1</span>mb,</span><br><span class="line">	maxsize <span class="operator">=</span> <span class="number">10</span>mb,</span><br><span class="line">	filegrowth <span class="operator">=</span> <span class="number">1</span><span class="operator">%</span></span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h3 id="2-2-删除数据库"><a href="#2-2-删除数据库" class="headerlink" title="2.2 删除数据库"></a>2.2 删除数据库</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> database school</span><br></pre></td></tr></table></figure>



<h3 id="2-3-数据库文件的修改"><a href="#2-3-数据库文件的修改" class="headerlink" title="2.3  数据库文件的修改"></a>2.3  数据库文件的修改</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 添加 数据库文件</span></span><br><span class="line"><span class="keyword">alter</span> database school </span><br><span class="line"><span class="keyword">add</span> file(</span><br><span class="line">	name <span class="operator">=</span>ciyao,</span><br><span class="line">	filename <span class="operator">=</span> <span class="string">&#x27;E:\DB_demo\ciyao.ndf&#x27;</span>,</span><br><span class="line">	size<span class="operator">=</span><span class="number">5</span>,</span><br><span class="line">	maxsize<span class="operator">=</span><span class="number">10</span>,</span><br><span class="line">	filegrowth<span class="operator">=</span><span class="number">1</span><span class="operator">%</span></span><br><span class="line">)</span><br><span class="line">go</span><br><span class="line"></span><br><span class="line"><span class="comment">--*******************************************</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改 数据库文件</span></span><br><span class="line"><span class="keyword">alter</span> database school</span><br><span class="line">modify file(</span><br><span class="line">	name <span class="operator">=</span>ciyao,</span><br><span class="line">	filename <span class="operator">=</span> <span class="string">&#x27;E:\DB_demo\ciyao.ndf&#x27;</span>,</span><br><span class="line">	size<span class="operator">=</span><span class="number">6</span>,</span><br><span class="line">	maxsize<span class="operator">=</span><span class="number">10</span>,</span><br><span class="line">	filegrowth<span class="operator">=</span><span class="number">1</span><span class="operator">%</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--*******************************************</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除 数据库文件</span></span><br><span class="line"><span class="keyword">alter</span> database school</span><br><span class="line">remove file ciyao</span><br></pre></td></tr></table></figure>







<h2 id="3-数据表"><a href="#3-数据表" class="headerlink" title="3. 数据表"></a>3. 数据表</h2><h3 id="3-1-创建数据表"><a href="#3-1-创建数据表" class="headerlink" title="3.1 创建数据表"></a>3.1 创建数据表</h3><p>创建 3个数据表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student</span><br><span class="line">(</span><br><span class="line">	sno <span class="type">int</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">	sname <span class="type">char</span>(<span class="number">10</span>) <span class="keyword">constraint</span> not_null_cons <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">	age <span class="type">int</span> <span class="keyword">CHECK</span>(age<span class="operator">&gt;=</span><span class="number">0</span> <span class="keyword">AND</span> age<span class="operator">&lt;</span><span class="number">150</span>)</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line">go</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--*******************************************</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> class</span><br><span class="line">(</span><br><span class="line">	cno <span class="type">int</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">	cname <span class="type">char</span>(<span class="number">20</span>) ,</span><br><span class="line">	credit <span class="type">float</span> <span class="keyword">CHECK</span>(credit<span class="operator">&gt;=</span><span class="number">0</span> <span class="keyword">AND</span> credit<span class="operator">&lt;</span><span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line">go</span><br><span class="line"></span><br><span class="line"><span class="comment">--*******************************************</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> sc</span><br><span class="line">(</span><br><span class="line">	sno <span class="type">int</span> <span class="keyword">FOREIGN</span> KEY <span class="keyword">REFERENCES</span> student(sno),</span><br><span class="line">	cno <span class="type">int</span> <span class="keyword">FOREIGN</span> KEY <span class="keyword">REFERENCES</span> class(cno),</span><br><span class="line">	grade <span class="type">float</span> <span class="keyword">CHECK</span>(grade<span class="operator">&gt;=</span><span class="number">0</span> <span class="keyword">and</span> grade<span class="operator">&lt;=</span><span class="number">100</span>),</span><br><span class="line">	<span class="keyword">PRIMARY</span> KEY(sno,cno)</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line">go</span><br></pre></td></tr></table></figure>





<h3 id="3-2-删除数据表"><a href="#3-2-删除数据表" class="headerlink" title="3.2 删除数据表"></a>3.2 删除数据表</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> student</span><br></pre></td></tr></table></figure>





<h3 id="3-3-修改数据表"><a href="#3-3-修改数据表" class="headerlink" title="3.3 修改数据表"></a>3.3 修改数据表</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 添加 属性</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line">	<span class="keyword">add</span></span><br><span class="line">		sex <span class="type">char</span>(<span class="number">2</span>) <span class="keyword">default</span> <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">		address <span class="type">char</span>(<span class="number">20</span>)</span><br><span class="line">go</span><br><span class="line"></span><br><span class="line"><span class="comment">--*******************************************</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改 属性</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line">	<span class="keyword">alter</span> <span class="keyword">column</span></span><br><span class="line">		sname <span class="type">char</span>(<span class="number">12</span>) </span><br><span class="line">go</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="4-数据"><a href="#4-数据" class="headerlink" title="4. 数据"></a>4. 数据</h2><h3 id="4-1-插入数据：insert"><a href="#4-1-插入数据：insert" class="headerlink" title="4.1 插入数据：insert"></a>4.1 插入数据：insert</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">use school</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(sno,sname)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>)</span><br><span class="line">go</span><br><span class="line"></span><br><span class="line"><span class="comment">--*******************************************</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> class(cno,cname,credit)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">11</span>,<span class="string">&#x27;计算机&#x27;</span>,<span class="number">2.5</span>),(<span class="number">12</span>,<span class="string">&#x27;高数&#x27;</span>,<span class="number">4.0</span>)</span><br><span class="line">go</span><br><span class="line"></span><br><span class="line"><span class="comment">--*******************************************</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sc</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">11</span>,<span class="number">60</span>),(<span class="number">2</span>,<span class="number">12</span>,<span class="number">70</span>)</span><br><span class="line">go</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="4-2-删除数据：delete"><a href="#4-2-删除数据：delete" class="headerlink" title="4.2 删除数据：delete"></a>4.2 删除数据：delete</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> s </span><br><span class="line"><span class="keyword">where</span> s.sno<span class="operator">=</span><span class="string">&#x27;A123&#x27;</span></span><br></pre></td></tr></table></figure>



<h3 id="4-3-修改数据：update"><a href="#4-3-修改数据：update" class="headerlink" title="4.3 修改数据：update"></a>4.3 修改数据：update</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">update sc  </span><br><span class="line"><span class="keyword">set</span> sc.score <span class="operator">=</span> <span class="number">90</span></span><br><span class="line"><span class="keyword">where</span> sc.sno <span class="operator">=</span> <span class="string">&#x27;A123&#x27;</span></span><br></pre></td></tr></table></figure>



<h3 id="4-4-查询数据：select"><a href="#4-4-查询数据：select" class="headerlink" title="4.4 查询数据：select"></a>4.4 查询数据：select</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 查询名字为小明，且分数大于80的学生的学号、姓名、成绩,【按成绩：降序排列】</span></span><br><span class="line"><span class="keyword">select</span> s.sno  , s.sname ,  sc.score</span><br><span class="line"><span class="keyword">from</span> s,sc</span><br><span class="line"><span class="keyword">where</span>  s.sname<span class="operator">=</span><span class="string">&#x27;小明&#x27;</span> <span class="keyword">and</span> sc.sc.score<span class="operator">&gt;=</span><span class="number">80</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> sc.score <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>

<p>select语句的执行顺序：</p>
<ul>
<li>  from</li>
<li>  on</li>
<li>  join</li>
<li>  where</li>
<li>  group by</li>
<li>  having</li>
<li>  order by</li>
<li>  select</li>
</ul>
<h2 id="5-视图"><a href="#5-视图" class="headerlink" title="5. 视图"></a>5. 视图</h2><h3 id="5-1-创建视图"><a href="#5-1-创建视图" class="headerlink" title="5.1 创建视图"></a>5.1 创建视图</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span>     st_Details_View</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span>  s.sno <span class="keyword">as</span> ‘学号’, sname <span class="keyword">as</span> <span class="string">&#x27;姓名&#x27;</span>, </span><br><span class="line">		sage <span class="keyword">as</span> <span class="string">&#x27;年龄&#x27;</span>, c,cno <span class="keyword">as</span> <span class="string">&#x27;课程号&#x27;</span>, </span><br><span class="line">		cname <span class="keyword">as</span> <span class="string">&#x27;课程名&#x27;</span>, score <span class="keyword">as</span> <span class="string">&#x27;分数&#x27;</span></span><br><span class="line">		</span><br><span class="line"><span class="keyword">from</span> s,c.sc</span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span> </span><br><span class="line">	s,sno <span class="operator">=</span> sc,sno <span class="keyword">and</span> c.cno <span class="operator">=</span> sc.cno</span><br><span class="line">	</span><br><span class="line">    </span><br><span class="line"><span class="keyword">with</span> <span class="keyword">check</span> option</span><br></pre></td></tr></table></figure>



<h3 id="5-2-删除视图"><a href="#5-2-删除视图" class="headerlink" title="5.2 删除视图"></a>5.2 删除视图</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span>    st_Details_View</span><br></pre></td></tr></table></figure>





<h3 id="5-3-修改视图"><a href="#5-3-修改视图" class="headerlink" title="5.3 修改视图"></a>5.3 修改视图</h3> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">view</span>   st_Details_View</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span>  s.sno <span class="keyword">as</span> ‘学号’, sname <span class="keyword">as</span> <span class="string">&#x27;姓名&#x27;</span>, </span><br><span class="line">		sage <span class="keyword">as</span> <span class="string">&#x27;年龄&#x27;</span>, c,cno <span class="keyword">as</span> <span class="string">&#x27;课程号&#x27;</span>, </span><br><span class="line">		cname <span class="keyword">as</span> <span class="string">&#x27;课程名&#x27;</span>, score <span class="keyword">as</span> <span class="string">&#x27;分数&#x27;</span></span><br><span class="line">		</span><br><span class="line"><span class="keyword">from</span> s,c.sc</span><br><span class="line"><span class="keyword">where</span> </span><br><span class="line">	s,sno <span class="operator">=</span> sc,sno </span><br><span class="line">	<span class="keyword">and</span> c.cno <span class="operator">=</span> sc.cno </span><br><span class="line">	<span class="keyword">and</span> sc.score<span class="operator">&gt;=</span><span class="number">80</span></span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="6-索引"><a href="#6-索引" class="headerlink" title="6. 索引"></a>6. 索引</h2><h3 id="6-1-创建索引"><a href="#6-1-创建索引" class="headerlink" title="6.1 创建索引"></a>6.1 创建索引</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> clusered index    PK_index</span><br><span class="line"><span class="keyword">on</span> sc(sno,cno)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span>(</span><br><span class="line">	pad_index <span class="operator">=</span> <span class="keyword">on</span>,</span><br><span class="line">    filefactor <span class="operator">=</span> <span class="number">10</span>,</span><br><span class="line">    drop_existing <span class="operator">=</span> <span class="keyword">on</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="6-2-删除索引"><a href="#6-2-删除索引" class="headerlink" title="6.2 删除索引"></a>6.2 删除索引</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> index 表名.索引名</span><br></pre></td></tr></table></figure>



<h3 id="6-3-修改索引"><a href="#6-3-修改索引" class="headerlink" title="6.3 修改索引"></a>6.3 修改索引</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 重新生成 索引</span></span><br><span class="line"><span class="keyword">alter</span> index 索引名</span><br><span class="line"><span class="keyword">on</span> 表名</span><br><span class="line">rebuild</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 重新组织 索引</span></span><br><span class="line"><span class="keyword">alter</span> index 索引名</span><br><span class="line"><span class="keyword">on</span> 表名</span><br><span class="line">reorganize</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 禁用 索引</span></span><br><span class="line"><span class="keyword">alter</span> index 索引名</span><br><span class="line"><span class="keyword">on</span> 表名</span><br><span class="line">disable</span><br></pre></td></tr></table></figure>









<h2 id="7-存储过程"><a href="#7-存储过程" class="headerlink" title="7. 存储过程"></a>7. 存储过程</h2><h3 id="7-1-创建-存储过程"><a href="#7-1-创建-存储过程" class="headerlink" title="7.1 创建 存储过程"></a>7.1 创建 存储过程</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> ProSeEmp</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> employee</span><br><span class="line"><span class="keyword">where</span> sex<span class="operator">=</span><span class="string">&#x27;女&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建带输入参数+输出参数的存储过程</span></span><br><span class="line"><span class="comment">--返回指定empid的员工所在的dep</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> ProDep</span><br><span class="line">	<span class="variable">@Empid</span> <span class="type">int</span> , <span class="variable">@Dep</span> <span class="type">varchar</span>(<span class="number">30</span>) output</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> <span class="variable">@Dep</span><span class="operator">=</span>DepetName</span><br><span class="line"><span class="keyword">from</span> dept <span class="keyword">join</span> emp </span><br><span class="line">	<span class="keyword">on</span> dep.depid <span class="operator">=</span> emp.depid</span><br><span class="line"><span class="keyword">where</span> empid <span class="operator">=</span> <span class="variable">@empid</span>	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 执行</span></span><br><span class="line"><span class="keyword">execute</span> ProDep 参数</span><br></pre></td></tr></table></figure>



<h3 id="7-2-执行-存储过程"><a href="#7-2-执行-存储过程" class="headerlink" title="7.2 执行 存储过程"></a>7.2 执行 存储过程</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">execute</span> 存储过程名</span><br></pre></td></tr></table></figure>





<h3 id="7-3-删除-存储过程"><a href="#7-3-删除-存储过程" class="headerlink" title="7.3 删除 存储过程"></a>7.3 删除 存储过程</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">procedure</span> 存储过程名</span><br></pre></td></tr></table></figure>





<h3 id="7-4-修改-存储过程"><a href="#7-4-修改-存储过程" class="headerlink" title="7.4 修改 存储过程"></a>7.4 修改 存储过程</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">procedure</span> proSeEmp</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">	<span class="keyword">select</span> empName,salary,depid</span><br><span class="line">	<span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure>





<h2 id="8-触发器"><a href="#8-触发器" class="headerlink" title="8. 触发器"></a>8. 触发器</h2><h3 id="8-1-创建-触发器"><a href="#8-1-创建-触发器" class="headerlink" title="8.1 创建 触发器"></a>8.1 创建 触发器</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> 触发器名</span><br><span class="line"><span class="keyword">on</span> 表名</span><br><span class="line"><span class="keyword">for</span><span class="operator">/</span>instead <span class="keyword">of</span><span class="operator">/</span>after  [<span class="keyword">insert</span><span class="operator">/</span>update<span class="operator">/</span><span class="keyword">delete</span>]</span><br><span class="line"><span class="keyword">as</span> ...<span class="keyword">sql</span>语句</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建触发器实例：数据 进行更新操作后，触发器启动：打印修改行数</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> emp_Tri</span><br><span class="line"><span class="keyword">on</span> emp</span><br><span class="line">after update</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">	<span class="keyword">declare</span> <span class="variable">@c</span> <span class="type">int</span></span><br><span class="line">	<span class="keyword">select</span> <span class="variable">@c</span><span class="operator">=</span>@<span class="variable">@rowcount</span></span><br><span class="line">	print <span class="string">&#x27;一共修改了&#x27;</span><span class="operator">+</span><span class="type">char</span>(<span class="number">48</span><span class="operator">+</span><span class="variable">@c</span>)<span class="operator">+</span><span class="string">&#x27;行&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="8-2-删除-触发器"><a href="#8-2-删除-触发器" class="headerlink" title="8.2 删除 触发器"></a>8.2 删除 触发器</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> 触发器名</span><br></pre></td></tr></table></figure>



<h3 id="8-3-修改-触发器"><a href="#8-3-修改-触发器" class="headerlink" title="8.3 修改 触发器"></a>8.3 修改 触发器</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">trigger</span> 触发器名</span><br><span class="line"><span class="keyword">on</span> 表名</span><br><span class="line"><span class="keyword">for</span> <span class="operator">/</span> instead <span class="keyword">of</span> <span class="operator">/</span> after   [<span class="keyword">insert</span><span class="operator">/</span> update <span class="operator">/</span> <span class="keyword">delete</span>]</span><br><span class="line"><span class="keyword">as</span> ...<span class="keyword">sql</span>语句</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="9-数据库安全性"><a href="#9-数据库安全性" class="headerlink" title="9. 数据库安全性"></a>9. 数据库安全性</h2><h3 id="9-1-创建账户"><a href="#9-1-创建账户" class="headerlink" title="9.1 创建账户"></a>9.1 创建账户</h3><p>步骤：</p>
<ul>
<li>  选中 某个数据库 =》展开，选中  ‘安全性’  下的 ‘用户’  =》右键</li>
<li>  新建用户</li>
<li>  输入、选择：用户名，登录名，默认架构</li>
<li>  确定</li>
</ul>
<h3 id="9-2-授予权限"><a href="#9-2-授予权限" class="headerlink" title="9.2 授予权限"></a>9.2 授予权限</h3><p>步骤：</p>
<ul>
<li>  选中 某个数据库 =》 右键 =》 属性</li>
<li>  权限 =》 点击 ‘搜索’ 按钮 =》浏览 =》选中 某个 用户</li>
<li>  勾选 所需权限</li>
<li>  确定</li>
</ul>
<p>‘、</p>
<h3 id="9-3-备份"><a href="#9-3-备份" class="headerlink" title="9.3 备份"></a>9.3 备份</h3><p>备份设备</p>
<p>步骤：</p>
<ul>
<li>  选中 ”服务器对象“ =》 展开 =》选中 ”备份设备 “ =》右键 </li>
<li>  ”新建备份设备 “   =》输入 一个备份名 </li>
<li>  确认</li>
</ul>
<h2 id="10-T-SQL-批处理"><a href="#10-T-SQL-批处理" class="headerlink" title="10. T-SQL 批处理"></a>10. T-SQL 批处理</h2><h3 id="10-1-变量："><a href="#10-1-变量：" class="headerlink" title="10.1 变量："></a>10.1 变量：</h3><ul>
<li><strong>局部变量：</strong> 以@符号开头，先定义后使用。<br>如：@age</li>
<li><strong>全局变量：</strong> 以@@开头，由系统控制，用户只能读取，不能修改。如：@@VERSION</li>
</ul>
<p><strong>变量的声明 和 赋值：</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@age</span> <span class="type">int</span>	<span class="operator">/</span><span class="operator">/</span><span class="keyword">declare</span> 声明变量 <span class="variable">@age</span>,该变量的类型为 <span class="type">int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@age</span> <span class="operator">=</span> <span class="number">12</span>		<span class="operator">/</span><span class="operator">/</span>给变量赋值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@age</span> <span class="operator">=</span> stuAge <span class="keyword">FROM</span> Student <span class="keyword">WHERE</span> Sno<span class="operator">=</span><span class="string">&#x27;S001&#x27;</span> </span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>将查询到的<span class="number">1</span>个值赋给变量</span><br></pre></td></tr></table></figure>







<h3 id="10-2-流程控制："><a href="#10-2-流程控制：" class="headerlink" title="10.2 流程控制："></a>10.2 流程控制：</h3><p>begin和and之间的语句是1个整体，类似C语言中的大括号的作用。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="variable">@price</span> <span class="type">varchar</span>(<span class="number">2</span>) <span class="operator">=</span><span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">	print <span class="string">&#x27;价格为：&#x27;</span><span class="operator">+</span><span class="variable">@price</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>







<h3 id="10-3-IF…ELSE-语句块"><a href="#10-3-IF…ELSE-语句块" class="headerlink" title="10.3 IF…ELSE 语句块"></a>10.3 IF…ELSE 语句块</h3><p>if… else</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="variable">@price</span> <span class="type">int</span> <span class="operator">=</span><span class="number">10</span></span><br><span class="line"></span><br><span class="line">if <span class="variable">@price</span> <span class="operator">&gt;</span> <span class="number">5</span></span><br><span class="line">	print <span class="variable">@price</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	print <span class="string">&#x27;@price&lt;=5&#x27;</span></span><br></pre></td></tr></table></figure>







<h3 id="10-4-CASE…END-语句块"><a href="#10-4-CASE…END-语句块" class="headerlink" title="10.4 CASE…END 语句块"></a>10.4 CASE…END 语句块</h3><p>case…end语句相当于C语言中的 switch 语句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span> 第一种</span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@price</span> <span class="type">int</span> <span class="operator">=</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@price2</span> <span class="type">int</span> <span class="operator">=</span> <span class="keyword">case</span> </span><br><span class="line">	<span class="keyword">when</span> <span class="variable">@price</span><span class="operator">=</span><span class="number">10</span> <span class="keyword">then</span> <span class="number">11</span></span><br><span class="line">	<span class="keyword">when</span> <span class="variable">@price</span><span class="operator">=</span><span class="number">20</span> <span class="keyword">then</span> <span class="number">21</span></span><br><span class="line">	<span class="keyword">when</span> <span class="variable">@price</span><span class="operator">=</span><span class="number">30</span> <span class="keyword">then</span> <span class="number">31</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">print <span class="variable">@price2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>第二种</span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@price</span> <span class="type">int</span> <span class="operator">=</span><span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@price2</span> <span class="type">int</span> <span class="operator">=</span> <span class="keyword">case</span> <span class="variable">@price</span></span><br><span class="line">	<span class="keyword">when</span> <span class="number">10</span> <span class="keyword">then</span> <span class="number">11</span></span><br><span class="line">	<span class="keyword">when</span> <span class="number">20</span> <span class="keyword">then</span> <span class="number">21</span></span><br><span class="line">	<span class="keyword">when</span> <span class="number">30</span> <span class="keyword">then</span> <span class="number">31</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">print <span class="variable">@price2</span></span><br></pre></td></tr></table></figure>






<h3 id="10-5-while-循环："><a href="#10-5-while-循环：" class="headerlink" title="10.5 while 循环："></a>10.5 while 循环：</h3><p>while语句中，如果循环体有多条语句，需要结合begin…end，while循环中的变量变化需要有 select 关键字修饰</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span> 打印 <span class="number">1</span><span class="operator">~</span><span class="number">9</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@num</span> <span class="type">int</span> <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">while <span class="variable">@num</span> <span class="operator">&lt;</span> <span class="number">10</span></span><br><span class="line">	<span class="keyword">begin</span>	</span><br><span class="line">		print <span class="variable">@num</span></span><br><span class="line">		<span class="keyword">select</span> <span class="variable">@num</span> <span class="operator">=</span> <span class="variable">@num</span><span class="operator">+</span><span class="number">1</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="10-6-WAITFOR-语句："><a href="#10-6-WAITFOR-语句：" class="headerlink" title="10.6 WAITFOR 语句："></a>10.6 WAITFOR 语句：</h3><p>waitfor语句用于：延迟执行</p>
<p>第一种：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@num</span> <span class="type">int</span> <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> 延迟 <span class="number">5</span>秒 执行：打印<span class="number">1</span><span class="operator">~</span><span class="number">9</span></span><br><span class="line">waitfor delay <span class="string">&#x27;00:00:05&#x27;</span></span><br><span class="line"></span><br><span class="line">while <span class="variable">@num</span> <span class="operator">&lt;</span> <span class="number">10</span></span><br><span class="line">	<span class="keyword">begin</span></span><br><span class="line">			</span><br><span class="line">		print <span class="variable">@num</span></span><br><span class="line">		<span class="keyword">select</span> <span class="variable">@num</span> <span class="operator">=</span> <span class="variable">@num</span><span class="operator">+</span><span class="number">1</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>第二种：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="variable">@num</span> <span class="type">int</span> <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> 在 今天的<span class="number">13</span>：<span class="number">01</span>：<span class="number">55</span> 执行以下操作：打印 <span class="number">1</span><span class="operator">~</span><span class="number">9</span></span><br><span class="line">waitfor <span class="type">time</span> <span class="string">&#x27;13:01:55&#x27;</span></span><br><span class="line"></span><br><span class="line">while <span class="variable">@num</span> <span class="operator">&lt;</span> <span class="number">10</span></span><br><span class="line">	<span class="keyword">begin</span></span><br><span class="line">			</span><br><span class="line">		print <span class="variable">@num</span></span><br><span class="line">		<span class="keyword">select</span> <span class="variable">@num</span> <span class="operator">=</span> <span class="variable">@num</span><span class="operator">+</span><span class="number">1</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>SQL</category>
        <category>SQL-Server</category>
      </categories>
      <tags>
        <tag>SQL Server</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue 入门-01</title>
    <url>/2021/08/04/Vue%E5%85%A5%E9%97%A8-01/</url>
    <content><![CDATA[<h1 id="Vue入门-01"><a href="#Vue入门-01" class="headerlink" title="Vue入门-01"></a>Vue入门-01</h1><p>[toc]</p>
<h2 id="1-Vue-的介绍"><a href="#1-Vue-的介绍" class="headerlink" title="1. Vue 的介绍"></a>1. Vue 的介绍</h2><p><code>https://cn.vuejs.org/v2/guide/</code><br><a href="https://cn.vuejs.org/v2/guide/">Vue官网教程</a><br><img src="https://img-blog.csdnimg.cn/20210117122819956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="1-1-安装"><a href="#1-1-安装" class="headerlink" title="1.1 安装"></a>1.1 安装</h3><h4 id="1-1-1-使用CDN【不用安装，但需要联网】"><a href="#1-1-1-使用CDN【不用安装，但需要联网】" class="headerlink" title="1.1.1 使用CDN【不用安装，但需要联网】"></a>1.1.1 使用CDN【不用安装，但需要联网】</h4><p>开发环境：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>生产环境：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h4 id="1-1-2-使用npm包管理器安装【不推荐新手】"><a href="#1-1-2-使用npm包管理器安装【不推荐新手】" class="headerlink" title="1.1.2 使用npm包管理器安装【不推荐新手】"></a>1.1.2 使用npm包管理器安装【不推荐新手】</h4><h3 id="1-2-Vue必备步骤"><a href="#1-2-Vue必备步骤" class="headerlink" title="1.2 Vue必备步骤"></a>1.2 Vue必备步骤</h3><p><img src="https://img-blog.csdnimg.cn/20210117124822974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>Vue 以数据驱动的【即：根据数据来改变】</li>
<li>Vue 的指令：<ul>
<li>与 <code>标签属性相关</code>：使用 <code>:</code>   =》 <code>v-bind:src=&quot;key名&quot;</code></li>
<li>与 <code>标签属性无关</code>：使用 <code>=</code>  =》  <code>v-if=&quot;false&quot;</code></li>
</ul>
</li>
</ul>
<h3 id="1-3-Vue-绑定数据"><a href="#1-3-Vue-绑定数据" class="headerlink" title="1.3 Vue 绑定数据"></a>1.3 Vue 绑定数据</h3><ul>
<li>单向绑定【适用于 普通的标签】:  <code>Vue =渲染到=》HTML</code></li>
<li>双向绑定【适用于 表单标签】： <code>Html的内容变，则Vue中也变；Vue内变，则Html中也变</code></li>
</ul>
<p>单项绑定-实例：<br><img src="https://img-blog.csdnimg.cn/20210117125749164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>双项绑定-实例：<br><img src="https://img-blog.csdnimg.cn/20210117130609985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="1-4-Vue-绑定属性"><a href="#1-4-Vue-绑定属性" class="headerlink" title="1.4 Vue 绑定属性"></a>1.4 Vue 绑定属性</h3><p><code>v-bind:属性名=“Vue中的变量”</code><br>例如：<br><img src="https://img-blog.csdnimg.cn/20210117131910842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="1-5-Vue-显示-隐藏"><a href="#1-5-Vue-显示-隐藏" class="headerlink" title="1.5 Vue 显示+隐藏"></a>1.5 Vue 显示+隐藏</h3><p>不显示内容：【将条件置为false】</p>
<ul>
<li>使用 <code>v-if</code>： 完全不渲染【连标签都没有】</li>
<li>使用 <code>v-show</code>：渲染，但利用 CSS    中的 <code>display:none;</code> 来隐藏</li>
</ul>
<p><code>v-if=&quot;布尔值&quot;</code>实例：<br><img src="https://img-blog.csdnimg.cn/2021011713293566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><code>v-show=“布尔值”</code>实例：<br><img src="https://img-blog.csdnimg.cn/20210117132536937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="1-6-Vue-循环"><a href="#1-6-Vue-循环" class="headerlink" title="1.6 Vue 循环"></a>1.6 Vue 循环</h3><p><code>v-for=“变量名 in 可遍历的对象”</code></p>
<p><code>v-for</code>指令实例：<br><img src="https://img-blog.csdnimg.cn/20210117133639478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="1-7-Vue-绑定事件"><a href="#1-7-Vue-绑定事件" class="headerlink" title="1.7 Vue 绑定事件"></a>1.7 Vue 绑定事件</h3><p><code> v-on:click</code><br><img src="https://img-blog.csdnimg.cn/20210117134420764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="1-8-实例-1-：输入文本，查看预览效果"><a href="#1-8-实例-1-：输入文本，查看预览效果" class="headerlink" title="1.8 实例-1 ：输入文本，查看预览效果"></a>1.8 实例-1 ：输入文本，查看预览效果</h3><p><img src="https://img-blog.csdnimg.cn/20210117140218529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="1-9-实例-2-：勾选复选框-显示图片"><a href="#1-9-实例-2-：勾选复选框-显示图片" class="headerlink" title="1.9 实例-2 ：勾选复选框-显示图片"></a>1.9 实例-2 ：勾选复选框-显示图片</h3><p><img src="https://img-blog.csdnimg.cn/20210117141728671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="1-10-实例-3-：博客发布-简易版"><a href="#1-10-实例-3-：博客发布-简易版" class="headerlink" title="1.10 实例-3 ：博客发布-简易版"></a>1.10 实例-3 ：博客发布-简易版</h3><p><img src="https://img-blog.csdnimg.cn/20210117144208281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210117144242331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="2-1-组件-自定义组件"><a href="#2-1-组件-自定义组件" class="headerlink" title="2.1 组件(自定义组件)"></a>2.1 组件(自定义组件)</h2><p>定义组件名时：使用 驼峰法 或 - 法<br>使用组件时，用 - 法<br>组件的属性在定义时要有双引号<kbd> "  "</kbd><br>组件的data的<strong>冒号后</strong>只能跟函数【函数的返回值可以是对象】，这点要与Vue对象区分开，且组件不能有el 键【这也与Vue对象不同】<br><img src="https://img-blog.csdnimg.cn/2021011715054395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="2-2-1-自定义组件-实例："><a href="#2-2-1-自定义组件-实例：" class="headerlink" title="2.2.1 自定义组件-实例："></a>2.2.1 自定义组件-实例：</h3><p><img src="https://img-blog.csdnimg.cn/20210117151523122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="3-1-常用指令"><a href="#3-1-常用指令" class="headerlink" title="3.1 常用指令"></a>3.1 常用指令</h2><blockquote>
<p>v-show： 显示、隐藏=》display:none;<br>v-if：显示、隐藏=》不渲染<br>v-else<br>v-else-if</p>
</blockquote>
<blockquote>
<p>v-text：插入vue的data中的值，相当于{{ }}<br>v-html ：可以插入html代码</p>
</blockquote>
<blockquote>
<p>v-bind：绑定属性<br>v-model：双向绑定数据<br>v-on：绑定事件，结合vue中的 `methods：{ 事件名：function(){ } } `来使用</p>
</blockquote>
<blockquote>
<p>v-for：循环</p>
</blockquote>
<h3 id="3-1-1-v-text-和"><a href="#3-1-1-v-text-和" class="headerlink" title="3.1.1 v-text 和 "></a>3.1.1 v-text 和  {{ }} </h3><ul>
<li><code>v-text</code>  : 等价于 {{ }}  ，当输出的内容为html代码时，{{}}原样输出，
而`v-html`会根据输出内容渲染
例如：
【以下两条指令等价，但  {{}}   在js加载缓慢时可能为显示出来】</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;&#123;% raw %&#125; &#123;&#123; msg &#125;&#125; &#123;% endraw %&#125;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p v-text=&quot;msg&quot;&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210117153705654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
  为避免{{ }} 插值时  ，因为加载速度慢而渲染出 大括号，可使用`v-cloak`来避免出现大括号
<p>【使用 <code>v-cloak</code>的前提是 在<code>&lt;style&gt; [v-cloak]&#123;display:none;&#125;&lt;/style&gt;</code>,然后在有 {{ }}  的标签中<code>v-cloak</code>】  </p>
<p><img src="https://img-blog.csdnimg.cn/20210117172433827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="3-1-2-v-for"><a href="#3-1-2-v-for" class="headerlink" title="3.1.2 v-for"></a>3.1.2 v-for</h3><p><img src="https://img-blog.csdnimg.cn/20210117161917689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="3-1-3-v-on"><a href="#3-1-3-v-on" class="headerlink" title="3.1.3 v-on"></a>3.1.3 v-on</h3><p><code>v-on</code>  等价于  <code>@</code></p>
<p>例如【以下二者等价】：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;button v-on:click=&quot;alertMsg&quot;&gt;点击1&lt;/button&gt;</span><br><span class="line">           </span><br><span class="line">&lt;button @click=&quot;alertMsg&quot;&gt;点击2&lt;/button&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/2021011716304391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><code>冒泡事件</code>：内层元素触发事件后，外层元素也会触发事件<br>例如：<br><img src="https://img-blog.csdnimg.cn/20210117165840328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>冒泡事件：<code>@click=&quot;helloMsg&quot;</code> </li>
<li>停止冒泡事件<code>事件.stop</code>：<code>v-on:click.stop=&quot;helloMsg&quot;</code> 即：<code>@click.stop=&quot;helloMsg&quot;</code> </li>
<li>鼠标事件【只有mousedown 事件才触发】：<ul>
<li><code>@mousedown.left=&quot;helloMsg&quot;</code>  ：鼠标左键</li>
<li> <code>@mousedown.right=&quot;helloMsg&quot;</code>：鼠标右键</li>
<li><code>@mousedown.middle=&quot;helloMsg&quot;</code>：鼠标滚轮 </li>
</ul>
</li>
<li>键盘事件【键盘按下某个键时才触发，键盘码 / ctrl / shift 等】：</li>
<li><code>@keydown.enter=&quot;hellMsg&quot;</code>：键盘按下回车</li>
</ul>
<h3 id="3-1-4-v-bind"><a href="#3-1-4-v-bind" class="headerlink" title="3.1.4 v-bind"></a>3.1.4 v-bind</h3><p><code>v-bind:</code> 绑定属性：  等价于 直接 <code>：</code><br>例如【以下二者等价】：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img v-bind:src=&quot;imgSrc&quot; alt=&quot;&quot;&gt;</span><br><span class="line">&lt;img :src=&quot;imgSrc&quot; alt=&quot;&quot;&gt;</span><br></pre></td></tr></table></figure>

<h3 id="3-1-6-实例：tab切换【v-show-或-v-if】"><a href="#3-1-6-实例：tab切换【v-show-或-v-if】" class="headerlink" title="3.1.6 实例：tab切换【v-show 或 v-if】"></a>3.1.6 实例：tab切换【v-show 或 v-if】</h3><p>快捷生成标签：</p>
<p><img src="https://img-blog.csdnimg.cn/20210117155449125.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210117155505200.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210117160113765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>或<br><img src="https://img-blog.csdnimg.cn/20210117160332375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="4-注意事项"><a href="#4-注意事项" class="headerlink" title="4. 注意事项"></a>4. 注意事项</h2><h3 id="4-1-取用Vue对象中的值"><a href="#4-1-取用Vue对象中的值" class="headerlink" title="4.1 取用Vue对象中的值"></a>4.1 取用Vue对象中的值</h3><p> 取用 Vue对象中的内容【设 vm为 Vue对象的名字】： <code>vm.$变量名</code><br><img src="https://img-blog.csdnimg.cn/20210117173258973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="4-2-watch-监听-指定属性-的属性值的变化"><a href="#4-2-watch-监听-指定属性-的属性值的变化" class="headerlink" title="4.2 .$watch:监听 指定属性 的属性值的变化"></a>4.2 <code>.$watch</code>:监听 指定属性 的属性值的变化</h3><p>第一种方式【Vue对象外】：<br><code>vm.$watch(&quot;属性名&quot;,function(新值，旧值)&#123; &#125;  )</code></p>
<p>第二种方式【Vue对象内】：<br><img src="https://img-blog.csdnimg.cn/20210118163855925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="4-3-Vue的生命周期"><a href="#4-3-Vue的生命周期" class="headerlink" title="4.3 Vue的生命周期"></a>4.3 Vue的生命周期</h3><h4 id="4-3-1-beforeCreate事件"><a href="#4-3-1-beforeCreate事件" class="headerlink" title="4.3.1 beforeCreate事件"></a>4.3.1 beforeCreate事件</h4><p>beforeCreate事件在new 完 Vue对象后马上触发，是第一个触发的事件【此时还没有事件的监听，即：<code>初始化之后，数据监听前（还没有数据）</code>】<br><img src="https://img-blog.csdnimg.cn/20210117182607184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="4-3-2-created事件【重要：绑定数据】"><a href="#4-3-2-created事件【重要：绑定数据】" class="headerlink" title="4.3.2 created事件【重要：绑定数据】"></a>4.3.2 created事件【重要：绑定数据】</h4><p>在 beforeCreate事件之后，dom元素之前【此时还没有事件的监听，即：<code>初始化之后，数据监听后（有数据了）</code>】，ajax赋值要在这个阶段之后</p>
<h4 id="4-3-3-beforeMount-事件"><a href="#4-3-3-beforeMount-事件" class="headerlink" title="4.3.3 beforeMount 事件"></a>4.3.3 beforeMount 事件</h4><p> beforeMount 事件：在dom元素产生之后，渲染之前触发，【即：有{{ }}且还没有处理{{ }}的阶段】</p>
<h4 id="4-3-4-mounted-事件【重要：绑定dom元素】"><a href="#4-3-4-mounted-事件【重要：绑定dom元素】" class="headerlink" title="4.3.4 mounted 事件【重要：绑定dom元素】"></a>4.3.4 mounted 事件【重要：绑定dom元素】</h4><p>mounted 事件：在dom元素渲染之后触发，【此时，已经可以识别元素】</p>
<h4 id="4-3-5-beforeUpdate-事件"><a href="#4-3-5-beforeUpdate-事件" class="headerlink" title="4.3.5 beforeUpdate 事件"></a>4.3.5 beforeUpdate 事件</h4><p>beforeUpdate 事件：在监听阶段（即：vm.$watch(属性名，function(){})），如果属性发生变化，则在渲染之前触发该事件</p>
<h4 id="4-3-6-updated-事件【重要：修改属性之后】"><a href="#4-3-6-updated-事件【重要：修改属性之后】" class="headerlink" title="4.3.6 updated 事件【重要：修改属性之后】"></a>4.3.6 updated 事件【重要：修改属性之后】</h4><p>updated 事件：在监听阶段，如果属性发生变化，则在渲染之后触发该事件</p>
<h4 id="4-3-7-beforeDestroy-事件"><a href="#4-3-7-beforeDestroy-事件" class="headerlink" title="4.3.7 beforeDestroy 事件"></a>4.3.7 beforeDestroy 事件</h4><p>beforeDestroy 事件:销毁之前触发</p>
<h4 id="4-3-8-Destroyed-事件"><a href="#4-3-8-Destroyed-事件" class="headerlink" title="4.3.8 Destroyed 事件"></a>4.3.8 Destroyed 事件</h4><p>beforeDestroy 事件:销毁之后触发</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue 入门-02</title>
    <url>/2021/08/04/Vue%E5%85%A5%E9%97%A8-02/</url>
    <content><![CDATA[<h1 id="Vue入门-02"><a href="#Vue入门-02" class="headerlink" title="Vue入门-02"></a>Vue入门-02</h1><p>[toc]</p>
<h2 id="1-1-计算属性【用于-数据处理】"><a href="#1-1-计算属性【用于-数据处理】" class="headerlink" title="1.1 计算属性【用于 数据处理】"></a>1.1 计算属性【用于 数据处理】</h2><p><strong>作用</strong>：为了不让 {{ }} 内的东西太长，使其不好维护，可先使用<code>计算属性</code>处理，处理完后的结果再在 {{ }} 中使用，【保证在 {{ }} 只写简单的逻辑】  </p>
<p><strong>计算属性</strong> 会很 <strong>快</strong>，因为使用了 <strong>缓存</strong>，【只计算1次，之后刷新页面时，直接从缓存调用 <code>计算属性</code>。除非属性值被修改了，才会再一次进行 computed】   </p>
<p><strong>格式：</strong>【定义在 conputed 中；定义时 格式类似函数，有小括号，有返回值；调用时 无需小括号】<br><img src="https://img-blog.csdnimg.cn/20210118161230581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="1-2-CSS-样式的绑定"><a href="#1-2-CSS-样式的绑定" class="headerlink" title="1.2 CSS 样式的绑定"></a>1.2 CSS 样式的绑定</h2><p><img src="https://img-blog.csdnimg.cn/20210118171547218.png" alt="在这里插入图片描述"></p>
<p>实例1：<br><img src="https://img-blog.csdnimg.cn/20210118165226196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210118165612375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>实例2【重要】<br><img src="https://img-blog.csdnimg.cn/20210118171331166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>实例3【指定默认样式，最终样式为：default + odd/even】<br><img src="https://img-blog.csdnimg.cn/20210118171831444.png" alt="在这里插入图片描述"><br>实例4【绑定style属性】<br><img src="https://img-blog.csdnimg.cn/20210118172421806.png" alt="在这里插入图片描述"></p>
<h2 id="1-3-数组的变更方法"><a href="#1-3-数组的变更方法" class="headerlink" title="1.3 数组的变更方法"></a>1.3 数组的变更方法</h2><p><img src="https://img-blog.csdnimg.cn/20210118173323306.png" alt="在这里插入图片描述"><br>以上这些方法可以在<strong>Vue对象内部</strong>  <code>变更数组</code>并刷新界面【对原数组进行改变】，<br>在Vue对象内部，可使用 <code>Vue.set(要被设置的对象，”属性名“，属性值)</code>，<br>在<strong>Vue对象外面</strong>，还可以使用 <code>vm.数组名.length=0</code>来变更数组，<br>除以上提及的方式外，其他方式均无法在Vue内部更改数组。【改了也不更新页面】<br><img src="https://img-blog.csdnimg.cn/20210118180023113.png" alt="在这里插入图片描述"><br>以上方法用 新数组  替换 旧数组</p>
<p>实例：【模糊查询】<br><img src="https://img-blog.csdnimg.cn/20210118183909419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>实例：计划表<br><img src="https://img-blog.csdnimg.cn/20210118191645297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210118191317308.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210118191444702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210118191621270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue 入门-03</title>
    <url>/2021/08/04/Vue%E5%85%A5%E9%97%A8-03-%E7%BB%84%E4%BB%B6(%E9%83%A8%E5%88%86)+vue%E8%B7%AF%E7%94%B1/</url>
    <content><![CDATA[<h1 id="Vue入门-03"><a href="#Vue入门-03" class="headerlink" title="Vue入门-03"></a>Vue入门-03</h1><p>[toc]</p>
<h2 id="1-1-Vue-cli-安装"><a href="#1-1-Vue-cli-安装" class="headerlink" title="1.1 Vue cli 安装"></a>1.1 Vue cli 安装</h2><ol>
<li>官网下载+安装 node.js：<a href="http://nodejs.cn/download/">node官网下载</a></li>
<li>配置 node.js 的 镜像源：<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></li>
<li>安装 vue:<code>npm install @vue/cli -g</code></li>
<li>使用cmd进入项目目录输入 vue ui 管理项目【不要关闭cmd】：<code>vue ui</code><br><img src="https://img-blog.csdnimg.cn/20210121093747655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121093904458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121094019976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121094221635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121094411293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121094544103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121094611966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121095832299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121095919324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>最终的目录下：<br><img src="https://img-blog.csdnimg.cn/20210121100242313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>展开 src目录：<br><img src="https://img-blog.csdnimg.cn/20210121100537873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121100556258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121101042308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121101228593.png" alt="在这里插入图片描述"><h2 id="1-2-Vue-组件"><a href="#1-2-Vue-组件" class="headerlink" title="1.2 Vue 组件"></a>1.2 Vue 组件</h2>组件的其他笔记可参见  <a href="https://blog.csdn.net/m0_46578592/article/details/112737312">vue笔记01</a></li>
</ol>
<p> 组件的两种方式：</p>
<ol>
<li>方式1【内部】：在script标签内<br><img src="https://img-blog.csdnimg.cn/2021012111022074.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>方式2【单独在外部写成1个文件】：<code>App.Vue</code>文件<br>App.vue最终会挂载到 HTML中<br><img src="https://img-blog.csdnimg.cn/20210121110724470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121111817442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h2 id="组件的使用步骤"><a href="#组件的使用步骤" class="headerlink" title="组件的使用步骤"></a>组件的使用步骤</h2></li>
</ol>
<ul>
<li>定义组件</li>
<li>App.vue 文件【相当于Vue对象】 中 手动引入 (<code>import</code>)自定义的组件文件【相当于 组件】</li>
<li>在App.vue模板中使用组件，编写事件</li>
<li>自动挂载到 Html</li>
<li><h3 id="1-2-1-创建组件并引入【外部组件】："><a href="#1-2-1-创建组件并引入【外部组件】：" class="headerlink" title="1.2.1 创建组件并引入【外部组件】："></a>1.2.1 创建组件并引入【外部组件】：</h3></li>
</ul>
<p>1.创建外部的组件<br><img src="https://img-blog.csdnimg.cn/20210121122353996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2. App.vue中导入刚才创建的组件：</p>
<p>【@符号表示：根目录，此例中为App.vue所在的src目录】<br>此例中，<code>demo1</code> 表示 <code>demo.vue整个文件</code>，<code>Demo</code>才是<code>真正的名字</code><br>将 <code>demo1</code> 放到对象 <code>components</code> 对象内的过程就是<code>注册组件</code>【此时组件才可以使用】<br>【注册时，如果组件的 <strong>调用名字</strong> 和 <strong>导出名字</strong>  一模<strong>一样</strong>，则可直接省略<code>名字:名字</code>中的冒号及之后的名字来简写】<br><img src="https://img-blog.csdnimg.cn/20210121124527572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="1-2-1-1-实例1-组件使用时-传值给自定义的属性："><a href="#1-2-1-1-实例1-组件使用时-传值给自定义的属性：" class="headerlink" title="1.2.1.1 实例1 组件使用时 传值给自定义的属性："></a>1.2.1.1 实例1 组件使用时 传值给自定义的属性：</h4><p><img src="https://img-blog.csdnimg.cn/20210121130542732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2021012113062640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>组件定义时的类型检查：<br><img src="https://img-blog.csdnimg.cn/20210121133534888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>自定义的属性 在定义时常用：</p>
<ul>
<li>type: 参见上图</li>
<li>require: true/false</li>
<li>default: 默认值<h4 id="1-2-1-2-实例2-【输入标题和内容，输出组件】："><a href="#1-2-1-2-实例2-【输入标题和内容，输出组件】：" class="headerlink" title="1.2.1.2 实例2 【输入标题和内容，输出组件】："></a>1.2.1.2 实例2 【输入标题和内容，输出组件】：</h4>组件定义：<br><img src="https://img-blog.csdnimg.cn/20210121132616948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<h4 id="1-2-1-3-实例3-【给自创的组件-定义事件】："><a href="#1-2-1-3-实例3-【给自创的组件-定义事件】：" class="headerlink" title="1.2.1.3 实例3 【给自创的组件 定义事件】："></a>1.2.1.3 实例3 【给自创的组件 定义事件】：</h4><p>在 组件定义 的时候 在 methods键 后的对象内定义1个函数，函数内绑定 自定义的<code>事件名</code>和<code>要返回的数据</code>，在<code>App.vue</code>文件中定义事件【该<strong>事件作为参数</strong> 传给 组件的事件（即：回调函数的语法）】，</p>
<h3 id="1-2-2-组件的内容-slot标签"><a href="#1-2-2-组件的内容-slot标签" class="headerlink" title="1.2.2 组件的内容 : slot标签"></a>1.2.2 组件的内容 : slot标签</h3><p>在定义时，用 <code>&lt;slot&gt;  &lt;/slot&gt;</code>作为 组件内容的占位符，当组件使用时，就会用 组件 包裹的部分来替换掉 slot 标签</p>
<h2 id="1-3-Vue-路由"><a href="#1-3-Vue-路由" class="headerlink" title="1.3 Vue 路由"></a>1.3 Vue 路由</h2><p>Vue路由用到了组件，下图中 组件 router-view 相当于是 1个小页面，当点击router-link时，router-view 中的内容就会根据组件的内容改变【相当于 frame】</p>
<p><a href="https://router.vuejs.org/zh/guide/#html">vue路由-官网</a><br><img src="https://img-blog.csdnimg.cn/20210119131025839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>组件调用：<br><img src="https://img-blog.csdnimg.cn/20210121132924901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="1-3-1-Vue-路由-前置知识实例："><a href="#1-3-1-Vue-路由-前置知识实例：" class="headerlink" title="1.3.1 Vue 路由-前置知识实例："></a>1.3.1 Vue 路由-前置知识实例：</h3><p>目标页面：【变化部分为 .container】<br><img src="https://img-blog.csdnimg.cn/20210121155547745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="1-3-1-1-组件的-css-样式"><a href="#1-3-1-1-组件的-css-样式" class="headerlink" title="1.3.1.1 组件的 css 样式"></a>1.3.1.1 组件的 css 样式</h4><p>3种：</p>
<ul>
<li>默认【样式重名时，样式会污染出去】：<code>&lt;style&gt;       &lt;/style&gt;</code></li>
<li>scoped【样式只在定义的文件中有效】: <code>&lt;style scoped&gt;      &lt;/style&gt;</code></li>
</ul>
<h4 id="1-3-1-2-left组件"><a href="#1-3-1-2-left组件" class="headerlink" title="1.3.1.2 left组件"></a>1.3.1.2 left组件</h4><p>router-view 跟着 router-link 变化<br><img src="https://img-blog.csdnimg.cn/20210121164057933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121164906518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>上图中，<br>path就是地址栏的变化，<br><code>/about</code> 最后导入的组件显示在 router-view 中</p>
<p>实例1：【 <strong>left中 的点击 router-link</strong>  使    <strong>container 中的 router-view 变化</strong>】</p>
<p><img src="https://img-blog.csdnimg.cn/20210121170344391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121170532683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121170714448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="基本路由的大致步骤小结"><a href="#基本路由的大致步骤小结" class="headerlink" title="基本路由的大致步骤小结"></a>基本路由的大致步骤小结</h3><p>【在默认的情况下，点击链接所在的组件，让router-view变化】：</p>
<ul>
<li>定义组件</li>
<li>在App.vue中定义router-view</li>
<li>在某个组件中定义router-link，且router-link标签的 to 属性绑定 地址</li>
<li>在 views 目录下 定义组件，由于点击链接后显示</li>
<li>在 router/index 中 绑定 地址栏的变化 与 导入组件的关系【注册路由】</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20210121172438231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="1-3-2-动态路由【地址栏传参数】"><a href="#1-3-2-动态路由【地址栏传参数】" class="headerlink" title="1.3.2 动态路由【地址栏传参数】"></a>1.3.2 动态路由【地址栏传参数】</h3><p><img src="https://img-blog.csdnimg.cn/20210121175810568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121180036456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>HTML中如果需要获取地址栏的参数：<code> {{ $route.params.参数名}} </code><br>JS 中使用地址栏的参数：<br><img src="https://img-blog.csdnimg.cn/20210121191630300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>实例1：</p>
<ul>
<li>目标：点击 left中的“博客” =》 右侧出现 博客的title,点击title,跳转到显示pid的界面【pid为地址栏中的博客id】</li>
<li>主要 需修改 的文件：<ul>
<li> left.vue组件</li>
<li> 路由【包括：左侧导航栏的路由，博文列表中每1项的路由】</li>
<li> Articels.vue组件: 存放博文列表</li>
<li>article.vue：博文内容</li>
</ul>
</li>
</ul>
<p>left.vue组件：点击后显示博客的标题列表<br><img src="https://img-blog.csdnimg.cn/20210121190127215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121190229322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121190401380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121190544132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121191840694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ol>
<li>在 函数中使用 地址栏中的参数-实例：<br><code>this.$route.params.地址栏参数名</code><br>【假设 data 是 ajax 获取的数据集，根据地址栏的参数id 来匹配 data中的每一项，将不符合条件的过滤掉，最后取 过滤后的数组的第1项 来显示】<br><img src="https://img-blog.csdnimg.cn/20210121192834676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h3 id="子组件向父组件传值："><a href="#子组件向父组件传值：" class="headerlink" title="子组件向父组件传值："></a>子组件向父组件传值：</h3></li>
</ol>
<ul>
<li>子组件 先 绑定<strong>方法</strong></li>
<li>子组件的方法中 再 绑定<strong>事件</strong>：<code>$emit(&quot;小写的事件名&quot;，this.$data)</code></li>
<li>父组件 的方法的参数名为data, </li>
<li>父组件使用子组件时，将父组件中的<strong>方法</strong> =&gt; <strong>传入</strong> 子组件的<strong>事件</strong>中</li>
</ul>
<h3 id="组件嵌套的路由"><a href="#组件嵌套的路由" class="headerlink" title="组件嵌套的路由"></a>组件嵌套的路由</h3><p>要使用路由一般要有以下条件：</p>
<ul>
<li>路由注册【path，要导入的组件】:最重要</li>
<li>route-view</li>
<li>route-link<br><img src="https://img-blog.csdnimg.cn/20210121200043973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h3 id="1-4-命名路由"><a href="#1-4-命名路由" class="headerlink" title="1.4 命名路由"></a>1.4 命名路由</h3><img src="https://img-blog.csdnimg.cn/20210121202032986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在 js 的方法中中可使用【name需要params；path需要拼接】：</li>
<li> <code>this.$router.push(地址)</code>  </li>
<li> <code>this.$router.push(&#123;path:&quot;地址&quot;,query:&#123;参数名：参数值，参数名：参数值&#125;&#125;)</code></li>
<li> <code>this.$router.push(&#123;name:&quot;路由名&quot;&#125;)</code></li>
<li><code>this.$router.push(&#123;name:&quot;路由名&quot;,params:&#123;参数名：参数值，参数名：参数值&#125;&#125;)</code></li>
</ul>
<h3 id="1-5-去掉使用路由时，地址栏上的-号"><a href="#1-5-去掉使用路由时，地址栏上的-号" class="headerlink" title="1.5 去掉使用路由时，地址栏上的#号"></a>1.5 去掉使用路由时，地址栏上的#号</h3><p><img src="https://img-blog.csdnimg.cn/2021012120374382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210121204319530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue 入门-04</title>
    <url>/2021/08/04/Vue%E5%85%A5%E9%97%A8-04/</url>
    <content><![CDATA[<h1 id="Vue入门-04"><a href="#Vue入门-04" class="headerlink" title="Vue入门-04"></a>Vue入门-04</h1><p>[toc]</p>
<h2 id="1-1-Vuex"><a href="#1-1-Vuex" class="headerlink" title="1.1 Vuex"></a>1.1 Vuex</h2><p>使用 Vuex 可以在整个Vue项目中共享数据【类似 数据库的作用】<br>=》官方叫<code>状态管理模式</code><br><img src="https://img-blog.csdnimg.cn/20210122104027301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>项目中要使用 vuex 必须要 <code>use</code> 来应用【vue 的 router 也一样】<br><img src="https://img-blog.csdnimg.cn/20210122104249153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> vuex 的路径：<code>/src/store/index.js</code><br> <img src="https://img-blog.csdnimg.cn/20210122104820568.png" alt="在这里插入图片描述"><br>首先，在<code>/store/index.js</code>文件中引入vuex，并导出1个store对象，<br>在<code>main.js</code>文件中导入 <code>/store/index.js</code>文件，并在Vue对象中注册<br><img src="https://img-blog.csdnimg.cn/202101221056369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210122105030964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210122110141606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="实例1【获取数据】："><a href="#实例1【获取数据】：" class="headerlink" title="实例1【获取数据】："></a>实例1【获取数据】：</h3><ul>
<li>store中的state里面写数据</li>
<li>store中的getters方法</li>
<li>在要使用数据的组件中导入vuex的 mapGetters</li>
<li>在计算属性computed中 使用<code>...mapGetters([&quot;getter方法名1&quot;，“getter方法名2”])</code></li>
<li>利用  来使用数据<br><img src="https://img-blog.csdnimg.cn/20210122113209775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/2021012211431555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="实例2【获取数据】："><a href="#实例2【获取数据】：" class="headerlink" title="实例2【获取数据】："></a>实例2【获取数据】：</h3><p><img src="https://img-blog.csdnimg.cn/20210122114921444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210122115028541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="实例3-【设置数据】"><a href="#实例3-【设置数据】" class="headerlink" title="实例3 【设置数据】"></a>实例3 【设置数据】</h3><p><img src="https://img-blog.csdnimg.cn/20210122122416420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210122122915950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows批处理命令—入门</title>
    <url>/2021/08/04/Windows%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4-%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="Windows批处理命令—入门"><a href="#Windows批处理命令—入门" class="headerlink" title="Windows批处理命令—入门"></a>Windows批处理命令—入门</h1><p>@[toc]</p>
<h3 id="1-解决-cmd-中文乱码"><a href="#1-解决-cmd-中文乱码" class="headerlink" title="1. 解决 cmd  中文乱码"></a>1. 解决 cmd  中文乱码</h3><p><img src="https://img-blog.csdnimg.cn/20201203130339914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201203130429604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201203130651236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>cmd中输入：<code>chcp 65001</code> 将 编码改为 UTF-8<br><img src="https://img-blog.csdnimg.cn/202012031309099.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>若以上方法无效，则：</p>
<blockquote>
<p>bat文件右键用“ 编辑”  打开，<br>另存为时，UTF-8保存为ANSI 格式。即可解决运行是乱码问题</p>
</blockquote>
<h3 id="2-批处理文件"><a href="#2-批处理文件" class="headerlink" title="2. 批处理文件"></a>2. 批处理文件</h3><p>批处理文件 就是 将多条DOS命令放在一个<code>.bat</code> 文件中，运行时，依次执行文件中编写的 DOS命令<br><img src="https://img-blog.csdnimg.cn/20201203133633685.png" alt="在这里插入图片描述"></p>
<h3 id="3-切换目录"><a href="#3-切换目录" class="headerlink" title="3. 切换目录"></a>3. 切换目录</h3><p>cd【即：change directory 更改当前目录】</p>
<ul>
<li>进入驱动器，如：<code>d:</code></li>
<li>进入文件夹，如：<code>cd d:\abc\Test.txt</code></li>
</ul>
<p><code>cls</code>：清屏<br><code>set</code> ：查看环境变量</p>
<h3 id="4-获取当前-批处理文件-所在的目录"><a href="#4-获取当前-批处理文件-所在的目录" class="headerlink" title="4. 获取当前 批处理文件 所在的目录"></a>4. 获取当前 批处理文件 所在的目录</h3><p>“d” ： Drive的缩写，即为驱动器<br>“p”：  Path缩写，即为路径，目录<br><code>cd %~dp0 </code>：进入批处理所在目录<br><code>cd %~dp0bin\ </code>：进入批处理所在目录的bin目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title 批处理演示</span><br><span class="line">:: 你当前的位置是 %time%</span><br><span class="line"><span class="built_in">echo</span>   你当前的位置是：%~dp0</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>


<p>命令解析： </p>
<ul>
<li><code>::</code> 表示后面内容为批处理文件中<strong>注释</strong>，相当于命令<code>rem</code></li>
<li><code>echo</code> : 命令是什么，就在控制台打印什么</li>
<li><code>pause</code>： 中断批处理文件，并等待用户输入任意字符</li>
<li><code>title</code>：设置当前cmd 窗口的标题</li>
<li><code>%time%</code>：获取当前的时间</li>
</ul>
<p><code>%cd%</code>  和 <code>%~dp</code>的区别：</p>
<ol>
<li>当 批处理文件中 <strong>没有调用 另外的文件夹</strong>中的批处理文件时，两者取出的值<strong>一样</strong></li>
<li>如果有调用别的目录下的批处理文件，则 <code>%cd%</code>仍然是当前批处理文件的目录，但<code>%~dp0</code>变为<strong>被调用的</strong>批处理文件所在的<strong>目录</strong> </li>
</ol>
<p><strong>小结：</strong> </p>
<ol>
<li><code>%~dp0</code>：当前正在执行的批处理文件所在的目录</li>
<li><code>%cd%</code>： 当前主文件的目录，一般不变</li>
</ol>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span>   你当前的位置是：%~dp0</span><br><span class="line">pause</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span>   你当前的工作目录是：%<span class="built_in">cd</span>%</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>









<h3 id="5-杀进程："><a href="#5-杀进程：" class="headerlink" title="5. 杀进程："></a>5. 杀进程：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">taskkill -f /im notepad.exe</span><br><span class="line"><span class="built_in">echo</span> 杀死记事本进程</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20201203141751336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="6-获取帮助"><a href="#6-获取帮助" class="headerlink" title="6. 获取帮助"></a>6. 获取帮助</h3><p>例如：<code>taskkill  /?</code><br><img src="https://img-blog.csdnimg.cn/20201203142030518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="7-常用命令"><a href="#7-常用命令" class="headerlink" title="7. 常用命令"></a>7. 常用命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//查看系统版本的命令的语法【/？】</span><br><span class="line">ver /?</span><br><span class="line"></span><br><span class="line">//启动1个cmd实例</span><br><span class="line">cmd /?</span><br><span class="line"></span><br><span class="line">//查看环境变量</span><br><span class="line"><span class="built_in">set</span> /?</span><br><span class="line"></span><br><span class="line">//注释，相当于::</span><br><span class="line">rem /?</span><br><span class="line"></span><br><span class="line">//条件判断</span><br><span class="line"><span class="keyword">if</span> /?</span><br><span class="line"></span><br><span class="line">//<span class="built_in">echo</span>后是什么就打印什么</span><br><span class="line"><span class="built_in">echo</span> /?</span><br><span class="line"></span><br><span class="line">//跳转，可与:标签名 结合形成循环</span><br><span class="line">goto /?</span><br><span class="line"></span><br><span class="line">//循环</span><br><span class="line"><span class="keyword">for</span> /?</span><br><span class="line"></span><br><span class="line">//更改批处理文件中可替换参数的位置</span><br><span class="line"><span class="built_in">shift</span> /?</span><br><span class="line"></span><br><span class="line">//调用别的批处理文件</span><br><span class="line">call /?</span><br><span class="line"></span><br><span class="line">//显示文本内容</span><br><span class="line"><span class="built_in">type</span> /?</span><br><span class="line"></span><br><span class="line">//查找,find <span class="string">&quot;要找的字符串&quot;</span> 文件名</span><br><span class="line">find /?</span><br><span class="line"></span><br><span class="line">//查找,find <span class="string">&quot;要找的字符串&quot;</span> 文件名</span><br><span class="line">findstr /?</span><br><span class="line"></span><br><span class="line">//将文件复制到另外的位置，copy src dis</span><br><span class="line">copy /?</span><br></pre></td></tr></table></figure>






<h3 id="8-运行的时候-传参"><a href="#8-运行的时候-传参" class="headerlink" title="8. 运行的时候 传参"></a>8. 运行的时候 传参</h3><p>例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//在批处理文件 a.bat中输入下列内容</span><br><span class="line">call b.bat <span class="string">&quot;hello&quot;</span> <span class="string">&quot;haha&quot;</span></span><br></pre></td></tr></table></figure>


<p>命令解释：</p>
<ul>
<li>批处理文件的参数最多10个【0~9】</li>
<li>参数0 表示本身，如上面代码中：<code>call   b.bat    &quot;hello&quot;</code>表示调用<code>b.bat</code>文件，并将”hello“ 作为参数传给<code>b.bat</code>文件。在<code>b.bat</code>文件内，执行<code>echo %0</code>表示打印当前文件名，执行<code>echo %</code>表示打印传入的第一个参数【即：”hello“】</li>
</ul>
<h3 id="9-echo"><a href="#9-echo" class="headerlink" title="9. echo"></a>9. echo</h3><p>语法：</p>
<ol>
<li><code>echo   on/off  </code>: 打开或关闭提示【不显示输入的过程，只显示执行结果】</li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20201203144846250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201203145037860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="10-符号"><a href="#10-符号" class="headerlink" title="10. @符号"></a>10. @符号</h3><p>@与echo off 相似，用于隐藏 带@的命令的输入<br><img src="https://img-blog.csdnimg.cn/20201203145545385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201203145641769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>在回显的同时将内容覆盖输入文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> hello  &gt; d:\Test.txt</span><br></pre></td></tr></table></figure>




<p><strong>在回显的同时将内容追加输入文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> hello  &gt;&gt; d:\Test.txt</span><br></pre></td></tr></table></figure>






<h3 id="11-goto"><a href="#11-goto" class="headerlink" title="11. goto"></a>11. goto</h3><p>实例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> a=0</span><br><span class="line"></span><br><span class="line">:label_1</span><br><span class="line"><span class="keyword">if</span> a == 0 </span><br><span class="line">(<span class="built_in">echo</span> <span class="string">&quot;hello&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>(goto label_1)</span><br></pre></td></tr></table></figure>
<p>命令解析：</p>
<ul>
<li>设1个变量<code>a</code>，<code>a</code>的值为<code>0</code>时，打印<code>hello</code>，否则跳转到 <code>label_1</code>位置重新执行语句</li>
</ul>
]]></content>
      <categories>
        <category>后端</category>
        <category>操作系统</category>
        <category>Windows使用</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows操作系统使用-笔记</title>
    <url>/2021/08/04/Windows%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Windows操作系统使用-笔记"><a href="#Windows操作系统使用-笔记" class="headerlink" title="Windows操作系统使用-笔记"></a>Windows操作系统使用-笔记</h1><p>[toc]</p>
<h2 id="1-Windows-磁盘管理"><a href="#1-Windows-磁盘管理" class="headerlink" title="1. Windows-磁盘管理"></a>1. Windows-磁盘管理</h2><p><img src="https://z3.ax1x.com/2021/06/02/2QD0v8.png" alt="windows磁盘管理"></p>
<p><img src="https://z3.ax1x.com/2021/06/02/2QDg5n.png" alt="windows磁盘管理-2"></p>
<h2 id="2-DOS"><a href="#2-DOS" class="headerlink" title="2. DOS"></a>2. DOS</h2><p><a href="https://blog.csdn.net/m0_46578592/article/details/110527563">批处理笔记-链接</a></p>
<h4 id="1-更改cmd-的窗口背景色及字体颜色"><a href="#1-更改cmd-的窗口背景色及字体颜色" class="headerlink" title="1. 更改cmd 的窗口背景色及字体颜色"></a>1. 更改cmd 的<em>窗口背景色</em>及<em>字体颜色</em></h4><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"> 颜色属性由两个十六进制数字指定 --(如： <span class="built_in">color</span> fc)</span><br><span class="line"></span><br><span class="line">		  第一个	 十六进制数字 对应于背景</span><br><span class="line"></span><br><span class="line">		  第二个    十六进制数字 对应于前景</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  每个数字</span><br><span class="line">	可以为以下任何值:</span><br><span class="line"></span><br><span class="line">			 <span class="number">0</span>=黑色       <span class="number">8</span>=灰色</span><br><span class="line"></span><br><span class="line">		  	 <span class="number">1</span>=蓝色       <span class="number">9</span>=淡蓝色</span><br><span class="line"></span><br><span class="line">		   	 <span class="number">2</span>=绿色       A=淡绿色</span><br><span class="line"></span><br><span class="line">		   	 <span class="number">3</span>=浅绿色     B=淡浅绿色</span><br><span class="line"></span><br><span class="line">	    	 <span class="number">4</span>=红色       C=淡红色</span><br><span class="line"></span><br><span class="line">	    	 <span class="number">5</span>=紫色       D=淡紫色</span><br><span class="line"></span><br><span class="line">	    	 <span class="number">6</span>=黄色       E=淡黄色</span><br><span class="line"></span><br><span class="line">	    	 <span class="number">7</span>=白色       F=亮白色  </span><br><span class="line"></span><br><span class="line">	  </span><br><span class="line"></span><br><span class="line">如果没有给定任何参数，此命令会将颜色还原到 <span class="built_in">cmd</span>.exe 启动时的颜色。</span><br><span class="line"></span><br><span class="line">		这个值来自当前控制台窗口、</span><br><span class="line">		/T 命令行开关,</span><br><span class="line">		或 DefaultColor 注册表	值。  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">如果尝试使用相同的	前景和背景颜色  来执行  <span class="built_in">COLOR</span> 命令，<span class="built_in">COLOR</span> 命令会将 <span class="keyword">ERRORLEVEL</span> 设置为 <span class="number">1</span>。  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例: &quot;<span class="built_in">COLOR</span> fc&quot; 在亮白色上产生淡红色</span><br><span class="line"></span><br><span class="line">	  <span class="built_in">color</span> <span class="number">0</span>a		//第一个对应于背景，第二个对应于前景		    	 </span><br></pre></td></tr></table></figure>










<h4 id="2-ipconfig"><a href="#2-ipconfig" class="headerlink" title="2. ipconfig"></a>2. ipconfig</h4> <figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span>                       ... 显示信息</span><br><span class="line"></span><br><span class="line"><span class="built_in">ipconfig</span> /all                  ... 显示详细信息</span><br><span class="line"></span><br><span class="line"><span class="built_in">ipconfig</span> /renew                ... 更新所有适配器</span><br><span class="line"></span><br><span class="line"><span class="built_in">ipconfig</span> /renew EL*            ... 更新所有名称以 EL 开头的连接</span><br><span class="line"></span><br><span class="line"><span class="built_in">ipconfig</span> /release *<span class="built_in">Con</span>*        ... 释放所有匹配的连接，</span><br><span class="line">                                         例如“有线以太网连接 <span class="number">1</span>”或</span><br><span class="line">                                             “有线以太网连接 <span class="number">2</span>”</span><br><span class="line">                                             </span><br><span class="line"><span class="built_in">ipconfig</span> /allcompartments /all ... 显示有关所有隔离舱的详细信息                                             </span><br><span class="line"><span class="built_in">ipconfig</span> /allcompartments      ... 显示有关所有隔离舱的信息</span><br></pre></td></tr></table></figure>





<h4 id="3-net-user-显示所有-网络用户账号"><a href="#3-net-user-显示所有-网络用户账号" class="headerlink" title="3. net user(显示所有 网络用户账号)"></a>3. net user(显示所有 网络用户账号)</h4><h4 id="4-文件管理"><a href="#4-文件管理" class="headerlink" title="4. 文件管理"></a>4. 文件管理</h4><blockquote>
<p>   文件路径                                             : <code>D:\abc\1.txt</code><br>   列出文件(包括隐藏的)                       : <code>dir  /a    </code><br>   执行完命令后<strong>不退出cmd</strong>                 : <code>pause </code><br>   改变窗口<strong>标题</strong>                                    : <code>title 想要的标题</code><br>   <strong>清屏</strong>                                                   : <code>cls  </code><br>   <strong>读取</strong>文件                                           :<code> type 文件名</code><br>   将<strong>源文件内容</strong>输出到<strong>目标文件</strong>        : <code>copy 源文件 目标文件 </code>,<code>例如： copy con ./1.txt</code><br>   <strong>剪切</strong>文件                                       : <code>move  源文件全名     目标文件全名</code><br>   设置<strong>隐藏文件</strong>        : <code>attrib  +/- h   文件名.后缀</code>   ,其中： <code>h隐藏文件 , s系统级的文件 ，a追加写</code>  </p>
<p>   <strong>隐藏当前文件夹</strong>内部的所有文件    : 只输入 attrib </p>
<p>   <strong>创建文件</strong>                                          ： <code>fsutil  file  createnew  文件名   文件大小（单位：字节）</code> </p>
   <figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">例如：</span><br><span class="line">		fsutil  file  createnew  d:\system.ini   文件大小(单位：字节)  </span><br><span class="line"></span><br><span class="line">			如果配合  <span class="built_in">attrib</span> +a;+s;+h   就可以减少硬盘存储而找不到原因  </span><br></pre></td></tr></table></figure>

<p>   <strong>创建文件夹</strong>                              : <code>md 文件夹名</code>        </p>
<p>   <strong>文件/文件夹重命名</strong>                : <code>ren  旧名  新名</code> </p>
<p>   <strong>删除文件</strong>                                 : <code>del  文件名</code>                                            </p>
   <figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">例如：	<span class="built_in">del</span> *.* /s/q  &gt;<span class="built_in">nul</span>   <span class="number">2</span>&gt;<span class="built_in">nul</span>    </span><br><span class="line">    </span><br><span class="line">	  //删除所有文件，</span><br><span class="line">	  		/s 表示递归 ，</span><br><span class="line">	  		/q表示让系统不再弹出确认的询问信息，</span><br><span class="line">	  		<span class="number">1</span>&gt;<span class="built_in">nul</span> 不再弹出正确提示，</span><br><span class="line">	  		<span class="number">2</span>&gt;<span class="built_in">nul</span> 不再弹出错误提示	</span><br></pre></td></tr></table></figure>

<pre><code>**删除文件夹**                        : `rd  文件夹名    `

更改**文件关联性** 
</code></pre>
   <figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">assoc</span>  .txt = exefile			</span><br><span class="line">						//将txt文件与exe文件关联，让系统认为 txt程序 是 exe程序</span><br><span class="line"></span><br><span class="line"><span class="built_in">assoc</span>  .txt = txtfile	</span><br><span class="line">						//改回来</span><br></pre></td></tr></table></figure>
</blockquote>
<h4 id="5-杀进程"><a href="#5-杀进程" class="headerlink" title="5. 杀进程"></a>5. 杀进程</h4><blockquote>
<p><code>taskkill -im 进程名(如:notepad.exe) /f  &gt;nul 2&gt;nul</code>                                                        </p>
<p>​                                            表示：杀死进程，强制，不提示正确/错误 信息  </p>
</blockquote>
<h4 id="6-关机-重启-注销"><a href="#6-关机-重启-注销" class="headerlink" title="6.关机/重启/注销:"></a>6.关机/重启/注销:</h4><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">shutdown -s -t 时间（秒）				//关机，；-r 重启；-f 强制执行；-c “ 提示信息xxx”</span><br><span class="line"></span><br><span class="line">shutdown -s -f -t  秒数  -c &quot;文字xxx&quot;</span><br><span class="line"></span><br><span class="line">shutdown -a								// -a 可以取消命令</span><br><span class="line"></span><br><span class="line">shutdown -l 							//注销，==logoff</span><br></pre></td></tr></table></figure>



<h4 id="7-输出"><a href="#7-输出" class="headerlink" title="7. 输出"></a>7. 输出</h4><blockquote>
<p>   输出空行            : <code>echo.</code>    </p>
<p>   路径提示            :     </p>
<p>   ​                            @echo off          //关掉路径提示信息<br>   ​                            @echo on        //开启路径提示信息  </p>
</blockquote>
<h4 id="8-查看本地开放的所有端口：-1个端口对应1个服务"><a href="#8-查看本地开放的所有端口：-1个端口对应1个服务" class="headerlink" title="8.  查看本地开放的所有端口：[1个端口对应1个服务]"></a>8.  查看本地开放的所有端口：[1个端口对应1个服务]</h4><blockquote>
<p>  netstat -an</p>
</blockquote>
<h2 id="3-批处理脚本"><a href="#3-批处理脚本" class="headerlink" title="3. 批处理脚本"></a>3. 批处理脚本</h2><p>win10 启动路径：</p>
<ul>
<li>  C:\ProgramData\Microsoft\Windows\Start Menu\Programs</li>
</ul>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">后缀 	：  .bat</span><br><span class="line"></span><br><span class="line">作用	：  自上而下，执行命令，直到执行完所有命令（即使中间有命令无法执行，也不会停止）</span><br><span class="line"></span><br><span class="line">命令	：  dos命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	设置变量： <span class="builtin-name">set</span> <span class="attribute">a</span>=1</span><br><span class="line">	取变量	：  %a%</span><br><span class="line">	</span><br><span class="line">	由用户输入变量的值： <span class="builtin-name">set</span> /p a=</span><br><span class="line">	</span><br><span class="line">	位置变量(代表参数)： 如 shutdown -s -t %1</span><br><span class="line">	</span><br><span class="line">					0:代表批处理本身</span><br><span class="line">					1：代表第一个参数	</span><br><span class="line">	</span><br><span class="line">	跳转命令：  【  ：和 goto 连用  】	 </span><br></pre></td></tr></table></figure>











<h2 id="4-用户管理"><a href="#4-用户管理" class="headerlink" title="4. 用户管理"></a>4. 用户管理</h2><h4 id="1-SID"><a href="#1-SID" class="headerlink" title="1. SID"></a>1. SID</h4><p>在 Windows中 每个登录到系统的用户都有相应的用户ID【UID】</p>
<ul>
<li>  用户ID = 系统ID（SID） + 用户编号</li>
<li>  用户编号：管理员（500），普通（1000）</li>
<li>  账号与密码存放在 【C:\Windows\System32\config\SAM】，使用哈希算法【不可逆。安全】</li>
</ul>
<h4 id="2-系统默认账号【基本的5个】"><a href="#2-系统默认账号【基本的5个】" class="headerlink" title="2. 系统默认账号【基本的5个】"></a>2. 系统默认账号【基本的5个】</h4><ul>
<li>给人使用的：<ul>
<li>  administrator:管理员</li>
<li>  guest：来宾【默认禁用】</li>
</ul>
</li>
<li>给计算机使用的：<ul>
<li>  system：系统账户，权力最高</li>
<li>  local services：本地服务账户，普通用户</li>
<li>  network services : 网络服务账户，普通用户</li>
</ul>
</li>
</ul>
<h4 id="3-每个用户都有自己的home目录【存放配置文件】"><a href="#3-每个用户都有自己的home目录【存放配置文件】" class="headerlink" title="3. 每个用户都有自己的home目录【存放配置文件】"></a>3. 每个用户都有自己的home目录【存放配置文件】</h4><p>即：profile</p>
<p>如： 【C:\Users】</p>
<p>查看 当前用户: whoami </p>
<p>查看 当前用户的SID：whoami /user</p>
<p>在管理员权限下：</p>
<p>cmd:</p>
<ul>
<li>  【修改密码】net user 用户名 密码</li>
<li>  【新建用户】net user  用户名 密码  /add</li>
<li>  【删除用户】net user 用户名 /del</li>
<li>  【查看用户】net user</li>
<li>  【激活/禁用账户】 net user  用户名   /active: yes/no</li>
</ul>
<h4 id="4-用户组"><a href="#4-用户组" class="headerlink" title="4. 用户组"></a>4. 用户组</h4><p>为简化权限设置【给组划分权限，将相应权限的用户划分到相应组】</p>
<ul>
<li>  管理员</li>
<li>  来宾</li>
<li>  用户</li>
<li>  网络</li>
<li>  打印机</li>
<li>  远程桌面</li>
</ul>
<p><strong>cmd命令：</strong></p>
<ul>
<li>  【查看所有本地组】：net     localgroup     </li>
<li>  【查看指定的用户组】： net  localgroup 用户组名</li>
<li>  【添加用户到指定的用户组】： net  localgroup 用户组名 用户名   /add</li>
<li>  【删除用户到指定的用户组】： net  localgroup 用户组名 用户名   /del</li>
</ul>
<p>添加用户/用户组：</p>
<ul>
<li>  右键计算机</li>
<li>  管理</li>
<li>  用户/用户组</li>
</ul>
<h2 id="5-远程管理"><a href="#5-远程管理" class="headerlink" title="5. 远程管理"></a>5. 远程管理</h2><h4 id="1-远程桌面【端口号：3389】"><a href="#1-远程桌面【端口号：3389】" class="headerlink" title="1. 远程桌面【端口号：3389】"></a>1. 远程桌面【端口号：3389】</h4><p>步骤：【如果<strong>客户端不是管理员</strong>，则需要在<strong>服务器</strong>上将该用户加入 <strong>远程桌面用户组</strong>】</p>
<ul>
<li>  保证 客户端 和 服务器之间 能够 ping通</li>
<li>服务器 允许被 远程访问：<ul>
<li>  桌面右键属性</li>
<li>  远程设置</li>
<li>  选择允许</li>
<li>  确定</li>
</ul>
</li>
<li>客户端上<ul>
<li>  win + R</li>
<li>  mstsc</li>
<li>  输入IP地址</li>
<li>  确定</li>
<li>  输入用户名和密码</li>
</ul>
</li>
</ul>
<h4 id="2-telnet"><a href="#2-telnet" class="headerlink" title="2. telnet"></a>2. telnet</h4><p>步骤：</p>
<p>服务器：</p>
<ul>
<li>  将账户加入到 telnet客户机组</li>
</ul>
<p>客户端：</p>
<ul>
<li>  在service.msc中开启telnet服务[xp]，在cmd中使用telnet</li>
</ul>
<h2 id="6-文件共享"><a href="#6-文件共享" class="headerlink" title="6. 文件共享"></a>6. 文件共享</h2><p>【CIFS 协议，445端口（tcp和udp都有）】</p>
<ul>
<li>  右键</li>
<li>  文件/文件夹</li>
<li>  共享</li>
<li>  高级共享    </li>
</ul>
<ul>
<li>   共享此文件夹</li>
<li>   设置共享名（指的是客户端远程访问该共享文件夹时看到的文件夹名）    -    共享名后加1个$表示是隐藏的共享文件</li>
<li>   设置权限（共享文件夹的权限收到共享权限和NTFS权限共同影响）</li>
<li>   访问：win+R ,输入：<code>\\地址</code></li>
</ul>
<p>创建共享：</p>
<ul>
<li>  cmd</li>
<li>  net share 共享名= 路径【如：net share c$ = c:\】</li>
</ul>
<p>默认情况下所有盘符都共享【不安全！！】：</p>
<p>因此，需要关闭共享：</p>
<ul>
<li>方法1：<ul>
<li>  右键-计算机-管理-服务-找到server-禁用</li>
</ul>
</li>
<li>方法2【暂时的，重启就失效】：<ul>
<li>  cmd -输入 net share  共享名  /del </li>
</ul>
</li>
<li>  方法3【修改注册表】</li>
<li>  方法4：【防火墙的入站规则】</li>
<li>  方法5：将删除共享的命令保存为批处理命令格式，然后放入启动目录</li>
</ul>
<h2 id="7-PE系统"><a href="#7-PE系统" class="headerlink" title="7. PE系统"></a>7. PE系统</h2><p>PE:微型维修系统，由于容量小，只能用于维修</p>
<p>使用PE破解window密码步骤:</p>
<ul>
<li>  制作PE U盘</li>
<li>  启动计算机进入BIOS后改为U启动</li>
<li>  进入PE系统</li>
<li>  使用破解工具【原理：<strong>替换</strong>掉原来系统中的<strong>SAM</strong>中计算出的账户密码的<strong>哈希值</strong>】</li>
<li>  退出PE</li>
<li>  切换回硬盘启动</li>
<li>  使用修改后的密码</li>
</ul>
<h2 id="8-DHCP的部署与安全"><a href="#8-DHCP的部署与安全" class="headerlink" title="8. DHCP的部署与安全"></a>8. DHCP的部署与安全</h2><p>【udp:67和68端口】</p>
<ol>
<li><p> dhcp相关：【ip，掩码，网关，dns， 租期】</p>
</li>
<li><p>DHCP<strong>租约</strong>过程:</p>
<ol>
<li> dhcp discovery:【客户机广播请求IP，请求包中有客户机的MAC地址】</li>
<li> DHCP服务器发送 offer广播包【包内有dhcp分配给客户机的ip,但没有掩码网关等参数】</li>
<li> 客户机发送request广播包【客户机确认要使用的IP】</li>
<li> 服务器DHCP ack 广播包【服务器确认租约，并发送ip,掩码,网关,dns,租约等参数】</li>
</ol>
</li>
<li><p>DHCP 的<strong>续约</strong>过程：</p>
<ol>
<li> 当租期达到**50%**时，客户机再次向服务器发送 dhcp request请求</li>
<li> 如果没有响应，则继续使用至租约**87.5%**时再次向服务器发送 dhcp request请求</li>
<li> 如果仍然没有响应，则释放ip地址，重新发送dhcp  discovery包</li>
<li> 如果还没有响应，则分配 169.254.xxx.xxx/16(全球统一的无效地址，用于内网临时通信)</li>
</ol>
</li>
<li><p>DHCP服务器部署【服务器ip要与地址池ip在同一网段】</p>
<ol>
<li> 服务器有1个固定的IP</li>
<li> 安装dhcp服务器插件</li>
<li>新建作用域和作用域选项<ol>
<li> 打开dhcp管理工具</li>
<li> 右键，新建作用域</li>
<li> 指定地址池名称</li>
<li> 指定分配的ip范围及掩码</li>
<li> 指定地址池中不想分配的地址</li>
<li> 设置租约【默认8天】</li>
<li> 设置作用域选项【即：网关、dns等】</li>
</ol>
</li>
<li> 激活[右键]</li>
<li> 客户端验证</li>
</ol>
</li>
<li><p>DHCP常用命令：</p>
<ol>
<li> ipconfig  /release【取消租约，释放 ip】</li>
<li> ipconfig /renew【没有ip时发送dsicovery,有ip时发送request手动续约】</li>
</ol>
</li>
<li><p> 可以继续dhcp的备份和还原【右键dhcp管理页面】</p>
</li>
<li><p> 删除dhcp服务器页的服务器后，服务依然进行只是不显示，可以通过高级-查找出服务器来恢复显示。要想完全删除，必须删除作用域</p>
</li>
<li><p> 地址保留：对特点的Mac地址分配特定的ip</p>
</li>
<li><p> <strong>作用域选项</strong>可以通过设置<strong>服务器选项</strong>批量配置【右键-配置选项】</p>
</li>
<li><p>DHCP中各种选项的优先级：</p>
<ol>
<li> 作用域选项 &gt; 服务器选项</li>
</ol>
</li>
<li><p><strong>DHCP攻击：</strong></p>
<ol>
<li><p><strong>攻击DHCP服务器</strong>：频繁发送伪装的dhcp请求，直到将地址池资源耗尽</p>
<ol>
<li> 防御措施：在<strong>管理型交换机的端口</strong>上做<strong>动态MAC地址绑定</strong></li>
</ol>
</li>
<li><p><strong>伪装DHCP服务器</strong>：hack将自己部署为DHCP服务器</p>
<ol>
<li> 防御措施：在<strong>管理型交换机上</strong>设置除合法DHCP服务器的端口外，其他端口禁止发送dhcp offer包</li>
</ol>
</li>
</ol>
</li>
</ol>
<h2 id="9-DNS服务器部署"><a href="#9-DNS服务器部署" class="headerlink" title="9. DNS服务器部署"></a>9. DNS服务器部署</h2><p>清除缓存DNS: <code>ipconfig  /flushdns</code></p>
<p>查看dns缓存：<code>ipconfig  /displaydns</code></p>
<ol>
<li><p> www:主机名,即给服务器取个名字叫www，管理员取名时一般按功能取【可以<strong>自定义</strong>】</p>
</li>
<li><p> baidu.com:域名【这部分是花钱<strong>购买</strong>的】</p>
</li>
<li><p> 主机名.域名：完全限定域名(FQDN)【如：<a href="http://www.baidu.com】/">www.baidu.com】</a></p>
</li>
<li><p> 根域名：使用小数点<kbd>.</kbd>表示,【浏览器默认补全，不需要手动输入】</p>
</li>
<li><p>域名分类【树状】：</p>
<ul>
<li>  根域名</li>
<li>  ​    顶级域名【紧跟根域名的就是顶级域名，如：.com  ,  .cn  ,  .uk等】    </li>
</ul>
</li>
<li><p> DNS使用TCP 、UDP 的 <strong>端口</strong> <strong>53</strong></p>
</li>
<li><p>DNS<strong>查询过程</strong>：【递归找本地dns服务器，迭代找具体的服务器】</p>
<ul>
<li>  缓存</li>
<li>  hosts文件</li>
<li>  本地dns服务器</li>
<li>  根域</li>
<li>  顶级域</li>
<li>  一级域名……</li>
</ul>
</li>
<li><p>DNS<strong>查询的分类</strong>：</p>
<ul>
<li>  正向解析：已知域名 -找》IP</li>
<li>  反向解析：已知IP -解析》域名</li>
</ul>
</li>
<li><p><strong>部署步骤</strong>【正向】：</p>
<ol>
<li><p> 打开dns服务器管理工具</p>
</li>
<li><p>右键正向区域-创建区域</p>
<ol>
<li> 主要区域：主dns服务器 </li>
<li> 辅助区域：备份dns服务器</li>
<li> 存根区域：根域名</li>
</ol>
<p> 【权威应答：直接向<strong>管理 被访问的主机 的dns服务器</strong>询问后得到的回答】</p>
</li>
<li><p> 输入区域名【域名】</p>
</li>
<li><p> 创建1个用于解析的区域文件【拓展名 .dns】</p>
</li>
<li><p> 下一步。。。完成</p>
</li>
</ol>
</li>
<li><p>部署后在正向区域出现2条默认记录</p>
<ol>
<li> SOA : 宣告谁是权威服务器，世界唯一</li>
<li> 名称服务器NS：告诉别人当前可以由哪台服务器解析</li>
</ol>
</li>
<li><p>添加解析记录：</p>
<ol>
<li> 正向区域右键</li>
<li> 新建主机【A记录，一种正向解析记录】</li>
<li> 输入名称【主机名，如：www】</li>
<li> 输入IP地址【该ip地址会与上面的地址解析关联，档解析解析上面的域名时，返回该ip地址】</li>
</ol>
</li>
</ol>
<h2 id="10-WEB服务器"><a href="#10-WEB服务器" class="headerlink" title="10. WEB服务器"></a>10. WEB服务器</h2><p>http: tcp 80 端口</p>
<p>htts: tcp 443 端口</p>
<p>常用的web服务器发布软件：iis / apache/nginx/tomcat</p>
<ol>
<li>部署web服务器<strong>步骤</strong>：<ol>
<li> 配置静态IP</li>
<li> 安装IIS【安装iis后会自动创建1个以 iuser 开头的匿名用户】</li>
<li> 网站默认存放在 c:\Inetpub下</li>
</ol>
</li>
</ol>
<h2 id="11-FTP"><a href="#11-FTP" class="headerlink" title="11. FTP"></a>11. FTP</h2><p>【推荐软件】：<code>Wing FTP Server</code></p>
<p>端口号：tcp 20/21端口</p>
<p>ftp的两种工作模式：</p>
<ul>
<li>  主动模式</li>
<li>  被动模式</li>
</ul>
<p>ftp用户的最终权限 = ftp权限  与  ntfs权限 的交集</p>
<p>建议：设置ftp站点时勾选所有ftp权限，具体权限的设置在ntfs中完成</p>
<p>用户名和密码一般新建1个用户供他人使用</p>
<p>推荐的第三方ftp服务软件【20人以内】：slyar ftp server ; serv-U【百人以内】</p>
<h2 id="12-域和活动目录"><a href="#12-域和活动目录" class="headerlink" title="12. 域和活动目录"></a>12. 域和活动目录</h2><ol>
<li><p>  计算机一般有两种工作环境：    +   工作组【人人平等】    +   域【人人不平等】</p>
</li>
<li><p>  1个域 由 域控制器 (<strong>DC)</strong> 控制【通常：<strong>域控制器</strong>也是 <strong>域内的DNS服务器</strong>】</p>
</li>
<li><p>   通常1台计算机<strong>加入域后，本地账户就失效</strong>，只能使用域账户，域账户的用户名和密码存放在<strong>DC</strong>的一张资源表中【即：活动目录AD，<strong>AD是属于整个域的资源</strong>】，在登录 域中的某一台计算机时，计算机会利用DNS服务找到DC，DC会将接收到的用户名密码与AD表中的条目 相比对，如果在AD中有该用户名和密码，则允许该客户端登录</p>
</li>
<li><p>  在DC上，还可以设置组策略，对域内的计算机进行统一的管控</p>
</li>
<li><p> 计算机<strong>登录到域</strong>后可以<strong>访问域资源</strong>【只有用域账户登录才行】</p>
</li>
<li><p><strong>安装步骤：</strong></p>
<ol>
<li> 在要配置成DC的服务器上配置<strong>静态IP</strong>【不需要配置dns】</li>
<li> 【win+R =&gt; 输入 dcpromo】</li>
<li> 勾选 “通过在计算机上安装DNS服务器进行自动更正”</li>
<li> 勾选“新林中新建域”【适用于第一次建域】</li>
<li> 输入该域的<strong>根级域名</strong>【该域的下面的子域名（如mail.baidu.com）都写在根级域名（baidu.com）的前面，】</li>
<li> 设置<strong>林的功能级别</strong>【若设为window server 2008r2，那么今后该林内的新建的dc只能是2008r2以上的版本】</li>
<li> 设置<strong>域功能级别</strong>【域功能级别只对当前域有效，其子域受林功能基本控制】</li>
<li> 一直确定【不要更改默认路径！！（活动目录就是ntds数据库文件，sysvol就是组策略）】</li>
<li> 设置活动目录的<strong>还原密码</strong>【该密码只在做还原域的操作时有用】</li>
<li> 安装后重启</li>
</ol>
</li>
<li><p> 当1台服务器成为域中的DC后，该服务器【DC】上原来的本地账户自动迁移到AD表中【登录时可以看到：（用户名变为：qf\admin  ， 其中：qf为域名，admin为原来的本地账户）】</p>
</li>
<li><p>打开 “AD用户和计算机”，展开域名，在展开的项中</p>
<ol>
<li> computers：域中的普通成员</li>
<li> domain controller:域控制器</li>
<li> users：域账户【部分账号 来自 该计算机原先的本地账户】</li>
</ol>
</li>
<li><p>将普通的计算机加入域：</p>
<ol>
<li> 将计算机 连入 域所在的网络【不需要配网关，但需要配dns(域控制器的ip),域控制器在配置ip的界面上要将dns配为运营商的dns使域能上外网】</li>
<li> 右键“计算机” - “属性”-“计算机名更改设置”-输入要改成计算机的名字和域名</li>
<li> 使用域管理员登录【qf.com\admin ; 123.com】</li>
<li> 重启计算机</li>
</ol>
</li>
<li><p>在DC的<strong>AD</strong>上建立<strong>普通域账户</strong>给加入到<strong>域的普通计算机</strong>使用：</p>
<ol>
<li> 打开AD</li>
<li> 右键“users”-“新建”-“用户”</li>
<li> 输入姓和名</li>
<li> 输入登录名。下一步</li>
<li> 输入密码和确认密码</li>
<li> 去掉“下次登录时更改密码”</li>
</ol>
</li>
<li><p>普通域用户对特定电脑有管理员权限：</p>
<ol>
<li> 用域管理员身份登录特定电脑</li>
<li> 打开本地管理员组</li>
<li> 查找位置为域 将该 普通域账户 加入到特定电脑的 本地管理员组 中</li>
</ol>
</li>
<li><p><strong>加入域不成功</strong>的原因：</p>
<ol>
<li> 网络不通</li>
<li> dns解析不成功</li>
<li> dns缓存</li>
</ol>
</li>
<li><p><strong>登录域不成功</strong>的原因：</p>
<ol>
<li> 用户名错误</li>
</ol>
</li>
<li><p> OU：组织单元【用于对域资源 <strong>(即：域用户，域计算机，域组)</strong> 进行归类】</p>
</li>
<li><p>组和OU的区别：</p>
<ol>
<li> 组：为了赋予组内的账户权限</li>
<li> OU：为了下发 <strong>组策略</strong></li>
</ol>
</li>
<li><p>创建OU:</p>
<ol>
<li> 打开AD，右键域名文件夹</li>
<li> 新建-组织单元</li>
<li> 输入ou的名字</li>
<li> 完成</li>
<li> 右键用户</li>
<li> 所有任务</li>
<li> 移动</li>
<li> 选择要移到的OU</li>
<li> 确定</li>
</ol>
</li>
<li><p>组策略【GPO】:通过组策略可以修改计算机的各种属性【开始菜单;桌面背景;网络参数等】</p>
<ol>
<li> <strong>组策略在域中是由OU下发的</strong></li>
<li> 组策略下发后，用户的应用顺序【lsdou：本地-站点-域-组织单元】</li>
<li> 开始-管理工具-组策略管理</li>
<li>组策略的3 种状态：【启用，禁止，未配置】</li>
</ol>
</li>
</ol>
<h2 id="案例1"><a href="#案例1" class="headerlink" title="案例1"></a>案例1</h2><p>利用window 7 粘滞键 (在登录界面按5次shift)登录 不知道密码 的计算机</p>
<p>【C:\Windows\System32\sethc.exe】</p>
<p>步骤：</p>
<ul>
<li>  强制断电后开机</li>
<li>  进入 启动修复界面</li>
<li>  查看问题反馈【目的 : 打开txt】</li>
<li>  打开路径并将粘滞键改名【路径：C:\Windows\System32\sethc.exe】</li>
<li>  将cmd改名为粘滞键的文件名</li>
<li>  重启</li>
<li>  按5次shift 弹出</li>
<li>  cmd中在管理员组中添加新用户</li>
</ul>
<ol start="2">
<li>新建-组织单元<ol start="3">
<li> 输入ou的名字</li>
<li> 完成</li>
<li> 右键用户</li>
<li> 所有任务</li>
<li> 移动</li>
<li> 选择要移到的OU</li>
<li> 确定</li>
</ol>
</li>
<li>组策略【GPO】:通过组策略可以修改计算机的各种属性【开始菜单;桌面背景;网络参数等】<ol>
<li> <strong>组策略在域中是由OU下发的</strong></li>
<li> 组策略下发后，用户的应用顺序【lsdou：本地-站点-域-组织单元】</li>
<li> 开始-管理工具-组策略管理</li>
<li>组策略的3 种状态：【启用，禁止，未配置】</li>
</ol>
</li>
</ol>
<h2 id="案例1-1"><a href="#案例1-1" class="headerlink" title="案例1"></a>案例1</h2><p>利用window 7 粘滞键 (在登录界面按5次shift)登录 不知道密码 的计算机</p>
<p>【C:\Windows\System32\sethc.exe】</p>
<p>步骤：</p>
<ul>
<li>  强制断电后开机</li>
<li>  进入 启动修复界面</li>
<li>  查看问题反馈【目的 : 打开txt】</li>
<li>  打开路径并将粘滞键改名【路径：C:\Windows\System32\sethc.exe】</li>
<li>  将cmd改名为粘滞键的文件名</li>
<li>  重启</li>
<li>  按5次shift 弹出</li>
<li>  cmd中在管理员组中添加新用户</li>
<li>  使用新用户登录</li>
</ul>
]]></content>
      <categories>
        <category>后端</category>
        <category>操作系统</category>
        <category>Windows使用</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>ZY-Player开源播放器-视频源</title>
    <url>/2021/08/13/ZY-player%E6%92%AD%E6%94%BE%E5%99%A8%E8%A7%86%E9%A2%91%E6%BA%90/</url>
    <content><![CDATA[<h2 id="1、视频源查找"><a href="#1、视频源查找" class="headerlink" title="1、视频源查找"></a>1、视频源查找</h2><ol>
<li>  打开github</li>
<li>  搜索：<code>vod/at/xml</code> </li>
<li>  在左侧点击Code</li>
<li>  筛选最近提交的项目</li>
<li>  复制链接</li>
<li>  打开ZY-Player播放器的视频源导入界面</li>
<li>  粘贴视频源</li>
</ol>
<h2 id="2、常用视频源"><a href="#2、常用视频源" class="headerlink" title="2、常用视频源"></a>2、常用视频源</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;uZFuh5&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;飘花电影&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.2mjtt.com/inc/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;QI7FBY&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;8k&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://vip.8kvod.com:888/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;ReODDe&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">8</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;玉米影视&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://yumi.video/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;cHIVZl&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">9</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;淘影&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://tv.4kvod.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;xC7WHB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;阿姨追剧&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://app.yiciyuan.me/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;bGv8VM&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">11</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;好好资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://haohaozy.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;rFNdus&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">12</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;安逸&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://dy.51isu.com:11801/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;wBFVN6&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">13</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;流年&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.liunianys.cn/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;P65JBn&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">14</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;蓝猫b&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://www.lmzy.cc/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;PJEpjv&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">15</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;赞片&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://vip.1573i.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;JVDlc9&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">16</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;独播库&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://api.dbyunzy.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;MiyTwG&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">17</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;萌果&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://api.appearoo.top/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;eI7Q83&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;不开门&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://c.bukai.men/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;kHAXB3&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">19</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;饭团&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://fantuan.wkfile.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;AssIGU&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;蘑菇资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.moguzyw.com:520/moguzy.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;EO29d9&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">21</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;106&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://106.53.96.250/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;t54erx&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">22</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;mianfei&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.ruiuri.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;80dWVr&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">23</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;柚子影视&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://tv.aitesucai.xyz/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;jxZxFg&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">24</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;真不卡&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://db.taijuwang.cc/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;天空资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">25</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;天空资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://api.tiankongapi.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;切片&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">26</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;zkzy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;最快资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://cj.1886zy.co/inc/seacmsapi.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;2A资源站&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">27</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;明日资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://zy.zcocc.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;https://jx.xmflv.com/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;明日资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">28</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;明日资源(需解析)&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://zy.zcocc.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;需解析&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;1186资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">29</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;1186资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://cj.1886zy.co/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;99C95B06CD4A53B183DC1474737445D0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;萌果资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://api.appearoo.top/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">31</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;2D58FC196C99F2CD0AF558AAB2AD10A8&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;饭团资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://fantuan.wkfile.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">32</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;497F92C9D7320652A6B06F2CC7570ABA&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;12.快播资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.kuaibozy.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">33</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line"> </span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;01F4BEE33352BE3FD89F16578AFA47DD&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;免费影院&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.ruiuri.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">35</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;21926992E04CF6DF8507B2B67E2BBC1F&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;106资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://106.53.96.250/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">36</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;2A5E7FEC6065F3D5CFA7D12E3256C2E2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;泰剧迷&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://www.taijumi.cc/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">37</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;1364B1580FA88AD6823DE3F3BB2DB8CC&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;天空资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://api.tiankongapi.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">38</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;3FF1AF94E5E28C6A9A22BBE1E70EB3E2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;快播资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.kuaibozy.com/api.php/provide/vod/from/kbm3u8/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">39</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;B25D737492A5D48AAE02FEDD0A64E28C&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;乐播资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://lbapi9.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">40</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;9211CF62A583D7EBBCC4CFA97A8C8C48&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;花椒资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://cj.apihjzy.com/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">41</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;681D87E8E8C4A9034C2ACBE88C874708&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;速度资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.ggmmzy.com:9999/inc/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">42</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;703EC2DD4DF09CC7DFF915A71891B93D&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;博天堂&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://bttcj.com/inc/sapi.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">43</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;8D31C1FC6E6BE5927EB592B4C428ECA7&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;环亚资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://wmcj8.com/inc/sapi.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">44</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;FD46FB9BC51A96CA55936AC2774673C6&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;番号资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://fhapi9.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">45</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;D0944F0740E1E38543F2CEA68F1683A4&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;炮台资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://ptcj.ptzycj.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">46</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;6087262508D5DA31DDB59B7843E2EE24&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;鲨鱼资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://shayuapi.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">47</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;66A7E7944001DE23E4FFDEC5B0CF7260&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;老鸭&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://laoyazy.vip/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">48</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;021BBC7EE20B71134D53E20206BD6FEB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;1024&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://www.1024nf.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">49</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;6A846C425F0F60FA4C166C9C3B777F75&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;av888资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://m.7777688.com/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;E03C76E829FB13BB3DBDB21D60E7ADD3&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;佳丽视频&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://jialiapi.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;useInSearchAll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">51</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;4btciy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">52</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;84特殊.鲨鱼资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://shayuapi.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;福利&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">53</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;Iy0Jlq&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;79特殊.苍天&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://cj.cangtiancj.com/api.php/Seacms/vod/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;福利&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">54</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;LYCe0z&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;78特殊.乐播&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://lbapi9.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;福利&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">55</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;NhTLgM&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;76特殊.色色&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://m.7777688.com/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;福利&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">56</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;dadizy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;大地资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://dadiapi.com/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;福利&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">57</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;jiali&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;佳丽 TV&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://jialiapi.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;福利&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">58</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;1717y&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;1717云&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://zy.itono.cn/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;常用组&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;乐多资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">59</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;乐多资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.leduozy.com/inc/seacmsapi.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;切片&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;88资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">60</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;88资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.88zyw.net/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;切片&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;八戒资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">61</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;八戒资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://cj.bajiecaiji.com/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;切片&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;快播资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">62</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;快播资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.kuaibozy.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;切片&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;九零影院&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">63</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;九零影院&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.9xku.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;http://jx.hao-zsj.cn/vip/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;优质&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;橘猫影视&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">64</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;橘猫影视&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.zitv.cc/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;http://jx.hao-zsj.cn/vip/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;聚合&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;全网影视&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">65</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;全网影视&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://www.qwysvip.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;http://jx.hao-zsj.cn/vip/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;聚合&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;安逸影院&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">66</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;安逸影院&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://dy.51isu.com:11801/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;http://jx.maguays.cc/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;聚合&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;追剧吧&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">67</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;追剧吧&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.huaxiab.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;https://jx.sujx.top/jiexi.php/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;聚合&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;免费影院&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">68</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;免费影院&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.ruiuri.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;http://jx.maguays.cc/?url=\n&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;聚合&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;泰剧迷&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">69</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;泰剧迷&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://www.taijumi.cc/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;http://jx.maguays.cc/?url=\n&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;聚合&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;影派TV&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">70</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;影派TV&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://v.dtjos.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;http://jx.maguays.cc/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;聚合&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;肖先生影视&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">71</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;肖先生影视&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://cs.syg520.cn/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;http://jx.maguays.cc/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;萌果资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">72</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;萌果资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://api.appearoo.top/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;http://jx.maguays.cc/?url=\n&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">73</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;jl&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;佳丽&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://jialiapi.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;福利&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">74</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;dd&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;大地&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://dadiapi.com/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;福利&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">75</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;sy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;shayu&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://shayuapi.com/api.php/Seacms/vod/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;福利&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">76</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;76&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;76&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://m.7777688.com/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;福利&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">77</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;lb&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;乐播&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://lbapi9.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;福利&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">78</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;ct&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;苍天&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://cj.cangtiancj.com/api.php/Seacms/vod/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;福利&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">79</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;moguzyw&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;蘑菇资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.moguzyw.com:520/moguzy.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;常用组&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">80</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;huaxiab&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;追剧吧&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.huaxiab.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;常用组&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">81</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;51isu&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;安逸影院&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://dy.51isu.com:11801/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;常用组&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">82</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;bttcj&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;BT天堂&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://bttcj.com/inc/sapi.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;常用组&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">83</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;605zy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;605资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.605zy.co/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;常用组&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">84</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;ldzyw&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;乐多资源网&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://api.leduozy.com/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;常用组&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">85</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;6uzy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;6U资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://zy.ataoju.com/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;常用组&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">86</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;hjzy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;花椒资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://apihjzy.com/api.php/Seacms/vod/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;常用组&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">87</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;7kjx&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;7K解析&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://zy.7kjx.com/api.xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;常用组&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">88</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;qbzy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;趣播资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://www.qbzyz.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;常用组&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">89</span>,</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;lyzy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;老鸭资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://api.apilyzy.com/api.php/Seacms/vod/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;常用组&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;恐怖鸭资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">90</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;恐怖鸭资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://kongbuya.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;https://www.pangujiexi.cc/jiexi.php?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;蓝猫资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">91</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;蓝猫资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://www.lmzy.cc/api.php/provide/vod/at/xml/\n&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;https://vip.bljiex.com/?v=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;速搜资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">92</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;速搜资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.susouzy.com/api.php/provide/vod/at/xml/\n&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;https://url.js.cn/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;8090资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">93</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;8090资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://zy.yilans.net:8090/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;https://9kjx.com/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;好好资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">94</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;好好资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://haohaozy.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;https://www.kpezp.cn/jlexi.php?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;天堂资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">95</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;天堂资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://vipmv.cc/api.php/provide/vod/at/xml/\n&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;https://titan.mgtv.com.o8tv.com/jiexi/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;39影视&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">96</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;39影视&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://www.39kan.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;7K资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">97</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;7K资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://zy.7kjx.com/cjapi.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;蘑菇资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">98</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;蘑菇资源(需解析)&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.moguzyw.com:520/moguzy.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;需解析&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;1717云资源网&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">99</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;1717云(需解析)&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://zy.itono.cn/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;https://jx.bpba.cc/?v=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;需解析&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;影派资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;影派资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://v.dtjos.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;rrzy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">101</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;人人资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://www.rrzyw.cc/api.php/provide/vod/from/rrm3u8/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;https://jx.7kjx.com/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;88zyw&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">102</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;88 影视&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.88zyw.net/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;八戒云&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">103</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;八戒云&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://cj.bajiecaiji.com/inc/bjm3u8.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;天空云&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">104</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;天空云&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://api.tiankongapi.com/api.php/provide/vod/at/xml/from/tkm3u8/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;https://jx.7kjx.com/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;红牛资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">105</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;红牛资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.hongniuzy.com/inc/api.php&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;穿梭资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">106</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;穿梭资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://ok.888hyk.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;快播云&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">107</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;快播云&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.kuaibozy.com/api.php/provide/vod/from/kbm3u8/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;https://jx.7kjx.com/?url=&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;Yc6UDN&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">108</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;09tv&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://09tv.top/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;pK8YVc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">109</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;百度官方资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://api.bdjx.vip/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;默认&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;Z2sIJy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">110</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;北斗星资源&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://api.bdxzyapi.com/api.php/provide/vod/at/xml&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;nWDCd0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">111</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;猪猪影视&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://www.zzyingyuan.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;oEbiVK&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">112</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;爪可可&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;https://www.zwcoco.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;FsAGSg&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">113</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;90影院&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://www.9xku.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;PhsJw5&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">114</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;明日&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;api&quot;</span>: <span class="string">&quot;http://zy.zcocc.com/api.php/provide/vod/at/xml/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jiexiUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;group&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;isActive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;reverseOrder&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;可用&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/08/04/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>kali-安装笔记</title>
    <url>/2021/08/04/kali-%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="kali-安装笔记"><a href="#kali-安装笔记" class="headerlink" title="kali-安装笔记"></a>kali-安装笔记</h1><p>[toc]<br>下载地址：【国内镜像】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">搜狐：http://mirrors.sohu.com/</span><br><span class="line">网易：http://mirrors.163.com/</span><br><span class="line">阿里云：http://mirrors.aliyun.com/</span><br><span class="line">腾讯：http://android-mirror.bugly.qq.com:8080/（仅针对APP开发的软件，限流，不推荐）</span><br><span class="line">淘宝：http://npm.taobao.org/</span><br><span class="line"></span><br><span class="line">上海交通大学：http://ftp.sjtu.edu.cn/html/resources.xml（部分移动运营商出口状况不佳，无法访问）</span><br><span class="line">华中科技大学：http://mirror.hust.edu.cn/（当前已用容量估计：4.83T）</span><br><span class="line">清华大学：http://mirrors.tuna.tsinghua.edu.cn/（当前已用容量估计：9.8T）</span><br><span class="line">北京理工大学：http://mirror.bit.edu.cn/web/</span><br><span class="line">兰州大学：http://mirror.lzu.edu.cn/</span><br><span class="line">中国科技大学：http://mirrors.ustc.edu.cn/（当前已用容量估计：21.32T）</span><br><span class="line">大连东软信息学院：http://mirrors.neusoft.edu.cn/（当前已用容量估计：2.5T）</span><br><span class="line">东北大学：http://mirror.neu.edu.cn/</span><br><span class="line">大连理工大学：http://mirror.dlut.edu.cn/</span><br><span class="line">哈尔滨工业大学：http://run.hit.edu.cn/html/（部分联通运营商出口状况不佳，无法访问）</span><br><span class="line">北京交通大学：http://mirror.bjtu.edu.cn/cn/</span><br><span class="line">天津大学：http://mirror.tju.edu.cn（无法访问，ping超时）</span><br><span class="line">中国地质大学：http://mirrors.cug.edu.cn/（当前已用容量估计：2.3T）</span><br><span class="line">浙江大学：http://mirrors.zju.edu.cn/</span><br><span class="line">厦门大学：http://mirrors.xmu.edu.cn/</span><br><span class="line">中山大学：http://mirror.sysu.edu.cn/</span><br><span class="line">重庆大学：http://mirrors.cqu.edu.cn/（当前已用容量估计：3.93T）</span><br><span class="line">北京化工大学：http://ubuntu.buct.edu.cn/（Android SDK镜像仅供校内使用，当前已用容量估计：1.72T）</span><br><span class="line">南阳理工学院：http://mirror.nyist.edu.cn/</span><br><span class="line">中国科学院：http://www.opencas.org/mirrors/</span><br><span class="line">电子科技大学：http://ubuntu.uestc.edu.cn/（无法访问，ping超时）</span><br><span class="line">电子科技大学星辰工作室：http://mirrors.stuhome.net/（当前已用容量估计：1.08T）</span><br><span class="line">西北农林科技大学：http://mirrors.nwsuaf.edu.cn/（只做CentOS镜像，当前已用容量估计：140GB） </span><br><span class="line">浙江大学：http://mirrors.zju.edu.cn/</span><br><span class="line">台湾淡江大学: http://ftp.tku.edu.tw/Linux/</span><br><span class="line"></span><br><span class="line">首都在线科技股份有限公司（英文名Capital Online Data Service）：http://mirrors.yun-idc.com/</span><br><span class="line">中国电信天翼云：http://mirrors.ctyun.cn/</span><br><span class="line">noc.im：http://mirrors.noc.im/（当前已用容量估计：3.74T）</span><br><span class="line">常州贝特康姆软件技术有限公司：http://centos.bitcomm.cn/（只做CentOS镜像，当前已用容量估计：140GB）</span><br><span class="line">公云PubYun（母公司为贝特康姆）：http://mirrors.pubyun.com/</span><br><span class="line">Linux运维派：http://mirrors.skyshe.cn/（使用阿里云服务器，界面使用浙江大学的模板，首页维护，内容可访问）</span><br><span class="line">中国互联网络信息中心：http://mirrors.cnnic.cn/（只做Apache镜像，当前已用容量估计：120GB）</span><br><span class="line">Fayea工作室：http://apache.fayea.com/（只做Apache镜像，当前已用容量估计：120GB）</span><br><span class="line">开源中国社区 http://mirrors.oss.org.cn/</span><br></pre></td></tr></table></figure>

<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><p>参考【部分不一致】：<br><code>https://zhuanlan.zhihu.com/p/107667275?from_voters_page=true</code><br>文件= 》 新建虚拟机 =》 经典 = 》稍后安装 =》 Linux =》<br><img src="https://img-blog.csdnimg.cn/20201128190857420.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128191053589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128191208991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128191337918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128191517333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128191551465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128191640963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择第一项：图形化安装【由于我们刚才分配给虚拟机的内存太小（只有 512 MB），所以，只出现这种难看的界面】<br>然后：<br><img src="https://img-blog.csdnimg.cn/20201128191829246.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128191915611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128191949932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/202011281927033.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128192721872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020112819281250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128192916509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128192950314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128193153727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128193207605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128193225924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020112819325350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128193316391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128193529659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在这里选择【图形界面的种类】<br><img src="https://img-blog.csdnimg.cn/20201128193622921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128193744420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128194928831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128194957601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201128195238913.png" alt="在这里插入图片描述"></p>
<h2 id="2-初始设置"><a href="#2-初始设置" class="headerlink" title="2. 初始设置"></a>2. 初始设置</h2><h3 id="2-1-设置分辨率【以下为：2020-4版】"><a href="#2-1-设置分辨率【以下为：2020-4版】" class="headerlink" title="2.1 设置分辨率【以下为：2020.4版】"></a>2.1 设置分辨率【以下为：2020.4版】</h3><p><img src="https://img-blog.csdnimg.cn/20201128153043764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="2-2-设置网络"><a href="#2-2-设置网络" class="headerlink" title="2.2 设置网络"></a>2.2 设置网络</h3><p>使用VM中的 NAT 模式<br>要注意：</p>
<ul>
<li>物理机是否启用 vm 的 nat 服务</li>
<li>是否将 网卡设为可共享- </li>
<li><strong>锐捷校园网的客户端每隔一段时间就会关掉vm的nat服务</strong></li>
<li>进入<code>/etc/network/interfaces</code>文件，仿照 lo0添加网卡，保存；重启服务 <code>/etc/init.d/networking restart</code></li>
</ul>
<p>使用VM中的 NAT 模式的<strong>步骤</strong>： </p>
<ul>
<li><code>win + R</code>，输入<code>services.msc</code> , 找到<code>VM NAT Server</code>服务，启动</li>
<li>设置vmnet8 网卡的 ip 与 网关【两个要在同一网段】</li>
<li>在vm 中打开虚拟网络编辑器，选择 vmnet8</li>
<li>在下方填写 <strong>子网网段 和 掩码</strong> ，</li>
<li>点击 NAT 设置，输入<strong>网关IP</strong>【该IP不能和物理机中vmnet8的IP相同，但要与物理机中vmnet8 的网关相同】</li>
</ul>
<h3 id="2-3-更改鼠标大小"><a href="#2-3-更改鼠标大小" class="headerlink" title="2.3 更改鼠标大小"></a>2.3 更改鼠标大小</h3><p><img src="https://img-blog.csdnimg.cn/20201130141604663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="2-4-调整-终端-字体"><a href="#2-4-调整-终端-字体" class="headerlink" title="2.4 调整 终端 字体"></a>2.4 调整 终端 字体</h3><p><img src="https://img-blog.csdnimg.cn/20201130142910861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="2-4-取消自动休眠"><a href="#2-4-取消自动休眠" class="headerlink" title="2.4 取消自动休眠"></a>2.4 取消自动休眠</h3><p><img src="https://img-blog.csdnimg.cn/20201130145923390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="2-4-更换软件安装源"><a href="#2-4-更换软件安装源" class="headerlink" title="2.4 更换软件安装源"></a>2.4 更换软件安装源</h3><ul>
<li>打开终端</li>
<li>切换到 root 用户</li>
<li>注释掉 <code>/etc/apt/sources.list</code> 文件中的源，并换上国内源，保存</li>
<li>切换回普通用户</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换用户</span></span><br><span class="line">sudo su</span><br><span class="line"><span class="comment"># 输入密码</span></span><br><span class="line">kali-test</span><br><span class="line"><span class="comment"># 更改软件安装源</span></span><br><span class="line">vim vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<p>注释掉原来的内容，并复制 下列内容到 sources.list 中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#中科大</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#阿里云</span></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#清华大学</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"> </span><br><span class="line"><span class="comment">#浙大</span></span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"> </span><br><span class="line"><span class="comment">#东软大学</span></span><br><span class="line">deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line">deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#官方源</span></span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line">deb http://mirrors.163.com/debian/ jessie main non-free contrib</span><br><span class="line">deb http://mirrors.163.com/debian/ jessie-updates main non-free contrib</span><br><span class="line">deb http://mirrors.163.com/debian/ jessie-backports main non-free contrib</span><br><span class="line">deb-src http://mirrors.163.com/debian/ jessie main non-free contrib</span><br><span class="line">deb-src http://mirrors.163.com/debian/ jessie-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.163.com/debian/ jessie-backports main non-free contrib</span><br><span class="line">deb http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib</span><br></pre></td></tr></table></figure>

<p><code>:wq</code>保存后，执行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update  <span class="comment"># 取回更新的软件包列表信息</span></span><br><span class="line">apt-get upgrade <span class="comment"># 进行一次升级</span></span><br><span class="line">apt-get clean <span class="comment"># 删除已经下载的安装包</span></span><br><span class="line">reboot  <span class="comment">#重启</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>后端</category>
        <category>操作系统</category>
        <category>Linux</category>
        <category>信息安全</category>
        <category>系统安全</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>公司法-笔记</title>
    <url>/2021/09/03/%E5%85%AC%E5%8F%B8%E6%B3%95/</url>
    <content><![CDATA[<h1 id="公司法"><a href="#公司法" class="headerlink" title="公司法"></a>公司法</h1><p>[toc]</p>
<h2 id="1、总则"><a href="#1、总则" class="headerlink" title="1、总则"></a>1、总则</h2><p>公司：</p>
<ul>
<li>  股份有限公司：按照==股份==的多少来承担责任</li>
<li>  有限责任公司：按照==出资额==的多少来承担责任</li>
</ul>
<p>公司是==法人==，用公司的==所有财产==来承担责任。</p>
<p>股东有：收益、决策、选择管理人 的资格。</p>
<p>公司的==经营活动==要 遵纪守法、受到社会监督。</p>
<p>设立公司 要==依法登记==（一些法律有特别规定的领域需要先申请、后登记）。</p>
<p>公众可以向登记机关==申请查询登记事项==。</p>
<p>营业执照的==签发日==就是==公司的成立日==。</p>
<p>公司营业执照应当载明公司的==名称、住所、注册资本、经营范围、法定代表人姓名==等事项。</p>
<p>公司营业执照记载的事项发生变更的，需要去办理==换发营业执照==的手续。</p>
<p>==经营范围==由公司章程规定，并依法登记（更改章程也需要登记）。</p>
<p>公司的==法人代表==由董事长、执行董事、经理担任（变更法人代表时，需要登记）</p>
<p>公司设立==子公司== 需要登记（子公司没有法人资格，由总公司承担民事责任）</p>
<p>公司设立==分公司== 需要登记（子公司有法人资格，由分公司自己来承担民事责任）</p>
<p>公司可以投资可以==投资==其他的企业，但<strong>不能</strong>成为具有<strong>债务连带责任的出资人</strong>。</p>
<p>公司==提供担保==需要按照公司章程的规定由董事会、股东会、股东大会决定。若公司需要替股东提供担保，则该股东不能参与本次表决，半数股东表决同意，公司才能替该股东担保。</p>
<p>公司 要与==职工==签订劳动合同、参加社保、加强劳动保护、加强职工的职业教育和岗位培训。</p>
<p>职工需要成立==工会==，由工会来与公司签到集体合同（关于：报酬、工时、福利、保险）。</p>
<p>公司==改制==、经营方面的重大决策时，应当听取工会的意见。</p>
<p>股东==不得滥用权力==、损害公司、债权人、其他股东的利益。</p>
<p>股东会、股东大会、董事会的==召集程序==、表决方式违法时，职工可在==60天内==请求人民法院撤销，撤销后如已办理变更登记的，应当申请撤销变更。</p>
<hr>
<h2 id="2、有限责任公司的设立-组织机构"><a href="#2、有限责任公司的设立-组织机构" class="headerlink" title="2、有限责任公司的设立+组织机构"></a>2、有限责任公司的设立+组织机构</h2><blockquote>
<p>  设立有限责任公司，应当具备下列条件：</p>
</blockquote>
<ul>
<li>  股东符合法定==人数==</li>
<li>  50个以下 股东出资设立。</li>
<li>  符合合公司章程规定的认缴的==出资额==（注册资本：全体股东认缴的出资额）</li>
<li>  股东共同制定==公司章程==</li>
<li>  公司有==名称==，有==组织架构==</li>
<li>  有公司==住所==</li>
</ul>
<blockquote>
<p>  公司章程：（股东应当在公司章程上签名、盖章）</p>
</blockquote>
<ul>
<li>  （一）公司名称和住所；</li>
<li>   （二）公司经营范围； </li>
<li>  （三）公司注册资本； （认缴的总额）</li>
<li>  （四）股东的姓名或者名称；</li>
<li>  （五）股东的出资方式、出资额和出资时间；</li>
<li>   （六）公司的机构及其产生办法、职权、议事规则；</li>
<li>   （七）公司法定代表人；</li>
<li>   （八）股东会会议认为需要规定的其他事项。</li>
</ul>
<p>股东可以用 货币、非货币==出资==。（非货币需要评估、核价）</p>
<p>股东应当==按时、足额==地缴纳认缴的出资额。（不按时缴纳，应该向 其他已经按时缴纳的股东承担责任）。</p>
<p>认缴完公司章程规定的足额出资额后，需要派代表、代理人去登记。</p>
<p>公司成立后，发现==非货币财产明显低于认缴的出资额==时，该出资股东应补齐差额，其他股东承担连带责任。</p>
<blockquote>
<p>  有限责任公司成立的出资说明书：（ 公司  =给=》股东 ）</p>
</blockquote>
<ul>
<li>  （一）公司名称；</li>
<li>   （二）公司成立日期；</li>
<li>   （三）公司注册资本； </li>
<li>  （四）股东的姓名或者名称、缴纳的出资额和出资日期； </li>
<li>  （五）出资证明书的编号和核发日期。</li>
</ul>
<p>出资证明书由<strong>公司盖章</strong>。</p>
<blockquote>
<p>  有限责任公司-股东名册，记载下列事项：</p>
</blockquote>
<ul>
<li>  （一）股东的姓名或者名称及住所； </li>
<li>  （二）股东的出资额； </li>
<li>  （三）出资证明书编号。</li>
</ul>
<p>股东有权==查阅、复制公司章程、股东会会议记 录、董事会会议决议、监事会会议决议和财务会计报告==，但应当向公司提出==书面请求==，说明目的。公司有合理根据认 为股东查阅会计账簿有==不正当目的==，可能损害公司合法利益的， 可以==拒绝==提供查阅，并应当自股东提出书面请求之日起==十五日==内书面答复股东并说明理由。公司拒绝提供查阅的，股东可以请求==人民法院==要求公司提供查阅。</p>
<p>股东按照==实缴的出资比例==分红；公司新增资本时，股东有权==优先==按照实缴的出资比例==认缴出资==。</p>
<p>公司成立后，股东不得抽逃出资。</p>
<p>股东会由全体股东组成。</p>
<blockquote>
<p>  股东会行使下列职权： </p>
</blockquote>
<ul>
<li><p>  （一）决定公司的经营方针和投资计划； </p>
</li>
<li><p>  （二）选举和更换非由职工代表担任的董事、监事，决定有 关董事、监事的报酬事项； </p>
</li>
<li><p>  （三）审议批准董事会的报告； </p>
</li>
<li><p>  （四）审议批准监事会或者监事的报告； </p>
</li>
<li><p>  （五）审议批准公司的年度财务预算方案、决算方案；</p>
</li>
<li><p>   （六）审议批准公司的利润分配方案和弥补亏损方案； </p>
</li>
<li><p>  （七）对公司增加或者减少注册资本作出决议； </p>
</li>
<li><p>  （八）对发行公司债券作出决议； </p>
</li>
<li><p>  （九）对公司合并、分立、解散、清算或者变更公司形式作出决议；</p>
</li>
<li><p>   （十）修改公司章程； </p>
</li>
<li><p>  （十一）公司章程规定的其他职权。</p>
</li>
</ul>
<p>首次股东会会议由出资最多的股东召集和主持。</p>
<p>股东会会议分为<strong>定期会议</strong>和<strong>临时会议</strong>。</p>
<p>临时会议：</p>
<ul>
<li>  代表十分之一 以上表决权的股东，</li>
<li>  三分之一以上的董事，</li>
<li>  监事会或者不设监事会的公司的监事</li>
</ul>
<p>股东会会议的召集、主持：</p>
<ul>
<li>  有董事会：董事长、副董事长、半数以上董事推举的董事</li>
<li>  不设董事会的：执行董事</li>
</ul>
<p>不履行召集股东会会议职责的，监事会或者不设监事会的公司的监事召集和主持  ==》代表十分之一以上表决权的股东 可以自行召集和主持。</p>
<p>股东会会议，应该提前15日前通知全体股东。所议事项的决定需要作成会议记录、并签名</p>
<p>股东会会议作出修改公司章程、增加或者减少注册资本的决 议，以及公司合并、分立、解散或者变更公司形式的决议，必须 经代表三分之二以上表决权的股东通过。</p>
<p>董事会，其成员为 3人 至 13  人；</p>
<p>董事任期由公司章程规定，但每届任期不得超过 3 年。董事任期届满，可以连选连任。</p>
<p>有限责任公司设监事会，其成员不得少于三人。股东人数较少或者规模较小的有限责任公司，可以设1至2名监 事，不设监事会。</p>
<p>监事会应当包括<strong>股东代表</strong>和适当比例的公司<strong>职工代表</strong>，其中 <strong>职工代表</strong>的比例不得低于<strong>三分之一</strong>，具体比例由公司章程规定。 监事会中的职工代表由公司职工通过职工代表大会、职工大会或 者其他形式民主选举产生。</p>
<p>董事、高级管理人员不得兼任监事。监事的任期每届为 3年。监事任期届满，连选 可以连任。</p>
<p>监事会每年度至少召开一次会议，监事可以提议召开临时监事会会议。</p>
<p><code>一人有限责任公司</code>，是指只有一个自然人股东或者 一个法人股东的有限责任公司。</p>
<p>1个自然人只能投资设立1个一人有限责任 公司。该==一人有限责任公司==不能投资设立==新的一人有限责任公司==。</p>
<p>一人有限责任公司应当在==每一会计年度终了==时编制财务会计报告，并经会计师事务所审计。</p>
<p>有限责任公司的股东之间可以相互转让其全 部或者部分股权。</p>
<p>股东向股东以外的人转让股权，应当经其他股东过半数同意。 股东应就其股权转让事项书面通知其他股东征求同意，其他股东自接到书面通知之日起满30日未答复的，视为同意转让。</p>
<p>股东半数以上不同意转让的，不同意的股东应当购买该转让的股 权；不购买的，视为同意转让。</p>
]]></content>
      <categories>
        <category>日常</category>
        <category>法律</category>
      </categories>
      <tags>
        <tag>法律</tag>
      </tags>
  </entry>
  <entry>
    <title>劳动法-笔记</title>
    <url>/2021/08/04/%E5%8A%B3%E5%8A%A8%E6%B3%95/</url>
    <content><![CDATA[<h1 id="劳动法"><a href="#劳动法" class="headerlink" title="劳动法"></a>劳动法</h1><p>[toc]</p>
<h2 id="第一章-总则"><a href="#第一章-总则" class="headerlink" title="第一章 总则"></a>第一章 总则</h2><ol>
<li> 适用<strong>范围</strong>：</li>
</ol>
<blockquote>
<p>  中国境内的 <strong>企业</strong> 、 <strong>用人单位</strong>  与 <strong>劳动者</strong> 之间</p>
<p>  【签订劳动合同，依据本法执行】</p>
</blockquote>
<ol start="2">
<li> 劳动者的<strong>权利+义务</strong>：</li>
</ol>
<blockquote>
<p>  平等就业、选择职业、获取报酬、休息休假、劳动安全卫生保护、接受职业技能培训、享受社保、提请劳动争议处理、其他劳动权利 </p>
<p>  完成劳动任务、提高职业技能、执行劳动安全卫生规程、遵守纪律和职业道德</p>
</blockquote>
<h2 id="第二章-促进就业"><a href="#第二章-促进就业" class="headerlink" title="第二章 促进就业"></a>第二章 促进就业</h2><ul>
<li><p>  鼓励就业、创业</p>
</li>
<li><p>  不得歧视</p>
</li>
<li><p>  男女平等就业</p>
</li>
<li><p>  禁止招收<strong>小于 16周岁</strong>的未成年人【文体等行业需要审批，保证其义务教育】</p>
</li>
</ul>
<h2 id="第三章-劳动合同和集体合同"><a href="#第三章-劳动合同和集体合同" class="headerlink" title="第三章 劳动合同和集体合同"></a>第三章 劳动合同和集体合同</h2><ol>
<li><p> 劳动合同：确定劳动关系、明确权利和义务</p>
</li>
<li><p> 确定劳动关系 <strong>必须</strong> 签订 劳动合同</p>
</li>
<li><p> <strong>签订和变更合同</strong>时，需要 <strong>平等自愿、协商一致</strong> ，不得违法、违规</p>
</li>
<li><p> <strong>无效合同</strong>：违法违规、欺诈威胁的合同【是否无效，由劳动争议仲裁委员会、法院来确认】</p>
</li>
<li><p> 劳动合同 <strong>必须</strong> 具备：</p>
</li>
</ol>
<blockquote>
<ul>
<li>  期限</li>
<li>  工作内容</li>
<li>  劳动保护+劳动条件</li>
<li>  报酬</li>
<li>  纪律</li>
<li>  终止条件</li>
<li>  违约责任</li>
<li>  共同商议的其他条款</li>
</ul>
</blockquote>
<ol start="6">
<li> 劳动合同的期限：</li>
</ol>
<blockquote>
<ul>
<li>  固定期限</li>
<li>  不固定期限</li>
<li>  一定的工作期限</li>
</ul>
</blockquote>
<ol start="7">
<li><p> 连续在同一公司工作10年时，如果劳动者要求 <strong>不固定期限</strong> ，用人单位应该满足<strong>不固定期限</strong>的要求</p>
</li>
<li><p> 可以约定试用期，但试用期必须 <strong>&lt; = 6个月</strong></p>
</li>
<li><p> 用人单位<strong>解除劳动合同</strong>：</p>
</li>
</ol>
<blockquote>
<ul>
<li>  试用期不合格</li>
<li>  违规</li>
<li>  失职</li>
<li>  被追究刑事责任</li>
</ul>
</blockquote>
<ol start="10">
<li> 必须<strong>提前30天通知解除劳动合同</strong>：</li>
</ol>
<blockquote>
<ul>
<li><p>  患病后无法继续从事相关劳动</p>
</li>
<li><p>  不能胜任工作</p>
</li>
<li><p>  客观原因无法履行合同</p>
</li>
<li><p>  濒临破产</p>
</li>
</ul>
</blockquote>
<ol start="11">
<li> 需要给予补偿的情况：</li>
</ol>
<blockquote>
<ul>
<li>  协商一致</li>
<li>  必须<strong>提前30天通知解除劳动合同</strong> 的情况</li>
</ul>
</blockquote>
<ol start="12">
<li> 不能解除劳动合同的情况：</li>
</ol>
<blockquote>
<ul>
<li>  未被确认丧失劳动能力</li>
<li>  女员工怀孕、产期、哺乳期</li>
<li>  其他</li>
</ul>
</blockquote>
<ol start="13">
<li> 员工不满用人单位解除合同的，有权提出意见，工会有权要求重新处理</li>
<li> 劳动者 <strong>解除劳动合同</strong> 应该<strong>提前30天书面通知公司</strong></li>
<li> 随时解约：</li>
</ol>
<blockquote>
<ul>
<li>  试用期</li>
<li>  暴力威胁劳动</li>
<li>  未按合同支付报酬、提供劳动条件</li>
</ul>
</blockquote>
<h2 id="第四章-休息休假"><a href="#第四章-休息休假" class="headerlink" title="第四章 休息休假"></a>第四章 休息休假</h2><ol>
<li> 每日工作&lt; = 8小时，每周工作 &lt; = 44 小时，每周最少休息 1天【特殊情况需审批】</li>
<li> 休假节日：元旦、春节、劳动节、国庆节、其他</li>
<li> 用人单位 和 劳动者协商后，可以延长时间【延时每日 &lt; = 3小时，每月 &lt; = 36 小时】</li>
<li> 多倍工资：</li>
</ol>
<blockquote>
<ul>
<li>  加班：150%</li>
<li>  休息日，不能补休：200%</li>
<li>  法定节假日：300%</li>
</ul>
</blockquote>
<h2 id="第五章-工资"><a href="#第五章-工资" class="headerlink" title="第五章 工资"></a>第五章 工资</h2><ol>
<li><p> 带薪年假：连续工作一年以上，可以有带薪年假</p>
</li>
<li><p> 工资：不得低于当地最低标准，货币形式、按月支付</p>
</li>
<li><p> 法定节假日、婚丧假期间，需要支付工资</p>
</li>
</ol>
]]></content>
      <categories>
        <category>日常</category>
        <category>法律</category>
      </categories>
      <tags>
        <tag>法律</tag>
      </tags>
  </entry>
  <entry>
    <title>实用技巧</title>
    <url>/2021/08/04/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h1 id="实用技巧"><a href="#实用技巧" class="headerlink" title="实用技巧"></a>实用技巧</h1><p>[toc]</p>
<h2 id="一、网络篇"><a href="#一、网络篇" class="headerlink" title="一、网络篇"></a>一、网络篇</h2><h3 id="1-找回家用路由器的宽带密码："><a href="#1-找回家用路由器的宽带密码：" class="headerlink" title="1. 找回家用路由器的宽带密码："></a>1. 找回家用路由器的宽带密码：</h3><ul>
<li>  登录路由器管理后台</li>
<li>  选择备份，导出<code>.bin</code> 文件</li>
<li>  下载RouterView工具</li>
<li>  利用工具查看路由器的ADSL密码</li>
</ul>
<h3 id="2-解决-MS-Edge-浏览器收藏夹不同步的问题："><a href="#2-解决-MS-Edge-浏览器收藏夹不同步的问题：" class="headerlink" title="2. 解决 MS Edge 浏览器收藏夹不同步的问题："></a>2. 解决 MS Edge 浏览器收藏夹不同步的问题：</h3><ul>
<li>  将DNS手动设置为<code>4.2.2.1</code> 或者 <code>4.2.2.2</code></li>
<li>  退出浏览器的用户登录</li>
<li>  重启浏览器</li>
<li>  重新登录浏览器</li>
</ul>
<h3 id="3、MS-Edge浏览器开启多线程下载功能："><a href="#3、MS-Edge浏览器开启多线程下载功能：" class="headerlink" title="3、MS Edge浏览器开启多线程下载功能："></a>3、MS Edge浏览器开启多线程下载功能：</h3><ul>
<li>  地址栏输入：<code>edge://flags/</code>,找到<code>Parallel downloading</code>，选择启用。</li>
</ul>
<p>谷歌系的其他浏览器：<code>chrome://flags/#enable-parallel-downloading</code> =&gt; enable</p>
<h3 id="4、下载MS-Office-2016-官网"><a href="#4、下载MS-Office-2016-官网" class="headerlink" title="4、下载MS Office 2016-官网"></a>4、下载MS Office 2016-官网</h3><ul>
<li>  Office 2016家庭版下载：<code>https://account.microsoft.com/services</code></li>
</ul>
<h2 id="二、常用网站篇"><a href="#二、常用网站篇" class="headerlink" title="二、常用网站篇"></a>二、常用网站篇</h2><h3 id="1-1-综合性编程学习站"><a href="#1-1-综合性编程学习站" class="headerlink" title="1.1 综合性编程学习站"></a>1.1 综合性编程学习站</h3><h5 id="1-1-1-文档："><a href="#1-1-1-文档：" class="headerlink" title="1.1.1 文档："></a>1.1.1 文档：</h5><ul>
<li>菜鸟教程：         <a href="https://www.runoob.com/">https://www.runoob.com/</a></li>
<li>w3school：        <a href="https://www.w3school.com.cn/">https://www.w3school.com.cn/</a></li>
<li>w3cschool：       <a href="https://www.w3cschool.cn/">https://www.w3cschool.cn/</a></li>
<li>慕课网：           <a href="https://www.imooc.com/">https://www.imooc.com/</a></li>
<li>51CTO：           <a href="https://www.51cto.com/">https://www.51cto.com/</a></li>
<li>易百：            <a href="https://www.yiibai.com/">https://www.yiibai.com/</a></li>
<li>简单教程：        <a href="https://www.twle.cn/">https://www.twle.cn/</a></li>
</ul>
<h5 id="1-1-2-视频："><a href="#1-1-2-视频：" class="headerlink" title="1.1.2 视频："></a>1.1.2 视频：</h5><ul>
<li>bilibili：        <a href="https://www.bilibili.com/">https://www.bilibili.com/</a></li>
<li>中国大学慕课：     <a href="https://www.icourse163.org/">https://www.icourse163.org/</a> </li>
<li>学堂在线：         <a href="https://www.xuetangx.com/">https://www.xuetangx.com/</a></li>
<li>爱课程：           <a href="http://www.icourses.cn/home/">http://www.icourses.cn/home/</a></li>
<li>我要自学网：       <a href="https://www.51zxw.net/">https://www.51zxw.net/</a></li>
</ul>
<h3 id="1-2-编程学习"><a href="#1-2-编程学习" class="headerlink" title="1.2 编程学习"></a>1.2 编程学习</h3><h5 id="1-2-1-Java"><a href="#1-2-1-Java" class="headerlink" title="1.2.1 Java:"></a>1.2.1 Java:</h5><ul>
<li>How2J：           <a href="https://how2j.cn/">https://how2j.cn/</a></li>
<li>javaguide：       <a href="https://gitee.com/huangxuwen/JavaGuide">https://gitee.com/huangxuwen/JavaGuide</a></li>
<li>advancedjava:     <a href="https://doocs.gitee.io/advanced-java/#/">https://doocs.gitee.io/advanced-java/#/</a></li>
</ul>
<h5 id="1-2-2-C"><a href="#1-2-2-C" class="headerlink" title="1.2.2 C#"></a>1.2.2 C#</h5><ul>
<li>明日教育：        <a href="https://zyk.mingrisoft.com/Develop/view/id/3283/type/6/cid/4.html">https://zyk.mingrisoft.com/Develop/view/id/3283/type/6/cid/4.html</a> </li>
</ul>
<h5 id="1-2-3-前端："><a href="#1-2-3-前端：" class="headerlink" title="1.2.3 前端："></a>1.2.3 前端：</h5><ul>
<li>lookroot:         <a href="https://www.lookroot.cn/">https://www.lookroot.cn/</a></li>
<li>321ku:            <a href="http://www.321ku.com/">http://www.321ku.com/</a></li>
</ul>
<h5 id="1-2-4-算法："><a href="#1-2-4-算法：" class="headerlink" title="1.2.4 算法："></a>1.2.4 算法：</h5><ul>
<li><p>五分钟学算法：    <a href="http://www.cxyxiaowu.com/">http://www.cxyxiaowu.com/</a></p>
</li>
<li><p>小浩算法：        <a href="https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html">https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html</a>  </p>
</li>
<li><p>算法可视化：</p>
<ul>
<li><a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a></li>
</ul>
</li>
<li><p>常用的十大算法：  <a href="https://mp.weixin.qq.com/s/fJEiPQ_iLvz0ecS9Cb2DJg">https://mp.weixin.qq.com/s/fJEiPQ_iLvz0ecS9Cb2DJg</a>?</p>
</li>
</ul>
<h5 id="1-2-5-Linux"><a href="#1-2-5-Linux" class="headerlink" title="1.2.5 Linux:"></a>1.2.5 Linux:</h5><ul>
<li> Linux-Tutorial:      <a href="https://gitee.com/wangyangbto/Linux-Tutorial">https://gitee.com/wangyangbto/Linux-Tutorial</a></li>
</ul>
<h3 id="1-3-路线图："><a href="#1-3-路线图：" class="headerlink" title="1.3 路线图："></a>1.3 路线图：</h3><ul>
<li>前端：    <pre><code> - https://github.com/ObjTube/front-end-roadmap  
</code></pre>
<ul>
<li><a href="https://roadmap.sh/">https://roadmap.sh/</a></li>
<li><a href="https://www.imqianduan.com/35/204.html">https://www.imqianduan.com/35/204.html</a></li>
</ul>
</li>
</ul>
<h3 id="1-4-开源镜像站："><a href="#1-4-开源镜像站：" class="headerlink" title="1.4 开源镜像站："></a>1.4 开源镜像站：</h3><ul>
<li>阿里云：              <a href="https://developer.aliyun.com/mirror/">https://developer.aliyun.com/mirror/</a></li>
<li>网易开源镜像站：      <a href="http://mirrors.163.com/">http://mirrors.163.com/</a></li>
<li>清华大学开源软件站：   <a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a></li>
<li>USTC开源镜像站：      <a href="https://mirrors.ustc.edu.cn/">https://mirrors.ustc.edu.cn/</a></li>
<li>其他：               <a href="https://www.cnblogs.com/yanjieli/articles/10065400.html">https://www.cnblogs.com/yanjieli/articles/10065400.html</a></li>
</ul>
<h3 id="2-1-电子书："><a href="#2-1-电子书：" class="headerlink" title="2.1 电子书："></a>2.1 电子书：</h3><ul>
<li>微信读书：               <a href="https://weread.qq.com/">https://weread.qq.com/</a></li>
<li>aibooks：               <a href="https://www.aibooks.cc/">https://www.aibooks.cc/</a></li>
<li>时宜搜书：               <a href="https://www.shiyisoushu.com/">https://www.shiyisoushu.com/</a></li>
<li>WDFXW：                 <a href="http://www.wdfxw.net/">http://www.wdfxw.net/</a></li>
<li>联图云：                 <a href="http://discx.yuntu.io/">http://discx.yuntu.io/</a></li>
<li>书享家：                  <a href="http://shuxiangjia.cn/">http://shuxiangjia.cn/</a></li>
<li>鸠摩搜索：               <a href="https://www.jiumodiary.com/">https://www.jiumodiary.com/</a></li>
</ul>
<h3 id="2-2-计算机"><a href="#2-2-计算机" class="headerlink" title="2.2 计算机"></a>2.2 计算机</h3><ul>
<li>书栈网：                <a href="https://www.bookstack.cn/">https://www.bookstack.cn/</a></li>
<li>免费的编程中文书籍索引：  <a href="https://github.com/justjavac/free-programming-books-zh_CN">https://github.com/justjavac/free-programming-books-zh_CN</a> </li>
<li>CYC 笔记：<a href="http://www.cyc2018.xyz/">http://www.cyc2018.xyz/</a></li>
<li>CS-Learning-res:        <a href="https://github.com/harvic/CS-Learning-res">https://github.com/harvic/CS-Learning-res</a>   </li>
<li>CSLearning:             <a href="https://gitee.com/ForthEspada/CSLearning">https://gitee.com/ForthEspada/CSLearning</a></li>
<li>图灵社区：               <a href="https://www.ituring.com.cn/book?tab=free">https://www.ituring.com.cn/book?tab=free</a></li>
</ul>
<h3 id="3-软件推荐："><a href="#3-软件推荐：" class="headerlink" title="3. 软件推荐："></a>3. 软件推荐：</h3><ul>
<li>niu                     <a href="http://ziliao6.com/">http://ziliao6.com/</a></li>
<li>最佳应用：               <a href="http://www.zuijiastore.com/">http://www.zuijiastore.com/</a></li>
<li>果核剥壳：                <a href="https://www.ghpym.com/">https://www.ghpym.com/</a></li>
<li>创造者日报：              <a href="https://creatorsdaily.com/">https://creatorsdaily.com/</a></li>
<li>老白：                    <a href="https://bai.okduang.com/">https://bai.okduang.com/</a></li>
<li>微当下载：                <a href="https://www.weidown.com/">https://www.weidown.com/</a></li>
<li>423Down：                 <a href="https://www.423down.com/">https://www.423down.com/</a></li>
<li>异次元：                  <a href="https://www.iplaysoft.com/">https://www.iplaysoft.com/</a></li>
<li>moo0:                     <a href="https://zhs.moo0.com/">https://zhs.moo0.com/</a></li>
<li>正版中国：                <a href="https://www.getitfree.cn/">https://www.getitfree.cn/</a></li>
<li>火耳：                    <a href="https://mp.weixin.qq.com/s/ZuKohAeMMHpQHq9yPp_3Gg">https://mp.weixin.qq.com/s/ZuKohAeMMHpQHq9yPp_3Gg</a></li>
<li>Win10官方下载：           <a href="https://www.microsoft.com/zh-cn/software-download/windows10">https://www.microsoft.com/zh-cn/software-download/windows10</a></li>
</ul>
<h3 id="4-网址导航-网盘搜索："><a href="#4-网址导航-网盘搜索：" class="headerlink" title="4. 网址导航-网盘搜索："></a>4. 网址导航-网盘搜索：</h3><h4 id="4-1-通用型"><a href="#4-1-通用型" class="headerlink" title="4.1 通用型"></a>4.1 通用型</h4><ul>
<li>快搜：                     <a href="https://search.chongbuluo.com/">https://search.chongbuluo.com/</a></li>
<li>万花筒：                   <a href="https://wht.im/">https://wht.im/</a></li>
<li>龙轩导航：                <a href="http://ilxdh.com/">http://ilxdh.com/</a></li>
<li>小呆导航：                <a href="https://webjike.com/web.html">https://webjike.com/web.html</a></li>
<li>导航湾：                  <a href="https://daohangwan.com/">https://daohangwan.com/</a></li>
<li>果汁导航：                <a href="http://guozhivip.com/">http://guozhivip.com/</a></li>
<li>爱达杂货铺：               <a href="https://adzhp.cn/">https://adzhp.cn/</a></li>
<li>老司机导航：              <a href="https://www.giffox.com/">https://www.giffox.com/</a></li>
<li>虾库网：                  <a href="https://www.xiacoo.com/">https://www.xiacoo.com/</a></li>
<li>有趣星球：                <a href="https://www.yqxqw.com/">https://www.yqxqw.com/</a></li>
<li>吾爱导航：                <a href="http://123.52sharing.cn/">http://123.52sharing.cn/</a></li>
<li>telegram中文：            <a href="http://www.sssoou.com/">http://www.sssoou.com/</a></li>
<li>xx资源网：                <a href="https://www.xxurls.com/">https://www.xxurls.com/</a></li>
<li>合集网：                  <a href="http://www.heji.ltd/">http://www.heji.ltd/</a></li>
<li>sakura:                   <a href="http://sakura.ys168.com/">http://sakura.ys168.com/</a></li>
</ul>
<h4 id="4-2-国外相关"><a href="#4-2-国外相关" class="headerlink" title="4.2 国外相关"></a>4.2 国外相关</h4><ul>
<li>国外网站推荐：              <a href="https://www.egouz.com/">https://www.egouz.com/</a></li>
<li>各国网站大全                <a href="http://www.world68.com/">http://www.world68.com/</a></li>
</ul>
<h4 id="4-3-内容推荐站："><a href="#4-3-内容推荐站：" class="headerlink" title="4.3 内容推荐站："></a>4.3 内容推荐站：</h4><ul>
<li>有格调[内容推荐站]：                 <a href="https://www.ugediao.com/">https://www.ugediao.com/</a></li>
<li>艾瑞网-互联网资讯平台：              <a href="https://www.iresearch.cn/">https://www.iresearch.cn/</a> </li>
</ul>
<h4 id="4-4-前端设计-侧重编程"><a href="#4-4-前端设计-侧重编程" class="headerlink" title="4.4 前端设计/侧重编程"></a>4.4 前端设计/侧重编程</h4><ul>
<li>创造师导航[前端/设计]:    <a href="http://www.chuangzaoshi.com/">http://www.chuangzaoshi.com/</a></li>
<li>野创网[前端/设计]         <a href="https://www.yechuang.net/">https://www.yechuang.net/</a></li>
<li>muzli Search：           <a href="https://search.muz.li/">https://search.muz.li/</a></li>
<li>大数据导航：              <a href="http://hao.199it.com/">http://hao.199it.com/</a></li>
<li>快推易词云大数据：        <a href="https://www.kt1.com/">https://www.kt1.com/</a></li>
<li>5118营销大数据：          <a href="https://www.5118.com/">https://www.5118.com/</a></li>
<li>百度指数：                <a href="http://index.baidu.com/v2/index.html#/">http://index.baidu.com/v2/index.html#/</a></li>
</ul>
<h4 id="4-5-字体："><a href="#4-5-字体：" class="headerlink" title="4.5 字体："></a>4.5 字体：</h4><ul>
<li>站酷字库：                <a href="https://www.zcool.com.cn/special/zcoolfonts/">https://www.zcool.com.cn/special/zcoolfonts/</a></li>
<li>fontawesome              <a href="http://www.fontawesome.com.cn/">http://www.fontawesome.com.cn/</a></li>
</ul>
<h4 id="4-6-图标："><a href="#4-6-图标：" class="headerlink" title="4.6 图标："></a>4.6 图标：</h4><ul>
<li>iconfont：                <a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></li>
<li>在线Logo设计：            <a href="http://www.uugai.com/">http://www.uugai.com/</a></li>
</ul>
<h4 id="4-7-图片："><a href="#4-7-图片：" class="headerlink" title="4.7 图片："></a>4.7 图片：</h4><ul>
<li>coolbackgrounds[条纹背景]： <a href="https://coolbackgrounds.io/">https://coolbackgrounds.io/</a></li>
<li>全景网：                   <a href="https://www.quanjing.com/">https://www.quanjing.com/</a></li>
<li>7mx:                      <a href="https://7mx.com/">https://7mx.com/</a></li>
<li>Pexels:                   <a href="https://www.pexels.com/zh-cn/">https://www.pexels.com/zh-cn/</a></li>
<li>沙沙野：                   <a href="https://www.ssyer.com/">https://www.ssyer.com/</a></li>
<li>pickpik：                 <a href="https://www.pickpik.com/">https://www.pickpik.com/</a></li>
<li>gratisography：           <a href="https://gratisography.com/">https://gratisography.com/</a></li>
<li>soGif动图:                <a href="https://www.soogif.com/">https://www.soogif.com/</a></li>
<li>觅元素：                  <a href="http://www.51yuansu.com/">http://www.51yuansu.com/</a></li>
</ul>
<h4 id="4-8-调色-前端渐变色"><a href="#4-8-调色-前端渐变色" class="headerlink" title="4.8 调色/前端渐变色"></a>4.8 调色/前端渐变色</h4><ul>
<li>配色/调色：<ul>
<li>MaterialDesign：          <a href="https://www.materialpalette.com/">https://www.materialpalette.com/</a></li>
<li>FlatUIcolor:              <a href="https://flatuicolors.com/">https://flatuicolors.com/</a></li>
<li>colorhunt:                <a href="https://colorhunt.co/">https://colorhunt.co/</a></li>
<li>RGB颜色转换/预览：         <a href="https://www.sioe.cn/yingyong/yanse-rgb-16/">https://www.sioe.cn/yingyong/yanse-rgb-16/</a></li>
<li>网页设计常用搭配色：        <a href="http://tool.c7sky.com/webcolor/">http://tool.c7sky.com/webcolor/</a></li>
<li>colordrop:                <a href="https://colordrop.io/">https://colordrop.io/</a></li>
<li>度度网[纯手动]：           <a href="https://www.topdodo.com/sehuan">https://www.topdodo.com/sehuan</a> </li>
</ul>
</li>
</ul>
<ul>
<li>渐变色：<ul>
<li>webgradients[CSS渐变背景]：    <a href="https://webgradients.com/">https://webgradients.com/</a></li>
<li>coolhue：                     <a href="https://webkul.github.io/coolhue/">https://webkul.github.io/coolhue/</a></li>
<li>uigradients：                 <a href="https://uigradients.com/">https://uigradients.com/</a></li>
</ul>
</li>
</ul>
<h3 id="5-论文检索："><a href="#5-论文检索：" class="headerlink" title="5. 论文检索："></a>5. 论文检索：</h3><ul>
<li><p>idata:                    <a href="https://www.cn-ki.net/">https://www.cn-ki.net/</a></p>
</li>
<li><p>大木虫学术导航：           <a href="http://www.4243.net/">http://www.4243.net/</a></p>
</li>
<li><p>笔杆网：                  <a href="https://www.bigan.net/">https://www.bigan.net/</a></p>
</li>
<li><p>  免费论文下载中心：<a href="http://www.hi138.com/">http://www.hi138.com/</a></p>
</li>
</ul>
<h3 id="6-在线工具站："><a href="#6-在线工具站：" class="headerlink" title="6. 在线工具站："></a>6. 在线工具站：</h3><h4 id="6-1-简历制作："><a href="#6-1-简历制作：" class="headerlink" title="6.1 简历制作："></a>6.1 简历制作：</h4><ul>
<li>极简简历：            <a href="https://www.polebrief.com/index">https://www.polebrief.com/index</a></li>
<li>五百丁简历：          <a href="https://www.500d.me/?f=2627476">https://www.500d.me/?f=2627476</a></li>
<li>超级简历：            <a href="https://www.wondercv.com/">https://www.wondercv.com/</a></li>
</ul>
<h4 id="6-2-网盘搜索："><a href="#6-2-网盘搜索：" class="headerlink" title="6.2 网盘搜索："></a>6.2 网盘搜索：</h4><ul>
<li>Pan搜：               <a href="https://www.pansoso.com/">https://www.pansoso.com/</a></li>
<li>酷搜：                <a href="https://www.kolsou.com/">https://www.kolsou.com/</a></li>
<li>史莱姆搜索：          <a href="http://slimego.cn/">http://slimego.cn/</a></li>
<li>大力盘：              <a href="https://www.dalipan.com/">https://www.dalipan.com/</a></li>
<li>小马盘搜索：          <a href="https://www.xiaomapan.com/">https://www.xiaomapan.com/</a></li>
<li>磁力蚂蚁：            <a href="http://www.eclmy.space/">http://www.eclmy.space/</a></li>
<li>凌风云搜索：          <a href="https://www.lingfengyun.com/">https://www.lingfengyun.com/</a></li>
<li>云搜索：              <a href="https://www.sobaidupan.com/">https://www.sobaidupan.com/</a></li>
<li>盘搜搜：              <a href="http://baiduyun.6miu.com/">http://baiduyun.6miu.com/</a></li>
<li>verypan：             <a href="http://www.verypan.com/">http://www.verypan.com/</a></li>
<li>天天云搜：            <a href="https://www.ttyunsou.cn/">https://www.ttyunsou.cn/</a></li>
</ul>
<h4 id="6-3-Office模板："><a href="#6-3-Office模板：" class="headerlink" title="6.3 Office模板："></a>6.3 Office模板：</h4><ul>
<li>微软官方OfficePlus：  <a href="http://www.officeplus.cn/Template/Home.shtml">http://www.officeplus.cn/Template/Home.shtml</a></li>
<li>稻壳儿：              <a href="http://www.docer.com/">http://www.docer.com/</a></li>
<li>PPT模板：             <a href="http://www.51pptmoban.com/ppt/">http://www.51pptmoban.com/ppt/</a></li>
<li>优品PPT：             <a href="https://www.ypppt.com/">https://www.ypppt.com/</a></li>
<li>hippter：             <a href="http://www.hippter.com/">http://www.hippter.com/</a></li>
<li>第一PPT：             <a href="http://www.1ppt.com/">http://www.1ppt.com/</a></li>
<li>办公资源网：          <a href="https://www.bangongziyuan.com/">https://www.bangongziyuan.com/</a></li>
<li>PPT超级市场：         <a href="http://ppt.sotary.com/web/wxapp/index.html">http://ppt.sotary.com/web/wxapp/index.html</a></li>
<li>slidesgo：            <a href="https://slidesgo.com/">https://slidesgo.com/</a></li>
</ul>
<h4 id="6-4-在线格式处理："><a href="#6-4-在线格式处理：" class="headerlink" title="6.4 在线格式处理："></a>6.4 在线格式处理：</h4><ul>
<li>在线转化器：          <a href="https://cn.office-converter.com/">https://cn.office-converter.com/</a></li>
<li>unitepdf：            <a href="https://unitepdf.com/">https://unitepdf.com/</a></li>
<li>小白熊：              <a href="https://www.ofoct.com/zh/">https://www.ofoct.com/zh/</a></li>
<li>aconvert:             <a href="https://www.aconvert.com/cn/">https://www.aconvert.com/cn/</a></li>
<li>PDF派：               <a href="https://www.pdfpai.com/">https://www.pdfpai.com/</a></li>
<li>ilovePDF:             <a href="https://www.ilovepdf.com/">https://www.ilovepdf.com/</a></li>
</ul>
<h4 id="6-5-思维导图："><a href="#6-5-思维导图：" class="headerlink" title="6.5 思维导图："></a>6.5 思维导图：</h4><ul>
<li>亿图图示：        <a href="https://www.edrawmax.cn/online/">https://www.edrawmax.cn/online/</a></li>
<li>zhimap:           <a href="https://zhimap.com/auth">https://zhimap.com/auth</a></li>
<li>百度脑图：        <a href="https://naotu.baidu.com/">https://naotu.baidu.com/</a></li>
</ul>
<h4 id="6-6-图片处理："><a href="#6-6-图片处理：" class="headerlink" title="6.6 图片处理："></a>6.6 图片处理：</h4><ul>
<li>Bigjpg智能图片放大：      <a href="https://bigjpg.com/">https://bigjpg.com/</a></li>
</ul>
<h4 id="6-7-综合工具："><a href="#6-7-综合工具：" class="headerlink" title="6.7 综合工具："></a>6.7 综合工具：</h4><ul>
<li>在线工具箱：          <a href="http://www.toolzl.com/">http://www.toolzl.com/</a></li>
<li>mikutools：          <a href="https://tools.miku.ac/">https://tools.miku.ac/</a></li>
<li>兔二工具：            <a href="https://www.tool22.com/">https://www.tool22.com/</a></li>
</ul>
<h4 id="6-8-隐私泄露查询："><a href="#6-8-隐私泄露查询：" class="headerlink" title="6.8 隐私泄露查询："></a>6.8 隐私泄露查询：</h4><ul>
<li>firefoxmonitor:       <a href="https://monitor.firefox.com/">https://monitor.firefox.com/</a></li>
</ul>
<h4 id="6-9-比对工具"><a href="#6-9-比对工具" class="headerlink" title="6.9 比对工具"></a>6.9 比对工具</h4><ul>
<li>virsus[比价/比学校等]:           <a href="https://versus.com/cn">https://versus.com/cn</a></li>
</ul>
<h4 id="6-10-chrome插件-油猴脚本："><a href="#6-10-chrome插件-油猴脚本：" class="headerlink" title="6.10 chrome插件/油猴脚本："></a>6.10 chrome插件/油猴脚本：</h4><ul>
<li>极简插件：         <a href="https://chrome.zzzmh.cn/">https://chrome.zzzmh.cn/</a></li>
<li>chromefor:        <a href="https://www.chromefor.com/">https://www.chromefor.com/</a></li>
<li>greasyFork：      <a href="https://greasyfork.org/zh-CN">https://greasyfork.org/zh-CN</a></li>
</ul>
<h4 id="6-11-临时文件传输："><a href="#6-11-临时文件传输：" class="headerlink" title="6.11 临时文件传输："></a>6.11 临时文件传输：</h4><ul>
<li>文叔叔：          <a href="https://www.wenshushu.cn/">https://www.wenshushu.cn/</a></li>
<li>奶牛快传：        <a href="https://cowtransfer.com/">https://cowtransfer.com/</a></li>
<li>钛盘：            <a href="https://app.tmp.link/">https://app.tmp.link/</a></li>
<li>求是潮云U盘：     <a href="https://www.qsc.zju.edu.cn/box/">https://www.qsc.zju.edu.cn/box/</a></li>
<li>拷贝兔：          <a href="https://cp.anyknew.com/">https://cp.anyknew.com/</a></li>
<li>网络剪切板：      <a href="http://netcut.cn/">http://netcut.cn/</a> </li>
</ul>
<h4 id="6-13-投屏工具："><a href="#6-13-投屏工具：" class="headerlink" title="6.13 投屏工具："></a>6.13 投屏工具：</h4><ul>
<li>幕享：            <a href="https://letsview.com/zh/">https://letsview.com/zh/</a></li>
</ul>
<h4 id="6-14-其他"><a href="#6-14-其他" class="headerlink" title="6.14 其他"></a>6.14 其他</h4><ul>
<li>图形方格纸：          <a href="https://www.mygraphpaper.com/index.php?lang=zh-hans">https://www.mygraphpaper.com/index.php?lang=zh-hans</a></li>
<li>奇趣网站收藏家：      <a href="https://fuun.fun/">https://fuun.fun/</a></li>
<li>书签地球：            <a href="https://www.bookmarkearth.com/">https://www.bookmarkearth.com/</a></li>
<li>硕鼠视频下载：        <a href="http://www.flvcd.com/index.htm">http://www.flvcd.com/index.htm</a></li>
<li>阿里云盘：            <a href="https://www.aliyundrive.com/">https://www.aliyundrive.com/</a></li>
<li>简答题 - 简洁、实用的找答案题库：      <a href="https://www.jiandati.com/">https://www.jiandati.com/</a></li>
</ul>
<h3 id="6-15-Office-Windows下载"><a href="#6-15-Office-Windows下载" class="headerlink" title="6.15 Office + Windows下载"></a>6.15 Office + Windows下载</h3><ul>
<li>  <a href="https://tb.rg-adguard.net/public.php?lang=zh-CN">windows + office 下载</a></li>
</ul>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>文件服务器搭建-笔记</title>
    <url>/2021/08/04/%E6%90%AD%E5%BB%BA%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1 id="文件服务器搭建"><a href="#文件服务器搭建" class="headerlink" title="文件服务器搭建"></a>文件服务器搭建</h1><p>[toc]</p>
<h2 id="1、整体步骤："><a href="#1、整体步骤：" class="headerlink" title="1、整体步骤："></a>1、整体步骤：</h2><p>1、购买服务器</p>
<p>2、开放服务器的端口</p>
<p>3、测试服务器可以网页访问</p>
<p>4、服务器安装 httpd（一般购买后默认都装好了）</p>
<p>5、修改 httpd 的配置。【<code>/etc/httpd/conf/httpd.conf</code>】（修改端口，关闭默认字符集）</p>
<p>6、重启 httpd。【<code>service httpd restart</code>】</p>
<p>7、在<code>/var/www/html/</code>目录下，创建工作目录（以后上传的文件都放工作目录里，这里以<code>/upload</code>为例）</p>
<p>8、利用WinSCP等远程工具上传文件到<code>/var/www/html/upload</code>。</p>
<h2 id="2、安装-httpd-的命令："><a href="#2、安装-httpd-的命令：" class="headerlink" title="2、安装 httpd 的命令："></a>2、安装 httpd 的命令：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install httpd -y   安装    </span><br><span class="line">chkconfig --add httpd     加入启动服务    </span><br><span class="line">chkconfig httpd on	默认启动级别自启动    </span><br><span class="line">service httpd start	启动httpd服务</span><br></pre></td></tr></table></figure>









<hr>
<h2 id="3、主要配置："><a href="#3、主要配置：" class="headerlink" title="3、主要配置："></a>3、主要配置：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">ServerRoot <span class="string">&quot;/etc/httpd&quot;</span>  <span class="comment"># 服务器根目录</span></span><br><span class="line"> </span><br><span class="line">Listen 80  <span class="comment"># 默认端口</span></span><br><span class="line"> </span><br><span class="line">DocumentRoot <span class="string">&quot;/var/www/html&quot;</span>  </span><br></pre></td></tr></table></figure>









<hr>
<h2 id="4、解决目录浏览时，出现中文乱码："><a href="#4、解决目录浏览时，出现中文乱码：" class="headerlink" title="4、解决目录浏览时，出现中文乱码："></a>4、解决目录浏览时，出现中文乱码：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/httpd/conf/httpd.conf</span><br><span class="line"></span><br><span class="line">查找、注释掉：</span><br><span class="line">AddDefaultCharset ISO-8859-1</span><br><span class="line"></span><br><span class="line">改成：</span><br><span class="line"><span class="comment">#AddDefaultCharset ISO-8859-1</span></span><br><span class="line">AddDefaultCharset off</span><br></pre></td></tr></table></figure>









<hr>
<h2 id="5、httpd的常用命令："><a href="#5、httpd的常用命令：" class="headerlink" title="5、httpd的常用命令："></a>5、httpd的常用命令：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service httpd status	// 查看httpd的状态</span><br><span class="line">service httpd start		// 打开 httpd</span><br><span class="line">service httpd stop		// 关闭 httpd</span><br><span class="line">service httpd restart	// 重启 httpd</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>后端</category>
        <category>操作系统</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>排序算法入门</title>
    <url>/2021/08/04/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="排序算法入门"><a href="#排序算法入门" class="headerlink" title="排序算法入门"></a>排序算法入门</h1><p>[toc]</p>
<h2 id="1、冒泡排序"><a href="#1、冒泡排序" class="headerlink" title="1、冒泡排序"></a>1、冒泡排序</h2><ul>
<li>  平均-时间复杂度：==O(n^2^)==</li>
<li>  最好-时间复杂度：==O(n)==</li>
<li>  最坏-时间复杂度：==O(n^2^)==</li>
<li>  空间复杂度：==O(1)==</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 冒泡排序【升序】</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] bubbleSort(<span class="keyword">int</span>[] arr)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 控制比较次数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断本轮是否发生过交换，若本轮无交换，则表示 已有序</span></span><br><span class="line">            <span class="keyword">boolean</span> isSwap = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 控制比较</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=arr.length-<span class="number">1</span>;j&gt;<span class="number">0</span>;j--)&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// arr[j] &gt; arr[j-1]时，交换2个元素</span></span><br><span class="line">                <span class="keyword">if</span>(arr[j]&gt;arr[j-<span class="number">1</span>])&#123;</span><br><span class="line">                    <span class="keyword">int</span> tmp = arr[j];</span><br><span class="line">                    arr[j] = arr[j-<span class="number">1</span>];</span><br><span class="line">                    arr[j-<span class="number">1</span>] = tmp;</span><br><span class="line">                    isSwap = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!isSwap)<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h2 id="2、选择排序"><a href="#2、选择排序" class="headerlink" title="2、选择排序"></a>2、选择排序</h2><ul>
<li>  平均-时间复杂度：==O(n^2^)==</li>
<li>  最好-时间复杂度：==O(n^2^)==</li>
<li>  最坏-时间复杂度：==O(n^2^)==</li>
<li>  空间复杂度：==O( 1)==</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 选择排序【升序】</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] selectSort(<span class="keyword">int</span>[] arr)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">            <span class="comment">// 每轮开始时，假设本轮的第一个元素为最小值</span></span><br><span class="line">            <span class="keyword">int</span> minIdx = i-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 通过循环找出最小的</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;arr.length;j++)&#123;</span><br><span class="line">                <span class="comment">// 将本轮无序区中的最小值与无序区的第一个值交换【找出实际的最小值】</span></span><br><span class="line">                <span class="keyword">if</span>(arr[j]&lt;arr[minIdx])&#123;</span><br><span class="line">                    <span class="keyword">int</span> tmp = arr[j];</span><br><span class="line">                    arr[j] = arr[minIdx];</span><br><span class="line">                    arr[minIdx] = tmp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>







<h2 id="3、插入排序"><a href="#3、插入排序" class="headerlink" title="3、插入排序"></a>3、插入排序</h2><ul>
<li>  平均-时间复杂度：==O(n^2^)==</li>
<li>  最好-时间复杂度：==O(n)==</li>
<li>  最坏-时间复杂度：==O(n^2^)==</li>
<li>  空间复杂度：==O( 1)==</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 插入排序【升序】</span></span><br><span class="line"></span><br><span class="line">	 <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] insertSort(<span class="keyword">int</span>[] arr)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&gt;<span class="number">0</span>;j--)&#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(arr[j] &lt; arr[j-<span class="number">1</span>])&#123;</span><br><span class="line">                    <span class="keyword">int</span> tmp = arr[j];</span><br><span class="line">                    arr[j] = arr[j-<span class="number">1</span>];</span><br><span class="line">                    arr[j-<span class="number">1</span>] = tmp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>







<h2 id="4、希尔排序"><a href="#4、希尔排序" class="headerlink" title="4、希尔排序"></a>4、希尔排序</h2><ul>
<li>  平均-时间复杂度：==O(n^1.3^)==</li>
<li>  最好-时间复杂度：==O(n)==</li>
<li>  最坏-时间复杂度：==O(n^2^)==</li>
<li>  空间复杂度：==O( 1)==</li>
</ul>
<p><strong>直接插入排序算法</strong>的一种更高效的<strong>改进版本</strong>。</p>
<p>原始序列：【2，1，3，5，7】</p>
<p>希尔排序-步骤：</p>
<blockquote>
<ul>
<li>  选取 <strong>增量 gap = 2</strong>，即：每偏移gap个元素，选取1个元素。第一次选出【2，3，7】</li>
<li>  将按照 gap 选出的 几个数进行 <strong>直接插入排序</strong>。</li>
<li>  减小增量 gap , 继续选取数字，继续将选出的数继续直接插入排序。</li>
<li>  以此类推，直到有序。</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h2 id="5、快速排序"><a href="#5、快速排序" class="headerlink" title="5、快速排序"></a>5、快速排序</h2><p>原始序列：【3，5，2，1，19，14，32】</p>
<p>思路：</p>
<blockquote>
<p>  1、定义1个分治函数</p>
<p>  2、定义1个快排函数，在快排函数的内部调用分治函数</p>
<p>  3、在main函数中调用快排函数</p>
</blockquote>
<ol>
<li> 分治函数</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> povit = left;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(left&lt;right)&#123;</span><br><span class="line">        <span class="comment">// 右边大则向前移动指针</span></span><br><span class="line">        <span class="keyword">while</span>(left&lt;right &amp;&amp; arr[right]&gt;arr[pivot])&#123;</span><br><span class="line">            right--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 左边小则向后移动指针</span></span><br><span class="line">        <span class="keyword">while</span>(left&lt;right &amp;&amp; arr[left]&lt;arr[pivot])&#123;</span><br><span class="line">            left++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 2个指针都停止时，交换</span></span><br><span class="line">        <span class="keyword">if</span> (arr[left] &gt;= arr[right]) &#123;</span><br><span class="line">            <span class="keyword">int</span> tmp = arr[left];</span><br><span class="line">            arr[left] = arr[right];</span><br><span class="line">            arr[right] = tmp;</span><br><span class="line">        &#125;        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (left == right) &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = arr[left];</span><br><span class="line">        arr[left] = arr[pivot];</span><br><span class="line">        arr[pivot] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> left;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<p>2、快排函数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> start, <span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(start&gt;=end)<span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> pivot = partition(arr,start,end);</span><br><span class="line">    </span><br><span class="line">    quickSort(arr,start,pivot-<span class="number">1</span>);</span><br><span class="line">    quickSort(arr,pivot+<span class="number">1</span>,end);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>3、主函数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>[] arr1 = &#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">19</span>,<span class="number">14</span>,<span class="number">32</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 排序前:[3, 5, 2, 1, 19, 14, 32]</span></span><br><span class="line">System.out.println(Arrays.toString(arr1));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 快排</span></span><br><span class="line">QuickSortDemo.quickSort(arr1,<span class="number">0</span>,arr1.length-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 排序后:[1, 2, 3, 5, 14, 19, 32]</span></span><br><span class="line">System.out.println(Arrays.toString(arr1));</span><br></pre></td></tr></table></figure>





<p>4、完整代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> quickSort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickSortDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        *  分治的步骤：</span></span><br><span class="line"><span class="comment">        *       1、将分组的第一个元素,设置为基准</span></span><br><span class="line"><span class="comment">        *       2、left指向第一个元素，right指向最后一个元素</span></span><br><span class="line"><span class="comment">        *       3、当left &lt; right 所指的元素时，进入循环：</span></span><br><span class="line"><span class="comment">        *       4、      当 left &lt;= 基准时，不断 ++ , 直到遇见第一个 &gt; 基准的数时停下</span></span><br><span class="line"><span class="comment">        *       5、      当 right &gt; 基准时，不断 -- , 直到遇见第一个 &lt; 基准的数时停下</span></span><br><span class="line"><span class="comment">        *       6、      left 和 right 都停下时，交换 left 和 right 所在的元素。</span></span><br><span class="line"><span class="comment">        *       7、如果left 和 right相遇，交换 【基准元素】与【相遇位置的元素】</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> pivot = left;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (left &lt; right&amp;&amp;arr[right] &gt; arr[pivot]) &#123;</span><br><span class="line">                right--;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (left &lt; right&amp;&amp;arr[left] &lt;= arr[pivot]) &#123;</span><br><span class="line">                left++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (arr[left] &gt;= arr[right]) &#123;</span><br><span class="line">                <span class="keyword">int</span> tmp = arr[left];</span><br><span class="line">                arr[left] = arr[right];</span><br><span class="line">                arr[right] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (left == right) &#123;</span><br><span class="line">            <span class="keyword">int</span> tmp = arr[left];</span><br><span class="line">            arr[left] = arr[pivot];</span><br><span class="line">            arr[pivot] = tmp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回分治完成后的基准下标</span></span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> start, <span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(start&gt;=end)<span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> pivot = partition(arr,start,end);</span><br><span class="line"></span><br><span class="line">        quickSort(arr,start,pivot-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        quickSort(arr,pivot+<span class="number">1</span>,end);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>算法与数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>牛客-算法(题解)</title>
    <url>/2021/08/04/%E7%89%9B%E5%AE%A2-%E7%AE%97%E6%B3%95(%E9%A2%98%E8%A7%A3)/</url>
    <content><![CDATA[<h1 id="牛客-算法-题解"><a href="#牛客-算法-题解" class="headerlink" title="牛客-算法(题解)"></a>牛客-算法(题解)</h1><p>[toc]</p>
<h2 id="0-斐波那契数列"><a href="#0-斐波那契数列" class="headerlink" title="0. 斐波那契数列"></a>0. 斐波那契数列</h2><p><img src="https://z3.ax1x.com/2021/06/14/2TqNXq.png" alt="斐波那契数列"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;     </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> Fibonacci(n-<span class="number">1</span>)+Fibonacci(n-<span class="number">2</span>);</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h2 id="1-反转链表"><a href="#1-反转链表" class="headerlink" title="1. 反转链表"></a>1. 反转链表</h2><p><img src="https://z3.ax1x.com/2021/05/29/2Axd76.png" alt="反转链表"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">public class ListNode &#123;</span></span><br><span class="line"><span class="comment">    int val;</span></span><br><span class="line"><span class="comment">    ListNode next = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    ListNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">ReverseList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(head ==<span class="keyword">null</span> || head.next ==<span class="keyword">null</span>)<span class="keyword">return</span> head;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        Stack&lt;ListNode&gt; s = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">     </span><br><span class="line">      </span><br><span class="line">        ListNode cur = head;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 遍历原来的单链表，入栈【从左边进去】</span></span><br><span class="line">        <span class="keyword">while</span>(cur.next !=<span class="keyword">null</span>)&#123;</span><br><span class="line">            </span><br><span class="line">          s.push(cur);</span><br><span class="line">            </span><br><span class="line">          cur = cur.next;</span><br><span class="line">        &#125;</span><br><span class="line">        s.push(cur);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 建立反转后的单链表</span></span><br><span class="line">        ListNode newHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        newHead.next = <span class="keyword">null</span>;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> maxIndex = s.size();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maxIndex;i++)&#123;</span><br><span class="line">            </span><br><span class="line">            ListNode tmp = s.firstElement();</span><br><span class="line">           </span><br><span class="line">            tmp.next = newHead.next ;      </span><br><span class="line">            </span><br><span class="line">            newHead.next = tmp;</span><br><span class="line">            </span><br><span class="line">            s.remove(tmp);</span><br><span class="line">        </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">      <span class="keyword">return</span>  newHead.next;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="2-找出最小的-K-个数"><a href="#2-找出最小的-K-个数" class="headerlink" title="2. 找出最小的 K 个数"></a>2. 找出最小的 K 个数</h2><p><img src="https://z3.ax1x.com/2021/05/29/2Ax2nI.png" alt="找出最小的k个数"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">GetLeastNumbers_Solution</span><span class="params">(<span class="keyword">int</span> [] input, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// arr  用于存放input数组</span></span><br><span class="line">        <span class="comment">// arr2 用于存放最终结果</span></span><br><span class="line">            ArrayList&lt;Integer&gt; arr = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            ArrayList&lt;Integer&gt; arr2 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果数组为空，或 指定长度k 大于数组的实际长度时，返回空数组[]</span></span><br><span class="line">            <span class="keyword">if</span>(input.length == <span class="number">0</span> || input == <span class="keyword">null</span> || input.length&lt;k) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> arr2;</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// input将数组中的元素放入arr中【目的是：便于排序】</span></span><br><span class="line">            <span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; input.length; i++ )&#123;</span><br><span class="line">                 arr.add(input[i]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用ArrayList的sort方法，并传入Java Comparator接口的naturalOrder()方法，指定元素以自然顺序（升序）排序</span></span><br><span class="line">            arr.sort(Comparator.naturalOrder());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取指定个数的值，并存入arr2中</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;k;j++)&#123;</span><br><span class="line">                arr2.add(arr.get(j));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> arr2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="3-两数之和"><a href="#3-两数之和" class="headerlink" title="3. 两数之和"></a>3. 两数之和</h2><p><img src="https://z3.ax1x.com/2021/05/29/2AxHjs.png" alt="两数之和"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> numbers int整型一维数组 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> target int整型 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int整型一维数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum (<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        </span><br><span class="line">        Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numbers.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(map.get(target - numbers[i]) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                result[<span class="number">0</span>] = map.get(target - numbers[i]) + <span class="number">1</span>;</span><br><span class="line">                result[<span class="number">1</span>] = i + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">            map.put(numbers[i], i);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="4-用2个栈来实现队列"><a href="#4-用2个栈来实现队列" class="headerlink" title="4. 用2个栈来实现队列"></a>4. 用2个栈来实现队列</h2><p><img src="https://z3.ax1x.com/2021/05/29/2AzZ4O.png" alt="两个栈来实现队列"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    Stack&lt;Integer&gt; stack1 = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span><br><span class="line">    Stack&lt;Integer&gt; stack2 = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">     <span class="comment">// 思路：</span></span><br><span class="line">        <span class="comment">//    入队：进:s1,</span></span><br><span class="line">        <span class="comment">//    出队：出:先将s1中除栈底元素外的所有元素依次进s2，s1栈底元素再出来,s2中的元素重新进入s1</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> node)</span> </span>&#123;       </span><br><span class="line">        </span><br><span class="line">        stack1.push(node);     </span><br><span class="line">                </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(stack1.size()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(stack1.size()&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                 stack2.push(stack1.pop());      </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> tmp = stack1.pop();</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">while</span>(stack2.size()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                stack1.push(stack2.pop()); </span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> tmp;</span><br><span class="line">        &#125;      </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="5-从尾到头打印链表"><a href="#5-从尾到头打印链表" class="headerlink" title="5. 从尾到头打印链表"></a>5. 从尾到头打印链表</h2><p><img src="https://z3.ax1x.com/2021/06/14/2TqRnx.png" alt="从头到尾打印链表"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*    public class ListNode &#123;</span></span><br><span class="line"><span class="comment">*        int val;</span></span><br><span class="line"><span class="comment">*        ListNode next = null;</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*        ListNode(int val) &#123;</span></span><br><span class="line"><span class="comment">*            this.val = val;</span></span><br><span class="line"><span class="comment">*        &#125;</span></span><br><span class="line"><span class="comment">*    &#125;</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">printListFromTailToHead</span><span class="params">(ListNode listNode)</span> </span>&#123;     </span><br><span class="line">     </span><br><span class="line">        </span><br><span class="line">        ArrayList&lt;Integer&gt; arr = <span class="keyword">new</span> ArrayList&lt;&gt;();        </span><br><span class="line">       </span><br><span class="line">        <span class="keyword">if</span>(listNode == <span class="keyword">null</span>) &#123;          </span><br><span class="line">           <span class="keyword">return</span> arr;</span><br><span class="line">        &#125;</span><br><span class="line">              </span><br><span class="line">       </span><br><span class="line"><span class="comment">// 遍历链表，将元素的数据域 添加到 arr        </span></span><br><span class="line">        ListNode p = listNode;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(p.next != <span class="keyword">null</span>)&#123;</span><br><span class="line">            arr.add(p.val);    </span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line">        arr.add(p.val);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反转arr        </span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>,j=arr.size()-<span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(i&lt;=j)&#123;</span><br><span class="line">            <span class="keyword">int</span> t=arr.get(i);</span><br><span class="line">            arr.set(i,arr.get(j));</span><br><span class="line">            arr.set(j,t);</span><br><span class="line">            i++;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>









<h2 id="6-二维数组的查找"><a href="#6-二维数组的查找" class="headerlink" title="6. 二维数组的查找"></a>6. 二维数组的查找</h2><p><img src="https://z3.ax1x.com/2021/06/14/2TxwH1.png" alt="二维数组的查找"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> target, <span class="keyword">int</span> [][] array)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(array==<span class="keyword">null</span>)<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">              </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;array.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;array[<span class="number">0</span>].length;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(target == array[i][j]) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>











<h2 id="1000-旋转数组的最小数字"><a href="#1000-旋转数组的最小数字" class="headerlink" title="1000. 旋转数组的最小数字"></a>1000. 旋转数组的最小数字</h2><p><img src="https://z3.ax1x.com/2021/05/29/2Azoa6.png" alt="旋转数组的最小数字"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>算法与数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>程序员的自我修养 — 读书笔记</title>
    <url>/2021/09/01/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/</url>
    <content><![CDATA[<h1 id="程序员的自我修养-—-读书笔记"><a href="#程序员的自我修养-—-读书笔记" class="headerlink" title="程序员的自我修养 — 读书笔记"></a>程序员的自我修养 — 读书笔记</h1><p>[toc]</p>
<h2 id="第一部分-简介"><a href="#第一部分-简介" class="headerlink" title="第一部分 简介"></a>第一部分 简介</h2><h3 id="第一章-温故而知新"><a href="#第一章-温故而知新" class="headerlink" title="第一章 温故而知新"></a>第一章 温故而知新</h3><h4 id="1-1-从Hello-world-说起"><a href="#1-1-从Hello-world-说起" class="headerlink" title="1.1 从Hello world 说起"></a>1.1 从Hello world 说起</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<p>hello world 代码引伸的问题：</p>
<blockquote>
<ul>
<li>  为什么要编译后再运行</li>
<li>  C语言在转化为机器码的过程中发生了什么</li>
<li>  最后形成的机器码里有什么，是怎么组织、存放的</li>
<li>  #include&lt;stdio.h&gt; 干了什么？C语言库是什么？怎么存放的？</li>
<li>  不同的平台最终编译的结果一样吗？</li>
<li>  运行hello world 时，是怎么运行、装载、开始、结束</li>
<li>  没有操作系统，能否运行hello world</li>
<li>  printf 是怎么实现的</li>
<li>  hello world 运行的时候，在内存中是怎样的。</li>
</ul>
</blockquote>
<h4 id="1-2-万变不离其宗"><a href="#1-2-万变不离其宗" class="headerlink" title="1.2 万变不离其宗"></a>1.2 万变不离其宗</h4><p>本书的中所指的计算机：==x86 指令集的 PC==</p>
<p>PC中最重要的3个部件：CPU、内存、IO</p>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210901133852668.png" alt="image-20210901133852668"></p>
<blockquote>
<p>  3个阶段</p>
</blockquote>
<ul>
<li><p>  早期CPU与内存速率差不多，所以接在系统总线。</p>
</li>
<li><p>  CPU速率提高，出现北桥【PCI 桥】，协调CPU、内存、显卡的速率</p>
</li>
<li><p>  出现南桥，处理相对较慢的设备（键盘、鼠标、usb、硬盘）</p>
</li>
</ul>
<h4 id="1-3-站得高看得远"><a href="#1-3-站得高看得远" class="headerlink" title="1.3 站得高看得远"></a>1.3 站得高看得远</h4><blockquote>
<p>  系统软件</p>
</blockquote>
<ul>
<li>  平台性：操作系统、驱动程序</li>
<li>  程序开发：编译器、汇编器、链接器</li>
</ul>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210901135723017.png" alt="image-20210901135723017"></p>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210901141200897.png" alt="image-20210901141200897"></p>
<blockquote>
<p>  接口</p>
</blockquote>
<p>每个层次之间通信的协议，接口的下面是服务的提供者，上面是调用者。（中间层是对下层的包装和扩展）</p>
<blockquote>
<p>  系统调用</p>
</blockquote>
<p>系统调用往往以 软件中断的形式提供。（Linux：0x 80 号中断）</p>
<h4 id="1-4-操作系统做什么"><a href="#1-4-操作系统做什么" class="headerlink" title="1.4 操作系统做什么"></a>1.4 操作系统做什么</h4><blockquote>
<p>  OS的2个主要作用:</p>
</blockquote>
<ul>
<li>  提供 抽象接口</li>
<li>  管理 硬件资源</li>
</ul>
<h5 id="1-4-1-不要让CPU打盹"><a href="#1-4-1-不要让CPU打盹" class="headerlink" title="1.4.1 不要让CPU打盹"></a>1.4.1 不要让CPU打盹</h5><ul>
<li><p>  多道程序：监控 CPU，当 CPU 空闲时，执行等待的程序</p>
</li>
<li><p>  分时操作系统：程序没运行一段时间，就将 CPU 让给其他程序。</p>
</li>
<li><p>多任务系统：OS 管理硬件资源，OS以高级别运行，进程以低级别运行，进程之间相互隔离。抢占式分配CPU资源，时间到了就暂停进程。</p>
</li>
</ul>
<h5 id="1-4-2-设备驱动"><a href="#1-4-2-设备驱动" class="headerlink" title="1.4.2 设备驱动"></a>1.4.2 设备驱动</h5><p>磁盘的组成：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">硬盘（基本存储单位：扇区【sector,512 B】）</span><br><span class="line">|-- 盘片</span><br><span class="line">	|-- 盘面</span><br><span class="line">		|-- 磁道</span><br><span class="line">			|-- 扇区</span><br></pre></td></tr></table></figure>



<p>磁盘中，扇区的划分：LBA（将所有扇区从0开始编号，形成逻辑扇区，再由磁盘自己来将逻辑扇区转化为真实的盘面、磁道）</p>
<h4 id="1-5-内存不够怎么办"><a href="#1-5-内存不够怎么办" class="headerlink" title="1.5 内存不够怎么办"></a>1.5 内存不够怎么办</h4><p>问题：不隔离、效率低、地址不确定</p>
<p>解决：加一个中间层  =》 虚拟地址</p>
<h5 id="1-5-1-隔离"><a href="#1-5-1-隔离" class="headerlink" title="1.5.1 隔离"></a>1.5.1 隔离</h5><p>进程只关注自己，在进程看来自己独享内存和cpu，进程只能访问自己的空间</p>
<blockquote>
<p>  地址空间</p>
</blockquote>
<ul>
<li>  虚拟地址</li>
<li>  物理地址</li>
</ul>
<h5 id="1-5-2-分段"><a href="#1-5-2-分段" class="headerlink" title="1.5.2 分段"></a>1.5.2 分段</h5><p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/1.2%E3%80%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E5%86%85%E5%AD%98.png" alt="内存管理"></p>
<p>分段：将虚拟地址分割为【 段选择子（段号+标志）+ 段内偏移】。其中，段号可以找到段表，段表由CPU中的MMU来管理，MMU 负责虚拟地址与物理地址的映射。</p>
<p>分段的方式解决了1.5小节一开始提到的==【地址不隔离、地址不确定】==的 2个 问题，还存在着==【内存使用效率低】==的问题，该问题可以通过==内存分页==来解决。</p>
<h5 id="1-5-3-分页"><a href="#1-5-3-分页" class="headerlink" title="1.5.3 分页"></a>1.5.3 分页</h5><p>分页：将内存分为若干个==固定大小的页==，页的大小由==硬件来决定==。（Linux：4 KB/页）</p>
<blockquote>
<p>  页的分类</p>
</blockquote>
<ul>
<li>  虚拟页：虚拟地址</li>
<li>  物理页：物理地址的页（内存：存放经常使用的页）</li>
<li>  磁盘页：磁盘中的页（存放不常使用的页）</li>
</ul>
<p>多个==虚拟页==映射到==同一个物理页== =》 <code>内存共享</code></p>
<p>进程需要用到虚拟页的内容，但内存中不存在虚拟页的内容时，产生==页错误==，由OS接管内存，并读取所需的数据到内存中。</p>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210901162723883.png" alt="image-20210901162723883"></p>
<h4 id="1-6-众人拾柴火焰高"><a href="#1-6-众人拾柴火焰高" class="headerlink" title="1.6 众人拾柴火焰高"></a>1.6 众人拾柴火焰高</h4><h6 id="1-6-1-线程基础"><a href="#1-6-1-线程基础" class="headerlink" title="1.6.1 线程基础"></a>1.6.1 线程基础</h6><blockquote>
<p>  线程的概念</p>
</blockquote>
<p>线程，也叫==轻量级进程==，是程序执行的最小单位。线程之间共享进程的资源（如：代码、数据、堆栈）</p>
<blockquote>
<p>  标准的线程</p>
</blockquote>
<p>标准的线程 = 线程 ID  +  当前的指令指针PC +  寄存器  + 堆栈</p>
<blockquote>
<p>  多线程的优势（使用多线程的原因）</p>
</blockquote>
<ul>
<li>  多线程可以有效利用等待时间（提高利用率）</li>
<li>  多线程可以分工协作，提高效率</li>
<li>  程序本身要求并发</li>
<li>  多核计算机本身具备多线程的能力，多线程可以充分发挥性能</li>
<li>  数据共享效率高</li>
</ul>
<blockquote>
<p>  线程的访问权限</p>
</blockquote>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210901164201147.png" alt="image-20210901164201147"></p>
<blockquote>
<p>  线程调度</p>
</blockquote>
<p>线程调度：CPU中不断切换不同的线程。</p>
<p>时间片：某个线程执行的时间。</p>
<blockquote>
<p>  线程调度的 3种状态（至少3种）</p>
</blockquote>
<ul>
<li>  就绪</li>
<li>  运行</li>
<li>  等待</li>
</ul>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210901164624388.png" alt="image-20210901164624388"></p>
<blockquote>
<p>  线程调度的 2 种 方式</p>
</blockquote>
<ul>
<li>  优先级法 调度</li>
<li>  轮转法 调度</li>
</ul>
<blockquote>
<p>  线程调度的优先级</p>
</blockquote>
<p>线程可以有自己的优先级，优先级可以由用户来设置。</p>
<p>一般来说，频繁等待的线程（<code>IO密集型线程</code>） 比 频繁运行的线程（<code>CPU密集型线程</code>） 更容易获得<code>更高的优先级</code>。（柿子要捡软的捏）</p>
<blockquote>
<p>  改变线程的优先级（3种方式）</p>
</blockquote>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210901165342032.png" alt="image-20210901165342032"></p>
<blockquote>
<p>  Linux的多线程：</p>
</blockquote>
<p>在Linux中，进程和线程实际上都叫 Task任务，只是类似单线程的进程。</p>
<p>不同的任务之间，可以选择共享内存。</p>
<blockquote>
<p>  linux的多线程操作：</p>
</blockquote>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210901170237889.png" alt="linux的多线程操作"></p>
<p>注意：</p>
<ul>
<li>  fork：只复制任务，不复制内存（写时复制 COW），需要与 exec 配合使用才能启动==新任务==</li>
<li>  clone：产生新线程</li>
</ul>
<p><img src="https://cyw-imgbed.oss-cn-hangzhou.aliyuncs.com/img/image-20210901170932684.png" alt="cow"></p>
<h6 id="1-6-2-线程安全"><a href="#1-6-2-线程安全" class="headerlink" title="1.6.2 线程安全"></a>1.6.2 线程安全</h6><h6 id="1-6-3-多线程内部情况"><a href="#1-6-3-多线程内部情况" class="headerlink" title="1.6.3 多线程内部情况"></a>1.6.3 多线程内部情况</h6><h2 id="第二部分-静态链接"><a href="#第二部分-静态链接" class="headerlink" title="第二部分 静态链接"></a>第二部分 静态链接</h2><h2 id="第三部分-装载与动态链接"><a href="#第三部分-装载与动态链接" class="headerlink" title="第三部分 装载与动态链接"></a>第三部分 装载与动态链接</h2><h2 id="第四部分-库与运行库"><a href="#第四部分-库与运行库" class="headerlink" title="第四部分 库与运行库"></a>第四部分 库与运行库</h2>]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>读书笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>ARP协议</title>
    <url>/2021/08/04/%E7%BD%91%E7%BB%9C-%E5%AE%9E%E4%BE%8B%E3%80%90ARP%E3%80%91/</url>
    <content><![CDATA[<h2 id="1-ARP请求与ARP代理"><a href="#1-ARP请求与ARP代理" class="headerlink" title="1. ARP请求与ARP代理"></a>1. ARP请求与ARP代理</h2><p><img src="https://img-blog.csdnimg.cn/20201214192045886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>R1 上配 用<code>接口</code>的静态路由到R3，【最后一定可以知道目的设备的MAC,因为只知道从接口发，而不知道发给谁，只有得到目标设备的MAC地址，才能完成封装】</li>
<li>R3 上配 用<code>IP地址</code>的静态路由到R1 ,【最后不会知道目标的MAC，因为静态路由配的是地址，R3明确知道要发给谁，可以直接封装】</li>
</ul>
<p><strong>R1  = ping =&gt; R3</strong> 过程</p>
<ol>
<li>R1到R3需要跨网段，因此，需要涉及代理ARP</li>
<li>R1根据R3的IP地址发送ARP广播【广播包中有源IP，源MAC，目的IP】。网关R2收到后，解封装【其他设备收到后发现不是发给自己的，就丢弃】，再以自己的名义封装ARP请求并发给R3。R3收到请求后，返回1个ARP响应给R2,R2再发给R1</li>
</ol>
<p>代理ARP：以自己的名义将别人的包转发出去。</p>
<h2 id="2-双出口"><a href="#2-双出口" class="headerlink" title="2. 双出口"></a>2. 双出口</h2><p><img src="https://img-blog.csdnimg.cn/20201214195453914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NTc4NTky,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>上图是网络双出口，R1到外网从R2走<ul>
<li>原因：<blockquote>
<p>R1 ping 外网时，发送ARP广播，R2和R3都收到ARP广播，并发送了响应<br>但是，由于R3的响应报文先发，R2的报文后发，后发的报文会覆盖先发的报文，因此，R1到外网从R2出去</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<p><strong>华为、华三设备尤其要注意接口代理ARP是否打开。</strong></p>
]]></content>
      <categories>
        <category>网络工程</category>
        <category>CCNA</category>
      </categories>
      <tags>
        <tag>CCNA</tag>
      </tags>
  </entry>
</search>
